(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
    typeof define === 'function' && define.amd ? define(['exports'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.SimpleViewerBundle = {}));
})(this, (function (exports) { 'use strict';

    /******************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise, SuppressedError, Symbol, Iterator */


    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }

    typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
        var e = new Error(message);
        return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
    };

    function getDefaultExportFromCjs (x) {
    	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
    }

    var cornerstoneMath_min = {exports: {}};

    /*! cornerstone-math - 0.1.6 - 2018-12-05 | (c) 2017 Chris Hafey | https://github.com/cornerstonejs/cornerstoneMath */

    var hasRequiredCornerstoneMath_min;

    function requireCornerstoneMath_min () {
    	if (hasRequiredCornerstoneMath_min) return cornerstoneMath_min.exports;
    	hasRequiredCornerstoneMath_min = 1;
    	(function (module, exports) {
    		!function(t,e){module.exports=e();}(window,function(){return function(t){var e={};function i(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:false,exports:{}};return t[n].call(o.exports,o,o.exports,i),o.l=true,o.exports}return i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{configurable:false,enumerable:true,get:n});},i.r=function(t){Object.defineProperty(t,"__esModule",{value:true});},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=9)}([function(t,e,i){Object.defineProperty(e,"__esModule",{value:true}),e.clamp=function(t,e,i){return t<e?e:t>i?i:t},e.degToRad=function(t){return t*(Math.PI/180)},e.radToDeg=function(t){return t*(180/Math.PI)},e.sign=function(t){return "number"==typeof t?t?t<0?-1:1:t==t?0:NaN:NaN};},function(t,e,i){Object.defineProperty(e,"__esModule",{value:true});var n,o=i(3),s=(n=o)&&n.__esModule?n:{default:n},r=i(0);var a,h,u,c,l,f=function(t,e,i){this.x=t||0,this.y=e||0,this.z=i||0;};f.prototype={constructor:f,set:function(t,e,i){return this.x=t,this.y=e,this.z=i,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this},add:function(t,e){return void 0!==e?(console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this},sub:function(t,e){return void 0!==e?(console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this},multiply:function(t,e){return void 0!==e?(console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this},multiplyVectors:function(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this},applyAxisAngle:(l=void 0,function(t,e){return void 0===l&&(l=new s.default),this.applyQuaternion(l.setFromAxisAngle(t.normalize(),e)),this}),applyMatrix3:function(t){var e=this.x,i=this.y,n=this.z,o=t.elements;return this.x=o[0]*e+o[3]*i+o[6]*n,this.y=o[1]*e+o[4]*i+o[7]*n,this.z=o[2]*e+o[5]*i+o[8]*n,this},applyMatrix4:function(t){var e=this.x,i=this.y,n=this.z,o=t.elements;return this.x=o[0]*e+o[4]*i+o[8]*n+o[12],this.y=o[1]*e+o[5]*i+o[9]*n+o[13],this.z=o[2]*e+o[6]*i+o[10]*n+o[14],this},applyProjection:function(t){var e=this.x,i=this.y,n=this.z,o=t.elements,s=1/(o[3]*e+o[7]*i+o[11]*n+o[15]);return this.x=(o[0]*e+o[4]*i+o[8]*n+o[12])*s,this.y=(o[1]*e+o[5]*i+o[9]*n+o[13])*s,this.z=(o[2]*e+o[6]*i+o[10]*n+o[14])*s,this},applyQuaternion:function(t){var e=this.x,i=this.y,n=this.z,o=t.x,s=t.y,r=t.z,a=t.w,h=a*e+s*n-r*i,u=a*i+r*e-o*n,c=a*n+o*i-s*e,l=-o*e-s*i-r*n;return this.x=h*a+l*-o+u*-r-c*-s,this.y=u*a+l*-s+c*-o-h*-r,this.z=c*a+l*-r+h*-s-u*-o,this},transformDirection:function(t){var e=this.x,i=this.y,n=this.z,o=t.elements;return this.x=o[0]*e+o[4]*i+o[8]*n,this.y=o[1]*e+o[5]*i+o[9]*n,this.z=o[2]*e+o[6]*i+o[10]*n,this.normalize(),this},divide:function(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this},divideScalar:function(t){if(0!==t){var e=1/t;this.x*=e,this.y*=e,this.z*=e;}else this.x=0,this.y=0,this.z=0;return this},min:function(t){return this.x>t.x&&(this.x=t.x),this.y>t.y&&(this.y=t.y),this.z>t.z&&(this.z=t.z),this},max:function(t){return this.x<t.x&&(this.x=t.x),this.y<t.y&&(this.y=t.y),this.z<t.z&&(this.z=t.z),this},clamp:function(t,e){return this.x<t.x?this.x=t.x:this.x>e.x&&(this.x=e.x),this.y<t.y?this.y=t.y:this.y>e.y&&(this.y=e.y),this.z<t.z?this.z=t.z:this.z>e.z&&(this.z=e.z),this},clampScalar:(u=void 0,c=void 0,function(t,e){return void 0===u&&(u=new f,c=new f),u.set(t,t,t),c.set(e,e,e),this.clamp(u,c)}),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.multiplyScalar(-1)},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(t){var e=this.length();return 0!==e&&t!==e&&this.multiplyScalar(t/e),this},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this},cross:function(t,e){if(void 0!==e)return console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e);var i=this.x,n=this.y,o=this.z;return this.x=n*t.z-o*t.y,this.y=o*t.x-i*t.z,this.z=i*t.y-n*t.x,this},crossVectors:function(t,e){var i=t.x,n=t.y,o=t.z,s=e.x,r=e.y,a=e.z;return this.x=n*a-o*r,this.y=o*s-i*a,this.z=i*r-n*s,this},projectOnVector:(a=void 0,h=void 0,function(t){return void 0===a&&(a=new f),a.copy(t).normalize(),h=this.dot(a),this.copy(a).multiplyScalar(h)}),projectOnPlane:function(){var t=void 0;return function(e){return void 0===t&&(t=new f),t.copy(this).projectOnVector(e),this.sub(t)}}(),reflect:function(){var t=void 0;return function(e){return void 0===t&&(t=new f),this.sub(t.copy(e).multiplyScalar(2*this.dot(e)))}}(),angleTo:function(t){var e=this.dot(t)/(this.length()*t.length());return Math.acos((0, r.clamp)(e,-1,1))},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,i=this.y-t.y,n=this.z-t.z;return e*e+i*i+n*n},setFromMatrixPosition:function(t){return this.x=t.elements[12],this.y=t.elements[13],this.z=t.elements[14],this},setFromMatrixScale:function(t){var e=this.set(t.elements[0],t.elements[1],t.elements[2]).length(),i=this.set(t.elements[4],t.elements[5],t.elements[6]).length(),n=this.set(t.elements[8],t.elements[9],t.elements[10]).length();return this.x=e,this.y=i,this.z=n,this},setFromMatrixColumn:function(t,e){var i=4*t,n=e.elements;return this.x=n[i],this.y=n[i+1],this.z=n[i+2],this},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z},fromArray:function(t){return this.x=t[0],this.y=t[1],this.z=t[2],this},toArray:function(){return [this.x,this.y,this.z]},clone:function(){return new f(this.x,this.y,this.z)}},e.default=f;},function(t,e,i){Object.defineProperty(e,"__esModule",{value:true});var n=i(0);function o(t){return t*t}function s(t,e){return o(t.x-e.x)+o(t.y-e.y)}var r={distanceToPoint:function(t,e){return Math.sqrt(function(t,e){var i=s(t.start,t.end);if(0===i)return s(e,t.start);var n=((e.x-t.start.x)*(t.end.x-t.start.x)+(e.y-t.start.y)*(t.end.y-t.start.y))/i;return s(e,n<0?t.start:n>1?t.end:{x:t.start.x+n*(t.end.x-t.start.x),y:t.start.y+n*(t.end.y-t.start.y)})}(t,e))},intersectLine:function(t,e){var i,o,s,r,a,h,u,c,l,f,y,d={},p=t.start.x,x=t.start.y,m=t.end.x,v=t.end.y,g=e.start.x,z=e.start.y,b=e.end.x,M=e.end.y,w=void 0;if(f=(i=v-x)*b+(s=p-m)*M+(a=m*x-p*v),(0===(l=i*g+s*z+a)||0===f||(0, n.sign)(l)!==(0, n.sign)(f))&&(c=(o=M-z)*m+(r=g-b)*v+(h=b*z-g*M),0===(u=o*p+r*x+h)||0===c||(0, n.sign)(u)!==(0, n.sign)(c))){y=i*r-o*s,w=s*h-r*a;var R=parseFloat(w/y);w=o*a-i*h;var P=parseFloat(w/y);return d.x=R,d.y=P,d}}};e.default=r;},function(t,e,i){Object.defineProperty(e,"__esModule",{value:true});var n=function(t,e,i,n){this.x=t||0,this.y=e||0,this.z=i||0,this.w=void 0!==n?n:1;};n.prototype.setFromAxisAngle=function(t,e){var i=e/2,n=Math.sin(i);return this.x=t.x*n,this.y=t.y*n,this.z=t.z*n,this.w=Math.cos(i),this},n.prototype.multiplyQuaternions=function(t,e){var i=t.x,n=t.y,o=t.z,s=t.w,r=e.x,a=e.y,h=e.z,u=e.w;return this.x=i*u+s*r+n*h-o*a,this.y=n*u+s*a+o*r-i*h,this.z=o*u+s*h+i*a-n*r,this.w=s*u-i*r-n*a-o*h,this},n.prototype.setFromRotationMatrix=function(t){var e=t.elements,i=e[0],n=e[4],o=e[8],s=e[1],r=e[5],a=e[9],h=e[2],u=e[6],c=e[10],l=i+r+c,f=void 0;return l>0?(f=.5/Math.sqrt(l+1),this.w=.25/f,this.x=(u-a)*f,this.y=(o-h)*f,this.z=(s-n)*f):i>r&&i>c?(f=2*Math.sqrt(1+i-r-c),this.w=(u-a)/f,this.x=.25*f,this.y=(n+s)/f,this.z=(o+h)/f):r>c?(f=2*Math.sqrt(1+r-i-c),this.w=(o-h)/f,this.x=(n+s)/f,this.y=.25*f,this.z=(a+u)/f):(f=2*Math.sqrt(1+c-i-r),this.w=(s-n)/f,this.x=(o+h)/f,this.y=(a+u)/f,this.z=.25*f),this},e.default=n;},function(t,e,i){Object.defineProperty(e,"__esModule",{value:true});var n,o=i(2),s=(n=o)&&n.__esModule?n:{default:n};function r(t){return {topLeft:{x:t.left,y:t.top},bottomRight:{x:t.left+t.width,y:t.top+t.height}}}var a={distanceToPoint:function(t,e){var i=655535;return function(t){return [{start:{x:t.left,y:t.top},end:{x:t.left+t.width,y:t.top}},{start:{x:t.left+t.width,y:t.top},end:{x:t.left+t.width,y:t.top+t.height}},{start:{x:t.left+t.width,y:t.top+t.height},end:{x:t.left,y:t.top+t.height}},{start:{x:t.left,y:t.top+t.height},end:{x:t.left,y:t.top}}]}(t).forEach(function(t){var n=s.default.distanceToPoint(t,e);n<i&&(i=n);}),i},getIntersectionRect:function(t,e){var i={topLeft:{},bottomRight:{}};if(function(t,e){var i=void 0,n=void 0,o=r(t),s=r(e);return i=t.width>=0?e.width>=0?!(o.bottomRight.x<=s.topLeft.x||s.bottomRight.x<=o.topLeft.x):!(o.bottomRight.x<=s.bottomRight.x||s.topLeft.x<=o.topLeft.x):e.width>=0?!(o.topLeft.x<=s.topLeft.x||s.bottomRight.x<=o.bottomRight.x):!(o.topLeft.x<=s.bottomRight.x||s.topLeft.x<=o.bottomRight.x),n=t.height>=0?e.height>=0?!(o.bottomRight.y<=s.topLeft.y||s.bottomRight.y<=o.topLeft.y):!(o.bottomRight.y<=s.bottomRight.y||s.topLeft.y<=o.topLeft.y):e.height>=0?!(o.topLeft.y<=s.topLeft.y||s.bottomRight.y<=o.bottomRight.y):!(o.topLeft.y<=s.bottomRight.y||s.top<=o.bottomRight.y),i&&n}(t,e)){var n=r(t),o=r(e);return t.width>=0?e.width>=0?(i.topLeft.x=Math.max(n.topLeft.x,o.topLeft.x),i.bottomRight.x=Math.min(n.bottomRight.x,o.bottomRight.x)):(i.topLeft.x=Math.max(n.topLeft.x,o.bottomRight.x),i.bottomRight.x=Math.min(n.bottomRight.x,o.topLeft.x)):e.width>=0?(i.topLeft.x=Math.min(n.topLeft.x,o.bottomRight.x),i.bottomRight.x=Math.max(n.bottomRight.x,o.topLeft.x)):(i.topLeft.x=Math.min(n.topLeft.x,o.topLeft.x),i.bottomRight.x=Math.max(n.bottomRight.x,o.bottomRight.x)),t.height>=0?e.height>=0?(i.topLeft.y=Math.max(n.topLeft.y,o.topLeft.y),i.bottomRight.y=Math.min(n.bottomRight.y,o.bottomRight.y)):(i.topLeft.y=Math.max(n.topLeft.y,o.bottomRight.y),i.bottomRight.y=Math.min(n.bottomRight.y,o.topLeft.y)):e.height>=0?(i.topLeft.y=Math.min(n.topLeft.y,o.bottomRight.y),i.bottomRight.y=Math.max(n.bottomRight.y,o.topLeft.y)):(i.topLeft.y=Math.min(n.topLeft.y,o.topLeft.y),i.bottomRight.y=Math.max(n.bottomRight.y,o.bottomRight.y)),i}}};e.default=a;},function(t,e,i){function n(t,e){return {x:t.x-e.x,y:t.y-e.y}}function o(t,e){return Math.sqrt(s(t,e))}function s(t,e){var i=n(t,e);return i.x*i.x+i.y*i.y}Object.defineProperty(e,"__esModule",{value:true});var r={subtract:n,copy:function(t){return {x:t.x,y:t.y}},pageToPoint:function(t){return {x:t.pageX,y:t.pageY}},distance:o,distanceSquared:s,insideRect:function(t,e){return !(t.x<e.left||t.x>e.left+e.width||t.y<e.top||t.y>e.top+e.height)},findClosestPoint:function(t,e){var i=[],n=void 0;return t.forEach(function(t,s){var r=o(t,e);i.push(r),n=0===s?r:Math.min(r,n);}),t[i.indexOf(n)]}};e.default=r;},function(t,e,i){Object.defineProperty(e,"__esModule",{value:true});var n,o=i(1),s=(n=o)&&n.__esModule?n:{default:n};var r,a,h=function(t,e){this.normal=void 0!==t?t:new s.default(1,0,0),this.constant=void 0!==e?e:0;};h.prototype={constructor:h,set:function(t,e){return this.normal.copy(t),this.constant=e,this},setComponents:function(t,e,i,n){return this.normal.set(t,e,i),this.constant=n,this},setFromNormalAndCoplanarPoint:function(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this},setFromCoplanarPoints:(r=new s.default,a=new s.default,function(t,e,i){var n=r.subVectors(i,e).cross(a.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(n,t),this}),copy:function(t){return this.normal.copy(t.normal),this.constant=t.constant,this},normalize:function(){var t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(t){return this.normal.dot(t)+this.constant},distanceToSphere:function(t){return this.distanceToPoint(t.center)-t.radius},projectPoint:function(t,e){return this.orthoPoint(t,e).sub(t).negate()},orthoPoint:function(t,e){var i=this.distanceToPoint(t);return (e||new s.default).copy(this.normal).multiplyScalar(i)},isIntersectionLine:function(t){var e=this.distanceToPoint(t.start),i=this.distanceToPoint(t.end);return e<0&&i>0||i<0&&e>0},intersectLine:function(){var t=new s.default;return function(e,i){var n=i||new s.default,o=e.delta(t),r=this.normal.dot(o);if(0===r)return 0===this.distanceToPoint(e.start)?n.copy(e.start):void 0;var a=-(e.start.dot(this.normal)+this.constant)/r;return a<0||a>1?void 0:n.copy(o).multiplyScalar(a).add(e.start)}}(),intersectPlane:function(t){var e=this.normal.clone().cross(t.normal),i={origin:new s.default,direction:e};if(this.normal.clone().cross(t.normal).length<1e-10)return i.direction=new s.default,i;var n=this.constant,o=t.constant,r=this.normal.clone().dot(t.normal),a=-(n-o*r)/(1-r*r),h=-(o-n*r)/(1-r*r);return i.origin=this.normal.clone().multiplyScalar(a).add(t.normal.clone().multiplyScalar(h)),i},coplanarPoint:function(t){return (t||new s.default).copy(this.normal).multiplyScalar(-this.constant)},translate:function(t){return this.constant=this.constant-t.dot(this.normal),this},equals:function(t){return t.normal.equals(this.normal)&&t.constant===this.constant},clone:function(){return (new h).copy(this)}},e.default=h;},function(t,e,i){Object.defineProperty(e,"__esModule",{value:true});var n,o=i(1),s=(n=o)&&n.__esModule?n:{default:n};var r=function(t,e,i,n,o,s,r,a,h,u,c,l,f,y,d,p){this.elements=new Float32Array(16);var x=this.elements;x[0]=void 0!==t?t:1,x[4]=e||0,x[8]=i||0,x[12]=n||0,x[1]=o||0,x[5]=void 0!==s?s:1,x[9]=r||0,x[13]=a||0,x[2]=h||0,x[6]=u||0,x[10]=void 0!==c?c:1,x[14]=l||0,x[3]=f||0,x[7]=y||0,x[11]=d||0,x[15]=void 0!==p?p:1;};r.prototype.makeRotationFromQuaternion=function(t){var e=this.elements,i=t.x,n=t.y,o=t.z,s=t.w,r=i+i,a=n+n,h=o+o,u=i*r,c=i*a,l=i*h,f=n*a,y=n*h,d=o*h,p=s*r,x=s*a,m=s*h;return e[0]=1-(f+d),e[4]=c-m,e[8]=l+x,e[1]=c+m,e[5]=1-(u+d),e[9]=y-p,e[2]=l-x,e[6]=y+p,e[10]=1-(u+f),e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},r.prototype.multiplyMatrices=function(t,e){var i=t.elements,n=e.elements,o=this.elements,s=i[0],r=i[4],a=i[8],h=i[12],u=i[1],c=i[5],l=i[9],f=i[13],y=i[2],d=i[6],p=i[10],x=i[14],m=i[3],v=i[7],g=i[11],z=i[15],b=n[0],M=n[4],w=n[8],R=n[12],P=n[1],L=n[5],T=n[9],S=n[13],_=n[2],V=n[6],q=n[10],j=n[14],E=n[3],k=n[7],O=n[11],A=n[15];return o[0]=s*b+r*P+a*_+h*E,o[4]=s*M+r*L+a*V+h*k,o[8]=s*w+r*T+a*q+h*O,o[12]=s*R+r*S+a*j+h*A,o[1]=u*b+c*P+l*_+f*E,o[5]=u*M+c*L+l*V+f*k,o[9]=u*w+c*T+l*q+f*O,o[13]=u*R+c*S+l*j+f*A,o[2]=y*b+d*P+p*_+x*E,o[6]=y*M+d*L+p*V+x*k,o[10]=y*w+d*T+p*q+x*O,o[14]=y*R+d*S+p*j+x*A,o[3]=m*b+v*P+g*_+z*E,o[7]=m*M+v*L+g*V+z*k,o[11]=m*w+v*T+g*q+z*O,o[15]=m*R+v*S+g*j+z*A,this},r.prototype.multiply=function(t,e){return void 0!==e?(console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)},r.prototype.getInverse=function(t,e){var i=this.elements,n=t.elements,o=n[0],s=n[4],r=n[8],a=n[12],h=n[1],u=n[5],c=n[9],l=n[13],f=n[2],y=n[6],d=n[10],p=n[14],x=n[3],m=n[7],v=n[11],g=n[15];i[0]=c*p*m-l*d*m+l*y*v-u*p*v-c*y*g+u*d*g,i[4]=a*d*m-r*p*m-a*y*v+s*p*v+r*y*g-s*d*g,i[8]=r*l*m-a*c*m+a*u*v-s*l*v-r*u*g+s*c*g,i[12]=a*c*y-r*l*y-a*u*d+s*l*d+r*u*p-s*c*p,i[1]=l*d*x-c*p*x-l*f*v+h*p*v+c*f*g-h*d*g,i[5]=r*p*x-a*d*x+a*f*v-o*p*v-r*f*g+o*d*g,i[9]=a*c*x-r*l*x-a*h*v+o*l*v+r*h*g-o*c*g,i[13]=r*l*f-a*c*f+a*h*d-o*l*d-r*h*p+o*c*p,i[2]=u*p*x-l*y*x+l*f*m-h*p*m-u*f*g+h*y*g,i[6]=a*y*x-s*p*x-a*f*m+o*p*m+s*f*g-o*y*g,i[10]=s*l*x-a*u*x+a*h*m-o*l*m-s*h*g+o*u*g,i[14]=a*u*f-s*l*f-a*h*y+o*l*y+s*h*p-o*u*p,i[3]=c*y*x-u*d*x-c*f*m+h*d*m+u*f*v-h*y*v,i[7]=s*d*x-r*y*x+r*f*m-o*d*m-s*f*v+o*y*v,i[11]=r*u*x-s*c*x-r*h*m+o*c*m+s*h*v-o*u*v,i[15]=s*c*f-r*u*f+r*h*y-o*c*y-s*h*d+o*u*d;var z=o*i[0]+h*i[4]+f*i[8]+x*i[12];if(0===z){var b="Matrix4.getInverse(): can't invert matrix, determinant is 0";if(e)throw new Error(b);return console.warn(b),this.identity(),this}return this.multiplyScalar(1/z),this},r.prototype.applyToVector3Array=function(){var t=new s.default;return function(e,i,n){ void 0===i&&(i=0),void 0===n&&(n=e.length);for(var o=0,s=i;o<n;o+=3,s+=3)t.x=e[s],t.y=e[s+1],t.z=e[s+2],t.applyMatrix4(this),e[s]=t.x,e[s+1]=t.y,e[s+2]=t.z;return e}},r.prototype.makeTranslation=function(t,e,i){return this.set(1,0,0,t,0,1,0,e,0,0,1,i,0,0,0,1),this},r.prototype.multiplyScalar=function(t){var e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this},r.prototype.set=function(t,e,i,n,o,s,r,a,h,u,c,l,f,y,d,p){var x=this.elements;return x[0]=t,x[4]=e,x[8]=i,x[12]=n,x[1]=o,x[5]=s,x[9]=r,x[13]=a,x[2]=h,x[6]=u,x[10]=c,x[14]=l,x[3]=f,x[7]=y,x[11]=d,x[15]=p,this},r.prototype.makeScale=function(t,e,i){return this.set(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1),this},e.default=r;},function(t,e,i){Object.defineProperty(e,"__esModule",{value:true});var n,o=function(){function t(t,e){for(var i=0;i<e.length;i++){var n=e[i];n.enumerable=n.enumerable||false,n.configurable=true,"value"in n&&(n.writable=true),Object.defineProperty(t,n.key,n);}}return function(e,i,n){return i&&t(e.prototype,i),n&&t(e,n),e}}(),s=i(1),r=(n=s)&&n.__esModule?n:{default:n},a=i(0);var h=function(){function t(e,i){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.start=void 0!==e?e:new r.default,this.end=void 0!==i?i:new r.default;}return o(t,[{key:"set",value:function(t,e){return this.start.copy(t),this.end.copy(e),this}},{key:"copy",value:function(t){return this.start.copy(t.start),this.end.copy(t.end),this}},{key:"center",value:function(t){return (t||new r.default).addVectors(this.start,this.end).multiplyScalar(.5)}},{key:"delta",value:function(t){return (t||new r.default).subVectors(this.end,this.start)}},{key:"distanceSq",value:function(){return this.start.distanceToSquared(this.end)}},{key:"distance",value:function(){return this.start.distanceTo(this.end)}},{key:"at",value:function(t,e){var i=e||new r.default;return this.delta(i).multiplyScalar(t).add(this.start)}},{key:"closestPointToPointParameter",value:function(t,e){var i=new r.default,n=new r.default;i.subVectors(t,this.start),n.subVectors(this.end,this.start);var o=n.dot(n),s=n.dot(i)/o;return e&&(s=(0, a.clamp)(s,0,1)),s}},{key:"closestPointToPoint",value:function(t,e,i){var n=this.closestPointToPointParameter(t,e),o=i||new r.default;return this.delta(o).multiplyScalar(n).add(this.start)}},{key:"applyMatrix4",value:function(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}},{key:"equals",value:function(t){return t.start.equals(this.start)&&t.end.equals(this.end)}},{key:"clone",value:function(){return (new t).copy(this)}},{key:"intersectLine",value:function(t){var e=this.end.clone().sub(this.start),i=t.end.clone().sub(t.start),n=t.start.clone().sub(this.start),o=e.clone().cross(i),s=n.clone().cross(i);if(0!==n.dot(e)){var r=s.dot(o)/o.lengthSq();if(!(r>1||isNaN(r))){var a=this.start.clone().add(e.clone().multiplyScalar(r));return a.clone().sub(t.start).lengthSq()+a.clone().sub(t.end).lengthSq()<=t.distanceSq()?a:void 0}}}}]),t}();e.default=h;},function(t,e,i){Object.defineProperty(e,"__esModule",{value:true}),e.Vector3=e.rect=e.quaternion=e.point=e.Plane=e.Matrix4=e.sign=e.radToDeg=e.degToRad=e.clamp=e.lineSegment=e.Line3=void 0;var n=f(i(8)),o=f(i(2)),s=i(0),r=f(i(7)),a=f(i(6)),h=f(i(5)),u=f(i(3)),c=f(i(4)),l=f(i(1));function f(t){return t&&t.__esModule?t:{default:t}}var y={Line3:n.default,lineSegment:o.default,clamp:s.clamp,degToRad:s.degToRad,radToDeg:s.radToDeg,sign:s.sign,Matrix4:r.default,Plane:a.default,point:h.default,quaternion:u.default,rect:c.default,Vector3:l.default};e.Line3=n.default,e.lineSegment=o.default,e.clamp=s.clamp,e.degToRad=s.degToRad,e.radToDeg=s.radToDeg,e.sign=s.sign,e.Matrix4=r.default,e.Plane=a.default,e.point=h.default,e.quaternion=u.default,e.rect=c.default,e.Vector3=l.default,e.default=y;}])});
    		
    	} (cornerstoneMath_min));
    	return cornerstoneMath_min.exports;
    }

    var cornerstoneMath_minExports = requireCornerstoneMath_min();
    var cornerstoneMath = /*@__PURE__*/getDefaultExportFromCjs(cornerstoneMath_minExports);

    var hammer = {exports: {}};

    /*! Hammer.JS - v2.0.7 - 2016-04-22
     * http://hammerjs.github.io/
     *
     * Copyright (c) 2016 Jorik Tangelder;
     * Licensed under the MIT license */

    var hasRequiredHammer;

    function requireHammer () {
    	if (hasRequiredHammer) return hammer.exports;
    	hasRequiredHammer = 1;
    	(function (module) {
    		(function(window, document, exportName, undefined$1) {

    		var VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];
    		var TEST_ELEMENT = document.createElement('div');

    		var TYPE_FUNCTION = 'function';

    		var round = Math.round;
    		var abs = Math.abs;
    		var now = Date.now;

    		/**
    		 * set a timeout with a given scope
    		 * @param {Function} fn
    		 * @param {Number} timeout
    		 * @param {Object} context
    		 * @returns {number}
    		 */
    		function setTimeoutContext(fn, timeout, context) {
    		    return setTimeout(bindFn(fn, context), timeout);
    		}

    		/**
    		 * if the argument is an array, we want to execute the fn on each entry
    		 * if it aint an array we don't want to do a thing.
    		 * this is used by all the methods that accept a single and array argument.
    		 * @param {*|Array} arg
    		 * @param {String} fn
    		 * @param {Object} [context]
    		 * @returns {Boolean}
    		 */
    		function invokeArrayArg(arg, fn, context) {
    		    if (Array.isArray(arg)) {
    		        each(arg, context[fn], context);
    		        return true;
    		    }
    		    return false;
    		}

    		/**
    		 * walk objects and arrays
    		 * @param {Object} obj
    		 * @param {Function} iterator
    		 * @param {Object} context
    		 */
    		function each(obj, iterator, context) {
    		    var i;

    		    if (!obj) {
    		        return;
    		    }

    		    if (obj.forEach) {
    		        obj.forEach(iterator, context);
    		    } else if (obj.length !== undefined$1) {
    		        i = 0;
    		        while (i < obj.length) {
    		            iterator.call(context, obj[i], i, obj);
    		            i++;
    		        }
    		    } else {
    		        for (i in obj) {
    		            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);
    		        }
    		    }
    		}

    		/**
    		 * wrap a method with a deprecation warning and stack trace
    		 * @param {Function} method
    		 * @param {String} name
    		 * @param {String} message
    		 * @returns {Function} A new function wrapping the supplied method.
    		 */
    		function deprecate(method, name, message) {
    		    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\n' + message + ' AT \n';
    		    return function() {
    		        var e = new Error('get-stack-trace');
    		        var stack = e && e.stack ? e.stack.replace(/^[^\(]+?[\n$]/gm, '')
    		            .replace(/^\s+at\s+/gm, '')
    		            .replace(/^Object.<anonymous>\s*\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';

    		        var log = window.console && (window.console.warn || window.console.log);
    		        if (log) {
    		            log.call(window.console, deprecationMessage, stack);
    		        }
    		        return method.apply(this, arguments);
    		    };
    		}

    		/**
    		 * extend object.
    		 * means that properties in dest will be overwritten by the ones in src.
    		 * @param {Object} target
    		 * @param {...Object} objects_to_assign
    		 * @returns {Object} target
    		 */
    		var assign;
    		if (typeof Object.assign !== 'function') {
    		    assign = function assign(target) {
    		        if (target === undefined$1 || target === null) {
    		            throw new TypeError('Cannot convert undefined or null to object');
    		        }

    		        var output = Object(target);
    		        for (var index = 1; index < arguments.length; index++) {
    		            var source = arguments[index];
    		            if (source !== undefined$1 && source !== null) {
    		                for (var nextKey in source) {
    		                    if (source.hasOwnProperty(nextKey)) {
    		                        output[nextKey] = source[nextKey];
    		                    }
    		                }
    		            }
    		        }
    		        return output;
    		    };
    		} else {
    		    assign = Object.assign;
    		}

    		/**
    		 * extend object.
    		 * means that properties in dest will be overwritten by the ones in src.
    		 * @param {Object} dest
    		 * @param {Object} src
    		 * @param {Boolean} [merge=false]
    		 * @returns {Object} dest
    		 */
    		var extend = deprecate(function extend(dest, src, merge) {
    		    var keys = Object.keys(src);
    		    var i = 0;
    		    while (i < keys.length) {
    		        if (!merge || (merge && dest[keys[i]] === undefined$1)) {
    		            dest[keys[i]] = src[keys[i]];
    		        }
    		        i++;
    		    }
    		    return dest;
    		}, 'extend', 'Use `assign`.');

    		/**
    		 * merge the values from src in the dest.
    		 * means that properties that exist in dest will not be overwritten by src
    		 * @param {Object} dest
    		 * @param {Object} src
    		 * @returns {Object} dest
    		 */
    		var merge = deprecate(function merge(dest, src) {
    		    return extend(dest, src, true);
    		}, 'merge', 'Use `assign`.');

    		/**
    		 * simple class inheritance
    		 * @param {Function} child
    		 * @param {Function} base
    		 * @param {Object} [properties]
    		 */
    		function inherit(child, base, properties) {
    		    var baseP = base.prototype,
    		        childP;

    		    childP = child.prototype = Object.create(baseP);
    		    childP.constructor = child;
    		    childP._super = baseP;

    		    if (properties) {
    		        assign(childP, properties);
    		    }
    		}

    		/**
    		 * simple function bind
    		 * @param {Function} fn
    		 * @param {Object} context
    		 * @returns {Function}
    		 */
    		function bindFn(fn, context) {
    		    return function boundFn() {
    		        return fn.apply(context, arguments);
    		    };
    		}

    		/**
    		 * let a boolean value also be a function that must return a boolean
    		 * this first item in args will be used as the context
    		 * @param {Boolean|Function} val
    		 * @param {Array} [args]
    		 * @returns {Boolean}
    		 */
    		function boolOrFn(val, args) {
    		    if (typeof val == TYPE_FUNCTION) {
    		        return val.apply(args ? args[0] || undefined$1 : undefined$1, args);
    		    }
    		    return val;
    		}

    		/**
    		 * use the val2 when val1 is undefined
    		 * @param {*} val1
    		 * @param {*} val2
    		 * @returns {*}
    		 */
    		function ifUndefined(val1, val2) {
    		    return (val1 === undefined$1) ? val2 : val1;
    		}

    		/**
    		 * addEventListener with multiple events at once
    		 * @param {EventTarget} target
    		 * @param {String} types
    		 * @param {Function} handler
    		 */
    		function addEventListeners(target, types, handler) {
    		    each(splitStr(types), function(type) {
    		        target.addEventListener(type, handler, false);
    		    });
    		}

    		/**
    		 * removeEventListener with multiple events at once
    		 * @param {EventTarget} target
    		 * @param {String} types
    		 * @param {Function} handler
    		 */
    		function removeEventListeners(target, types, handler) {
    		    each(splitStr(types), function(type) {
    		        target.removeEventListener(type, handler, false);
    		    });
    		}

    		/**
    		 * find if a node is in the given parent
    		 * @method hasParent
    		 * @param {HTMLElement} node
    		 * @param {HTMLElement} parent
    		 * @return {Boolean} found
    		 */
    		function hasParent(node, parent) {
    		    while (node) {
    		        if (node == parent) {
    		            return true;
    		        }
    		        node = node.parentNode;
    		    }
    		    return false;
    		}

    		/**
    		 * small indexOf wrapper
    		 * @param {String} str
    		 * @param {String} find
    		 * @returns {Boolean} found
    		 */
    		function inStr(str, find) {
    		    return str.indexOf(find) > -1;
    		}

    		/**
    		 * split string on whitespace
    		 * @param {String} str
    		 * @returns {Array} words
    		 */
    		function splitStr(str) {
    		    return str.trim().split(/\s+/g);
    		}

    		/**
    		 * find if a array contains the object using indexOf or a simple polyFill
    		 * @param {Array} src
    		 * @param {String} find
    		 * @param {String} [findByKey]
    		 * @return {Boolean|Number} false when not found, or the index
    		 */
    		function inArray(src, find, findByKey) {
    		    if (src.indexOf && !findByKey) {
    		        return src.indexOf(find);
    		    } else {
    		        var i = 0;
    		        while (i < src.length) {
    		            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {
    		                return i;
    		            }
    		            i++;
    		        }
    		        return -1;
    		    }
    		}

    		/**
    		 * convert array-like objects to real arrays
    		 * @param {Object} obj
    		 * @returns {Array}
    		 */
    		function toArray(obj) {
    		    return Array.prototype.slice.call(obj, 0);
    		}

    		/**
    		 * unique array with objects based on a key (like 'id') or just by the array's value
    		 * @param {Array} src [{id:1},{id:2},{id:1}]
    		 * @param {String} [key]
    		 * @param {Boolean} [sort=False]
    		 * @returns {Array} [{id:1},{id:2}]
    		 */
    		function uniqueArray(src, key, sort) {
    		    var results = [];
    		    var values = [];
    		    var i = 0;

    		    while (i < src.length) {
    		        var val = src[i][key] ;
    		        if (inArray(values, val) < 0) {
    		            results.push(src[i]);
    		        }
    		        values[i] = val;
    		        i++;
    		    }

    		    {
    		        {
    		            results = results.sort(function sortUniqueArray(a, b) {
    		                return a[key] > b[key];
    		            });
    		        }
    		    }

    		    return results;
    		}

    		/**
    		 * get the prefixed property
    		 * @param {Object} obj
    		 * @param {String} property
    		 * @returns {String|Undefined} prefixed
    		 */
    		function prefixed(obj, property) {
    		    var prefix, prop;
    		    var camelProp = property[0].toUpperCase() + property.slice(1);

    		    var i = 0;
    		    while (i < VENDOR_PREFIXES.length) {
    		        prefix = VENDOR_PREFIXES[i];
    		        prop = (prefix) ? prefix + camelProp : property;

    		        if (prop in obj) {
    		            return prop;
    		        }
    		        i++;
    		    }
    		    return undefined$1;
    		}

    		/**
    		 * get a unique id
    		 * @returns {number} uniqueId
    		 */
    		var _uniqueId = 1;
    		function uniqueId() {
    		    return _uniqueId++;
    		}

    		/**
    		 * get the window object of an element
    		 * @param {HTMLElement} element
    		 * @returns {DocumentView|Window}
    		 */
    		function getWindowForElement(element) {
    		    var doc = element.ownerDocument || element;
    		    return (doc.defaultView || doc.parentWindow || window);
    		}

    		var MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;

    		var SUPPORT_TOUCH = ('ontouchstart' in window);
    		var SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined$1;
    		var SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);

    		var INPUT_TYPE_TOUCH = 'touch';
    		var INPUT_TYPE_PEN = 'pen';
    		var INPUT_TYPE_MOUSE = 'mouse';
    		var INPUT_TYPE_KINECT = 'kinect';

    		var COMPUTE_INTERVAL = 25;

    		var INPUT_START = 1;
    		var INPUT_MOVE = 2;
    		var INPUT_END = 4;
    		var INPUT_CANCEL = 8;

    		var DIRECTION_NONE = 1;
    		var DIRECTION_LEFT = 2;
    		var DIRECTION_RIGHT = 4;
    		var DIRECTION_UP = 8;
    		var DIRECTION_DOWN = 16;

    		var DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;
    		var DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;
    		var DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;

    		var PROPS_XY = ['x', 'y'];
    		var PROPS_CLIENT_XY = ['clientX', 'clientY'];

    		/**
    		 * create new input type manager
    		 * @param {Manager} manager
    		 * @param {Function} callback
    		 * @returns {Input}
    		 * @constructor
    		 */
    		function Input(manager, callback) {
    		    var self = this;
    		    this.manager = manager;
    		    this.callback = callback;
    		    this.element = manager.element;
    		    this.target = manager.options.inputTarget;

    		    // smaller wrapper around the handler, for the scope and the enabled state of the manager,
    		    // so when disabled the input events are completely bypassed.
    		    this.domHandler = function(ev) {
    		        if (boolOrFn(manager.options.enable, [manager])) {
    		            self.handler(ev);
    		        }
    		    };

    		    this.init();

    		}

    		Input.prototype = {
    		    /**
    		     * should handle the inputEvent data and trigger the callback
    		     * @virtual
    		     */
    		    handler: function() { },

    		    /**
    		     * bind the events
    		     */
    		    init: function() {
    		        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);
    		        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);
    		        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);
    		    },

    		    /**
    		     * unbind the events
    		     */
    		    destroy: function() {
    		        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);
    		        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);
    		        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);
    		    }
    		};

    		/**
    		 * create new input type manager
    		 * called by the Manager constructor
    		 * @param {Hammer} manager
    		 * @returns {Input}
    		 */
    		function createInputInstance(manager) {
    		    var Type;
    		    var inputClass = manager.options.inputClass;

    		    if (inputClass) {
    		        Type = inputClass;
    		    } else if (SUPPORT_POINTER_EVENTS) {
    		        Type = PointerEventInput;
    		    } else if (SUPPORT_ONLY_TOUCH) {
    		        Type = TouchInput;
    		    } else if (!SUPPORT_TOUCH) {
    		        Type = MouseInput;
    		    } else {
    		        Type = TouchMouseInput;
    		    }
    		    return new (Type)(manager, inputHandler);
    		}

    		/**
    		 * handle input events
    		 * @param {Manager} manager
    		 * @param {String} eventType
    		 * @param {Object} input
    		 */
    		function inputHandler(manager, eventType, input) {
    		    var pointersLen = input.pointers.length;
    		    var changedPointersLen = input.changedPointers.length;
    		    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));
    		    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));

    		    input.isFirst = !!isFirst;
    		    input.isFinal = !!isFinal;

    		    if (isFirst) {
    		        manager.session = {};
    		    }

    		    // source event is the normalized value of the domEvents
    		    // like 'touchstart, mouseup, pointerdown'
    		    input.eventType = eventType;

    		    // compute scale, rotation etc
    		    computeInputData(manager, input);

    		    // emit secret event
    		    manager.emit('hammer.input', input);

    		    manager.recognize(input);
    		    manager.session.prevInput = input;
    		}

    		/**
    		 * extend the data with some usable properties like scale, rotate, velocity etc
    		 * @param {Object} manager
    		 * @param {Object} input
    		 */
    		function computeInputData(manager, input) {
    		    var session = manager.session;
    		    var pointers = input.pointers;
    		    var pointersLength = pointers.length;

    		    // store the first input to calculate the distance and direction
    		    if (!session.firstInput) {
    		        session.firstInput = simpleCloneInputData(input);
    		    }

    		    // to compute scale and rotation we need to store the multiple touches
    		    if (pointersLength > 1 && !session.firstMultiple) {
    		        session.firstMultiple = simpleCloneInputData(input);
    		    } else if (pointersLength === 1) {
    		        session.firstMultiple = false;
    		    }

    		    var firstInput = session.firstInput;
    		    var firstMultiple = session.firstMultiple;
    		    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;

    		    var center = input.center = getCenter(pointers);
    		    input.timeStamp = now();
    		    input.deltaTime = input.timeStamp - firstInput.timeStamp;

    		    input.angle = getAngle(offsetCenter, center);
    		    input.distance = getDistance(offsetCenter, center);

    		    computeDeltaXY(session, input);
    		    input.offsetDirection = getDirection(input.deltaX, input.deltaY);

    		    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);
    		    input.overallVelocityX = overallVelocity.x;
    		    input.overallVelocityY = overallVelocity.y;
    		    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;

    		    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;
    		    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;

    		    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >
    		        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);

    		    computeIntervalInputData(session, input);

    		    // find the correct target
    		    var target = manager.element;
    		    if (hasParent(input.srcEvent.target, target)) {
    		        target = input.srcEvent.target;
    		    }
    		    input.target = target;
    		}

    		function computeDeltaXY(session, input) {
    		    var center = input.center;
    		    var offset = session.offsetDelta || {};
    		    var prevDelta = session.prevDelta || {};
    		    var prevInput = session.prevInput || {};

    		    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {
    		        prevDelta = session.prevDelta = {
    		            x: prevInput.deltaX || 0,
    		            y: prevInput.deltaY || 0
    		        };

    		        offset = session.offsetDelta = {
    		            x: center.x,
    		            y: center.y
    		        };
    		    }

    		    input.deltaX = prevDelta.x + (center.x - offset.x);
    		    input.deltaY = prevDelta.y + (center.y - offset.y);
    		}

    		/**
    		 * velocity is calculated every x ms
    		 * @param {Object} session
    		 * @param {Object} input
    		 */
    		function computeIntervalInputData(session, input) {
    		    var last = session.lastInterval || input,
    		        deltaTime = input.timeStamp - last.timeStamp,
    		        velocity, velocityX, velocityY, direction;

    		    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined$1)) {
    		        var deltaX = input.deltaX - last.deltaX;
    		        var deltaY = input.deltaY - last.deltaY;

    		        var v = getVelocity(deltaTime, deltaX, deltaY);
    		        velocityX = v.x;
    		        velocityY = v.y;
    		        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;
    		        direction = getDirection(deltaX, deltaY);

    		        session.lastInterval = input;
    		    } else {
    		        // use latest velocity info if it doesn't overtake a minimum period
    		        velocity = last.velocity;
    		        velocityX = last.velocityX;
    		        velocityY = last.velocityY;
    		        direction = last.direction;
    		    }

    		    input.velocity = velocity;
    		    input.velocityX = velocityX;
    		    input.velocityY = velocityY;
    		    input.direction = direction;
    		}

    		/**
    		 * create a simple clone from the input used for storage of firstInput and firstMultiple
    		 * @param {Object} input
    		 * @returns {Object} clonedInputData
    		 */
    		function simpleCloneInputData(input) {
    		    // make a simple copy of the pointers because we will get a reference if we don't
    		    // we only need clientXY for the calculations
    		    var pointers = [];
    		    var i = 0;
    		    while (i < input.pointers.length) {
    		        pointers[i] = {
    		            clientX: round(input.pointers[i].clientX),
    		            clientY: round(input.pointers[i].clientY)
    		        };
    		        i++;
    		    }

    		    return {
    		        timeStamp: now(),
    		        pointers: pointers,
    		        center: getCenter(pointers),
    		        deltaX: input.deltaX,
    		        deltaY: input.deltaY
    		    };
    		}

    		/**
    		 * get the center of all the pointers
    		 * @param {Array} pointers
    		 * @return {Object} center contains `x` and `y` properties
    		 */
    		function getCenter(pointers) {
    		    var pointersLength = pointers.length;

    		    // no need to loop when only one touch
    		    if (pointersLength === 1) {
    		        return {
    		            x: round(pointers[0].clientX),
    		            y: round(pointers[0].clientY)
    		        };
    		    }

    		    var x = 0, y = 0, i = 0;
    		    while (i < pointersLength) {
    		        x += pointers[i].clientX;
    		        y += pointers[i].clientY;
    		        i++;
    		    }

    		    return {
    		        x: round(x / pointersLength),
    		        y: round(y / pointersLength)
    		    };
    		}

    		/**
    		 * calculate the velocity between two points. unit is in px per ms.
    		 * @param {Number} deltaTime
    		 * @param {Number} x
    		 * @param {Number} y
    		 * @return {Object} velocity `x` and `y`
    		 */
    		function getVelocity(deltaTime, x, y) {
    		    return {
    		        x: x / deltaTime || 0,
    		        y: y / deltaTime || 0
    		    };
    		}

    		/**
    		 * get the direction between two points
    		 * @param {Number} x
    		 * @param {Number} y
    		 * @return {Number} direction
    		 */
    		function getDirection(x, y) {
    		    if (x === y) {
    		        return DIRECTION_NONE;
    		    }

    		    if (abs(x) >= abs(y)) {
    		        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;
    		    }
    		    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;
    		}

    		/**
    		 * calculate the absolute distance between two points
    		 * @param {Object} p1 {x, y}
    		 * @param {Object} p2 {x, y}
    		 * @param {Array} [props] containing x and y keys
    		 * @return {Number} distance
    		 */
    		function getDistance(p1, p2, props) {
    		    if (!props) {
    		        props = PROPS_XY;
    		    }
    		    var x = p2[props[0]] - p1[props[0]],
    		        y = p2[props[1]] - p1[props[1]];

    		    return Math.sqrt((x * x) + (y * y));
    		}

    		/**
    		 * calculate the angle between two coordinates
    		 * @param {Object} p1
    		 * @param {Object} p2
    		 * @param {Array} [props] containing x and y keys
    		 * @return {Number} angle
    		 */
    		function getAngle(p1, p2, props) {
    		    if (!props) {
    		        props = PROPS_XY;
    		    }
    		    var x = p2[props[0]] - p1[props[0]],
    		        y = p2[props[1]] - p1[props[1]];
    		    return Math.atan2(y, x) * 180 / Math.PI;
    		}

    		/**
    		 * calculate the rotation degrees between two pointersets
    		 * @param {Array} start array of pointers
    		 * @param {Array} end array of pointers
    		 * @return {Number} rotation
    		 */
    		function getRotation(start, end) {
    		    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);
    		}

    		/**
    		 * calculate the scale factor between two pointersets
    		 * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out
    		 * @param {Array} start array of pointers
    		 * @param {Array} end array of pointers
    		 * @return {Number} scale
    		 */
    		function getScale(start, end) {
    		    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);
    		}

    		var MOUSE_INPUT_MAP = {
    		    mousedown: INPUT_START,
    		    mousemove: INPUT_MOVE,
    		    mouseup: INPUT_END
    		};

    		var MOUSE_ELEMENT_EVENTS = 'mousedown';
    		var MOUSE_WINDOW_EVENTS = 'mousemove mouseup';

    		/**
    		 * Mouse events input
    		 * @constructor
    		 * @extends Input
    		 */
    		function MouseInput() {
    		    this.evEl = MOUSE_ELEMENT_EVENTS;
    		    this.evWin = MOUSE_WINDOW_EVENTS;

    		    this.pressed = false; // mousedown state

    		    Input.apply(this, arguments);
    		}

    		inherit(MouseInput, Input, {
    		    /**
    		     * handle mouse events
    		     * @param {Object} ev
    		     */
    		    handler: function MEhandler(ev) {
    		        var eventType = MOUSE_INPUT_MAP[ev.type];

    		        // on start we want to have the left mouse button down
    		        if (eventType & INPUT_START && ev.button === 0) {
    		            this.pressed = true;
    		        }

    		        if (eventType & INPUT_MOVE && ev.which !== 1) {
    		            eventType = INPUT_END;
    		        }

    		        // mouse must be down
    		        if (!this.pressed) {
    		            return;
    		        }

    		        if (eventType & INPUT_END) {
    		            this.pressed = false;
    		        }

    		        this.callback(this.manager, eventType, {
    		            pointers: [ev],
    		            changedPointers: [ev],
    		            pointerType: INPUT_TYPE_MOUSE,
    		            srcEvent: ev
    		        });
    		    }
    		});

    		var POINTER_INPUT_MAP = {
    		    pointerdown: INPUT_START,
    		    pointermove: INPUT_MOVE,
    		    pointerup: INPUT_END,
    		    pointercancel: INPUT_CANCEL,
    		    pointerout: INPUT_CANCEL
    		};

    		// in IE10 the pointer types is defined as an enum
    		var IE10_POINTER_TYPE_ENUM = {
    		    2: INPUT_TYPE_TOUCH,
    		    3: INPUT_TYPE_PEN,
    		    4: INPUT_TYPE_MOUSE,
    		    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816
    		};

    		var POINTER_ELEMENT_EVENTS = 'pointerdown';
    		var POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';

    		// IE10 has prefixed support, and case-sensitive
    		if (window.MSPointerEvent && !window.PointerEvent) {
    		    POINTER_ELEMENT_EVENTS = 'MSPointerDown';
    		    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';
    		}

    		/**
    		 * Pointer events input
    		 * @constructor
    		 * @extends Input
    		 */
    		function PointerEventInput() {
    		    this.evEl = POINTER_ELEMENT_EVENTS;
    		    this.evWin = POINTER_WINDOW_EVENTS;

    		    Input.apply(this, arguments);

    		    this.store = (this.manager.session.pointerEvents = []);
    		}

    		inherit(PointerEventInput, Input, {
    		    /**
    		     * handle mouse events
    		     * @param {Object} ev
    		     */
    		    handler: function PEhandler(ev) {
    		        var store = this.store;
    		        var removePointer = false;

    		        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');
    		        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];
    		        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;

    		        var isTouch = (pointerType == INPUT_TYPE_TOUCH);

    		        // get index of the event in the store
    		        var storeIndex = inArray(store, ev.pointerId, 'pointerId');

    		        // start and mouse must be down
    		        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {
    		            if (storeIndex < 0) {
    		                store.push(ev);
    		                storeIndex = store.length - 1;
    		            }
    		        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {
    		            removePointer = true;
    		        }

    		        // it not found, so the pointer hasn't been down (so it's probably a hover)
    		        if (storeIndex < 0) {
    		            return;
    		        }

    		        // update the event in the store
    		        store[storeIndex] = ev;

    		        this.callback(this.manager, eventType, {
    		            pointers: store,
    		            changedPointers: [ev],
    		            pointerType: pointerType,
    		            srcEvent: ev
    		        });

    		        if (removePointer) {
    		            // remove from the store
    		            store.splice(storeIndex, 1);
    		        }
    		    }
    		});

    		var SINGLE_TOUCH_INPUT_MAP = {
    		    touchstart: INPUT_START,
    		    touchmove: INPUT_MOVE,
    		    touchend: INPUT_END,
    		    touchcancel: INPUT_CANCEL
    		};

    		var SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';
    		var SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';

    		/**
    		 * Touch events input
    		 * @constructor
    		 * @extends Input
    		 */
    		function SingleTouchInput() {
    		    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;
    		    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;
    		    this.started = false;

    		    Input.apply(this, arguments);
    		}

    		inherit(SingleTouchInput, Input, {
    		    handler: function TEhandler(ev) {
    		        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];

    		        // should we handle the touch events?
    		        if (type === INPUT_START) {
    		            this.started = true;
    		        }

    		        if (!this.started) {
    		            return;
    		        }

    		        var touches = normalizeSingleTouches.call(this, ev, type);

    		        // when done, reset the started state
    		        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {
    		            this.started = false;
    		        }

    		        this.callback(this.manager, type, {
    		            pointers: touches[0],
    		            changedPointers: touches[1],
    		            pointerType: INPUT_TYPE_TOUCH,
    		            srcEvent: ev
    		        });
    		    }
    		});

    		/**
    		 * @this {TouchInput}
    		 * @param {Object} ev
    		 * @param {Number} type flag
    		 * @returns {undefined|Array} [all, changed]
    		 */
    		function normalizeSingleTouches(ev, type) {
    		    var all = toArray(ev.touches);
    		    var changed = toArray(ev.changedTouches);

    		    if (type & (INPUT_END | INPUT_CANCEL)) {
    		        all = uniqueArray(all.concat(changed), 'identifier');
    		    }

    		    return [all, changed];
    		}

    		var TOUCH_INPUT_MAP = {
    		    touchstart: INPUT_START,
    		    touchmove: INPUT_MOVE,
    		    touchend: INPUT_END,
    		    touchcancel: INPUT_CANCEL
    		};

    		var TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';

    		/**
    		 * Multi-user touch events input
    		 * @constructor
    		 * @extends Input
    		 */
    		function TouchInput() {
    		    this.evTarget = TOUCH_TARGET_EVENTS;
    		    this.targetIds = {};

    		    Input.apply(this, arguments);
    		}

    		inherit(TouchInput, Input, {
    		    handler: function MTEhandler(ev) {
    		        var type = TOUCH_INPUT_MAP[ev.type];
    		        var touches = getTouches.call(this, ev, type);
    		        if (!touches) {
    		            return;
    		        }

    		        this.callback(this.manager, type, {
    		            pointers: touches[0],
    		            changedPointers: touches[1],
    		            pointerType: INPUT_TYPE_TOUCH,
    		            srcEvent: ev
    		        });
    		    }
    		});

    		/**
    		 * @this {TouchInput}
    		 * @param {Object} ev
    		 * @param {Number} type flag
    		 * @returns {undefined|Array} [all, changed]
    		 */
    		function getTouches(ev, type) {
    		    var allTouches = toArray(ev.touches);
    		    var targetIds = this.targetIds;

    		    // when there is only one touch, the process can be simplified
    		    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {
    		        targetIds[allTouches[0].identifier] = true;
    		        return [allTouches, allTouches];
    		    }

    		    var i,
    		        targetTouches,
    		        changedTouches = toArray(ev.changedTouches),
    		        changedTargetTouches = [],
    		        target = this.target;

    		    // get target touches from touches
    		    targetTouches = allTouches.filter(function(touch) {
    		        return hasParent(touch.target, target);
    		    });

    		    // collect touches
    		    if (type === INPUT_START) {
    		        i = 0;
    		        while (i < targetTouches.length) {
    		            targetIds[targetTouches[i].identifier] = true;
    		            i++;
    		        }
    		    }

    		    // filter changed touches to only contain touches that exist in the collected target ids
    		    i = 0;
    		    while (i < changedTouches.length) {
    		        if (targetIds[changedTouches[i].identifier]) {
    		            changedTargetTouches.push(changedTouches[i]);
    		        }

    		        // cleanup removed touches
    		        if (type & (INPUT_END | INPUT_CANCEL)) {
    		            delete targetIds[changedTouches[i].identifier];
    		        }
    		        i++;
    		    }

    		    if (!changedTargetTouches.length) {
    		        return;
    		    }

    		    return [
    		        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'
    		        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier'),
    		        changedTargetTouches
    		    ];
    		}

    		/**
    		 * Combined touch and mouse input
    		 *
    		 * Touch has a higher priority then mouse, and while touching no mouse events are allowed.
    		 * This because touch devices also emit mouse events while doing a touch.
    		 *
    		 * @constructor
    		 * @extends Input
    		 */

    		var DEDUP_TIMEOUT = 2500;
    		var DEDUP_DISTANCE = 25;

    		function TouchMouseInput() {
    		    Input.apply(this, arguments);

    		    var handler = bindFn(this.handler, this);
    		    this.touch = new TouchInput(this.manager, handler);
    		    this.mouse = new MouseInput(this.manager, handler);

    		    this.primaryTouch = null;
    		    this.lastTouches = [];
    		}

    		inherit(TouchMouseInput, Input, {
    		    /**
    		     * handle mouse and touch events
    		     * @param {Hammer} manager
    		     * @param {String} inputEvent
    		     * @param {Object} inputData
    		     */
    		    handler: function TMEhandler(manager, inputEvent, inputData) {
    		        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),
    		            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);

    		        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {
    		            return;
    		        }

    		        // when we're in a touch event, record touches to  de-dupe synthetic mouse event
    		        if (isTouch) {
    		            recordTouches.call(this, inputEvent, inputData);
    		        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {
    		            return;
    		        }

    		        this.callback(manager, inputEvent, inputData);
    		    },

    		    /**
    		     * remove the event listeners
    		     */
    		    destroy: function destroy() {
    		        this.touch.destroy();
    		        this.mouse.destroy();
    		    }
    		});

    		function recordTouches(eventType, eventData) {
    		    if (eventType & INPUT_START) {
    		        this.primaryTouch = eventData.changedPointers[0].identifier;
    		        setLastTouch.call(this, eventData);
    		    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {
    		        setLastTouch.call(this, eventData);
    		    }
    		}

    		function setLastTouch(eventData) {
    		    var touch = eventData.changedPointers[0];

    		    if (touch.identifier === this.primaryTouch) {
    		        var lastTouch = {x: touch.clientX, y: touch.clientY};
    		        this.lastTouches.push(lastTouch);
    		        var lts = this.lastTouches;
    		        var removeLastTouch = function() {
    		            var i = lts.indexOf(lastTouch);
    		            if (i > -1) {
    		                lts.splice(i, 1);
    		            }
    		        };
    		        setTimeout(removeLastTouch, DEDUP_TIMEOUT);
    		    }
    		}

    		function isSyntheticEvent(eventData) {
    		    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;
    		    for (var i = 0; i < this.lastTouches.length; i++) {
    		        var t = this.lastTouches[i];
    		        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);
    		        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {
    		            return true;
    		        }
    		    }
    		    return false;
    		}

    		var PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');
    		var NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined$1;

    		// magical touchAction value
    		var TOUCH_ACTION_COMPUTE = 'compute';
    		var TOUCH_ACTION_AUTO = 'auto';
    		var TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented
    		var TOUCH_ACTION_NONE = 'none';
    		var TOUCH_ACTION_PAN_X = 'pan-x';
    		var TOUCH_ACTION_PAN_Y = 'pan-y';
    		var TOUCH_ACTION_MAP = getTouchActionProps();

    		/**
    		 * Touch Action
    		 * sets the touchAction property or uses the js alternative
    		 * @param {Manager} manager
    		 * @param {String} value
    		 * @constructor
    		 */
    		function TouchAction(manager, value) {
    		    this.manager = manager;
    		    this.set(value);
    		}

    		TouchAction.prototype = {
    		    /**
    		     * set the touchAction value on the element or enable the polyfill
    		     * @param {String} value
    		     */
    		    set: function(value) {
    		        // find out the touch-action by the event handlers
    		        if (value == TOUCH_ACTION_COMPUTE) {
    		            value = this.compute();
    		        }

    		        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {
    		            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;
    		        }
    		        this.actions = value.toLowerCase().trim();
    		    },

    		    /**
    		     * just re-set the touchAction value
    		     */
    		    update: function() {
    		        this.set(this.manager.options.touchAction);
    		    },

    		    /**
    		     * compute the value for the touchAction property based on the recognizer's settings
    		     * @returns {String} value
    		     */
    		    compute: function() {
    		        var actions = [];
    		        each(this.manager.recognizers, function(recognizer) {
    		            if (boolOrFn(recognizer.options.enable, [recognizer])) {
    		                actions = actions.concat(recognizer.getTouchAction());
    		            }
    		        });
    		        return cleanTouchActions(actions.join(' '));
    		    },

    		    /**
    		     * this method is called on each input cycle and provides the preventing of the browser behavior
    		     * @param {Object} input
    		     */
    		    preventDefaults: function(input) {
    		        var srcEvent = input.srcEvent;
    		        var direction = input.offsetDirection;

    		        // if the touch action did prevented once this session
    		        if (this.manager.session.prevented) {
    		            srcEvent.preventDefault();
    		            return;
    		        }

    		        var actions = this.actions;
    		        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];
    		        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];
    		        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];

    		        if (hasNone) {
    		            //do not prevent defaults if this is a tap gesture

    		            var isTapPointer = input.pointers.length === 1;
    		            var isTapMovement = input.distance < 2;
    		            var isTapTouchTime = input.deltaTime < 250;

    		            if (isTapPointer && isTapMovement && isTapTouchTime) {
    		                return;
    		            }
    		        }

    		        if (hasPanX && hasPanY) {
    		            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent
    		            return;
    		        }

    		        if (hasNone ||
    		            (hasPanY && direction & DIRECTION_HORIZONTAL) ||
    		            (hasPanX && direction & DIRECTION_VERTICAL)) {
    		            return this.preventSrc(srcEvent);
    		        }
    		    },

    		    /**
    		     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)
    		     * @param {Object} srcEvent
    		     */
    		    preventSrc: function(srcEvent) {
    		        this.manager.session.prevented = true;
    		        srcEvent.preventDefault();
    		    }
    		};

    		/**
    		 * when the touchActions are collected they are not a valid value, so we need to clean things up. *
    		 * @param {String} actions
    		 * @returns {*}
    		 */
    		function cleanTouchActions(actions) {
    		    // none
    		    if (inStr(actions, TOUCH_ACTION_NONE)) {
    		        return TOUCH_ACTION_NONE;
    		    }

    		    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);
    		    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);

    		    // if both pan-x and pan-y are set (different recognizers
    		    // for different directions, e.g. horizontal pan but vertical swipe?)
    		    // we need none (as otherwise with pan-x pan-y combined none of these
    		    // recognizers will work, since the browser would handle all panning
    		    if (hasPanX && hasPanY) {
    		        return TOUCH_ACTION_NONE;
    		    }

    		    // pan-x OR pan-y
    		    if (hasPanX || hasPanY) {
    		        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;
    		    }

    		    // manipulation
    		    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {
    		        return TOUCH_ACTION_MANIPULATION;
    		    }

    		    return TOUCH_ACTION_AUTO;
    		}

    		function getTouchActionProps() {
    		    if (!NATIVE_TOUCH_ACTION) {
    		        return false;
    		    }
    		    var touchMap = {};
    		    var cssSupports = window.CSS && window.CSS.supports;
    		    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {

    		        // If css.supports is not supported but there is native touch-action assume it supports
    		        // all values. This is the case for IE 10 and 11.
    		        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;
    		    });
    		    return touchMap;
    		}

    		/**
    		 * Recognizer flow explained; *
    		 * All recognizers have the initial state of POSSIBLE when a input session starts.
    		 * The definition of a input session is from the first input until the last input, with all it's movement in it. *
    		 * Example session for mouse-input: mousedown -> mousemove -> mouseup
    		 *
    		 * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed
    		 * which determines with state it should be.
    		 *
    		 * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to
    		 * POSSIBLE to give it another change on the next cycle.
    		 *
    		 *               Possible
    		 *                  |
    		 *            +-----+---------------+
    		 *            |                     |
    		 *      +-----+-----+               |
    		 *      |           |               |
    		 *   Failed      Cancelled          |
    		 *                          +-------+------+
    		 *                          |              |
    		 *                      Recognized       Began
    		 *                                         |
    		 *                                      Changed
    		 *                                         |
    		 *                                  Ended/Recognized
    		 */
    		var STATE_POSSIBLE = 1;
    		var STATE_BEGAN = 2;
    		var STATE_CHANGED = 4;
    		var STATE_ENDED = 8;
    		var STATE_RECOGNIZED = STATE_ENDED;
    		var STATE_CANCELLED = 16;
    		var STATE_FAILED = 32;

    		/**
    		 * Recognizer
    		 * Every recognizer needs to extend from this class.
    		 * @constructor
    		 * @param {Object} options
    		 */
    		function Recognizer(options) {
    		    this.options = assign({}, this.defaults, options || {});

    		    this.id = uniqueId();

    		    this.manager = null;

    		    // default is enable true
    		    this.options.enable = ifUndefined(this.options.enable, true);

    		    this.state = STATE_POSSIBLE;

    		    this.simultaneous = {};
    		    this.requireFail = [];
    		}

    		Recognizer.prototype = {
    		    /**
    		     * @virtual
    		     * @type {Object}
    		     */
    		    defaults: {},

    		    /**
    		     * set options
    		     * @param {Object} options
    		     * @return {Recognizer}
    		     */
    		    set: function(options) {
    		        assign(this.options, options);

    		        // also update the touchAction, in case something changed about the directions/enabled state
    		        this.manager && this.manager.touchAction.update();
    		        return this;
    		    },

    		    /**
    		     * recognize simultaneous with an other recognizer.
    		     * @param {Recognizer} otherRecognizer
    		     * @returns {Recognizer} this
    		     */
    		    recognizeWith: function(otherRecognizer) {
    		        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {
    		            return this;
    		        }

    		        var simultaneous = this.simultaneous;
    		        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
    		        if (!simultaneous[otherRecognizer.id]) {
    		            simultaneous[otherRecognizer.id] = otherRecognizer;
    		            otherRecognizer.recognizeWith(this);
    		        }
    		        return this;
    		    },

    		    /**
    		     * drop the simultaneous link. it doesnt remove the link on the other recognizer.
    		     * @param {Recognizer} otherRecognizer
    		     * @returns {Recognizer} this
    		     */
    		    dropRecognizeWith: function(otherRecognizer) {
    		        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {
    		            return this;
    		        }

    		        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
    		        delete this.simultaneous[otherRecognizer.id];
    		        return this;
    		    },

    		    /**
    		     * recognizer can only run when an other is failing
    		     * @param {Recognizer} otherRecognizer
    		     * @returns {Recognizer} this
    		     */
    		    requireFailure: function(otherRecognizer) {
    		        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {
    		            return this;
    		        }

    		        var requireFail = this.requireFail;
    		        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
    		        if (inArray(requireFail, otherRecognizer) === -1) {
    		            requireFail.push(otherRecognizer);
    		            otherRecognizer.requireFailure(this);
    		        }
    		        return this;
    		    },

    		    /**
    		     * drop the requireFailure link. it does not remove the link on the other recognizer.
    		     * @param {Recognizer} otherRecognizer
    		     * @returns {Recognizer} this
    		     */
    		    dropRequireFailure: function(otherRecognizer) {
    		        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {
    		            return this;
    		        }

    		        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
    		        var index = inArray(this.requireFail, otherRecognizer);
    		        if (index > -1) {
    		            this.requireFail.splice(index, 1);
    		        }
    		        return this;
    		    },

    		    /**
    		     * has require failures boolean
    		     * @returns {boolean}
    		     */
    		    hasRequireFailures: function() {
    		        return this.requireFail.length > 0;
    		    },

    		    /**
    		     * if the recognizer can recognize simultaneous with an other recognizer
    		     * @param {Recognizer} otherRecognizer
    		     * @returns {Boolean}
    		     */
    		    canRecognizeWith: function(otherRecognizer) {
    		        return !!this.simultaneous[otherRecognizer.id];
    		    },

    		    /**
    		     * You should use `tryEmit` instead of `emit` directly to check
    		     * that all the needed recognizers has failed before emitting.
    		     * @param {Object} input
    		     */
    		    emit: function(input) {
    		        var self = this;
    		        var state = this.state;

    		        function emit(event) {
    		            self.manager.emit(event, input);
    		        }

    		        // 'panstart' and 'panmove'
    		        if (state < STATE_ENDED) {
    		            emit(self.options.event + stateStr(state));
    		        }

    		        emit(self.options.event); // simple 'eventName' events

    		        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)
    		            emit(input.additionalEvent);
    		        }

    		        // panend and pancancel
    		        if (state >= STATE_ENDED) {
    		            emit(self.options.event + stateStr(state));
    		        }
    		    },

    		    /**
    		     * Check that all the require failure recognizers has failed,
    		     * if true, it emits a gesture event,
    		     * otherwise, setup the state to FAILED.
    		     * @param {Object} input
    		     */
    		    tryEmit: function(input) {
    		        if (this.canEmit()) {
    		            return this.emit(input);
    		        }
    		        // it's failing anyway
    		        this.state = STATE_FAILED;
    		    },

    		    /**
    		     * can we emit?
    		     * @returns {boolean}
    		     */
    		    canEmit: function() {
    		        var i = 0;
    		        while (i < this.requireFail.length) {
    		            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {
    		                return false;
    		            }
    		            i++;
    		        }
    		        return true;
    		    },

    		    /**
    		     * update the recognizer
    		     * @param {Object} inputData
    		     */
    		    recognize: function(inputData) {
    		        // make a new copy of the inputData
    		        // so we can change the inputData without messing up the other recognizers
    		        var inputDataClone = assign({}, inputData);

    		        // is is enabled and allow recognizing?
    		        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {
    		            this.reset();
    		            this.state = STATE_FAILED;
    		            return;
    		        }

    		        // reset when we've reached the end
    		        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {
    		            this.state = STATE_POSSIBLE;
    		        }

    		        this.state = this.process(inputDataClone);

    		        // the recognizer has recognized a gesture
    		        // so trigger an event
    		        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {
    		            this.tryEmit(inputDataClone);
    		        }
    		    },

    		    /**
    		     * return the state of the recognizer
    		     * the actual recognizing happens in this method
    		     * @virtual
    		     * @param {Object} inputData
    		     * @returns {Const} STATE
    		     */
    		    process: function(inputData) { }, // jshint ignore:line

    		    /**
    		     * return the preferred touch-action
    		     * @virtual
    		     * @returns {Array}
    		     */
    		    getTouchAction: function() { },

    		    /**
    		     * called when the gesture isn't allowed to recognize
    		     * like when another is being recognized or it is disabled
    		     * @virtual
    		     */
    		    reset: function() { }
    		};

    		/**
    		 * get a usable string, used as event postfix
    		 * @param {Const} state
    		 * @returns {String} state
    		 */
    		function stateStr(state) {
    		    if (state & STATE_CANCELLED) {
    		        return 'cancel';
    		    } else if (state & STATE_ENDED) {
    		        return 'end';
    		    } else if (state & STATE_CHANGED) {
    		        return 'move';
    		    } else if (state & STATE_BEGAN) {
    		        return 'start';
    		    }
    		    return '';
    		}

    		/**
    		 * direction cons to string
    		 * @param {Const} direction
    		 * @returns {String}
    		 */
    		function directionStr(direction) {
    		    if (direction == DIRECTION_DOWN) {
    		        return 'down';
    		    } else if (direction == DIRECTION_UP) {
    		        return 'up';
    		    } else if (direction == DIRECTION_LEFT) {
    		        return 'left';
    		    } else if (direction == DIRECTION_RIGHT) {
    		        return 'right';
    		    }
    		    return '';
    		}

    		/**
    		 * get a recognizer by name if it is bound to a manager
    		 * @param {Recognizer|String} otherRecognizer
    		 * @param {Recognizer} recognizer
    		 * @returns {Recognizer}
    		 */
    		function getRecognizerByNameIfManager(otherRecognizer, recognizer) {
    		    var manager = recognizer.manager;
    		    if (manager) {
    		        return manager.get(otherRecognizer);
    		    }
    		    return otherRecognizer;
    		}

    		/**
    		 * This recognizer is just used as a base for the simple attribute recognizers.
    		 * @constructor
    		 * @extends Recognizer
    		 */
    		function AttrRecognizer() {
    		    Recognizer.apply(this, arguments);
    		}

    		inherit(AttrRecognizer, Recognizer, {
    		    /**
    		     * @namespace
    		     * @memberof AttrRecognizer
    		     */
    		    defaults: {
    		        /**
    		         * @type {Number}
    		         * @default 1
    		         */
    		        pointers: 1
    		    },

    		    /**
    		     * Used to check if it the recognizer receives valid input, like input.distance > 10.
    		     * @memberof AttrRecognizer
    		     * @param {Object} input
    		     * @returns {Boolean} recognized
    		     */
    		    attrTest: function(input) {
    		        var optionPointers = this.options.pointers;
    		        return optionPointers === 0 || input.pointers.length === optionPointers;
    		    },

    		    /**
    		     * Process the input and return the state for the recognizer
    		     * @memberof AttrRecognizer
    		     * @param {Object} input
    		     * @returns {*} State
    		     */
    		    process: function(input) {
    		        var state = this.state;
    		        var eventType = input.eventType;

    		        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);
    		        var isValid = this.attrTest(input);

    		        // on cancel input and we've recognized before, return STATE_CANCELLED
    		        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {
    		            return state | STATE_CANCELLED;
    		        } else if (isRecognized || isValid) {
    		            if (eventType & INPUT_END) {
    		                return state | STATE_ENDED;
    		            } else if (!(state & STATE_BEGAN)) {
    		                return STATE_BEGAN;
    		            }
    		            return state | STATE_CHANGED;
    		        }
    		        return STATE_FAILED;
    		    }
    		});

    		/**
    		 * Pan
    		 * Recognized when the pointer is down and moved in the allowed direction.
    		 * @constructor
    		 * @extends AttrRecognizer
    		 */
    		function PanRecognizer() {
    		    AttrRecognizer.apply(this, arguments);

    		    this.pX = null;
    		    this.pY = null;
    		}

    		inherit(PanRecognizer, AttrRecognizer, {
    		    /**
    		     * @namespace
    		     * @memberof PanRecognizer
    		     */
    		    defaults: {
    		        event: 'pan',
    		        threshold: 10,
    		        pointers: 1,
    		        direction: DIRECTION_ALL
    		    },

    		    getTouchAction: function() {
    		        var direction = this.options.direction;
    		        var actions = [];
    		        if (direction & DIRECTION_HORIZONTAL) {
    		            actions.push(TOUCH_ACTION_PAN_Y);
    		        }
    		        if (direction & DIRECTION_VERTICAL) {
    		            actions.push(TOUCH_ACTION_PAN_X);
    		        }
    		        return actions;
    		    },

    		    directionTest: function(input) {
    		        var options = this.options;
    		        var hasMoved = true;
    		        var distance = input.distance;
    		        var direction = input.direction;
    		        var x = input.deltaX;
    		        var y = input.deltaY;

    		        // lock to axis?
    		        if (!(direction & options.direction)) {
    		            if (options.direction & DIRECTION_HORIZONTAL) {
    		                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;
    		                hasMoved = x != this.pX;
    		                distance = Math.abs(input.deltaX);
    		            } else {
    		                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;
    		                hasMoved = y != this.pY;
    		                distance = Math.abs(input.deltaY);
    		            }
    		        }
    		        input.direction = direction;
    		        return hasMoved && distance > options.threshold && direction & options.direction;
    		    },

    		    attrTest: function(input) {
    		        return AttrRecognizer.prototype.attrTest.call(this, input) &&
    		            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));
    		    },

    		    emit: function(input) {

    		        this.pX = input.deltaX;
    		        this.pY = input.deltaY;

    		        var direction = directionStr(input.direction);

    		        if (direction) {
    		            input.additionalEvent = this.options.event + direction;
    		        }
    		        this._super.emit.call(this, input);
    		    }
    		});

    		/**
    		 * Pinch
    		 * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).
    		 * @constructor
    		 * @extends AttrRecognizer
    		 */
    		function PinchRecognizer() {
    		    AttrRecognizer.apply(this, arguments);
    		}

    		inherit(PinchRecognizer, AttrRecognizer, {
    		    /**
    		     * @namespace
    		     * @memberof PinchRecognizer
    		     */
    		    defaults: {
    		        event: 'pinch',
    		        threshold: 0,
    		        pointers: 2
    		    },

    		    getTouchAction: function() {
    		        return [TOUCH_ACTION_NONE];
    		    },

    		    attrTest: function(input) {
    		        return this._super.attrTest.call(this, input) &&
    		            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);
    		    },

    		    emit: function(input) {
    		        if (input.scale !== 1) {
    		            var inOut = input.scale < 1 ? 'in' : 'out';
    		            input.additionalEvent = this.options.event + inOut;
    		        }
    		        this._super.emit.call(this, input);
    		    }
    		});

    		/**
    		 * Press
    		 * Recognized when the pointer is down for x ms without any movement.
    		 * @constructor
    		 * @extends Recognizer
    		 */
    		function PressRecognizer() {
    		    Recognizer.apply(this, arguments);

    		    this._timer = null;
    		    this._input = null;
    		}

    		inherit(PressRecognizer, Recognizer, {
    		    /**
    		     * @namespace
    		     * @memberof PressRecognizer
    		     */
    		    defaults: {
    		        event: 'press',
    		        pointers: 1,
    		        time: 251, // minimal time of the pointer to be pressed
    		        threshold: 9 // a minimal movement is ok, but keep it low
    		    },

    		    getTouchAction: function() {
    		        return [TOUCH_ACTION_AUTO];
    		    },

    		    process: function(input) {
    		        var options = this.options;
    		        var validPointers = input.pointers.length === options.pointers;
    		        var validMovement = input.distance < options.threshold;
    		        var validTime = input.deltaTime > options.time;

    		        this._input = input;

    		        // we only allow little movement
    		        // and we've reached an end event, so a tap is possible
    		        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {
    		            this.reset();
    		        } else if (input.eventType & INPUT_START) {
    		            this.reset();
    		            this._timer = setTimeoutContext(function() {
    		                this.state = STATE_RECOGNIZED;
    		                this.tryEmit();
    		            }, options.time, this);
    		        } else if (input.eventType & INPUT_END) {
    		            return STATE_RECOGNIZED;
    		        }
    		        return STATE_FAILED;
    		    },

    		    reset: function() {
    		        clearTimeout(this._timer);
    		    },

    		    emit: function(input) {
    		        if (this.state !== STATE_RECOGNIZED) {
    		            return;
    		        }

    		        if (input && (input.eventType & INPUT_END)) {
    		            this.manager.emit(this.options.event + 'up', input);
    		        } else {
    		            this._input.timeStamp = now();
    		            this.manager.emit(this.options.event, this._input);
    		        }
    		    }
    		});

    		/**
    		 * Rotate
    		 * Recognized when two or more pointer are moving in a circular motion.
    		 * @constructor
    		 * @extends AttrRecognizer
    		 */
    		function RotateRecognizer() {
    		    AttrRecognizer.apply(this, arguments);
    		}

    		inherit(RotateRecognizer, AttrRecognizer, {
    		    /**
    		     * @namespace
    		     * @memberof RotateRecognizer
    		     */
    		    defaults: {
    		        event: 'rotate',
    		        threshold: 0,
    		        pointers: 2
    		    },

    		    getTouchAction: function() {
    		        return [TOUCH_ACTION_NONE];
    		    },

    		    attrTest: function(input) {
    		        return this._super.attrTest.call(this, input) &&
    		            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);
    		    }
    		});

    		/**
    		 * Swipe
    		 * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.
    		 * @constructor
    		 * @extends AttrRecognizer
    		 */
    		function SwipeRecognizer() {
    		    AttrRecognizer.apply(this, arguments);
    		}

    		inherit(SwipeRecognizer, AttrRecognizer, {
    		    /**
    		     * @namespace
    		     * @memberof SwipeRecognizer
    		     */
    		    defaults: {
    		        event: 'swipe',
    		        threshold: 10,
    		        velocity: 0.3,
    		        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,
    		        pointers: 1
    		    },

    		    getTouchAction: function() {
    		        return PanRecognizer.prototype.getTouchAction.call(this);
    		    },

    		    attrTest: function(input) {
    		        var direction = this.options.direction;
    		        var velocity;

    		        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {
    		            velocity = input.overallVelocity;
    		        } else if (direction & DIRECTION_HORIZONTAL) {
    		            velocity = input.overallVelocityX;
    		        } else if (direction & DIRECTION_VERTICAL) {
    		            velocity = input.overallVelocityY;
    		        }

    		        return this._super.attrTest.call(this, input) &&
    		            direction & input.offsetDirection &&
    		            input.distance > this.options.threshold &&
    		            input.maxPointers == this.options.pointers &&
    		            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;
    		    },

    		    emit: function(input) {
    		        var direction = directionStr(input.offsetDirection);
    		        if (direction) {
    		            this.manager.emit(this.options.event + direction, input);
    		        }

    		        this.manager.emit(this.options.event, input);
    		    }
    		});

    		/**
    		 * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur
    		 * between the given interval and position. The delay option can be used to recognize multi-taps without firing
    		 * a single tap.
    		 *
    		 * The eventData from the emitted event contains the property `tapCount`, which contains the amount of
    		 * multi-taps being recognized.
    		 * @constructor
    		 * @extends Recognizer
    		 */
    		function TapRecognizer() {
    		    Recognizer.apply(this, arguments);

    		    // previous time and center,
    		    // used for tap counting
    		    this.pTime = false;
    		    this.pCenter = false;

    		    this._timer = null;
    		    this._input = null;
    		    this.count = 0;
    		}

    		inherit(TapRecognizer, Recognizer, {
    		    /**
    		     * @namespace
    		     * @memberof PinchRecognizer
    		     */
    		    defaults: {
    		        event: 'tap',
    		        pointers: 1,
    		        taps: 1,
    		        interval: 300, // max time between the multi-tap taps
    		        time: 250, // max time of the pointer to be down (like finger on the screen)
    		        threshold: 9, // a minimal movement is ok, but keep it low
    		        posThreshold: 10 // a multi-tap can be a bit off the initial position
    		    },

    		    getTouchAction: function() {
    		        return [TOUCH_ACTION_MANIPULATION];
    		    },

    		    process: function(input) {
    		        var options = this.options;

    		        var validPointers = input.pointers.length === options.pointers;
    		        var validMovement = input.distance < options.threshold;
    		        var validTouchTime = input.deltaTime < options.time;

    		        this.reset();

    		        if ((input.eventType & INPUT_START) && (this.count === 0)) {
    		            return this.failTimeout();
    		        }

    		        // we only allow little movement
    		        // and we've reached an end event, so a tap is possible
    		        if (validMovement && validTouchTime && validPointers) {
    		            if (input.eventType != INPUT_END) {
    		                return this.failTimeout();
    		            }

    		            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;
    		            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;

    		            this.pTime = input.timeStamp;
    		            this.pCenter = input.center;

    		            if (!validMultiTap || !validInterval) {
    		                this.count = 1;
    		            } else {
    		                this.count += 1;
    		            }

    		            this._input = input;

    		            // if tap count matches we have recognized it,
    		            // else it has began recognizing...
    		            var tapCount = this.count % options.taps;
    		            if (tapCount === 0) {
    		                // no failing requirements, immediately trigger the tap event
    		                // or wait as long as the multitap interval to trigger
    		                if (!this.hasRequireFailures()) {
    		                    return STATE_RECOGNIZED;
    		                } else {
    		                    this._timer = setTimeoutContext(function() {
    		                        this.state = STATE_RECOGNIZED;
    		                        this.tryEmit();
    		                    }, options.interval, this);
    		                    return STATE_BEGAN;
    		                }
    		            }
    		        }
    		        return STATE_FAILED;
    		    },

    		    failTimeout: function() {
    		        this._timer = setTimeoutContext(function() {
    		            this.state = STATE_FAILED;
    		        }, this.options.interval, this);
    		        return STATE_FAILED;
    		    },

    		    reset: function() {
    		        clearTimeout(this._timer);
    		    },

    		    emit: function() {
    		        if (this.state == STATE_RECOGNIZED) {
    		            this._input.tapCount = this.count;
    		            this.manager.emit(this.options.event, this._input);
    		        }
    		    }
    		});

    		/**
    		 * Simple way to create a manager with a default set of recognizers.
    		 * @param {HTMLElement} element
    		 * @param {Object} [options]
    		 * @constructor
    		 */
    		function Hammer(element, options) {
    		    options = options || {};
    		    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);
    		    return new Manager(element, options);
    		}

    		/**
    		 * @const {string}
    		 */
    		Hammer.VERSION = '2.0.7';

    		/**
    		 * default settings
    		 * @namespace
    		 */
    		Hammer.defaults = {
    		    /**
    		     * set if DOM events are being triggered.
    		     * But this is slower and unused by simple implementations, so disabled by default.
    		     * @type {Boolean}
    		     * @default false
    		     */
    		    domEvents: false,

    		    /**
    		     * The value for the touchAction property/fallback.
    		     * When set to `compute` it will magically set the correct value based on the added recognizers.
    		     * @type {String}
    		     * @default compute
    		     */
    		    touchAction: TOUCH_ACTION_COMPUTE,

    		    /**
    		     * @type {Boolean}
    		     * @default true
    		     */
    		    enable: true,

    		    /**
    		     * EXPERIMENTAL FEATURE -- can be removed/changed
    		     * Change the parent input target element.
    		     * If Null, then it is being set the to main element.
    		     * @type {Null|EventTarget}
    		     * @default null
    		     */
    		    inputTarget: null,

    		    /**
    		     * force an input class
    		     * @type {Null|Function}
    		     * @default null
    		     */
    		    inputClass: null,

    		    /**
    		     * Default recognizer setup when calling `Hammer()`
    		     * When creating a new Manager these will be skipped.
    		     * @type {Array}
    		     */
    		    preset: [
    		        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]
    		        [RotateRecognizer, {enable: false}],
    		        [PinchRecognizer, {enable: false}, ['rotate']],
    		        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],
    		        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],
    		        [TapRecognizer],
    		        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],
    		        [PressRecognizer]
    		    ],

    		    /**
    		     * Some CSS properties can be used to improve the working of Hammer.
    		     * Add them to this method and they will be set when creating a new Manager.
    		     * @namespace
    		     */
    		    cssProps: {
    		        /**
    		         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.
    		         * @type {String}
    		         * @default 'none'
    		         */
    		        userSelect: 'none',

    		        /**
    		         * Disable the Windows Phone grippers when pressing an element.
    		         * @type {String}
    		         * @default 'none'
    		         */
    		        touchSelect: 'none',

    		        /**
    		         * Disables the default callout shown when you touch and hold a touch target.
    		         * On iOS, when you touch and hold a touch target such as a link, Safari displays
    		         * a callout containing information about the link. This property allows you to disable that callout.
    		         * @type {String}
    		         * @default 'none'
    		         */
    		        touchCallout: 'none',

    		        /**
    		         * Specifies whether zooming is enabled. Used by IE10>
    		         * @type {String}
    		         * @default 'none'
    		         */
    		        contentZooming: 'none',

    		        /**
    		         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.
    		         * @type {String}
    		         * @default 'none'
    		         */
    		        userDrag: 'none',

    		        /**
    		         * Overrides the highlight color shown when the user taps a link or a JavaScript
    		         * clickable element in iOS. This property obeys the alpha value, if specified.
    		         * @type {String}
    		         * @default 'rgba(0,0,0,0)'
    		         */
    		        tapHighlightColor: 'rgba(0,0,0,0)'
    		    }
    		};

    		var STOP = 1;
    		var FORCED_STOP = 2;

    		/**
    		 * Manager
    		 * @param {HTMLElement} element
    		 * @param {Object} [options]
    		 * @constructor
    		 */
    		function Manager(element, options) {
    		    this.options = assign({}, Hammer.defaults, options || {});

    		    this.options.inputTarget = this.options.inputTarget || element;

    		    this.handlers = {};
    		    this.session = {};
    		    this.recognizers = [];
    		    this.oldCssProps = {};

    		    this.element = element;
    		    this.input = createInputInstance(this);
    		    this.touchAction = new TouchAction(this, this.options.touchAction);

    		    toggleCssProps(this, true);

    		    each(this.options.recognizers, function(item) {
    		        var recognizer = this.add(new (item[0])(item[1]));
    		        item[2] && recognizer.recognizeWith(item[2]);
    		        item[3] && recognizer.requireFailure(item[3]);
    		    }, this);
    		}

    		Manager.prototype = {
    		    /**
    		     * set options
    		     * @param {Object} options
    		     * @returns {Manager}
    		     */
    		    set: function(options) {
    		        assign(this.options, options);

    		        // Options that need a little more setup
    		        if (options.touchAction) {
    		            this.touchAction.update();
    		        }
    		        if (options.inputTarget) {
    		            // Clean up existing event listeners and reinitialize
    		            this.input.destroy();
    		            this.input.target = options.inputTarget;
    		            this.input.init();
    		        }
    		        return this;
    		    },

    		    /**
    		     * stop recognizing for this session.
    		     * This session will be discarded, when a new [input]start event is fired.
    		     * When forced, the recognizer cycle is stopped immediately.
    		     * @param {Boolean} [force]
    		     */
    		    stop: function(force) {
    		        this.session.stopped = force ? FORCED_STOP : STOP;
    		    },

    		    /**
    		     * run the recognizers!
    		     * called by the inputHandler function on every movement of the pointers (touches)
    		     * it walks through all the recognizers and tries to detect the gesture that is being made
    		     * @param {Object} inputData
    		     */
    		    recognize: function(inputData) {
    		        var session = this.session;
    		        if (session.stopped) {
    		            return;
    		        }

    		        // run the touch-action polyfill
    		        this.touchAction.preventDefaults(inputData);

    		        var recognizer;
    		        var recognizers = this.recognizers;

    		        // this holds the recognizer that is being recognized.
    		        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED
    		        // if no recognizer is detecting a thing, it is set to `null`
    		        var curRecognizer = session.curRecognizer;

    		        // reset when the last recognizer is recognized
    		        // or when we're in a new session
    		        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {
    		            curRecognizer = session.curRecognizer = null;
    		        }

    		        var i = 0;
    		        while (i < recognizers.length) {
    		            recognizer = recognizers[i];

    		            // find out if we are allowed try to recognize the input for this one.
    		            // 1.   allow if the session is NOT forced stopped (see the .stop() method)
    		            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one
    		            //      that is being recognized.
    		            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.
    		            //      this can be setup with the `recognizeWith()` method on the recognizer.
    		            if (session.stopped !== FORCED_STOP && ( // 1
    		                    !curRecognizer || recognizer == curRecognizer || // 2
    		                    recognizer.canRecognizeWith(curRecognizer))) { // 3
    		                recognizer.recognize(inputData);
    		            } else {
    		                recognizer.reset();
    		            }

    		            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the
    		            // current active recognizer. but only if we don't already have an active recognizer
    		            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {
    		                curRecognizer = session.curRecognizer = recognizer;
    		            }
    		            i++;
    		        }
    		    },

    		    /**
    		     * get a recognizer by its event name.
    		     * @param {Recognizer|String} recognizer
    		     * @returns {Recognizer|Null}
    		     */
    		    get: function(recognizer) {
    		        if (recognizer instanceof Recognizer) {
    		            return recognizer;
    		        }

    		        var recognizers = this.recognizers;
    		        for (var i = 0; i < recognizers.length; i++) {
    		            if (recognizers[i].options.event == recognizer) {
    		                return recognizers[i];
    		            }
    		        }
    		        return null;
    		    },

    		    /**
    		     * add a recognizer to the manager
    		     * existing recognizers with the same event name will be removed
    		     * @param {Recognizer} recognizer
    		     * @returns {Recognizer|Manager}
    		     */
    		    add: function(recognizer) {
    		        if (invokeArrayArg(recognizer, 'add', this)) {
    		            return this;
    		        }

    		        // remove existing
    		        var existing = this.get(recognizer.options.event);
    		        if (existing) {
    		            this.remove(existing);
    		        }

    		        this.recognizers.push(recognizer);
    		        recognizer.manager = this;

    		        this.touchAction.update();
    		        return recognizer;
    		    },

    		    /**
    		     * remove a recognizer by name or instance
    		     * @param {Recognizer|String} recognizer
    		     * @returns {Manager}
    		     */
    		    remove: function(recognizer) {
    		        if (invokeArrayArg(recognizer, 'remove', this)) {
    		            return this;
    		        }

    		        recognizer = this.get(recognizer);

    		        // let's make sure this recognizer exists
    		        if (recognizer) {
    		            var recognizers = this.recognizers;
    		            var index = inArray(recognizers, recognizer);

    		            if (index !== -1) {
    		                recognizers.splice(index, 1);
    		                this.touchAction.update();
    		            }
    		        }

    		        return this;
    		    },

    		    /**
    		     * bind event
    		     * @param {String} events
    		     * @param {Function} handler
    		     * @returns {EventEmitter} this
    		     */
    		    on: function(events, handler) {
    		        if (events === undefined$1) {
    		            return;
    		        }
    		        if (handler === undefined$1) {
    		            return;
    		        }

    		        var handlers = this.handlers;
    		        each(splitStr(events), function(event) {
    		            handlers[event] = handlers[event] || [];
    		            handlers[event].push(handler);
    		        });
    		        return this;
    		    },

    		    /**
    		     * unbind event, leave emit blank to remove all handlers
    		     * @param {String} events
    		     * @param {Function} [handler]
    		     * @returns {EventEmitter} this
    		     */
    		    off: function(events, handler) {
    		        if (events === undefined$1) {
    		            return;
    		        }

    		        var handlers = this.handlers;
    		        each(splitStr(events), function(event) {
    		            if (!handler) {
    		                delete handlers[event];
    		            } else {
    		                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);
    		            }
    		        });
    		        return this;
    		    },

    		    /**
    		     * emit event to the listeners
    		     * @param {String} event
    		     * @param {Object} data
    		     */
    		    emit: function(event, data) {
    		        // we also want to trigger dom events
    		        if (this.options.domEvents) {
    		            triggerDomEvent(event, data);
    		        }

    		        // no handlers, so skip it all
    		        var handlers = this.handlers[event] && this.handlers[event].slice();
    		        if (!handlers || !handlers.length) {
    		            return;
    		        }

    		        data.type = event;
    		        data.preventDefault = function() {
    		            data.srcEvent.preventDefault();
    		        };

    		        var i = 0;
    		        while (i < handlers.length) {
    		            handlers[i](data);
    		            i++;
    		        }
    		    },

    		    /**
    		     * destroy the manager and unbinds all events
    		     * it doesn't unbind dom events, that is the user own responsibility
    		     */
    		    destroy: function() {
    		        this.element && toggleCssProps(this, false);

    		        this.handlers = {};
    		        this.session = {};
    		        this.input.destroy();
    		        this.element = null;
    		    }
    		};

    		/**
    		 * add/remove the css properties as defined in manager.options.cssProps
    		 * @param {Manager} manager
    		 * @param {Boolean} add
    		 */
    		function toggleCssProps(manager, add) {
    		    var element = manager.element;
    		    if (!element.style) {
    		        return;
    		    }
    		    var prop;
    		    each(manager.options.cssProps, function(value, name) {
    		        prop = prefixed(element.style, name);
    		        if (add) {
    		            manager.oldCssProps[prop] = element.style[prop];
    		            element.style[prop] = value;
    		        } else {
    		            element.style[prop] = manager.oldCssProps[prop] || '';
    		        }
    		    });
    		    if (!add) {
    		        manager.oldCssProps = {};
    		    }
    		}

    		/**
    		 * trigger dom event
    		 * @param {String} event
    		 * @param {Object} data
    		 */
    		function triggerDomEvent(event, data) {
    		    var gestureEvent = document.createEvent('Event');
    		    gestureEvent.initEvent(event, true, true);
    		    gestureEvent.gesture = data;
    		    data.target.dispatchEvent(gestureEvent);
    		}

    		assign(Hammer, {
    		    INPUT_START: INPUT_START,
    		    INPUT_MOVE: INPUT_MOVE,
    		    INPUT_END: INPUT_END,
    		    INPUT_CANCEL: INPUT_CANCEL,

    		    STATE_POSSIBLE: STATE_POSSIBLE,
    		    STATE_BEGAN: STATE_BEGAN,
    		    STATE_CHANGED: STATE_CHANGED,
    		    STATE_ENDED: STATE_ENDED,
    		    STATE_RECOGNIZED: STATE_RECOGNIZED,
    		    STATE_CANCELLED: STATE_CANCELLED,
    		    STATE_FAILED: STATE_FAILED,

    		    DIRECTION_NONE: DIRECTION_NONE,
    		    DIRECTION_LEFT: DIRECTION_LEFT,
    		    DIRECTION_RIGHT: DIRECTION_RIGHT,
    		    DIRECTION_UP: DIRECTION_UP,
    		    DIRECTION_DOWN: DIRECTION_DOWN,
    		    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,
    		    DIRECTION_VERTICAL: DIRECTION_VERTICAL,
    		    DIRECTION_ALL: DIRECTION_ALL,

    		    Manager: Manager,
    		    Input: Input,
    		    TouchAction: TouchAction,

    		    TouchInput: TouchInput,
    		    MouseInput: MouseInput,
    		    PointerEventInput: PointerEventInput,
    		    TouchMouseInput: TouchMouseInput,
    		    SingleTouchInput: SingleTouchInput,

    		    Recognizer: Recognizer,
    		    AttrRecognizer: AttrRecognizer,
    		    Tap: TapRecognizer,
    		    Pan: PanRecognizer,
    		    Swipe: SwipeRecognizer,
    		    Pinch: PinchRecognizer,
    		    Rotate: RotateRecognizer,
    		    Press: PressRecognizer,

    		    on: addEventListeners,
    		    off: removeEventListeners,
    		    each: each,
    		    merge: merge,
    		    extend: extend,
    		    assign: assign,
    		    inherit: inherit,
    		    bindFn: bindFn,
    		    prefixed: prefixed
    		});

    		// this prevents errors when Hammer is loaded in the presence of an AMD
    		//  style loader but by script tag, not by the loader.
    		var freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line
    		freeGlobal.Hammer = Hammer;

    		if (module.exports) {
    		    module.exports = Hammer;
    		} else {
    		    window[exportName] = Hammer;
    		}

    		})(window, document, 'Hammer'); 
    	} (hammer));
    	return hammer.exports;
    }

    var hammerExports = requireHammer();
    var Hammer = /*@__PURE__*/getDefaultExportFromCjs(hammerExports);

    var cornerstone$1 = {exports: {}};

    /*! cornerstone-core - 2.6.1 - 2021-11-19 | (c) 2016 Chris Hafey | https://github.com/cornerstonejs/cornerstone */

    var hasRequiredCornerstone;

    function requireCornerstone () {
    	if (hasRequiredCornerstone) return cornerstone$1.exports;
    	hasRequiredCornerstone = 1;
    	(function (module, exports) {
    		(function webpackUniversalModuleDefinition(root, factory) {
    			module.exports = factory();
    		})(window, function() {
    		return /******/ (function(modules) { // webpackBootstrap
    		/******/ 	function hotDisposeChunk(chunkId) {
    		/******/ 		delete installedChunks[chunkId];
    		/******/ 	}
    		/******/ 	var parentHotUpdateCallback = window["webpackHotUpdate"];
    		/******/ 	window["webpackHotUpdate"] = // eslint-disable-next-line no-unused-vars
    		/******/ 	function webpackHotUpdateCallback(chunkId, moreModules) {
    		/******/ 		hotAddUpdateChunk(chunkId, moreModules);
    		/******/ 		if (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);
    		/******/ 	} ;
    		/******/
    		/******/ 	// eslint-disable-next-line no-unused-vars
    		/******/ 	function hotDownloadUpdateChunk(chunkId) {
    		/******/ 		var head = document.getElementsByTagName("head")[0];
    		/******/ 		var script = document.createElement("script");
    		/******/ 		script.charset = "utf-8";
    		/******/ 		script.src = __webpack_require__.p + "" + chunkId + "." + hotCurrentHash + ".hot-update.js";
    		/******/ 		head.appendChild(script);
    		/******/ 	}
    		/******/
    		/******/ 	// eslint-disable-next-line no-unused-vars
    		/******/ 	function hotDownloadManifest(requestTimeout) {
    		/******/ 		requestTimeout = requestTimeout || 10000;
    		/******/ 		return new Promise(function(resolve, reject) {
    		/******/ 			if (typeof XMLHttpRequest === "undefined") {
    		/******/ 				return reject(new Error("No browser support"));
    		/******/ 			}
    		/******/ 			try {
    		/******/ 				var request = new XMLHttpRequest();
    		/******/ 				var requestPath = __webpack_require__.p + "" + hotCurrentHash + ".hot-update.json";
    		/******/ 				request.open("GET", requestPath, true);
    		/******/ 				request.timeout = requestTimeout;
    		/******/ 				request.send(null);
    		/******/ 			} catch (err) {
    		/******/ 				return reject(err);
    		/******/ 			}
    		/******/ 			request.onreadystatechange = function() {
    		/******/ 				if (request.readyState !== 4) return;
    		/******/ 				if (request.status === 0) {
    		/******/ 					// timeout
    		/******/ 					reject(
    		/******/ 						new Error("Manifest request to " + requestPath + " timed out.")
    		/******/ 					);
    		/******/ 				} else if (request.status === 404) {
    		/******/ 					// no update available
    		/******/ 					resolve();
    		/******/ 				} else if (request.status !== 200 && request.status !== 304) {
    		/******/ 					// other failure
    		/******/ 					reject(new Error("Manifest request to " + requestPath + " failed."));
    		/******/ 				} else {
    		/******/ 					// success
    		/******/ 					try {
    		/******/ 						var update = JSON.parse(request.responseText);
    		/******/ 					} catch (e) {
    		/******/ 						reject(e);
    		/******/ 						return;
    		/******/ 					}
    		/******/ 					resolve(update);
    		/******/ 				}
    		/******/ 			};
    		/******/ 		});
    		/******/ 	}
    		/******/
    		/******/ 	var hotApplyOnUpdate = true;
    		/******/ 	// eslint-disable-next-line no-unused-vars
    		/******/ 	var hotCurrentHash = "4d8d88ba53621f59b9a9";
    		/******/ 	var hotRequestTimeout = 10000;
    		/******/ 	var hotCurrentModuleData = {};
    		/******/ 	var hotCurrentChildModule;
    		/******/ 	// eslint-disable-next-line no-unused-vars
    		/******/ 	var hotCurrentParents = [];
    		/******/ 	// eslint-disable-next-line no-unused-vars
    		/******/ 	var hotCurrentParentsTemp = [];
    		/******/
    		/******/ 	// eslint-disable-next-line no-unused-vars
    		/******/ 	function hotCreateRequire(moduleId) {
    		/******/ 		var me = installedModules[moduleId];
    		/******/ 		if (!me) return __webpack_require__;
    		/******/ 		var fn = function(request) {
    		/******/ 			if (me.hot.active) {
    		/******/ 				if (installedModules[request]) {
    		/******/ 					if (installedModules[request].parents.indexOf(moduleId) === -1) {
    		/******/ 						installedModules[request].parents.push(moduleId);
    		/******/ 					}
    		/******/ 				} else {
    		/******/ 					hotCurrentParents = [moduleId];
    		/******/ 					hotCurrentChildModule = request;
    		/******/ 				}
    		/******/ 				if (me.children.indexOf(request) === -1) {
    		/******/ 					me.children.push(request);
    		/******/ 				}
    		/******/ 			} else {
    		/******/ 				console.warn(
    		/******/ 					"[HMR] unexpected require(" +
    		/******/ 						request +
    		/******/ 						") from disposed module " +
    		/******/ 						moduleId
    		/******/ 				);
    		/******/ 				hotCurrentParents = [];
    		/******/ 			}
    		/******/ 			return __webpack_require__(request);
    		/******/ 		};
    		/******/ 		var ObjectFactory = function ObjectFactory(name) {
    		/******/ 			return {
    		/******/ 				configurable: true,
    		/******/ 				enumerable: true,
    		/******/ 				get: function() {
    		/******/ 					return __webpack_require__[name];
    		/******/ 				},
    		/******/ 				set: function(value) {
    		/******/ 					__webpack_require__[name] = value;
    		/******/ 				}
    		/******/ 			};
    		/******/ 		};
    		/******/ 		for (var name in __webpack_require__) {
    		/******/ 			if (
    		/******/ 				Object.prototype.hasOwnProperty.call(__webpack_require__, name) &&
    		/******/ 				name !== "e" &&
    		/******/ 				name !== "t"
    		/******/ 			) {
    		/******/ 				Object.defineProperty(fn, name, ObjectFactory(name));
    		/******/ 			}
    		/******/ 		}
    		/******/ 		fn.e = function(chunkId) {
    		/******/ 			if (hotStatus === "ready") hotSetStatus("prepare");
    		/******/ 			hotChunksLoading++;
    		/******/ 			return __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {
    		/******/ 				finishChunkLoading();
    		/******/ 				throw err;
    		/******/ 			});
    		/******/
    		/******/ 			function finishChunkLoading() {
    		/******/ 				hotChunksLoading--;
    		/******/ 				if (hotStatus === "prepare") {
    		/******/ 					if (!hotWaitingFilesMap[chunkId]) {
    		/******/ 						hotEnsureUpdateChunk(chunkId);
    		/******/ 					}
    		/******/ 					if (hotChunksLoading === 0 && hotWaitingFiles === 0) {
    		/******/ 						hotUpdateDownloaded();
    		/******/ 					}
    		/******/ 				}
    		/******/ 			}
    		/******/ 		};
    		/******/ 		fn.t = function(value, mode) {
    		/******/ 			if (mode & 1) value = fn(value);
    		/******/ 			return __webpack_require__.t(value, mode & -2);
    		/******/ 		};
    		/******/ 		return fn;
    		/******/ 	}
    		/******/
    		/******/ 	// eslint-disable-next-line no-unused-vars
    		/******/ 	function hotCreateModule(moduleId) {
    		/******/ 		var hot = {
    		/******/ 			// private stuff
    		/******/ 			_acceptedDependencies: {},
    		/******/ 			_declinedDependencies: {},
    		/******/ 			_selfAccepted: false,
    		/******/ 			_selfDeclined: false,
    		/******/ 			_disposeHandlers: [],
    		/******/ 			_main: hotCurrentChildModule !== moduleId,
    		/******/
    		/******/ 			// Module API
    		/******/ 			active: true,
    		/******/ 			accept: function(dep, callback) {
    		/******/ 				if (dep === undefined) hot._selfAccepted = true;
    		/******/ 				else if (typeof dep === "function") hot._selfAccepted = dep;
    		/******/ 				else if (typeof dep === "object")
    		/******/ 					for (var i = 0; i < dep.length; i++)
    		/******/ 						hot._acceptedDependencies[dep[i]] = callback || function() {};
    		/******/ 				else hot._acceptedDependencies[dep] = callback || function() {};
    		/******/ 			},
    		/******/ 			decline: function(dep) {
    		/******/ 				if (dep === undefined) hot._selfDeclined = true;
    		/******/ 				else if (typeof dep === "object")
    		/******/ 					for (var i = 0; i < dep.length; i++)
    		/******/ 						hot._declinedDependencies[dep[i]] = true;
    		/******/ 				else hot._declinedDependencies[dep] = true;
    		/******/ 			},
    		/******/ 			dispose: function(callback) {
    		/******/ 				hot._disposeHandlers.push(callback);
    		/******/ 			},
    		/******/ 			addDisposeHandler: function(callback) {
    		/******/ 				hot._disposeHandlers.push(callback);
    		/******/ 			},
    		/******/ 			removeDisposeHandler: function(callback) {
    		/******/ 				var idx = hot._disposeHandlers.indexOf(callback);
    		/******/ 				if (idx >= 0) hot._disposeHandlers.splice(idx, 1);
    		/******/ 			},
    		/******/
    		/******/ 			// Management API
    		/******/ 			check: hotCheck,
    		/******/ 			apply: hotApply,
    		/******/ 			status: function(l) {
    		/******/ 				if (!l) return hotStatus;
    		/******/ 				hotStatusHandlers.push(l);
    		/******/ 			},
    		/******/ 			addStatusHandler: function(l) {
    		/******/ 				hotStatusHandlers.push(l);
    		/******/ 			},
    		/******/ 			removeStatusHandler: function(l) {
    		/******/ 				var idx = hotStatusHandlers.indexOf(l);
    		/******/ 				if (idx >= 0) hotStatusHandlers.splice(idx, 1);
    		/******/ 			},
    		/******/
    		/******/ 			//inherit from previous dispose call
    		/******/ 			data: hotCurrentModuleData[moduleId]
    		/******/ 		};
    		/******/ 		hotCurrentChildModule = undefined;
    		/******/ 		return hot;
    		/******/ 	}
    		/******/
    		/******/ 	var hotStatusHandlers = [];
    		/******/ 	var hotStatus = "idle";
    		/******/
    		/******/ 	function hotSetStatus(newStatus) {
    		/******/ 		hotStatus = newStatus;
    		/******/ 		for (var i = 0; i < hotStatusHandlers.length; i++)
    		/******/ 			hotStatusHandlers[i].call(null, newStatus);
    		/******/ 	}
    		/******/
    		/******/ 	// while downloading
    		/******/ 	var hotWaitingFiles = 0;
    		/******/ 	var hotChunksLoading = 0;
    		/******/ 	var hotWaitingFilesMap = {};
    		/******/ 	var hotRequestedFilesMap = {};
    		/******/ 	var hotAvailableFilesMap = {};
    		/******/ 	var hotDeferred;
    		/******/
    		/******/ 	// The update info
    		/******/ 	var hotUpdate, hotUpdateNewHash;
    		/******/
    		/******/ 	function toModuleId(id) {
    		/******/ 		var isNumber = +id + "" === id;
    		/******/ 		return isNumber ? +id : id;
    		/******/ 	}
    		/******/
    		/******/ 	function hotCheck(apply) {
    		/******/ 		if (hotStatus !== "idle") {
    		/******/ 			throw new Error("check() is only allowed in idle status");
    		/******/ 		}
    		/******/ 		hotApplyOnUpdate = apply;
    		/******/ 		hotSetStatus("check");
    		/******/ 		return hotDownloadManifest(hotRequestTimeout).then(function(update) {
    		/******/ 			if (!update) {
    		/******/ 				hotSetStatus("idle");
    		/******/ 				return null;
    		/******/ 			}
    		/******/ 			hotRequestedFilesMap = {};
    		/******/ 			hotWaitingFilesMap = {};
    		/******/ 			hotAvailableFilesMap = update.c;
    		/******/ 			hotUpdateNewHash = update.h;
    		/******/
    		/******/ 			hotSetStatus("prepare");
    		/******/ 			var promise = new Promise(function(resolve, reject) {
    		/******/ 				hotDeferred = {
    		/******/ 					resolve: resolve,
    		/******/ 					reject: reject
    		/******/ 				};
    		/******/ 			});
    		/******/ 			hotUpdate = {};
    		/******/ 			var chunkId = "cornerstone";
    		/******/ 			// eslint-disable-next-line no-lone-blocks
    		/******/ 			{
    		/******/ 				/*globals chunkId */
    		/******/ 				hotEnsureUpdateChunk(chunkId);
    		/******/ 			}
    		/******/ 			if (
    		/******/ 				hotStatus === "prepare" &&
    		/******/ 				hotChunksLoading === 0 &&
    		/******/ 				hotWaitingFiles === 0
    		/******/ 			) {
    		/******/ 				hotUpdateDownloaded();
    		/******/ 			}
    		/******/ 			return promise;
    		/******/ 		});
    		/******/ 	}
    		/******/
    		/******/ 	// eslint-disable-next-line no-unused-vars
    		/******/ 	function hotAddUpdateChunk(chunkId, moreModules) {
    		/******/ 		if (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])
    		/******/ 			return;
    		/******/ 		hotRequestedFilesMap[chunkId] = false;
    		/******/ 		for (var moduleId in moreModules) {
    		/******/ 			if (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
    		/******/ 				hotUpdate[moduleId] = moreModules[moduleId];
    		/******/ 			}
    		/******/ 		}
    		/******/ 		if (--hotWaitingFiles === 0 && hotChunksLoading === 0) {
    		/******/ 			hotUpdateDownloaded();
    		/******/ 		}
    		/******/ 	}
    		/******/
    		/******/ 	function hotEnsureUpdateChunk(chunkId) {
    		/******/ 		if (!hotAvailableFilesMap[chunkId]) {
    		/******/ 			hotWaitingFilesMap[chunkId] = true;
    		/******/ 		} else {
    		/******/ 			hotRequestedFilesMap[chunkId] = true;
    		/******/ 			hotWaitingFiles++;
    		/******/ 			hotDownloadUpdateChunk(chunkId);
    		/******/ 		}
    		/******/ 	}
    		/******/
    		/******/ 	function hotUpdateDownloaded() {
    		/******/ 		hotSetStatus("ready");
    		/******/ 		var deferred = hotDeferred;
    		/******/ 		hotDeferred = null;
    		/******/ 		if (!deferred) return;
    		/******/ 		if (hotApplyOnUpdate) {
    		/******/ 			// Wrap deferred object in Promise to mark it as a well-handled Promise to
    		/******/ 			// avoid triggering uncaught exception warning in Chrome.
    		/******/ 			// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666
    		/******/ 			Promise.resolve()
    		/******/ 				.then(function() {
    		/******/ 					return hotApply(hotApplyOnUpdate);
    		/******/ 				})
    		/******/ 				.then(
    		/******/ 					function(result) {
    		/******/ 						deferred.resolve(result);
    		/******/ 					},
    		/******/ 					function(err) {
    		/******/ 						deferred.reject(err);
    		/******/ 					}
    		/******/ 				);
    		/******/ 		} else {
    		/******/ 			var outdatedModules = [];
    		/******/ 			for (var id in hotUpdate) {
    		/******/ 				if (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {
    		/******/ 					outdatedModules.push(toModuleId(id));
    		/******/ 				}
    		/******/ 			}
    		/******/ 			deferred.resolve(outdatedModules);
    		/******/ 		}
    		/******/ 	}
    		/******/
    		/******/ 	function hotApply(options) {
    		/******/ 		if (hotStatus !== "ready")
    		/******/ 			throw new Error("apply() is only allowed in ready status");
    		/******/ 		options = options || {};
    		/******/
    		/******/ 		var cb;
    		/******/ 		var i;
    		/******/ 		var j;
    		/******/ 		var module;
    		/******/ 		var moduleId;
    		/******/
    		/******/ 		function getAffectedStuff(updateModuleId) {
    		/******/ 			var outdatedModules = [updateModuleId];
    		/******/ 			var outdatedDependencies = {};
    		/******/
    		/******/ 			var queue = outdatedModules.slice().map(function(id) {
    		/******/ 				return {
    		/******/ 					chain: [id],
    		/******/ 					id: id
    		/******/ 				};
    		/******/ 			});
    		/******/ 			while (queue.length > 0) {
    		/******/ 				var queueItem = queue.pop();
    		/******/ 				var moduleId = queueItem.id;
    		/******/ 				var chain = queueItem.chain;
    		/******/ 				module = installedModules[moduleId];
    		/******/ 				if (!module || module.hot._selfAccepted) continue;
    		/******/ 				if (module.hot._selfDeclined) {
    		/******/ 					return {
    		/******/ 						type: "self-declined",
    		/******/ 						chain: chain,
    		/******/ 						moduleId: moduleId
    		/******/ 					};
    		/******/ 				}
    		/******/ 				if (module.hot._main) {
    		/******/ 					return {
    		/******/ 						type: "unaccepted",
    		/******/ 						chain: chain,
    		/******/ 						moduleId: moduleId
    		/******/ 					};
    		/******/ 				}
    		/******/ 				for (var i = 0; i < module.parents.length; i++) {
    		/******/ 					var parentId = module.parents[i];
    		/******/ 					var parent = installedModules[parentId];
    		/******/ 					if (!parent) continue;
    		/******/ 					if (parent.hot._declinedDependencies[moduleId]) {
    		/******/ 						return {
    		/******/ 							type: "declined",
    		/******/ 							chain: chain.concat([parentId]),
    		/******/ 							moduleId: moduleId,
    		/******/ 							parentId: parentId
    		/******/ 						};
    		/******/ 					}
    		/******/ 					if (outdatedModules.indexOf(parentId) !== -1) continue;
    		/******/ 					if (parent.hot._acceptedDependencies[moduleId]) {
    		/******/ 						if (!outdatedDependencies[parentId])
    		/******/ 							outdatedDependencies[parentId] = [];
    		/******/ 						addAllToSet(outdatedDependencies[parentId], [moduleId]);
    		/******/ 						continue;
    		/******/ 					}
    		/******/ 					delete outdatedDependencies[parentId];
    		/******/ 					outdatedModules.push(parentId);
    		/******/ 					queue.push({
    		/******/ 						chain: chain.concat([parentId]),
    		/******/ 						id: parentId
    		/******/ 					});
    		/******/ 				}
    		/******/ 			}
    		/******/
    		/******/ 			return {
    		/******/ 				type: "accepted",
    		/******/ 				moduleId: updateModuleId,
    		/******/ 				outdatedModules: outdatedModules,
    		/******/ 				outdatedDependencies: outdatedDependencies
    		/******/ 			};
    		/******/ 		}
    		/******/
    		/******/ 		function addAllToSet(a, b) {
    		/******/ 			for (var i = 0; i < b.length; i++) {
    		/******/ 				var item = b[i];
    		/******/ 				if (a.indexOf(item) === -1) a.push(item);
    		/******/ 			}
    		/******/ 		}
    		/******/
    		/******/ 		// at begin all updates modules are outdated
    		/******/ 		// the "outdated" status can propagate to parents if they don't accept the children
    		/******/ 		var outdatedDependencies = {};
    		/******/ 		var outdatedModules = [];
    		/******/ 		var appliedUpdate = {};
    		/******/
    		/******/ 		var warnUnexpectedRequire = function warnUnexpectedRequire() {
    		/******/ 			console.warn(
    		/******/ 				"[HMR] unexpected require(" + result.moduleId + ") to disposed module"
    		/******/ 			);
    		/******/ 		};
    		/******/
    		/******/ 		for (var id in hotUpdate) {
    		/******/ 			if (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {
    		/******/ 				moduleId = toModuleId(id);
    		/******/ 				/** @type {TODO} */
    		/******/ 				var result;
    		/******/ 				if (hotUpdate[id]) {
    		/******/ 					result = getAffectedStuff(moduleId);
    		/******/ 				} else {
    		/******/ 					result = {
    		/******/ 						type: "disposed",
    		/******/ 						moduleId: id
    		/******/ 					};
    		/******/ 				}
    		/******/ 				/** @type {Error|false} */
    		/******/ 				var abortError = false;
    		/******/ 				var doApply = false;
    		/******/ 				var doDispose = false;
    		/******/ 				var chainInfo = "";
    		/******/ 				if (result.chain) {
    		/******/ 					chainInfo = "\nUpdate propagation: " + result.chain.join(" -> ");
    		/******/ 				}
    		/******/ 				switch (result.type) {
    		/******/ 					case "self-declined":
    		/******/ 						if (options.onDeclined) options.onDeclined(result);
    		/******/ 						if (!options.ignoreDeclined)
    		/******/ 							abortError = new Error(
    		/******/ 								"Aborted because of self decline: " +
    		/******/ 									result.moduleId +
    		/******/ 									chainInfo
    		/******/ 							);
    		/******/ 						break;
    		/******/ 					case "declined":
    		/******/ 						if (options.onDeclined) options.onDeclined(result);
    		/******/ 						if (!options.ignoreDeclined)
    		/******/ 							abortError = new Error(
    		/******/ 								"Aborted because of declined dependency: " +
    		/******/ 									result.moduleId +
    		/******/ 									" in " +
    		/******/ 									result.parentId +
    		/******/ 									chainInfo
    		/******/ 							);
    		/******/ 						break;
    		/******/ 					case "unaccepted":
    		/******/ 						if (options.onUnaccepted) options.onUnaccepted(result);
    		/******/ 						if (!options.ignoreUnaccepted)
    		/******/ 							abortError = new Error(
    		/******/ 								"Aborted because " + moduleId + " is not accepted" + chainInfo
    		/******/ 							);
    		/******/ 						break;
    		/******/ 					case "accepted":
    		/******/ 						if (options.onAccepted) options.onAccepted(result);
    		/******/ 						doApply = true;
    		/******/ 						break;
    		/******/ 					case "disposed":
    		/******/ 						if (options.onDisposed) options.onDisposed(result);
    		/******/ 						doDispose = true;
    		/******/ 						break;
    		/******/ 					default:
    		/******/ 						throw new Error("Unexception type " + result.type);
    		/******/ 				}
    		/******/ 				if (abortError) {
    		/******/ 					hotSetStatus("abort");
    		/******/ 					return Promise.reject(abortError);
    		/******/ 				}
    		/******/ 				if (doApply) {
    		/******/ 					appliedUpdate[moduleId] = hotUpdate[moduleId];
    		/******/ 					addAllToSet(outdatedModules, result.outdatedModules);
    		/******/ 					for (moduleId in result.outdatedDependencies) {
    		/******/ 						if (
    		/******/ 							Object.prototype.hasOwnProperty.call(
    		/******/ 								result.outdatedDependencies,
    		/******/ 								moduleId
    		/******/ 							)
    		/******/ 						) {
    		/******/ 							if (!outdatedDependencies[moduleId])
    		/******/ 								outdatedDependencies[moduleId] = [];
    		/******/ 							addAllToSet(
    		/******/ 								outdatedDependencies[moduleId],
    		/******/ 								result.outdatedDependencies[moduleId]
    		/******/ 							);
    		/******/ 						}
    		/******/ 					}
    		/******/ 				}
    		/******/ 				if (doDispose) {
    		/******/ 					addAllToSet(outdatedModules, [result.moduleId]);
    		/******/ 					appliedUpdate[moduleId] = warnUnexpectedRequire;
    		/******/ 				}
    		/******/ 			}
    		/******/ 		}
    		/******/
    		/******/ 		// Store self accepted outdated modules to require them later by the module system
    		/******/ 		var outdatedSelfAcceptedModules = [];
    		/******/ 		for (i = 0; i < outdatedModules.length; i++) {
    		/******/ 			moduleId = outdatedModules[i];
    		/******/ 			if (
    		/******/ 				installedModules[moduleId] &&
    		/******/ 				installedModules[moduleId].hot._selfAccepted
    		/******/ 			)
    		/******/ 				outdatedSelfAcceptedModules.push({
    		/******/ 					module: moduleId,
    		/******/ 					errorHandler: installedModules[moduleId].hot._selfAccepted
    		/******/ 				});
    		/******/ 		}
    		/******/
    		/******/ 		// Now in "dispose" phase
    		/******/ 		hotSetStatus("dispose");
    		/******/ 		Object.keys(hotAvailableFilesMap).forEach(function(chunkId) {
    		/******/ 			if (hotAvailableFilesMap[chunkId] === false) {
    		/******/ 				hotDisposeChunk(chunkId);
    		/******/ 			}
    		/******/ 		});
    		/******/
    		/******/ 		var idx;
    		/******/ 		var queue = outdatedModules.slice();
    		/******/ 		while (queue.length > 0) {
    		/******/ 			moduleId = queue.pop();
    		/******/ 			module = installedModules[moduleId];
    		/******/ 			if (!module) continue;
    		/******/
    		/******/ 			var data = {};
    		/******/
    		/******/ 			// Call dispose handlers
    		/******/ 			var disposeHandlers = module.hot._disposeHandlers;
    		/******/ 			for (j = 0; j < disposeHandlers.length; j++) {
    		/******/ 				cb = disposeHandlers[j];
    		/******/ 				cb(data);
    		/******/ 			}
    		/******/ 			hotCurrentModuleData[moduleId] = data;
    		/******/
    		/******/ 			// disable module (this disables requires from this module)
    		/******/ 			module.hot.active = false;
    		/******/
    		/******/ 			// remove module from cache
    		/******/ 			delete installedModules[moduleId];
    		/******/
    		/******/ 			// when disposing there is no need to call dispose handler
    		/******/ 			delete outdatedDependencies[moduleId];
    		/******/
    		/******/ 			// remove "parents" references from all children
    		/******/ 			for (j = 0; j < module.children.length; j++) {
    		/******/ 				var child = installedModules[module.children[j]];
    		/******/ 				if (!child) continue;
    		/******/ 				idx = child.parents.indexOf(moduleId);
    		/******/ 				if (idx >= 0) {
    		/******/ 					child.parents.splice(idx, 1);
    		/******/ 				}
    		/******/ 			}
    		/******/ 		}
    		/******/
    		/******/ 		// remove outdated dependency from module children
    		/******/ 		var dependency;
    		/******/ 		var moduleOutdatedDependencies;
    		/******/ 		for (moduleId in outdatedDependencies) {
    		/******/ 			if (
    		/******/ 				Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)
    		/******/ 			) {
    		/******/ 				module = installedModules[moduleId];
    		/******/ 				if (module) {
    		/******/ 					moduleOutdatedDependencies = outdatedDependencies[moduleId];
    		/******/ 					for (j = 0; j < moduleOutdatedDependencies.length; j++) {
    		/******/ 						dependency = moduleOutdatedDependencies[j];
    		/******/ 						idx = module.children.indexOf(dependency);
    		/******/ 						if (idx >= 0) module.children.splice(idx, 1);
    		/******/ 					}
    		/******/ 				}
    		/******/ 			}
    		/******/ 		}
    		/******/
    		/******/ 		// Not in "apply" phase
    		/******/ 		hotSetStatus("apply");
    		/******/
    		/******/ 		hotCurrentHash = hotUpdateNewHash;
    		/******/
    		/******/ 		// insert new code
    		/******/ 		for (moduleId in appliedUpdate) {
    		/******/ 			if (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {
    		/******/ 				modules[moduleId] = appliedUpdate[moduleId];
    		/******/ 			}
    		/******/ 		}
    		/******/
    		/******/ 		// call accept handlers
    		/******/ 		var error = null;
    		/******/ 		for (moduleId in outdatedDependencies) {
    		/******/ 			if (
    		/******/ 				Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)
    		/******/ 			) {
    		/******/ 				module = installedModules[moduleId];
    		/******/ 				if (module) {
    		/******/ 					moduleOutdatedDependencies = outdatedDependencies[moduleId];
    		/******/ 					var callbacks = [];
    		/******/ 					for (i = 0; i < moduleOutdatedDependencies.length; i++) {
    		/******/ 						dependency = moduleOutdatedDependencies[i];
    		/******/ 						cb = module.hot._acceptedDependencies[dependency];
    		/******/ 						if (cb) {
    		/******/ 							if (callbacks.indexOf(cb) !== -1) continue;
    		/******/ 							callbacks.push(cb);
    		/******/ 						}
    		/******/ 					}
    		/******/ 					for (i = 0; i < callbacks.length; i++) {
    		/******/ 						cb = callbacks[i];
    		/******/ 						try {
    		/******/ 							cb(moduleOutdatedDependencies);
    		/******/ 						} catch (err) {
    		/******/ 							if (options.onErrored) {
    		/******/ 								options.onErrored({
    		/******/ 									type: "accept-errored",
    		/******/ 									moduleId: moduleId,
    		/******/ 									dependencyId: moduleOutdatedDependencies[i],
    		/******/ 									error: err
    		/******/ 								});
    		/******/ 							}
    		/******/ 							if (!options.ignoreErrored) {
    		/******/ 								if (!error) error = err;
    		/******/ 							}
    		/******/ 						}
    		/******/ 					}
    		/******/ 				}
    		/******/ 			}
    		/******/ 		}
    		/******/
    		/******/ 		// Load self accepted modules
    		/******/ 		for (i = 0; i < outdatedSelfAcceptedModules.length; i++) {
    		/******/ 			var item = outdatedSelfAcceptedModules[i];
    		/******/ 			moduleId = item.module;
    		/******/ 			hotCurrentParents = [moduleId];
    		/******/ 			try {
    		/******/ 				__webpack_require__(moduleId);
    		/******/ 			} catch (err) {
    		/******/ 				if (typeof item.errorHandler === "function") {
    		/******/ 					try {
    		/******/ 						item.errorHandler(err);
    		/******/ 					} catch (err2) {
    		/******/ 						if (options.onErrored) {
    		/******/ 							options.onErrored({
    		/******/ 								type: "self-accept-error-handler-errored",
    		/******/ 								moduleId: moduleId,
    		/******/ 								error: err2,
    		/******/ 								originalError: err
    		/******/ 							});
    		/******/ 						}
    		/******/ 						if (!options.ignoreErrored) {
    		/******/ 							if (!error) error = err2;
    		/******/ 						}
    		/******/ 						if (!error) error = err;
    		/******/ 					}
    		/******/ 				} else {
    		/******/ 					if (options.onErrored) {
    		/******/ 						options.onErrored({
    		/******/ 							type: "self-accept-errored",
    		/******/ 							moduleId: moduleId,
    		/******/ 							error: err
    		/******/ 						});
    		/******/ 					}
    		/******/ 					if (!options.ignoreErrored) {
    		/******/ 						if (!error) error = err;
    		/******/ 					}
    		/******/ 				}
    		/******/ 			}
    		/******/ 		}
    		/******/
    		/******/ 		// handle errors in accept handlers and self accepted module load
    		/******/ 		if (error) {
    		/******/ 			hotSetStatus("fail");
    		/******/ 			return Promise.reject(error);
    		/******/ 		}
    		/******/
    		/******/ 		hotSetStatus("idle");
    		/******/ 		return new Promise(function(resolve) {
    		/******/ 			resolve(outdatedModules);
    		/******/ 		});
    		/******/ 	}
    		/******/
    		/******/ 	// The module cache
    		/******/ 	var installedModules = {};
    		/******/
    		/******/ 	// The require function
    		/******/ 	function __webpack_require__(moduleId) {
    		/******/
    		/******/ 		// Check if module is in cache
    		/******/ 		if(installedModules[moduleId]) {
    		/******/ 			return installedModules[moduleId].exports;
    		/******/ 		}
    		/******/ 		// Create a new module (and put it into the cache)
    		/******/ 		var module = installedModules[moduleId] = {
    		/******/ 			i: moduleId,
    		/******/ 			l: false,
    		/******/ 			exports: {},
    		/******/ 			hot: hotCreateModule(moduleId),
    		/******/ 			parents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),
    		/******/ 			children: []
    		/******/ 		};
    		/******/
    		/******/ 		// Execute the module function
    		/******/ 		modules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));
    		/******/
    		/******/ 		// Flag the module as loaded
    		/******/ 		module.l = true;
    		/******/
    		/******/ 		// Return the exports of the module
    		/******/ 		return module.exports;
    		/******/ 	}
    		/******/
    		/******/
    		/******/ 	// expose the modules object (__webpack_modules__)
    		/******/ 	__webpack_require__.m = modules;
    		/******/
    		/******/ 	// expose the module cache
    		/******/ 	__webpack_require__.c = installedModules;
    		/******/
    		/******/ 	// define getter function for harmony exports
    		/******/ 	__webpack_require__.d = function(exports, name, getter) {
    		/******/ 		if(!__webpack_require__.o(exports, name)) {
    		/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
    		/******/ 		}
    		/******/ 	};
    		/******/
    		/******/ 	// define __esModule on exports
    		/******/ 	__webpack_require__.r = function(exports) {
    		/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
    		/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
    		/******/ 		}
    		/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
    		/******/ 	};
    		/******/
    		/******/ 	// create a fake namespace object
    		/******/ 	// mode & 1: value is a module id, require it
    		/******/ 	// mode & 2: merge all properties of value into the ns
    		/******/ 	// mode & 4: return value when already ns object
    		/******/ 	// mode & 8|1: behave like require
    		/******/ 	__webpack_require__.t = function(value, mode) {
    		/******/ 		if(mode & 1) value = __webpack_require__(value);
    		/******/ 		if(mode & 8) return value;
    		/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
    		/******/ 		var ns = Object.create(null);
    		/******/ 		__webpack_require__.r(ns);
    		/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
    		/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
    		/******/ 		return ns;
    		/******/ 	};
    		/******/
    		/******/ 	// getDefaultExport function for compatibility with non-harmony modules
    		/******/ 	__webpack_require__.n = function(module) {
    		/******/ 		var getter = module && module.__esModule ?
    		/******/ 			function getDefault() { return module['default']; } :
    		/******/ 			function getModuleExports() { return module; };
    		/******/ 		__webpack_require__.d(getter, 'a', getter);
    		/******/ 		return getter;
    		/******/ 	};
    		/******/
    		/******/ 	// Object.prototype.hasOwnProperty.call
    		/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
    		/******/
    		/******/ 	// __webpack_public_path__
    		/******/ 	__webpack_require__.p = "";
    		/******/
    		/******/ 	// __webpack_hash__
    		/******/ 	__webpack_require__.h = function() { return hotCurrentHash; };
    		/******/
    		/******/
    		/******/ 	// Load entry module and return exports
    		/******/ 	return hotCreateRequire("./index.js")(__webpack_require__.s = "./index.js");
    		/******/ })
    		/************************************************************************/
    		/******/ ({

    		/***/ "./canvasToPixel.js":
    		/*!**************************!*\
    		  !*** ./canvasToPixel.js ***!
    		  \**************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enabledElements.js */ "./enabledElements.js");
    		/* harmony import */ var _internal_getTransform_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/getTransform.js */ "./internal/getTransform.js");


    		/**
    		 * Converts a point in the canvas coordinate system to the pixel coordinate system
    		 * system.  This can be used to reset tools' image coordinates after modifications
    		 * have been made in canvas space (e.g. moving a tool by a few cm, independent of
    		 * image resolution).
    		 *
    		 * @param {HTMLElement} element The Cornerstone element within which the input point lies
    		 * @param {{x: Number, y: Number}} pt The input point in the canvas coordinate system
    		 *
    		 * @returns {{x: Number, y: Number}} The transformed point in the pixel coordinate system
    		 * @memberof PixelCoordinateSystem
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (element, pt) {
    		  var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElement"])(element);
    		  var transform = Object(_internal_getTransform_js__WEBPACK_IMPORTED_MODULE_1__["default"])(enabledElement);
    		  transform.invert();
    		  return transform.transformPoint(pt.x, pt.y);
    		});

    		/***/ }),

    		/***/ "./colors/colormap.js":
    		/*!****************************!*\
    		  !*** ./colors/colormap.js ***!
    		  \****************************/
    		/*! exports provided: getColormapsList, getColormap */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getColormapsList", function() { return getColormapsList; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getColormap", function() { return getColormap; });
    		/* harmony import */ var _lookupTable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lookupTable.js */ "./colors/lookupTable.js");

    		var COLOR_TRANSPARENT = [0, 0, 0, 0]; // Colormaps
    		//
    		// Hot Iron, PET, Hot Metal Blue and PET 20 Step are color palettes
    		// Defined by the DICOM standard
    		// http://dicom.nema.org/dicom/2013/output/chtml/part06/chapter_B.html
    		//
    		// All Linear Segmented Colormaps were copied from matplotlib
    		// https://github.com/stefanv/matplotlib/blob/master/lib/matplotlib/_cm.py

    		var colormapsData = {
    		  hotIron: {
    		    name: 'Hot Iron',
    		    numOfColors: 256,
    		    colors: [[0, 0, 0, 255], [2, 0, 0, 255], [4, 0, 0, 255], [6, 0, 0, 255], [8, 0, 0, 255], [10, 0, 0, 255], [12, 0, 0, 255], [14, 0, 0, 255], [16, 0, 0, 255], [18, 0, 0, 255], [20, 0, 0, 255], [22, 0, 0, 255], [24, 0, 0, 255], [26, 0, 0, 255], [28, 0, 0, 255], [30, 0, 0, 255], [32, 0, 0, 255], [34, 0, 0, 255], [36, 0, 0, 255], [38, 0, 0, 255], [40, 0, 0, 255], [42, 0, 0, 255], [44, 0, 0, 255], [46, 0, 0, 255], [48, 0, 0, 255], [50, 0, 0, 255], [52, 0, 0, 255], [54, 0, 0, 255], [56, 0, 0, 255], [58, 0, 0, 255], [60, 0, 0, 255], [62, 0, 0, 255], [64, 0, 0, 255], [66, 0, 0, 255], [68, 0, 0, 255], [70, 0, 0, 255], [72, 0, 0, 255], [74, 0, 0, 255], [76, 0, 0, 255], [78, 0, 0, 255], [80, 0, 0, 255], [82, 0, 0, 255], [84, 0, 0, 255], [86, 0, 0, 255], [88, 0, 0, 255], [90, 0, 0, 255], [92, 0, 0, 255], [94, 0, 0, 255], [96, 0, 0, 255], [98, 0, 0, 255], [100, 0, 0, 255], [102, 0, 0, 255], [104, 0, 0, 255], [106, 0, 0, 255], [108, 0, 0, 255], [110, 0, 0, 255], [112, 0, 0, 255], [114, 0, 0, 255], [116, 0, 0, 255], [118, 0, 0, 255], [120, 0, 0, 255], [122, 0, 0, 255], [124, 0, 0, 255], [126, 0, 0, 255], [128, 0, 0, 255], [130, 0, 0, 255], [132, 0, 0, 255], [134, 0, 0, 255], [136, 0, 0, 255], [138, 0, 0, 255], [140, 0, 0, 255], [142, 0, 0, 255], [144, 0, 0, 255], [146, 0, 0, 255], [148, 0, 0, 255], [150, 0, 0, 255], [152, 0, 0, 255], [154, 0, 0, 255], [156, 0, 0, 255], [158, 0, 0, 255], [160, 0, 0, 255], [162, 0, 0, 255], [164, 0, 0, 255], [166, 0, 0, 255], [168, 0, 0, 255], [170, 0, 0, 255], [172, 0, 0, 255], [174, 0, 0, 255], [176, 0, 0, 255], [178, 0, 0, 255], [180, 0, 0, 255], [182, 0, 0, 255], [184, 0, 0, 255], [186, 0, 0, 255], [188, 0, 0, 255], [190, 0, 0, 255], [192, 0, 0, 255], [194, 0, 0, 255], [196, 0, 0, 255], [198, 0, 0, 255], [200, 0, 0, 255], [202, 0, 0, 255], [204, 0, 0, 255], [206, 0, 0, 255], [208, 0, 0, 255], [210, 0, 0, 255], [212, 0, 0, 255], [214, 0, 0, 255], [216, 0, 0, 255], [218, 0, 0, 255], [220, 0, 0, 255], [222, 0, 0, 255], [224, 0, 0, 255], [226, 0, 0, 255], [228, 0, 0, 255], [230, 0, 0, 255], [232, 0, 0, 255], [234, 0, 0, 255], [236, 0, 0, 255], [238, 0, 0, 255], [240, 0, 0, 255], [242, 0, 0, 255], [244, 0, 0, 255], [246, 0, 0, 255], [248, 0, 0, 255], [250, 0, 0, 255], [252, 0, 0, 255], [254, 0, 0, 255], [255, 0, 0, 255], [255, 2, 0, 255], [255, 4, 0, 255], [255, 6, 0, 255], [255, 8, 0, 255], [255, 10, 0, 255], [255, 12, 0, 255], [255, 14, 0, 255], [255, 16, 0, 255], [255, 18, 0, 255], [255, 20, 0, 255], [255, 22, 0, 255], [255, 24, 0, 255], [255, 26, 0, 255], [255, 28, 0, 255], [255, 30, 0, 255], [255, 32, 0, 255], [255, 34, 0, 255], [255, 36, 0, 255], [255, 38, 0, 255], [255, 40, 0, 255], [255, 42, 0, 255], [255, 44, 0, 255], [255, 46, 0, 255], [255, 48, 0, 255], [255, 50, 0, 255], [255, 52, 0, 255], [255, 54, 0, 255], [255, 56, 0, 255], [255, 58, 0, 255], [255, 60, 0, 255], [255, 62, 0, 255], [255, 64, 0, 255], [255, 66, 0, 255], [255, 68, 0, 255], [255, 70, 0, 255], [255, 72, 0, 255], [255, 74, 0, 255], [255, 76, 0, 255], [255, 78, 0, 255], [255, 80, 0, 255], [255, 82, 0, 255], [255, 84, 0, 255], [255, 86, 0, 255], [255, 88, 0, 255], [255, 90, 0, 255], [255, 92, 0, 255], [255, 94, 0, 255], [255, 96, 0, 255], [255, 98, 0, 255], [255, 100, 0, 255], [255, 102, 0, 255], [255, 104, 0, 255], [255, 106, 0, 255], [255, 108, 0, 255], [255, 110, 0, 255], [255, 112, 0, 255], [255, 114, 0, 255], [255, 116, 0, 255], [255, 118, 0, 255], [255, 120, 0, 255], [255, 122, 0, 255], [255, 124, 0, 255], [255, 126, 0, 255], [255, 128, 4, 255], [255, 130, 8, 255], [255, 132, 12, 255], [255, 134, 16, 255], [255, 136, 20, 255], [255, 138, 24, 255], [255, 140, 28, 255], [255, 142, 32, 255], [255, 144, 36, 255], [255, 146, 40, 255], [255, 148, 44, 255], [255, 150, 48, 255], [255, 152, 52, 255], [255, 154, 56, 255], [255, 156, 60, 255], [255, 158, 64, 255], [255, 160, 68, 255], [255, 162, 72, 255], [255, 164, 76, 255], [255, 166, 80, 255], [255, 168, 84, 255], [255, 170, 88, 255], [255, 172, 92, 255], [255, 174, 96, 255], [255, 176, 100, 255], [255, 178, 104, 255], [255, 180, 108, 255], [255, 182, 112, 255], [255, 184, 116, 255], [255, 186, 120, 255], [255, 188, 124, 255], [255, 190, 128, 255], [255, 192, 132, 255], [255, 194, 136, 255], [255, 196, 140, 255], [255, 198, 144, 255], [255, 200, 148, 255], [255, 202, 152, 255], [255, 204, 156, 255], [255, 206, 160, 255], [255, 208, 164, 255], [255, 210, 168, 255], [255, 212, 172, 255], [255, 214, 176, 255], [255, 216, 180, 255], [255, 218, 184, 255], [255, 220, 188, 255], [255, 222, 192, 255], [255, 224, 196, 255], [255, 226, 200, 255], [255, 228, 204, 255], [255, 230, 208, 255], [255, 232, 212, 255], [255, 234, 216, 255], [255, 236, 220, 255], [255, 238, 224, 255], [255, 240, 228, 255], [255, 242, 232, 255], [255, 244, 236, 255], [255, 246, 240, 255], [255, 248, 244, 255], [255, 250, 248, 255], [255, 252, 252, 255], [255, 255, 255, 255]]
    		  },
    		  pet: {
    		    name: 'PET',
    		    numColors: 256,
    		    colors: [[0, 0, 0, 255], [0, 2, 1, 255], [0, 4, 3, 255], [0, 6, 5, 255], [0, 8, 7, 255], [0, 10, 9, 255], [0, 12, 11, 255], [0, 14, 13, 255], [0, 16, 15, 255], [0, 18, 17, 255], [0, 20, 19, 255], [0, 22, 21, 255], [0, 24, 23, 255], [0, 26, 25, 255], [0, 28, 27, 255], [0, 30, 29, 255], [0, 32, 31, 255], [0, 34, 33, 255], [0, 36, 35, 255], [0, 38, 37, 255], [0, 40, 39, 255], [0, 42, 41, 255], [0, 44, 43, 255], [0, 46, 45, 255], [0, 48, 47, 255], [0, 50, 49, 255], [0, 52, 51, 255], [0, 54, 53, 255], [0, 56, 55, 255], [0, 58, 57, 255], [0, 60, 59, 255], [0, 62, 61, 255], [0, 65, 63, 255], [0, 67, 65, 255], [0, 69, 67, 255], [0, 71, 69, 255], [0, 73, 71, 255], [0, 75, 73, 255], [0, 77, 75, 255], [0, 79, 77, 255], [0, 81, 79, 255], [0, 83, 81, 255], [0, 85, 83, 255], [0, 87, 85, 255], [0, 89, 87, 255], [0, 91, 89, 255], [0, 93, 91, 255], [0, 95, 93, 255], [0, 97, 95, 255], [0, 99, 97, 255], [0, 101, 99, 255], [0, 103, 101, 255], [0, 105, 103, 255], [0, 107, 105, 255], [0, 109, 107, 255], [0, 111, 109, 255], [0, 113, 111, 255], [0, 115, 113, 255], [0, 117, 115, 255], [0, 119, 117, 255], [0, 121, 119, 255], [0, 123, 121, 255], [0, 125, 123, 255], [0, 128, 125, 255], [1, 126, 127, 255], [3, 124, 129, 255], [5, 122, 131, 255], [7, 120, 133, 255], [9, 118, 135, 255], [11, 116, 137, 255], [13, 114, 139, 255], [15, 112, 141, 255], [17, 110, 143, 255], [19, 108, 145, 255], [21, 106, 147, 255], [23, 104, 149, 255], [25, 102, 151, 255], [27, 100, 153, 255], [29, 98, 155, 255], [31, 96, 157, 255], [33, 94, 159, 255], [35, 92, 161, 255], [37, 90, 163, 255], [39, 88, 165, 255], [41, 86, 167, 255], [43, 84, 169, 255], [45, 82, 171, 255], [47, 80, 173, 255], [49, 78, 175, 255], [51, 76, 177, 255], [53, 74, 179, 255], [55, 72, 181, 255], [57, 70, 183, 255], [59, 68, 185, 255], [61, 66, 187, 255], [63, 64, 189, 255], [65, 63, 191, 255], [67, 61, 193, 255], [69, 59, 195, 255], [71, 57, 197, 255], [73, 55, 199, 255], [75, 53, 201, 255], [77, 51, 203, 255], [79, 49, 205, 255], [81, 47, 207, 255], [83, 45, 209, 255], [85, 43, 211, 255], [86, 41, 213, 255], [88, 39, 215, 255], [90, 37, 217, 255], [92, 35, 219, 255], [94, 33, 221, 255], [96, 31, 223, 255], [98, 29, 225, 255], [100, 27, 227, 255], [102, 25, 229, 255], [104, 23, 231, 255], [106, 21, 233, 255], [108, 19, 235, 255], [110, 17, 237, 255], [112, 15, 239, 255], [114, 13, 241, 255], [116, 11, 243, 255], [118, 9, 245, 255], [120, 7, 247, 255], [122, 5, 249, 255], [124, 3, 251, 255], [126, 1, 253, 255], [128, 0, 255, 255], [130, 2, 252, 255], [132, 4, 248, 255], [134, 6, 244, 255], [136, 8, 240, 255], [138, 10, 236, 255], [140, 12, 232, 255], [142, 14, 228, 255], [144, 16, 224, 255], [146, 18, 220, 255], [148, 20, 216, 255], [150, 22, 212, 255], [152, 24, 208, 255], [154, 26, 204, 255], [156, 28, 200, 255], [158, 30, 196, 255], [160, 32, 192, 255], [162, 34, 188, 255], [164, 36, 184, 255], [166, 38, 180, 255], [168, 40, 176, 255], [170, 42, 172, 255], [171, 44, 168, 255], [173, 46, 164, 255], [175, 48, 160, 255], [177, 50, 156, 255], [179, 52, 152, 255], [181, 54, 148, 255], [183, 56, 144, 255], [185, 58, 140, 255], [187, 60, 136, 255], [189, 62, 132, 255], [191, 64, 128, 255], [193, 66, 124, 255], [195, 68, 120, 255], [197, 70, 116, 255], [199, 72, 112, 255], [201, 74, 108, 255], [203, 76, 104, 255], [205, 78, 100, 255], [207, 80, 96, 255], [209, 82, 92, 255], [211, 84, 88, 255], [213, 86, 84, 255], [215, 88, 80, 255], [217, 90, 76, 255], [219, 92, 72, 255], [221, 94, 68, 255], [223, 96, 64, 255], [225, 98, 60, 255], [227, 100, 56, 255], [229, 102, 52, 255], [231, 104, 48, 255], [233, 106, 44, 255], [235, 108, 40, 255], [237, 110, 36, 255], [239, 112, 32, 255], [241, 114, 28, 255], [243, 116, 24, 255], [245, 118, 20, 255], [247, 120, 16, 255], [249, 122, 12, 255], [251, 124, 8, 255], [253, 126, 4, 255], [255, 128, 0, 255], [255, 130, 4, 255], [255, 132, 8, 255], [255, 134, 12, 255], [255, 136, 16, 255], [255, 138, 20, 255], [255, 140, 24, 255], [255, 142, 28, 255], [255, 144, 32, 255], [255, 146, 36, 255], [255, 148, 40, 255], [255, 150, 44, 255], [255, 152, 48, 255], [255, 154, 52, 255], [255, 156, 56, 255], [255, 158, 60, 255], [255, 160, 64, 255], [255, 162, 68, 255], [255, 164, 72, 255], [255, 166, 76, 255], [255, 168, 80, 255], [255, 170, 85, 255], [255, 172, 89, 255], [255, 174, 93, 255], [255, 176, 97, 255], [255, 178, 101, 255], [255, 180, 105, 255], [255, 182, 109, 255], [255, 184, 113, 255], [255, 186, 117, 255], [255, 188, 121, 255], [255, 190, 125, 255], [255, 192, 129, 255], [255, 194, 133, 255], [255, 196, 137, 255], [255, 198, 141, 255], [255, 200, 145, 255], [255, 202, 149, 255], [255, 204, 153, 255], [255, 206, 157, 255], [255, 208, 161, 255], [255, 210, 165, 255], [255, 212, 170, 255], [255, 214, 174, 255], [255, 216, 178, 255], [255, 218, 182, 255], [255, 220, 186, 255], [255, 222, 190, 255], [255, 224, 194, 255], [255, 226, 198, 255], [255, 228, 202, 255], [255, 230, 206, 255], [255, 232, 210, 255], [255, 234, 214, 255], [255, 236, 218, 255], [255, 238, 222, 255], [255, 240, 226, 255], [255, 242, 230, 255], [255, 244, 234, 255], [255, 246, 238, 255], [255, 248, 242, 255], [255, 250, 246, 255], [255, 252, 250, 255], [255, 255, 255, 255]]
    		  },
    		  hotMetalBlue: {
    		    name: 'Hot Metal Blue',
    		    numColors: 256,
    		    colors: [[0, 0, 0, 255], [0, 0, 2, 255], [0, 0, 4, 255], [0, 0, 6, 255], [0, 0, 8, 255], [0, 0, 10, 255], [0, 0, 12, 255], [0, 0, 14, 255], [0, 0, 16, 255], [0, 0, 17, 255], [0, 0, 19, 255], [0, 0, 21, 255], [0, 0, 23, 255], [0, 0, 25, 255], [0, 0, 27, 255], [0, 0, 29, 255], [0, 0, 31, 255], [0, 0, 33, 255], [0, 0, 35, 255], [0, 0, 37, 255], [0, 0, 39, 255], [0, 0, 41, 255], [0, 0, 43, 255], [0, 0, 45, 255], [0, 0, 47, 255], [0, 0, 49, 255], [0, 0, 51, 255], [0, 0, 53, 255], [0, 0, 55, 255], [0, 0, 57, 255], [0, 0, 59, 255], [0, 0, 61, 255], [0, 0, 63, 255], [0, 0, 65, 255], [0, 0, 67, 255], [0, 0, 69, 255], [0, 0, 71, 255], [0, 0, 73, 255], [0, 0, 75, 255], [0, 0, 77, 255], [0, 0, 79, 255], [0, 0, 81, 255], [0, 0, 83, 255], [0, 0, 84, 255], [0, 0, 86, 255], [0, 0, 88, 255], [0, 0, 90, 255], [0, 0, 92, 255], [0, 0, 94, 255], [0, 0, 96, 255], [0, 0, 98, 255], [0, 0, 100, 255], [0, 0, 102, 255], [0, 0, 104, 255], [0, 0, 106, 255], [0, 0, 108, 255], [0, 0, 110, 255], [0, 0, 112, 255], [0, 0, 114, 255], [0, 0, 116, 255], [0, 0, 117, 255], [0, 0, 119, 255], [0, 0, 121, 255], [0, 0, 123, 255], [0, 0, 125, 255], [0, 0, 127, 255], [0, 0, 129, 255], [0, 0, 131, 255], [0, 0, 133, 255], [0, 0, 135, 255], [0, 0, 137, 255], [0, 0, 139, 255], [0, 0, 141, 255], [0, 0, 143, 255], [0, 0, 145, 255], [0, 0, 147, 255], [0, 0, 149, 255], [0, 0, 151, 255], [0, 0, 153, 255], [0, 0, 155, 255], [0, 0, 157, 255], [0, 0, 159, 255], [0, 0, 161, 255], [0, 0, 163, 255], [0, 0, 165, 255], [0, 0, 167, 255], [3, 0, 169, 255], [6, 0, 171, 255], [9, 0, 173, 255], [12, 0, 175, 255], [15, 0, 177, 255], [18, 0, 179, 255], [21, 0, 181, 255], [24, 0, 183, 255], [26, 0, 184, 255], [29, 0, 186, 255], [32, 0, 188, 255], [35, 0, 190, 255], [38, 0, 192, 255], [41, 0, 194, 255], [44, 0, 196, 255], [47, 0, 198, 255], [50, 0, 200, 255], [52, 0, 197, 255], [55, 0, 194, 255], [57, 0, 191, 255], [59, 0, 188, 255], [62, 0, 185, 255], [64, 0, 182, 255], [66, 0, 179, 255], [69, 0, 176, 255], [71, 0, 174, 255], [74, 0, 171, 255], [76, 0, 168, 255], [78, 0, 165, 255], [81, 0, 162, 255], [83, 0, 159, 255], [85, 0, 156, 255], [88, 0, 153, 255], [90, 0, 150, 255], [93, 2, 144, 255], [96, 4, 138, 255], [99, 6, 132, 255], [102, 8, 126, 255], [105, 9, 121, 255], [108, 11, 115, 255], [111, 13, 109, 255], [114, 15, 103, 255], [116, 17, 97, 255], [119, 19, 91, 255], [122, 21, 85, 255], [125, 23, 79, 255], [128, 24, 74, 255], [131, 26, 68, 255], [134, 28, 62, 255], [137, 30, 56, 255], [140, 32, 50, 255], [143, 34, 47, 255], [146, 36, 44, 255], [149, 38, 41, 255], [152, 40, 38, 255], [155, 41, 35, 255], [158, 43, 32, 255], [161, 45, 29, 255], [164, 47, 26, 255], [166, 49, 24, 255], [169, 51, 21, 255], [172, 53, 18, 255], [175, 55, 15, 255], [178, 56, 12, 255], [181, 58, 9, 255], [184, 60, 6, 255], [187, 62, 3, 255], [190, 64, 0, 255], [194, 66, 0, 255], [198, 68, 0, 255], [201, 70, 0, 255], [205, 72, 0, 255], [209, 73, 0, 255], [213, 75, 0, 255], [217, 77, 0, 255], [221, 79, 0, 255], [224, 81, 0, 255], [228, 83, 0, 255], [232, 85, 0, 255], [236, 87, 0, 255], [240, 88, 0, 255], [244, 90, 0, 255], [247, 92, 0, 255], [251, 94, 0, 255], [255, 96, 0, 255], [255, 98, 3, 255], [255, 100, 6, 255], [255, 102, 9, 255], [255, 104, 12, 255], [255, 105, 15, 255], [255, 107, 18, 255], [255, 109, 21, 255], [255, 111, 24, 255], [255, 113, 26, 255], [255, 115, 29, 255], [255, 117, 32, 255], [255, 119, 35, 255], [255, 120, 38, 255], [255, 122, 41, 255], [255, 124, 44, 255], [255, 126, 47, 255], [255, 128, 50, 255], [255, 130, 53, 255], [255, 132, 56, 255], [255, 134, 59, 255], [255, 136, 62, 255], [255, 137, 65, 255], [255, 139, 68, 255], [255, 141, 71, 255], [255, 143, 74, 255], [255, 145, 76, 255], [255, 147, 79, 255], [255, 149, 82, 255], [255, 151, 85, 255], [255, 152, 88, 255], [255, 154, 91, 255], [255, 156, 94, 255], [255, 158, 97, 255], [255, 160, 100, 255], [255, 162, 103, 255], [255, 164, 106, 255], [255, 166, 109, 255], [255, 168, 112, 255], [255, 169, 115, 255], [255, 171, 118, 255], [255, 173, 121, 255], [255, 175, 124, 255], [255, 177, 126, 255], [255, 179, 129, 255], [255, 181, 132, 255], [255, 183, 135, 255], [255, 184, 138, 255], [255, 186, 141, 255], [255, 188, 144, 255], [255, 190, 147, 255], [255, 192, 150, 255], [255, 194, 153, 255], [255, 196, 156, 255], [255, 198, 159, 255], [255, 200, 162, 255], [255, 201, 165, 255], [255, 203, 168, 255], [255, 205, 171, 255], [255, 207, 174, 255], [255, 209, 176, 255], [255, 211, 179, 255], [255, 213, 182, 255], [255, 215, 185, 255], [255, 216, 188, 255], [255, 218, 191, 255], [255, 220, 194, 255], [255, 222, 197, 255], [255, 224, 200, 255], [255, 226, 203, 255], [255, 228, 206, 255], [255, 229, 210, 255], [255, 231, 213, 255], [255, 233, 216, 255], [255, 235, 219, 255], [255, 237, 223, 255], [255, 239, 226, 255], [255, 240, 229, 255], [255, 242, 232, 255], [255, 244, 236, 255], [255, 246, 239, 255], [255, 248, 242, 255], [255, 250, 245, 255], [255, 251, 249, 255], [255, 253, 252, 255], [255, 255, 255, 255]]
    		  },
    		  pet20Step: {
    		    name: 'PET 20 Step',
    		    numColors: 256,
    		    colors: [[0, 0, 0, 255], [0, 0, 0, 255], [0, 0, 0, 255], [0, 0, 0, 255], [0, 0, 0, 255], [0, 0, 0, 255], [0, 0, 0, 255], [0, 0, 0, 255], [0, 0, 0, 255], [0, 0, 0, 255], [0, 0, 0, 255], [0, 0, 0, 255], [0, 0, 0, 255], [96, 0, 80, 255], [96, 0, 80, 255], [96, 0, 80, 255], [96, 0, 80, 255], [96, 0, 80, 255], [96, 0, 80, 255], [96, 0, 80, 255], [96, 0, 80, 255], [96, 0, 80, 255], [96, 0, 80, 255], [96, 0, 80, 255], [96, 0, 80, 255], [96, 0, 80, 255], [48, 48, 80, 255], [48, 48, 80, 255], [48, 48, 80, 255], [48, 48, 80, 255], [48, 48, 80, 255], [48, 48, 80, 255], [48, 48, 80, 255], [48, 48, 80, 255], [48, 48, 80, 255], [48, 48, 80, 255], [48, 48, 80, 255], [48, 48, 80, 255], [48, 48, 80, 255], [48, 48, 112, 255], [48, 48, 112, 255], [48, 48, 112, 255], [48, 48, 112, 255], [48, 48, 112, 255], [48, 48, 112, 255], [48, 48, 112, 255], [48, 48, 112, 255], [48, 48, 112, 255], [48, 48, 112, 255], [48, 48, 112, 255], [48, 48, 112, 255], [80, 80, 128, 255], [80, 80, 128, 255], [80, 80, 128, 255], [80, 80, 128, 255], [80, 80, 128, 255], [80, 80, 128, 255], [80, 80, 128, 255], [80, 80, 128, 255], [80, 80, 128, 255], [80, 80, 128, 255], [80, 80, 128, 255], [80, 80, 128, 255], [80, 80, 128, 255], [96, 96, 176, 255], [96, 96, 176, 255], [96, 96, 176, 255], [96, 96, 176, 255], [96, 96, 176, 255], [96, 96, 176, 255], [96, 96, 176, 255], [96, 96, 176, 255], [96, 96, 176, 255], [96, 96, 176, 255], [96, 96, 176, 255], [96, 96, 176, 255], [96, 96, 176, 255], [112, 112, 192, 255], [112, 112, 192, 255], [112, 112, 192, 255], [112, 112, 192, 255], [112, 112, 192, 255], [112, 112, 192, 255], [112, 112, 192, 255], [112, 112, 192, 255], [112, 112, 192, 255], [112, 112, 192, 255], [112, 112, 192, 255], [112, 112, 192, 255], [112, 112, 192, 255], [128, 128, 224, 255], [128, 128, 224, 255], [128, 128, 224, 255], [128, 128, 224, 255], [128, 128, 224, 255], [128, 128, 224, 255], [128, 128, 224, 255], [128, 128, 224, 255], [128, 128, 224, 255], [128, 128, 224, 255], [128, 128, 224, 255], [128, 128, 224, 255], [48, 96, 48, 255], [48, 96, 48, 255], [48, 96, 48, 255], [48, 96, 48, 255], [48, 96, 48, 255], [48, 96, 48, 255], [48, 96, 48, 255], [48, 96, 48, 255], [48, 96, 48, 255], [48, 96, 48, 255], [48, 96, 48, 255], [48, 96, 48, 255], [48, 96, 48, 255], [48, 144, 48, 255], [48, 144, 48, 255], [48, 144, 48, 255], [48, 144, 48, 255], [48, 144, 48, 255], [48, 144, 48, 255], [48, 144, 48, 255], [48, 144, 48, 255], [48, 144, 48, 255], [48, 144, 48, 255], [48, 144, 48, 255], [48, 144, 48, 255], [48, 144, 48, 255], [80, 192, 80, 255], [80, 192, 80, 255], [80, 192, 80, 255], [80, 192, 80, 255], [80, 192, 80, 255], [80, 192, 80, 255], [80, 192, 80, 255], [80, 192, 80, 255], [80, 192, 80, 255], [80, 192, 80, 255], [80, 192, 80, 255], [80, 192, 80, 255], [80, 192, 80, 255], [64, 224, 64, 255], [64, 224, 64, 255], [64, 224, 64, 255], [64, 224, 64, 255], [64, 224, 64, 255], [64, 224, 64, 255], [64, 224, 64, 255], [64, 224, 64, 255], [64, 224, 64, 255], [64, 224, 64, 255], [64, 224, 64, 255], [64, 224, 64, 255], [224, 224, 80, 255], [224, 224, 80, 255], [224, 224, 80, 255], [224, 224, 80, 255], [224, 224, 80, 255], [224, 224, 80, 255], [224, 224, 80, 255], [224, 224, 80, 255], [224, 224, 80, 255], [224, 224, 80, 255], [224, 224, 80, 255], [224, 224, 80, 255], [224, 224, 80, 255], [208, 208, 96, 255], [208, 208, 96, 255], [208, 208, 96, 255], [208, 208, 96, 255], [208, 208, 96, 255], [208, 208, 96, 255], [208, 208, 96, 255], [208, 208, 96, 255], [208, 208, 96, 255], [208, 208, 96, 255], [208, 208, 96, 255], [208, 208, 96, 255], [208, 208, 96, 255], [208, 176, 64, 255], [208, 176, 64, 255], [208, 176, 64, 255], [208, 176, 64, 255], [208, 176, 64, 255], [208, 176, 64, 255], [208, 176, 64, 255], [208, 176, 64, 255], [208, 176, 64, 255], [208, 176, 64, 255], [208, 176, 64, 255], [208, 176, 64, 255], [208, 176, 64, 255], [208, 144, 0, 255], [208, 144, 0, 255], [208, 144, 0, 255], [208, 144, 0, 255], [208, 144, 0, 255], [208, 144, 0, 255], [208, 144, 0, 255], [208, 144, 0, 255], [208, 144, 0, 255], [208, 144, 0, 255], [208, 144, 0, 255], [208, 144, 0, 255], [192, 96, 0, 255], [192, 96, 0, 255], [192, 96, 0, 255], [192, 96, 0, 255], [192, 96, 0, 255], [192, 96, 0, 255], [192, 96, 0, 255], [192, 96, 0, 255], [192, 96, 0, 255], [192, 96, 0, 255], [192, 96, 0, 255], [192, 96, 0, 255], [192, 96, 0, 255], [176, 48, 0, 255], [176, 48, 0, 255], [176, 48, 0, 255], [176, 48, 0, 255], [176, 48, 0, 255], [176, 48, 0, 255], [176, 48, 0, 255], [176, 48, 0, 255], [176, 48, 0, 255], [176, 48, 0, 255], [176, 48, 0, 255], [176, 48, 0, 255], [176, 48, 0, 255], [255, 0, 0, 255], [255, 0, 0, 255], [255, 0, 0, 255], [255, 0, 0, 255], [255, 0, 0, 255], [255, 0, 0, 255], [255, 0, 0, 255], [255, 0, 0, 255], [255, 0, 0, 255], [255, 0, 0, 255], [255, 0, 0, 255], [255, 0, 0, 255], [255, 0, 0, 255], [255, 255, 255, 255], [255, 255, 255, 255], [255, 255, 255, 255], [255, 255, 255, 255], [255, 255, 255, 255], [255, 255, 255, 255], [255, 255, 255, 255], [255, 255, 255, 255], [255, 255, 255, 255], [255, 255, 255, 255], [255, 255, 255, 255], [255, 255, 255, 255], [255, 255, 255, 255]]
    		  },
    		  gray: {
    		    name: 'Gray',
    		    numColors: 256,
    		    gamma: 1,
    		    segmentedData: {
    		      red: [[0, 0, 0], [1, 1, 1]],
    		      green: [[0, 0, 0], [1, 1, 1]],
    		      blue: [[0, 0, 0], [1, 1, 1]]
    		    }
    		  },
    		  jet: {
    		    name: 'Jet',
    		    numColors: 256,
    		    gamma: 1,
    		    segmentedData: {
    		      red: [[0, 0, 0], [0.35, 0, 0], [0.66, 1, 1], [0.89, 1, 1], [1, 0.5, 0.5]],
    		      green: [[0, 0, 0], [0.125, 0, 0], [0.375, 1, 1], [0.64, 1, 1], [0.91, 0, 0], [1, 0, 0]],
    		      blue: [[0, 0.5, 0.5], [0.11, 1, 1], [0.34, 1, 1], [0.65, 0, 0], [1, 0, 0]]
    		    }
    		  },
    		  hsv: {
    		    name: 'HSV',
    		    numColors: 256,
    		    gamma: 1,
    		    segmentedData: {
    		      red: [[0, 1, 1], [0.158730, 1, 1], [0.174603, 0.968750, 0.968750], [0.333333, 0.031250, 0.031250], [0.349206, 0, 0], [0.666667, 0, 0], [0.682540, 0.031250, 0.031250], [0.841270, 0.968750, 0.968750], [0.857143, 1, 1], [1, 1, 1]],
    		      green: [[0, 0, 0], [0.158730, 0.937500, 0.937500], [0.174603, 1, 1], [0.507937, 1, 1], [0.666667, 0.062500, 0.062500], [0.682540, 0, 0], [1, 0, 0]],
    		      blue: [[0, 0, 0], [0.333333, 0, 0], [0.349206, 0.062500, 0.062500], [0.507937, 1, 1], [0.841270, 1, 1], [0.857143, 0.937500, 0.937500], [1, 0.09375, 0.09375]]
    		    }
    		  },
    		  hot: {
    		    name: 'Hot',
    		    numColors: 256,
    		    gamma: 1,
    		    segmentedData: {
    		      red: [[0, 0.0416, 0.0416], [0.365079, 1, 1], [1, 1, 1]],
    		      green: [[0, 0, 0], [0.365079, 0, 0], [0.746032, 1, 1], [1, 1, 1]],
    		      blue: [[0, 0, 0], [0.746032, 0, 0], [1, 1, 1]]
    		    }
    		  },
    		  cool: {
    		    name: 'Cool',
    		    numColors: 256,
    		    gamma: 1,
    		    segmentedData: {
    		      red: [[0, 0, 0], [1, 1, 1]],
    		      green: [[0, 1, 1], [1, 0, 0]],
    		      blue: [[0, 1, 1], [1, 1, 1]]
    		    }
    		  },
    		  spring: {
    		    name: 'Spring',
    		    numColors: 256,
    		    gamma: 1,
    		    segmentedData: {
    		      red: [[0, 1, 1], [1, 1, 1]],
    		      green: [[0, 0, 0], [1, 1, 1]],
    		      blue: [[0, 1, 1], [1, 0, 0]]
    		    }
    		  },
    		  summer: {
    		    name: 'Summer',
    		    numColors: 256,
    		    gamma: 1,
    		    segmentedData: {
    		      red: [[0, 0, 0], [1, 1, 1]],
    		      green: [[0, 0.5, 0.5], [1, 1, 1]],
    		      blue: [[0, 0.4, 0.4], [1, 0.4, 0.4]]
    		    }
    		  },
    		  autumn: {
    		    name: 'Autumn',
    		    numColors: 256,
    		    gamma: 1,
    		    segmentedData: {
    		      red: [[0, 1, 1], [1, 1, 1]],
    		      green: [[0, 0, 0], [1, 1, 1]],
    		      blue: [[0, 0, 0], [1, 0, 0]]
    		    }
    		  },
    		  winter: {
    		    name: 'Winter',
    		    numColors: 256,
    		    gamma: 1,
    		    segmentedData: {
    		      red: [[0, 0, 0], [1, 0, 0]],
    		      green: [[0, 0, 0], [1, 1, 1]],
    		      blue: [[0, 1, 1], [1, 0.5, 0.5]]
    		    }
    		  },
    		  bone: {
    		    name: 'Bone',
    		    numColors: 256,
    		    gamma: 1,
    		    segmentedData: {
    		      red: [[0, 0, 0], [0.746032, 0.652778, 0.652778], [1, 1, 1]],
    		      green: [[0, 0, 0], [0.365079, 0.319444, 0.319444], [0.746032, 0.777778, 0.777778], [1, 1, 1]],
    		      blue: [[0, 0, 0], [0.365079, 0.444444, 0.444444], [1, 1, 1]]
    		    }
    		  },
    		  copper: {
    		    name: 'Copper',
    		    numColors: 256,
    		    gamma: 1,
    		    segmentedData: {
    		      red: [[0, 0, 0], [0.809524, 1, 1], [1, 1, 1]],
    		      green: [[0, 0, 0], [1, 0.7812, 0.7812]],
    		      blue: [[0, 0, 0], [1, 0.4975, 0.4975]]
    		    }
    		  },
    		  spectral: {
    		    name: 'Spectral',
    		    numColors: 256,
    		    gamma: 1,
    		    segmentedData: {
    		      red: [[0, 0, 0], [0.05, 0.4667, 0.4667], [0.10, 0.5333, 0.5333], [0.15, 0, 0], [0.20, 0, 0], [0.25, 0, 0], [0.30, 0, 0], [0.35, 0, 0], [0.40, 0, 0], [0.45, 0, 0], [0.50, 0, 0], [0.55, 0, 0], [0.60, 0, 0], [0.65, 0.7333, 0.7333], [0.70, 0.9333, 0.9333], [0.75, 1, 1], [0.80, 1, 1], [0.85, 1, 1], [0.90, 0.8667, 0.8667], [0.95, 0.80, 0.80], [1, 0.80, 0.80]],
    		      green: [[0, 0, 0], [0.05, 0, 0], [0.10, 0, 0], [0.15, 0, 0], [0.20, 0, 0], [0.25, 0.4667, 0.4667], [0.30, 0.6000, 0.6000], [0.35, 0.6667, 0.6667], [0.40, 0.6667, 0.6667], [0.45, 0.6000, 0.6000], [0.50, 0.7333, 0.7333], [0.55, 0.8667, 0.8667], [0.60, 1, 1], [0.65, 1, 1], [0.70, 0.9333, 0.9333], [0.75, 0.8000, 0.8000], [0.80, 0.6000, 0.6000], [0.85, 0, 0], [0.90, 0, 0], [0.95, 0, 0], [1, 0.80, 0.80]],
    		      blue: [[0, 0, 0], [0.05, 0.5333, 0.5333], [0.10, 0.6000, 0.6000], [0.15, 0.6667, 0.6667], [0.20, 0.8667, 0.8667], [0.25, 0.8667, 0.8667], [0.30, 0.8667, 0.8667], [0.35, 0.6667, 0.6667], [0.40, 0.5333, 0.5333], [0.45, 0, 0], [0.5, 0, 0], [0.55, 0, 0], [0.60, 0, 0], [0.65, 0, 0], [0.70, 0, 0], [0.75, 0, 0], [0.80, 0, 0], [0.85, 0, 0], [0.90, 0, 0], [0.95, 0, 0], [1, 0.80, 0.80]]
    		    }
    		  },
    		  coolwarm: {
    		    name: 'CoolWarm',
    		    numColors: 256,
    		    gamma: 1,
    		    segmentedData: {
    		      red: [[0, 0.2298057, 0.2298057], [0.03125, 0.26623388, 0.26623388], [0.0625, 0.30386891, 0.30386891], [0.09375, 0.342804478, 0.342804478], [0.125, 0.38301334, 0.38301334], [0.15625, 0.424369608, 0.424369608], [0.1875, 0.46666708, 0.46666708], [0.21875, 0.509635204, 0.509635204], [0.25, 0.552953156, 0.552953156], [0.28125, 0.596262162, 0.596262162], [0.3125, 0.639176211, 0.639176211], [0.34375, 0.681291281, 0.681291281], [0.375, 0.722193294, 0.722193294], [0.40625, 0.761464949, 0.761464949], [0.4375, 0.798691636, 0.798691636], [0.46875, 0.833466556, 0.833466556], [0.5, 0.865395197, 0.865395197], [0.53125, 0.897787179, 0.897787179], [0.5625, 0.924127593, 0.924127593], [0.59375, 0.944468518, 0.944468518], [0.625, 0.958852946, 0.958852946], [0.65625, 0.96732803, 0.96732803], [0.6875, 0.969954137, 0.969954137], [0.71875, 0.966811177, 0.966811177], [0.75, 0.958003065, 0.958003065], [0.78125, 0.943660866, 0.943660866], [0.8125, 0.923944917, 0.923944917], [0.84375, 0.89904617, 0.89904617], [0.875, 0.869186849, 0.869186849], [0.90625, 0.834620542, 0.834620542], [0.9375, 0.795631745, 0.795631745], [0.96875, 0.752534934, 0.752534934], [1, 0.705673158, 0.705673158]],
    		      green: [[0, 0.298717966, 0.298717966], [0.03125, 0.353094838, 0.353094838], [0.0625, 0.406535296, 0.406535296], [0.09375, 0.458757618, 0.458757618], [0.125, 0.50941904, 0.50941904], [0.15625, 0.558148092, 0.558148092], [0.1875, 0.604562568, 0.604562568], [0.21875, 0.648280772, 0.648280772], [0.25, 0.688929332, 0.688929332], [0.28125, 0.726149107, 0.726149107], [0.3125, 0.759599947, 0.759599947], [0.34375, 0.788964712, 0.788964712], [0.375, 0.813952739, 0.813952739], [0.40625, 0.834302879, 0.834302879], [0.4375, 0.849786142, 0.849786142], [0.46875, 0.860207984, 0.860207984], [0.5, 0.86541021, 0.86541021], [0.53125, 0.848937047, 0.848937047], [0.5625, 0.827384882, 0.827384882], [0.59375, 0.800927443, 0.800927443], [0.625, 0.769767752, 0.769767752], [0.65625, 0.734132809, 0.734132809], [0.6875, 0.694266682, 0.694266682], [0.71875, 0.650421156, 0.650421156], [0.75, 0.602842431, 0.602842431], [0.78125, 0.551750968, 0.551750968], [0.8125, 0.49730856, 0.49730856], [0.84375, 0.439559467, 0.439559467], [0.875, 0.378313092, 0.378313092], [0.90625, 0.312874446, 0.312874446], [0.9375, 0.24128379, 0.24128379], [0.96875, 0.157246067, 0.157246067], [1, 0.01555616, 0.01555616]],
    		      blue: [[0, 0.753683153, 0.753683153], [0.03125, 0.801466763, 0.801466763], [0.0625, 0.84495867, 0.84495867], [0.09375, 0.883725899, 0.883725899], [0.125, 0.917387822, 0.917387822], [0.15625, 0.945619588, 0.945619588], [0.1875, 0.968154911, 0.968154911], [0.21875, 0.98478814, 0.98478814], [0.25, 0.995375608, 0.995375608], [0.28125, 0.999836203, 0.999836203], [0.3125, 0.998151185, 0.998151185], [0.34375, 0.990363227, 0.990363227], [0.375, 0.976574709, 0.976574709], [0.40625, 0.956945269, 0.956945269], [0.4375, 0.931688648, 0.931688648], [0.46875, 0.901068838, 0.901068838], [0.5, 0.865395561, 0.865395561], [0.53125, 0.820880546, 0.820880546], [0.5625, 0.774508472, 0.774508472], [0.59375, 0.726736146, 0.726736146], [0.625, 0.678007945, 0.678007945], [0.65625, 0.628751763, 0.628751763], [0.6875, 0.579375448, 0.579375448], [0.71875, 0.530263762, 0.530263762], [0.75, 0.481775914, 0.481775914], [0.78125, 0.434243684, 0.434243684], [0.8125, 0.387970225, 0.387970225], [0.84375, 0.343229596, 0.343229596], [0.875, 0.300267182, 0.300267182], [0.90625, 0.259301199, 0.259301199], [0.9375, 0.220525627, 0.220525627], [0.96875, 0.184115123, 0.184115123], [1, 0.150232812, 0.150232812]]
    		    }
    		  },
    		  blues: {
    		    name: 'Blues',
    		    numColors: 256,
    		    gamma: 1,
    		    segmentedData: {
    		      red: [[0, 0.9686274528503418, 0.9686274528503418], [0.125, 0.87058824300765991, 0.87058824300765991], [0.25, 0.7764706015586853, 0.7764706015586853], [0.375, 0.61960786581039429, 0.61960786581039429], [0.5, 0.41960784792900085, 0.41960784792900085], [0.625, 0.25882354378700256, 0.25882354378700256], [0.75, 0.12941177189350128, 0.12941177189350128], [0.875, 0.031372550874948502, 0.031372550874948502], [1, 0.031372550874948502, 0.031372550874948502]],
    		      green: [[0, 0.9843137264251709, 0.9843137264251709], [0.125, 0.92156863212585449, 0.92156863212585449], [0.25, 0.85882353782653809, 0.85882353782653809], [0.375, 0.7921568751335144, 0.7921568751335144], [0.5, 0.68235296010971069, 0.68235296010971069], [0.625, 0.57254904508590698, 0.57254904508590698], [0.75, 0.44313725829124451, 0.44313725829124451], [0.875, 0.31764706969261169, 0.31764706969261169], [1, 0.18823529779911041, 0.18823529779911041]],
    		      blue: [[0, 1, 1], [0.125, 0.9686274528503418, 0.9686274528503418], [0.25, 0.93725490570068359, 0.93725490570068359], [0.375, 0.88235294818878174, 0.88235294818878174], [0.5, 0.83921569585800171, 0.83921569585800171], [0.625, 0.7764706015586853, 0.7764706015586853], [0.75, 0.70980393886566162, 0.70980393886566162], [0.875, 0.61176472902297974, 0.61176472902297974], [1, 0.41960784792900085, 0.41960784792900085]]
    		    }
    		  }
    		};
    		/**
    		 *  Generate linearly spaced vectors
    		*  http://cens.ioc.ee/local/man/matlab/techdoc/ref/linspace.html
    		 * @param {Number} a A number representing the first vector
    		 * @param {Number} b A number representing the second vector
    		 * @param {Number} n The number of linear spaced vectors to generate
    		 * @returns {Array} An array of points representing linear spaced vectors.
    		 * @memberof Colors
    		 */

    		function linspace(a, b, n) {
    		  n = n === null ? 100 : n;
    		  var increment = (b - a) / (n - 1);
    		  var vector = [];

    		  while (n-- > 0) {
    		    vector.push(a);
    		    a += increment;
    		  } // Make sure the last item will always be "b" because most of the
    		  // Time we'll get numbers like 1.0000000000000002 instead of 1.


    		  vector[vector.length - 1] = b;
    		  return vector;
    		}
    		/**
    		 * Returns the "rank/index" of the element in a sorted array if found or the highest index if not. Uses (binary search)
    		 * @param {Array} array A sorted array to search in
    		 * @param {any} elem the element in the array to search for
    		 * @returns {number} The rank/index of the element in the given array
    		 * @memberof Colors
    		 */


    		function getRank(array, elem) {
    		  var left = 0;
    		  var right = array.length - 1;

    		  while (left <= right) {
    		    var mid = left + Math.floor((right - left) / 2);
    		    var midElem = array[mid];

    		    if (midElem === elem) {
    		      return mid;
    		    } else if (elem < midElem) {
    		      right = mid - 1;
    		    } else {
    		      left = mid + 1;
    		    }
    		  }

    		  return left;
    		}
    		/**
    		 * Find the indices into a sorted array a such that, if the corresponding elements
    		 * In v were inserted before the indices, the order of a would be preserved.
    		 *  http://lagrange.univ-lyon1.fr/docs/numpy/1.11.0/reference/generated/numpy.searchsorted.html
    		 * @param {Array} inputArray The array where the values will be inserted
    		 * @param {Array} values An array of the values to be inserted into the inputArray
    		 * @returns {Array} The indices where elements should be inserted to maintain order.
    		 * @memberof Colors
    		 */


    		function searchSorted(inputArray, values) {
    		  var i;
    		  var indexes = [];
    		  var len = values.length;
    		  inputArray.sort(function (a, b) {
    		    return a - b;
    		  });

    		  for (i = 0; i < len; i++) {
    		    indexes[i] = getRank(inputArray, values[i]);
    		  }

    		  return indexes;
    		}
    		/**
    		 * Creates an *N* -element 1-d lookup table
    		 * @param {Number} N The number of elements in the result lookup table
    		 * @param {Array} data represented by a list of x,y0,y1 mapping correspondences. Each element in this
    		 * List represents how a value between 0 and 1 (inclusive) represented by x is mapped to
    		 * A corresponding value between 0 and 1 (inclusive). The two values of y are to allow for
    		 * Discontinuous mapping functions (say as might be found in a sawtooth) where y0 represents
    		 * The value of y for values of x <= to that given, and y1 is the value to be used for x >
    		 * Than that given). The list must start with x=0, end with x=1, and all values of x must be
    		 * In increasing order. Values between the given mapping points are determined by simple linear
    		 * Interpolation.
    		 * @param {any} gamma value denotes a "gamma curve" value which adjusts the brightness
    		 * at the bottom and top of the map.
    		 * @returns {any[]} an array "result" where result[x*(N-1)] gives the closest value for
    		 * Values of x between 0 and 1.
    		 * @memberof Colors
    		 */


    		function makeMappingArray(N, data, gamma) {
    		  var i;
    		  var x = [];
    		  var y0 = [];
    		  var y1 = [];
    		  var lut = [];
    		  gamma = gamma === null ? 1 : gamma;

    		  for (i = 0; i < data.length; i++) {
    		    var element = data[i];
    		    x.push((N - 1) * element[0]);
    		    y0.push(element[1]);
    		    y1.push(element[1]);
    		  }

    		  var xLinSpace = linspace(0, 1, N);

    		  for (i = 0; i < N; i++) {
    		    xLinSpace[i] = (N - 1) * Math.pow(xLinSpace[i], gamma);
    		  }

    		  var xLinSpaceIndexes = searchSorted(x, xLinSpace);

    		  for (i = 1; i < N - 1; i++) {
    		    var index = xLinSpaceIndexes[i];
    		    var colorPercent = (xLinSpace[i] - x[index - 1]) / (x[index] - x[index - 1]);
    		    var colorDelta = y0[index] - y1[index - 1];
    		    lut[i] = colorPercent * colorDelta + y1[index - 1];
    		  }

    		  lut[0] = y1[0];
    		  lut[N - 1] = y0[data.length - 1];
    		  return lut;
    		}
    		/**
    		 * Creates a Colormap based on lookup tables using linear segments.
    		 * @param {{red:Array, green:Array, blue:Array}} segmentedData An object with a red, green and blue entries.
    		 * Each entry should be a list of x, y0, y1 tuples, forming rows in a table.
    		 * @param {Number} N The number of elements in the result Colormap
    		 * @param {any} gamma value denotes a "gamma curve" value which adjusts the brightness
    		 * at the bottom and top of the Colormap.
    		 * @returns {Array} The created Colormap object
    		 * @description The lookup table is generated using linear interpolation for each
    		 *  Primary color, with the 0-1 domain divided into any number of
    		 * Segments.
    		 * https://github.com/stefanv/matplotlib/blob/3f1a23755e86fef97d51e30e106195f34425c9e3/lib/matplotlib/colors.py#L663
    		 * @memberof Colors
    		 */


    		function createLinearSegmentedColormap(segmentedData, N, gamma) {
    		  var i;
    		  var lut = [];
    		  N = N === null ? 256 : N;
    		  gamma = gamma === null ? 1 : gamma;
    		  var redLut = makeMappingArray(N, segmentedData.red, gamma);
    		  var greenLut = makeMappingArray(N, segmentedData.green, gamma);
    		  var blueLut = makeMappingArray(N, segmentedData.blue, gamma);

    		  for (i = 0; i < N; i++) {
    		    var red = Math.round(redLut[i] * 255);
    		    var green = Math.round(greenLut[i] * 255);
    		    var blue = Math.round(blueLut[i] * 255);
    		    var rgba = [red, green, blue, 255];
    		    lut.push(rgba);
    		  }

    		  return lut;
    		}
    		/**
    		 * Return all available colormaps (id and name)
    		 * @returns {Array<{id,key}>} An array of colormaps with an object containing the "id" and display "name"
    		 * @memberof Colors
    		 */


    		function getColormapsList() {
    		  var colormaps = [];
    		  var keys = Object.keys(colormapsData);
    		  keys.forEach(function (key) {
    		    if (colormapsData.hasOwnProperty(key)) {
    		      var colormap = colormapsData[key];
    		      colormaps.push({
    		        id: key,
    		        name: colormap.name
    		      });
    		    }
    		  });
    		  colormaps.sort(function (a, b) {
    		    var aName = a.name.toLowerCase();
    		    var bName = b.name.toLowerCase();

    		    if (aName === bName) {
    		      return 0;
    		    }

    		    return aName < bName ? -1 : 1;
    		  });
    		  return colormaps;
    		}
    		/**
    		 * Return a colorMap object with the provided id and colormapData
    		 * if the Id matches existent colorMap objects (check colormapsData) the colormapData is ignored.
    		 * if the colormapData is not empty, the colorMap will be added to the colormapsData list. Otherwise, an empty colorMap object is returned.
    		 * @param {string} id The ID of the colormap
    		 * @param {Object} colormapData - An object that can contain a name, numColors, gama, segmentedData and/or colors
    		 * @returns {*} The Colormap Object
    		 * @memberof Colors
    		*/

    		function getColormap(id, colormapData) {
    		  var colormap = colormapsData[id];

    		  if (!colormap) {
    		    colormap = colormapsData[id] = colormapData || {
    		      name: '',
    		      colors: []
    		    };
    		  }

    		  if (!colormap.colors && colormap.segmentedData) {
    		    colormap.colors = createLinearSegmentedColormap(colormap.segmentedData, colormap.numColors, colormap.gamma);
    		  }

    		  return {
    		    getId: function getId() {
    		      return id;
    		    },
    		    getColorSchemeName: function getColorSchemeName() {
    		      return colormap.name;
    		    },
    		    setColorSchemeName: function setColorSchemeName(name) {
    		      colormap.name = name;
    		    },
    		    getNumberOfColors: function getNumberOfColors() {
    		      return colormap.colors.length;
    		    },
    		    setNumberOfColors: function setNumberOfColors(numColors) {
    		      while (colormap.colors.length < numColors) {
    		        colormap.colors.push(COLOR_TRANSPARENT);
    		      }

    		      colormap.colors.length = numColors;
    		    },
    		    getColor: function getColor(index) {
    		      if (this.isValidIndex(index)) {
    		        return colormap.colors[index];
    		      }

    		      return COLOR_TRANSPARENT;
    		    },
    		    getColorRepeating: function getColorRepeating(index) {
    		      var numColors = colormap.colors.length;
    		      index = numColors ? index % numColors : 0;
    		      return this.getColor(index);
    		    },
    		    setColor: function setColor(index, rgba) {
    		      if (this.isValidIndex(index)) {
    		        colormap.colors[index] = rgba;
    		      }
    		    },
    		    addColor: function addColor(rgba) {
    		      colormap.colors.push(rgba);
    		    },
    		    insertColor: function insertColor(index, rgba) {
    		      if (this.isValidIndex(index)) {
    		        colormap.colors.splice(index, 1, rgba);
    		      }
    		    },
    		    removeColor: function removeColor(index) {
    		      if (this.isValidIndex(index)) {
    		        colormap.colors.splice(index, 1);
    		      }
    		    },
    		    clearColors: function clearColors() {
    		      colormap.colors = [];
    		    },
    		    buildLookupTable: function buildLookupTable(lut) {
    		      if (!lut) {
    		        return;
    		      }

    		      var numColors = colormap.colors.length;
    		      lut.setNumberOfTableValues(numColors);

    		      for (var i = 0; i < numColors; i++) {
    		        lut.setTableValue(i, colormap.colors[i]);
    		      }
    		    },
    		    createLookupTable: function createLookupTable() {
    		      var lut = new _lookupTable_js__WEBPACK_IMPORTED_MODULE_0__["default"]();
    		      this.buildLookupTable(lut);
    		      return lut;
    		    },
    		    isValidIndex: function isValidIndex(index) {
    		      return index >= 0 && index < colormap.colors.length;
    		    }
    		  };
    		}

    		/***/ }),

    		/***/ "./colors/index.js":
    		/*!*************************!*\
    		  !*** ./colors/index.js ***!
    		  \*************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _colormap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./colormap.js */ "./colors/colormap.js");
    		/* harmony import */ var _lookupTable_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lookupTable.js */ "./colors/lookupTable.js");


    		/* harmony default export */ __webpack_exports__["default"] = ({
    		  getColormap: _colormap_js__WEBPACK_IMPORTED_MODULE_0__["getColormap"],
    		  getColormapsList: _colormap_js__WEBPACK_IMPORTED_MODULE_0__["getColormapsList"],
    		  LookupTable: _lookupTable_js__WEBPACK_IMPORTED_MODULE_1__["default"]
    		});

    		/***/ }),

    		/***/ "./colors/lookupTable.js":
    		/*!*******************************!*\
    		  !*** ./colors/lookupTable.js ***!
    		  \*******************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

    		function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

    		function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); return Constructor; }

    		// This code was created based on vtkLookupTable
    		// http://www.vtk.org/doc/release/5.0/html/a01697.html
    		// https://github.com/Kitware/VTK/blob/master/Common/Core/vtkLookupTable.cxx
    		var BELOW_RANGE_COLOR_INDEX = 0;
    		var ABOVE_RANGE_COLOR_INDEX = 1;
    		var NAN_COLOR_INDEX = 2;
    		/**
    		 * Converts an HSV  (Hue, Saturation, Value) color to RGB (Red, Green, Blue) color value
    		 * @param {Number} hue A number representing the hue color value
    		 * @param {any} sat A number representing the saturation color value
    		 * @param {any} val A number representing the value color value
    		 * @returns {Numberp[]} An RGB color array
    		 */

    		function HSVToRGB(hue, sat, val) {
    		  if (hue > 1) {
    		    throw new Error('HSVToRGB expects hue < 1');
    		  }

    		  var rgb = [];

    		  if (sat === 0) {
    		    rgb[0] = val;
    		    rgb[1] = val;
    		    rgb[2] = val;
    		    return rgb;
    		  }

    		  var hueCase = Math.floor(hue * 6);
    		  var frac = 6 * hue - hueCase;
    		  var lx = val * (1 - sat);
    		  var ly = val * (1 - sat * frac);
    		  var lz = val * (1 - sat * (1 - frac));

    		  switch (hueCase) {
    		    /* 0<hue<1/6 */
    		    case 0:
    		    case 6:
    		      rgb[0] = val;
    		      rgb[1] = lz;
    		      rgb[2] = lx;
    		      break;

    		    /* 1/6<hue<2/6 */

    		    case 1:
    		      rgb[0] = ly;
    		      rgb[1] = val;
    		      rgb[2] = lx;
    		      break;

    		    /* 2/6<hue<3/6 */

    		    case 2:
    		      rgb[0] = lx;
    		      rgb[1] = val;
    		      rgb[2] = lz;
    		      break;

    		    /* 3/6<hue/4/6 */

    		    case 3:
    		      rgb[0] = lx;
    		      rgb[1] = ly;
    		      rgb[2] = val;
    		      break;

    		    /* 4/6<hue<5/6 */

    		    case 4:
    		      rgb[0] = lz;
    		      rgb[1] = lx;
    		      rgb[2] = val;
    		      break;

    		    /* 5/6<hue<1 */

    		    case 5:
    		      rgb[0] = val;
    		      rgb[1] = lx;
    		      rgb[2] = ly;
    		      break;
    		  }

    		  return rgb;
    		}
    		/**
    		 * Maps a value to an index in the table
    		 * @param {Number} v A double value which table index will be returned.
    		 * @param {any} p An object that contains the Table "Range", the table "MaxIndex",
    		 * A "Shift" from first value in the table and the table "Scale" value
    		 * @returns {Number} The mapped index in the table
    		 * @memberof Colors
    		 */


    		function linearIndexLookupMain(v, p) {
    		  var dIndex; // NOTE: Added Math.floor since values were not integers? Check VTK source

    		  if (v < p.Range[0]) {
    		    dIndex = p.MaxIndex + BELOW_RANGE_COLOR_INDEX + 1.5;
    		  } else if (v > p.Range[1]) {
    		    dIndex = p.MaxIndex + ABOVE_RANGE_COLOR_INDEX + 1.5;
    		  } else {
    		    dIndex = (v + p.Shift) * p.Scale;
    		  }

    		  return Math.floor(dIndex);
    		}
    		/**
    		 * Maps scalar values into colors via a lookup table
    		 * LookupTable is an object that is used by mapper objects to map scalar values into rgba (red-green-blue-alpha transparency) color specification,
    		 * or rgba into scalar values. The color table can be created by direct insertion of color values, or by specifying hue, saturation, value, and alpha range and generating a table
    		 */


    		var LookupTable = /*#__PURE__*/function () {
    		  /**
    		   * Creates a default linear LookupTable object with 256 colors.
    		   */
    		  function LookupTable() {
    		    _classCallCheck(this, LookupTable);

    		    this.NumberOfColors = 256;
    		    this.Ramp = 'linear';
    		    this.TableRange = [0, 255];
    		    this.HueRange = [0, 0.66667];
    		    this.SaturationRange = [1, 1];
    		    this.ValueRange = [1, 1];
    		    this.AlphaRange = [1, 1];
    		    this.NaNColor = [128, 0, 0, 255];
    		    this.BelowRangeColor = [0, 0, 0, 255];
    		    this.UseBelowRangeColor = true;
    		    this.AboveRangeColor = [255, 255, 255, 255];
    		    this.UseAboveRangeColor = true;
    		    this.InputRange = [0, 255];
    		    this.Table = [];
    		  }
    		  /**
    		   * Specify the number of values (i.e., colors) in the lookup table.
    		   * @param {Number} number The number of colors in he LookupTable
    		   * @returns {void}
    		   * @memberof Colors
    		   */


    		  _createClass(LookupTable, [{
    		    key: "setNumberOfTableValues",
    		    value: function setNumberOfTableValues(number) {
    		      this.NumberOfColors = number;
    		    }
    		    /**
    		     * Set the shape of the table ramp to either 'linear', 'scurve' or 'sqrt'
    		     * @param {String} ramp A string value representing the shape of the table. Allowed values are 'linear', 'scurve' or 'sqrt'
    		     * @returns {void}
    		     * @memberof Colors
    		     */

    		  }, {
    		    key: "setRamp",
    		    value: function setRamp(ramp) {
    		      this.Ramp = ramp;
    		    }
    		    /**
    		     * Sets the minimum/maximum scalar values for scalar mapping.
    		     * Scalar values less than minimum range value are clamped to minimum range value.
    		     * Scalar values greater than maximum range value are clamped to maximum range value.
    		     * @param {Number} start A double representing the minimum scaler value of the LookupTable
    		     * @param {any} end A double representing the maximum scaler value of the LookupTable
    		     * @returns {void}
    		     * @memberof Colors
    		     */

    		  }, {
    		    key: "setTableRange",
    		    value: function setTableRange(start, end) {
    		      this.TableRange[0] = start;
    		      this.TableRange[1] = end;
    		    }
    		    /**
    		     * Set the range in hue (using automatic generation). Hue ranges between [0,1].
    		     * @param {Number} start A double representing the minimum hue value in a range. Min. is 0
    		     * @param {Number} end A double representing the maximum hue value in a range. Max. is 1
    		     * @returns {void}
    		     * @memberof Colors
    		     */

    		  }, {
    		    key: "setHueRange",
    		    value: function setHueRange(start, end) {
    		      this.HueRange[0] = start;
    		      this.HueRange[1] = end;
    		    }
    		    /**
    		     * Set the range in saturation (using automatic generation). Saturation ranges between [0,1].
    		     * @param {Number} start A double representing the minimum Saturation value in a range. Min. is 0
    		     * @param {Number} end A double representing the maximum Saturation value in a range. Max. is 1
    		     * @returns {void}
    		     * @memberof Colors
    		     */

    		  }, {
    		    key: "setSaturationRange",
    		    value: function setSaturationRange(start, end) {
    		      this.SaturationRange[0] = start;
    		      this.SaturationRange[1] = end;
    		    }
    		    /**
    		     * Set the range in value (using automatic generation). Value ranges between [0,1].
    		     * @param {Numeber } start A double representing the minimum value in a range. Min. is 0
    		     * @param {Numeber} end A double representing the maximum value in a range. Max. is 1
    		     * @returns {void}
    		     * @memberof Colors
    		     */

    		  }, {
    		    key: "setValueRange",
    		    value: function setValueRange(start, end) {
    		      // Set the range in value (using automatic generation). Value ranges between [0,1].
    		      this.ValueRange[0] = start;
    		      this.ValueRange[1] = end;
    		    }
    		    /**
    		     * (Not Used) Sets the range of scalars which will be mapped.
    		     * @param {Number} start the minimum scalar value in the range
    		     * @param {Number} end the maximum scalar value in the range
    		     * @returns {void}
    		     * @memberof Colors
    		     */

    		  }, {
    		    key: "setRange",
    		    value: function setRange(start, end) {
    		      this.InputRange[0] = start;
    		      this.InputRange[1] = end;
    		    }
    		    /**
    		     * Set the range in alpha (using automatic generation). Alpha ranges from [0,1].
    		     * @param {Number} start A double representing the minimum alpha value
    		     * @param {Number} end A double representing the maximum alpha value
    		     * @returns {void}
    		     * @memberof Colors
    		     */

    		  }, {
    		    key: "setAlphaRange",
    		    value: function setAlphaRange(start, end) {
    		      // Set the range in alpha (using automatic generation). Alpha ranges from [0,1].
    		      this.AlphaRange[0] = start;
    		      this.AlphaRange[1] = end;
    		    }
    		    /**
    		     * Map one value through the lookup table and return the color as an
    		     * RGBA array of doubles between 0 and 1.
    		     * @param {Number} scalar A double scalar value which will be mapped to a color in the LookupTable
    		     * @returns {Number[]} An RGBA array of doubles between 0 and 1
    		     * @memberof Colors
    		     */

    		  }, {
    		    key: "getColor",
    		    value: function getColor(scalar) {
    		      return this.mapValue(scalar);
    		    }
    		    /**
    		     * Generate lookup table from hue, saturation, value, alpha min/max values. Table is built from linear ramp of each value.
    		     * @param {Boolean} force true to force the build of the LookupTable. Otherwie, false. This is useful if a lookup table has been defined manually
    		     * (using SetTableValue) and then an application decides to rebuild the lookup table using the implicit process.
    		     * @returns {void}
    		     * @memberof Colors
    		     */

    		  }, {
    		    key: "build",
    		    value: function build(force) {
    		      if (this.Table.length > 1 && !force) {
    		        return;
    		      } // Clear the table


    		      this.Table = [];
    		      var maxIndex = this.NumberOfColors - 1;
    		      var hinc, sinc, vinc, ainc;

    		      if (maxIndex) {
    		        hinc = (this.HueRange[1] - this.HueRange[0]) / maxIndex;
    		        sinc = (this.SaturationRange[1] - this.SaturationRange[0]) / maxIndex;
    		        vinc = (this.ValueRange[1] - this.ValueRange[0]) / maxIndex;
    		        ainc = (this.AlphaRange[1] - this.AlphaRange[0]) / maxIndex;
    		      } else {
    		        hinc = sinc = vinc = ainc = 0.0;
    		      }

    		      for (var i = 0; i <= maxIndex; i++) {
    		        var hue = this.HueRange[0] + i * hinc;
    		        var sat = this.SaturationRange[0] + i * sinc;
    		        var val = this.ValueRange[0] + i * vinc;
    		        var alpha = this.AlphaRange[0] + i * ainc;
    		        var rgb = HSVToRGB(hue, sat, val);
    		        var c_rgba = [];

    		        switch (this.Ramp) {
    		          case 'scurve':
    		            c_rgba[0] = Math.floor(127.5 * (1.0 + Math.cos((1.0 - rgb[0]) * Math.PI)));
    		            c_rgba[1] = Math.floor(127.5 * (1.0 + Math.cos((1.0 - rgb[1]) * Math.PI)));
    		            c_rgba[2] = Math.floor(127.5 * (1.0 + Math.cos((1.0 - rgb[2]) * Math.PI)));
    		            c_rgba[3] = Math.floor(alpha * 255);
    		            break;

    		          case 'linear':
    		            c_rgba[0] = Math.floor(rgb[0] * 255 + 0.5);
    		            c_rgba[1] = Math.floor(rgb[1] * 255 + 0.5);
    		            c_rgba[2] = Math.floor(rgb[2] * 255 + 0.5);
    		            c_rgba[3] = Math.floor(alpha * 255 + 0.5);
    		            break;

    		          case 'sqrt':
    		            c_rgba[0] = Math.floor(Math.sqrt(rgb[0]) * 255 + 0.5);
    		            c_rgba[1] = Math.floor(Math.sqrt(rgb[1]) * 255 + 0.5);
    		            c_rgba[2] = Math.floor(Math.sqrt(rgb[2]) * 255 + 0.5);
    		            c_rgba[3] = Math.floor(Math.sqrt(alpha) * 255 + 0.5);
    		            break;

    		          default:
    		            throw new Error("Invalid Ramp value (".concat(this.Ramp, ")"));
    		        }

    		        this.Table.push(c_rgba);
    		      }

    		      this.buildSpecialColors();
    		    }
    		    /**
    		     * Ensures the out-of-range colors (Below range and Above range) are set correctly.
    		     * @returns {void}
    		     * @memberof Colors
    		     */

    		  }, {
    		    key: "buildSpecialColors",
    		    value: function buildSpecialColors() {
    		      var numberOfColors = this.NumberOfColors;
    		      var belowRangeColorIndex = numberOfColors + BELOW_RANGE_COLOR_INDEX;
    		      var aboveRangeColorIndex = numberOfColors + ABOVE_RANGE_COLOR_INDEX;
    		      var nanColorIndex = numberOfColors + NAN_COLOR_INDEX; // Below range color

    		      if (this.UseBelowRangeColor || numberOfColors === 0) {
    		        this.Table[belowRangeColorIndex] = this.BelowRangeColor;
    		      } else {
    		        // Duplicate the first color in the table.
    		        this.Table[belowRangeColorIndex] = this.Table[0];
    		      } // Above range color


    		      if (this.UseAboveRangeColor || numberOfColors === 0) {
    		        this.Table[aboveRangeColorIndex] = this.AboveRangeColor;
    		      } else {
    		        // Duplicate the last color in the table.
    		        this.Table[aboveRangeColorIndex] = this.Table[numberOfColors - 1];
    		      } // Always use NanColor


    		      this.Table[nanColorIndex] = this.NaNColor;
    		    }
    		    /**
    		     * Similar to GetColor - Map one value through the lookup table and return the color as an
    		     * RGBA array of doubles between 0 and 1.
    		     * @param {Numeber} v A double scalar value which will be mapped to a color in the LookupTable
    		     * @returns {Number[]} An RGBA array of doubles between 0 and 1
    		     * @memberof Colors
    		     */

    		  }, {
    		    key: "mapValue",
    		    value: function mapValue(v) {
    		      var index = this.getIndex(v);

    		      if (index < 0) {
    		        return this.NaNColor;
    		      } else if (index === 0) {
    		        if (this.UseBelowRangeColor && v < this.TableRange[0]) {
    		          return this.BelowRangeColor;
    		        }
    		      } else if (index === this.NumberOfColors - 1) {
    		        if (this.UseAboveRangeColor && v > this.TableRange[1]) {
    		          return this.AboveRangeColor;
    		        }
    		      }

    		      return this.Table[index];
    		    }
    		    /**
    		     * Return the table index associated with a particular value.
    		     * @param {Number} v A double value which table index will be returned.
    		     * @returns {Number} The index in the LookupTable
    		     * @memberof Colors
    		     */

    		  }, {
    		    key: "getIndex",
    		    value: function getIndex(v) {
    		      var p = {};
    		      p.Range = [];
    		      p.MaxIndex = this.NumberOfColors - 1; // This was LookupShiftAndScale

    		      p.Shift = -this.TableRange[0];

    		      if (this.TableRange[1] <= this.TableRange[0]) {
    		        p.Scale = Number.MAX_VALUE;
    		      } else {
    		        p.Scale = p.MaxIndex / (this.TableRange[1] - this.TableRange[0]);
    		      }

    		      p.Range[0] = this.TableRange[0];
    		      p.Range[1] = this.TableRange[1]; // First, check whether we have a number...

    		      if (isNaN(v)) {
    		        // For backwards compatibility
    		        return -1;
    		      } // Map to an index:


    		      var index = linearIndexLookupMain(v, p); // For backwards compatibility, if the index indicates an
    		      // Out-of-range value, truncate to index range for in-range colors.

    		      if (index === this.NumberOfColors + BELOW_RANGE_COLOR_INDEX) {
    		        index = 0;
    		      } else if (index === this.NumberOfColors + ABOVE_RANGE_COLOR_INDEX) {
    		        index = this.NumberOfColors - 1;
    		      }

    		      return index;
    		    }
    		    /**
    		     * Directly load color into lookup table. Use [0,1] double values for color component specification.
    		     * Make sure that you've either used the Build() method or used SetNumberOfTableValues() prior to using this method.
    		     * @param {Number} index The index in the LookupTable of where to insert the color value
    		     * @param {Number[]} rgba An array of [0,1] double values for an RGBA color component
    		     * @returns {void}
    		     * @memberof Colors
    		     */

    		  }, {
    		    key: "setTableValue",
    		    value: function setTableValue(index, rgba) {
    		      // Check if it index, red, green, blue and alpha were passed as parameter
    		      if (arguments.length === 5) {
    		        rgba = Array.prototype.slice.call(arguments, 1);
    		      } // Check the index to make sure it is valid


    		      if (index < 0) {
    		        throw new Error("Can't set the table value for negative index (".concat(index, ")"));
    		      }

    		      if (index >= this.NumberOfColors) {
    		        new Error("Index ".concat(index, " is greater than the number of colors ").concat(this.NumberOfColors));
    		      }

    		      this.Table[index] = rgba;

    		      if (index === 0 || index === this.NumberOfColors - 1) {
    		        // This is needed due to the way the special colors are stored in
    		        // The internal table. If Above/BelowRangeColors are not used and
    		        // The min/max colors are changed in the table with this member
    		        // Function, then the colors used for values outside the range may
    		        // Be incorrect. Calling this here ensures the out-of-range colors
    		        // Are set correctly.
    		        this.buildSpecialColors();
    		      }
    		    }
    		  }]);

    		  return LookupTable;
    		}();

    		/* harmony default export */ __webpack_exports__["default"] = (LookupTable);

    		/***/ }),

    		/***/ "./disable.js":
    		/*!********************!*\
    		  !*** ./disable.js ***!
    		  \********************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enabledElements.js */ "./enabledElements.js");
    		/* harmony import */ var _triggerEvent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./triggerEvent.js */ "./triggerEvent.js");
    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./events.js */ "./events.js");



    		/**
    		 *  Disable an HTML element for further use in Cornerstone
    		 *
    		 * @param {HTMLElement} element An HTML Element enabled for Cornerstone
    		 * @returns {void}
    		 * @memberof Enable
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (element) {
    		  if (element === undefined) {
    		    throw new Error('disable: element must not be undefined');
    		  } // Search for this element in this list of enabled elements


    		  var enabledElements = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElements"])();

    		  for (var i = 0; i < enabledElements.length; i++) {
    		    if (enabledElements[i].element === element) {
    		      // We found it!
    		      // Fire an event so dependencies can cleanup
    		      var eventData = {
    		        element: element
    		      };
    		      Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element, _events_js__WEBPACK_IMPORTED_MODULE_2__["default"].ELEMENT_DISABLED, eventData);
    		      Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_events_js__WEBPACK_IMPORTED_MODULE_2__["events"], _events_js__WEBPACK_IMPORTED_MODULE_2__["default"].ELEMENT_DISABLED, eventData); // Remove the child DOM elements that we created (e.g.canvas)

    		      enabledElements[i].element.removeChild(enabledElements[i].canvas);
    		      enabledElements[i].canvas = undefined; // Remove this element from the list of enabled elements

    		      enabledElements.splice(i, 1);
    		      break;
    		    }
    		  }
    		});

    		/***/ }),

    		/***/ "./displayImage.js":
    		/*!*************************!*\
    		  !*** ./displayImage.js ***!
    		  \*************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enabledElements.js */ "./enabledElements.js");
    		/* harmony import */ var _internal_getDefaultViewport_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/getDefaultViewport.js */ "./internal/getDefaultViewport.js");
    		/* harmony import */ var _updateImage_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./updateImage.js */ "./updateImage.js");
    		/* harmony import */ var _internal_now_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./internal/now.js */ "./internal/now.js");
    		/* harmony import */ var _layers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./layers.js */ "./layers.js");
    		/* harmony import */ var _triggerEvent_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./triggerEvent.js */ "./triggerEvent.js");
    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./events.js */ "./events.js");







    		/**
    		 * Sets a new image object for a given element.
    		 *
    		 * Will also apply an optional viewport setting.
    		 *
    		 * @param {HTMLElement} element An HTML Element enabled for Cornerstone
    		 * @param {Object} image An Image loaded by a Cornerstone Image Loader
    		 * @param {Object} [viewport] A set of Cornerstone viewport parameters
    		 * @returns {void}
    		 * @memberof Drawing
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (element, image, viewport) {
    		  if (element === undefined) {
    		    throw new Error('displayImage: parameter element must not be undefined');
    		  }

    		  if (image === undefined) {
    		    throw new Error('displayImage: parameter image must not be undefined');
    		  }

    		  var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElement"])(element);
    		  var oldImage = enabledElement.image;
    		  enabledElement.image = image;

    		  if (enabledElement.layers && enabledElement.layers.length) {
    		    Object(_layers_js__WEBPACK_IMPORTED_MODULE_4__["setLayerImage"])(element, image);
    		  }

    		  if (enabledElement.viewport === undefined) {
    		    enabledElement.viewport = Object(_internal_getDefaultViewport_js__WEBPACK_IMPORTED_MODULE_1__["default"])(enabledElement.canvas, image);
    		  } // Merge viewport


    		  if (viewport) {
    		    for (var attrname in viewport) {
    		      if (viewport[attrname] !== null) {
    		        enabledElement.viewport[attrname] = viewport[attrname];
    		      }
    		    }
    		  }

    		  var frameRate;

    		  if (enabledElement.lastImageTimeStamp !== undefined) {
    		    var timeSinceLastImage = Object(_internal_now_js__WEBPACK_IMPORTED_MODULE_3__["default"])() - enabledElement.lastImageTimeStamp;
    		    frameRate = (1000 / timeSinceLastImage).toFixed();
    		  }

    		  enabledElement.lastImageTimeStamp = Object(_internal_now_js__WEBPACK_IMPORTED_MODULE_3__["default"])();
    		  var newImageEventData = {
    		    viewport: enabledElement.viewport,
    		    element: enabledElement.element,
    		    image: enabledElement.image,
    		    oldImage: oldImage,
    		    enabledElement: enabledElement,
    		    frameRate: frameRate
    		  };
    		  Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_5__["default"])(enabledElement.element, _events_js__WEBPACK_IMPORTED_MODULE_6__["default"].NEW_IMAGE, newImageEventData);
    		  Object(_updateImage_js__WEBPACK_IMPORTED_MODULE_2__["default"])(element);
    		});

    		/***/ }),

    		/***/ "./draw.js":
    		/*!*****************!*\
    		  !*** ./draw.js ***!
    		  \*****************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enabledElements.js */ "./enabledElements.js");
    		/* harmony import */ var _internal_drawImage_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/drawImage.js */ "./internal/drawImage.js");


    		/**
    		 * Immediately draws the enabled element
    		 *
    		 * @param {HTMLElement} element An HTML Element enabled for Cornerstone
    		 * @returns {void}
    		 * @memberof Drawing
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (element) {
    		  var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElement"])(element);
    		  Object(_internal_drawImage_js__WEBPACK_IMPORTED_MODULE_1__["default"])(enabledElement);
    		});

    		/***/ }),

    		/***/ "./drawInvalidated.js":
    		/*!****************************!*\
    		  !*** ./drawInvalidated.js ***!
    		  \****************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enabledElements.js */ "./enabledElements.js");
    		/* harmony import */ var _internal_drawImage_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/drawImage.js */ "./internal/drawImage.js");
    		/**
    		 * This module is responsible for drawing invalidated enabled elements
    		 */


    		/**
    		 * Draws all invalidated enabled elements and clears the invalid flag after drawing it
    		 *
    		 * @returns {void}
    		 * @memberof Drawing
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function () {
    		  var enabledElements = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElements"])();

    		  for (var i = 0; i < enabledElements.length; i++) {
    		    var ee = enabledElements[i];

    		    if (ee.invalid === true) {
    		      Object(_internal_drawImage_js__WEBPACK_IMPORTED_MODULE_1__["default"])(ee, true);
    		    }
    		  }
    		});

    		/***/ }),

    		/***/ "./enable.js":
    		/*!*******************!*\
    		  !*** ./enable.js ***!
    		  \*******************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enabledElements.js */ "./enabledElements.js");
    		/* harmony import */ var _resize_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./resize.js */ "./resize.js");
    		/* harmony import */ var _internal_drawImageSync_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal/drawImageSync.js */ "./internal/drawImageSync.js");
    		/* harmony import */ var _internal_requestAnimationFrame_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./internal/requestAnimationFrame.js */ "./internal/requestAnimationFrame.js");
    		/* harmony import */ var _internal_tryEnableWebgl_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./internal/tryEnableWebgl.js */ "./internal/tryEnableWebgl.js");
    		/* harmony import */ var _triggerEvent_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./triggerEvent.js */ "./triggerEvent.js");
    		/* harmony import */ var _generateUUID_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./generateUUID.js */ "./generateUUID.js");
    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./events.js */ "./events.js");
    		/* harmony import */ var _internal_getCanvas_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./internal/getCanvas.js */ "./internal/getCanvas.js");









    		/**
    		 * @module Enable
    		 * This module is responsible for enabling an element to display images with cornerstone
    		 */

    		/**
    		 * Returns whether or not an Enabled Element has either a currently active image or
    		 * a non-empty Array of Enabled Element Layers.
    		 *
    		 * @param {EnabledElement} enabledElement An Enabled Element
    		 * @return {Boolean} Whether or not the Enabled Element has an active image or valid set of layers
    		 * @memberof Enable
    		 */

    		function hasImageOrLayers(enabledElement) {
    		  return enabledElement.image !== undefined || enabledElement.layers.length > 0;
    		}
    		/**
    		 * Enable an HTML Element for use in Cornerstone
    		 *
    		 * - If there is a Canvas already present within the HTMLElement, and it has the class
    		 * 'cornerstone-canvas', this function will use this existing Canvas instead of creating
    		 * a new one. This may be helpful when using libraries (e.g. React, Vue) which don't
    		 * want third parties to change the DOM.
    		 *
    		 * @param {HTMLElement} element An HTML Element enabled for Cornerstone
    		 * @param {Object} options Options for the enabledElement
    		 *
    		 * @return {void}
    		 * @memberof Enable
    		 */


    		/* harmony default export */ __webpack_exports__["default"] = (function (element, options) {
    		  if (element === undefined) {
    		    throw new Error('enable: parameter element cannot be undefined');
    		  } // If this enabled element has the option set for WebGL, we should
    		  // Check if this device actually supports it


    		  if (options && options.renderer && options.renderer.toLowerCase() === 'webgl') {
    		    Object(_internal_tryEnableWebgl_js__WEBPACK_IMPORTED_MODULE_4__["default"])(options);
    		  }

    		  var canvas = Object(_internal_getCanvas_js__WEBPACK_IMPORTED_MODULE_8__["default"])(element);
    		  var enabledElement = {
    		    element: element,
    		    canvas: canvas,
    		    image: undefined,
    		    // Will be set once image is loaded
    		    invalid: false,
    		    // True if image needs to be drawn, false if not
    		    needsRedraw: true,
    		    options: Object.assign({}, options),
    		    layers: [],
    		    data: {},
    		    renderingTools: {},
    		    uuid: Object(_generateUUID_js__WEBPACK_IMPORTED_MODULE_6__["default"])()
    		  };
    		  Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["addEnabledElement"])(enabledElement);
    		  Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_5__["default"])(_events_js__WEBPACK_IMPORTED_MODULE_7__["events"], _events_js__WEBPACK_IMPORTED_MODULE_7__["default"].ELEMENT_ENABLED, enabledElement);
    		  Object(_resize_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element, true);
    		  /**
    		   * Draw the image immediately
    		   *
    		   * @param {DOMHighResTimeStamp} timestamp The current time for when requestAnimationFrame starts to fire callbacks
    		   * @returns {void}
    		   * @memberof Drawing
    		   */

    		  function draw(timestamp) {
    		    if (enabledElement.canvas === undefined) {
    		      return;
    		    }

    		    var eventDetails = {
    		      enabledElement: enabledElement,
    		      timestamp: timestamp
    		    };
    		    Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_5__["default"])(enabledElement.element, _events_js__WEBPACK_IMPORTED_MODULE_7__["default"].PRE_RENDER, eventDetails);

    		    if (enabledElement.needsRedraw && hasImageOrLayers(enabledElement)) {
    		      Object(_internal_drawImageSync_js__WEBPACK_IMPORTED_MODULE_2__["default"])(enabledElement, enabledElement.invalid);
    		    }

    		    Object(_internal_requestAnimationFrame_js__WEBPACK_IMPORTED_MODULE_3__["default"])(draw);
    		  }

    		  draw();
    		});

    		/***/ }),

    		/***/ "./enabledElementData.js":
    		/*!*******************************!*\
    		  !*** ./enabledElementData.js ***!
    		  \*******************************/
    		/*! exports provided: getElementData, removeElementData */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getElementData", function() { return getElementData; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeElementData", function() { return removeElementData; });
    		/* harmony import */ var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enabledElements.js */ "./enabledElements.js");

    		/**
    		 * Retrieves any data for a Cornerstone enabledElement for a specific string
    		 * dataType
    		 *
    		 * @param {HTMLElement} element An HTML Element enabled for Cornerstone
    		 * @param {string} dataType A string name for an arbitrary set of data
    		 * @returns {*} Whatever data is stored for this enabled element
    		 */

    		function getElementData(element, dataType) {
    		  var ee = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElement"])(element);

    		  if (ee.data.hasOwnProperty(dataType) === false) {
    		    ee.data[dataType] = {};
    		  }

    		  return ee.data[dataType];
    		}
    		/**
    		 * Clears any data for a Cornerstone enabledElement for a specific string
    		 * dataType
    		 *
    		 * @param {HTMLElement} element An HTML Element enabled for Cornerstone
    		 * @param {string} dataType A string name for an arbitrary set of data
    		 *
    		 * @returns {void}
    		 */

    		function removeElementData(element, dataType) {
    		  var ee = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElement"])(element);
    		  delete ee.data[dataType];
    		}

    		/***/ }),

    		/***/ "./enabledElements.js":
    		/*!****************************!*\
    		  !*** ./enabledElements.js ***!
    		  \****************************/
    		/*! exports provided: getEnabledElement, addEnabledElement, getEnabledElementsByImageId, getEnabledElements */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getEnabledElement", function() { return getEnabledElement; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addEnabledElement", function() { return addEnabledElement; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getEnabledElementsByImageId", function() { return getEnabledElementsByImageId; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getEnabledElements", function() { return getEnabledElements; });
    		var enabledElements = [];
    		/**
    		 * @module EnabledElements
    		 */

    		/**
    		 * @module Objects
    		 */

    		/**
    		 * A two-dimensional vector
    		 *
    		 * @typedef {Object} vec2
    		 * @memberof Objects
    		 * @param {Number} x - The x distance
    		 * @param {Number} y - The y distance
    		 */

    		/**
    		 * VOI
    		 *
    		 * @typedef {Object} VOI
    		 * @memberof Objects
    		 * @param {Number} windowWidth - Window Width for display
    		 * @param {Number} windowCenter - Window Center for display
    		 */

    		/**
    		 * Lookup Table Array
    		 *
    		 * @typedef {Object} LUT
    		 * @memberof Objects
    		 * @property {Number} firstValueMapped
    		 * @property {Number} numBitsPerEntry
    		 * @property {Array} lut
    		 */

    		/**
    		 * Image Statistics Object
    		 *
    		 * @typedef {Object} ImageStats
    		 * @memberof Objects
    		 * @property {Number} [lastGetPixelDataTime] The time in ms taken to retrieve stored pixels required to draw the image
    		 * @property {Number} [lastStoredPixelDataToCanvasImageDataTime] The time in ms taken to map from stored pixel array to canvas pixel array
    		 * @property {Number} [lastPutImageDataTime] The time in ms taken for putImageData to put the canvas pixel data into the canvas context
    		 * @property {Number} [lastRenderTime] The total time in ms taken for the entire rendering function to run
    		 * @property {Number} [lastLutGenerateTime] The time in ms taken to generate the lookup table for the image
    		 */

    		/**
    		 * An Image Object in Cornerstone
    		 *
    		 * @typedef {Object} Image
    		 * @memberof Objects
    		 * @property {string} imageId - The imageId associated with this image object
    		 * @property {Number} minPixelValue - the minimum stored pixel value in the image
    		 * @property {Number} maxPixelValue - the maximum stored pixel value in the image
    		 * @property {Number} slope - the rescale slope to convert stored pixel values to modality pixel values or 1 if not specified
    		 * @property {Number} intercept - the rescale intercept used to convert stored pixel values to modality values or 0 if not specified
    		 * @property {Number} windowCenter - the default windowCenter to apply to the image
    		 * @property {Number} windowWidth - the default windowWidth to apply to the image
    		 * @property {function} getPixelData - a function that returns the underlying pixel data. An array of integers for grayscale and an array of RGBA for color
    		 * @property {function} getImageData - a function that returns a canvas imageData object for the image. This is only needed for color images
    		 * @property {function} getCanvas - a function that returns a canvas element with the image loaded into it. This is only needed for color images.
    		 * @property {function} getImage - a function that returns a JavaScript Image object with the image data. This is optional and typically used for images encoded in standard web JPEG and PNG formats
    		 * @property {Number} rows - number of rows in the image. This is the same as height but duplicated for convenience
    		 * @property {Number} columns - number of columns in the image. This is the same as width but duplicated for convenience
    		 * @property {Number} height - the height of the image. This is the same as rows but duplicated for convenience
    		 * @property {Number} width - the width of the image. This is the same as columns but duplicated for convenience
    		 * @property {Boolean} color - true if pixel data is RGB, false if grayscale
    		 * @property {Object} lut - The Lookup Table
    		 * @property {Boolean} rgba - Is the color pixel data stored in RGBA?
    		 * @property {Number} columnPixelSpacing - horizontal distance between the middle of each pixel (or width of each pixel) in mm or undefined if not known
    		 * @property {Number} rowPixelSpacing - vertical distance between the middle of each pixel (or height of each pixel) in mm or undefined if not known
    		 * @property {Boolean} invert - true if the the image should initially be displayed be inverted, false if not. This is here mainly to support DICOM images with a photometric interpretation of MONOCHROME1
    		 * @property {Number} sizeInBytes - the number of bytes used to store the pixels for this image.
    		 * @property {Boolean} [falseColor=false] - Whether or not the image has undergone false color mapping
    		 * @property {Array} [origPixelData] - Original pixel data for an image after it has undergone false color mapping
    		 * @property {ImageStats} [stats] - Statistics for the last redraw of the image
    		 * @property {Object} cachedLut - Cached Lookup Table for this image.
    		 * @property {String|Colormap} [colormap] - Depreacted. Use viewport.colormap instead. an optional colormap ID or colormap object (from colors/colormap.js). This will be applied during rendering to convert the image to pseudocolor
    		 * @property {Boolean} [labelmap=false] - whether or not to render this image as a label map (i.e. skip modality and VOI LUT pipelines and use only a color lookup table)
    		 */

    		/**
    		 * A Viewport Settings Object Cornerstone
    		 *
    		 * @typedef {Object} Viewport
    		 * @memberof Objects
    		 * @property {Number} [scale=1.0] - The scale applied to the image. A scale of 1.0 will display no zoom (one image pixel takes up one screen pixel). A scale of 2.0 will be double zoom and a scale of .5 will be zoomed out by 2x
    		 * @property {vec2} [translation] - An object with properties x and y which describe the translation to apply in the pixel coordinate system. Note that the image is initially displayed centered in the enabled element with a x and y translation of 0 and 0 respectively.
    		 * @property {VOI} [voi] - an object with properties windowWidth and windowCenter.
    		 * @property {boolean} [invert=false] - Whether or not the image is inverted.
    		 * @property {boolean} [pixelReplication=false] - true if the image smooth / interpolation should be used when zoomed in on the image or false if pixel replication should be used.
    		 * @property {boolean} [hflip=false] - true if the image is flipped horizontally. Default is false
    		 * @property {boolean} [vflip=false] - true if the image is flipped vertically. Default is false
    		 * @property {Number} [rotation=0] - the rotation of the image (90 degree increments). Default is 0
    		 * @property {LUT} [modalityLUT] - the modality LUT to apply or undefined if none
    		 * @property {LUT} [voiLUT] - the modality LUT to apply or undefined if none
    		 * @property {String|Colormap} [colormap] - an optional colormap ID or colormap object (from colors/colormap.js). This will be applied during rendering to convert the image to pseudocolor
    		 * @property {Boolean} [labelmap=false] - whether or not to render this image as a label map (i.e. skip modality and VOI LUT pipelines and use only a color lookup table)
    		 */

    		/**
    		 * An Enabled Element in Cornerstone
    		 *
    		 * @typedef {Object} EnabledElement
    		 * @memberof Objects
    		 * @property {HTMLElement} element - The DOM element which has been enabled for use by Cornerstone
    		 * @property {Image} [image] - The image currently displayed in the enabledElement
    		 * @property {Viewport} [viewport] - The current viewport settings of the enabledElement
    		 * @property {HTMLCanvasElement} [canvas] - The current canvas for this enabledElement
    		 * @property {Boolean} invalid - Whether or not the image pixel data underlying the enabledElement has been changed, necessitating a redraw
    		 * @property {Boolean} needsRedraw - A flag for triggering a redraw of the canvas without re-retrieving the pixel data, since it remains valid
    		 * @property {EnabledElementLayer[]} [layers] - The layers that have been added to the enabledElement
    		 * @property {Boolean} [syncViewports] - Whether or not to synchronize the viewport parameters
    		 * for each of the enabled element's layers
    		 * @property {Boolean} [lastSyncViewportsState] - The previous state for the sync viewport boolean
    		 */

    		/**
    		 * An Enabled Element Layer in Cornerstone
    		 *
    		 * @typedef {Object} EnabledElementLayer
    		 * @memberof Objects
    		 * @property {HTMLElement} element - The DOM element which has been enabled for use by Cornerstone
    		 * @property {Image} [image] - The image currently displayed in the enabledElement
    		 * @property {Viewport} [viewport] - The current viewport settings of the enabledElement
    		 * @property {HTMLCanvasElement} [canvas] - The current canvas for this enabledElement
    		 * @property {Object} [options] - Layer drawing options
    		 * @property {Boolean} invalid - Whether or not the image pixel data underlying the enabledElement has been changed, necessitating a redraw
    		 * @property {Boolean} needsRedraw - A flag for triggering a redraw of the canvas without re-retrieving the pixel data, since it remains valid
    		 */

    		/**
    		 * An Image Load Object
    		 *
    		 * @typedef {Object} ImageLoadObject
    		 * @memberof Objects
    		 * @property {Promise} promise - The Promise tracking the loading of this image
    		 * @property {Function|undefined} cancelFn - A function to cancel the image load request
    		 */

    		/**
    		 * Retrieves a Cornerstone Enabled Element object
    		 *
    		 * @param {HTMLElement} element An HTML Element enabled for Cornerstone
    		 *
    		 * @returns {EnabledElement} A Cornerstone Enabled Element
    		 * @memberof EnabledElements
    		 */

    		function getEnabledElement(element) {
    		  if (element === undefined) {
    		    throw new Error('getEnabledElement: parameter element must not be undefined');
    		  }

    		  for (var i = 0; i < enabledElements.length; i++) {
    		    if (enabledElements[i].element === element) {
    		      return enabledElements[i];
    		    }
    		  }

    		  throw new Error('element not enabled');
    		}
    		/**
    		 * Adds a Cornerstone Enabled Element object to the central store of enabledElements
    		 *
    		 * @param {EnabledElement} enabledElement A Cornerstone enabledElement Object
    		 * @returns {void}
    		 * @memberof EnabledElements
    		 */

    		function addEnabledElement(enabledElement) {
    		  if (enabledElement === undefined) {
    		    throw new Error('getEnabledElement: enabledElement element must not be undefined');
    		  }

    		  enabledElements.push(enabledElement);
    		}
    		/**
    		 * Adds a Cornerstone Enabled Element object to the central store of enabledElements
    		 *
    		 * @param {string} imageId A Cornerstone Image ID
    		 * @returns {EnabledElement[]} An Array of Cornerstone enabledElement Objects
    		 * @memberof EnabledElements
    		 */

    		function getEnabledElementsByImageId(imageId) {
    		  var ees = [];
    		  enabledElements.forEach(function (enabledElement) {
    		    if (enabledElement.image && enabledElement.image.imageId === imageId) {
    		      ees.push(enabledElement);
    		    }
    		  });
    		  return ees;
    		}
    		/**
    		 * Retrieve all of the currently enabled Cornerstone elements
    		 *
    		 * @return {EnabledElement[]} An Array of Cornerstone enabledElement Objects
    		 * @memberof EnabledElements
    		 */

    		function getEnabledElements() {
    		  return enabledElements;
    		}

    		/***/ }),

    		/***/ "./events.js":
    		/*!*******************!*\
    		  !*** ./events.js ***!
    		  \*******************/
    		/*! exports provided: default, events */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "events", function() { return events; });
    		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

    		function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

    		function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); return Constructor; }

    		var EVENTS = {
    		  NEW_IMAGE: 'cornerstonenewimage',
    		  INVALIDATED: 'cornerstoneinvalidated',
    		  PRE_RENDER: 'cornerstoneprerender',
    		  IMAGE_CACHE_MAXIMUM_SIZE_CHANGED: 'cornerstoneimagecachemaximumsizechanged',
    		  IMAGE_CACHE_PROMISE_REMOVED: 'cornerstoneimagecachepromiseremoved',
    		  IMAGE_CACHE_FULL: 'cornerstoneimagecachefull',
    		  IMAGE_CACHE_CHANGED: 'cornerstoneimagecachechanged',
    		  WEBGL_TEXTURE_REMOVED: 'cornerstonewebgltextureremoved',
    		  WEBGL_TEXTURE_CACHE_FULL: 'cornerstonewebgltexturecachefull',
    		  IMAGE_LOADED: 'cornerstoneimageloaded',
    		  IMAGE_LOAD_PROGRESS: 'cornerstoneimageloadprogress',
    		  IMAGE_LOAD_FAILED: 'cornerstoneimageloadfailed',
    		  ELEMENT_RESIZED: 'cornerstoneelementresized',
    		  IMAGE_RENDERED: 'cornerstoneimagerendered',
    		  LAYER_ADDED: 'cornerstonelayeradded',
    		  LAYER_REMOVED: 'cornerstonelayerremoved',
    		  ACTIVE_LAYER_CHANGED: 'cornerstoneactivelayerchanged',
    		  ELEMENT_DISABLED: 'cornerstoneelementdisabled',
    		  ELEMENT_ENABLED: 'cornerstoneelementenabled'
    		};
    		/* harmony default export */ __webpack_exports__["default"] = (EVENTS);
    		/**
    		 * EventTarget - Provides the [EventTarget](https://developer.mozilla.org/en-US/docs/Web/API/EventTarget) interface
    		 *
    		 * @class
    		 * @memberof Polyfills
    		 */

    		var EventTarget = /*#__PURE__*/function () {
    		  function EventTarget() {
    		    _classCallCheck(this, EventTarget);

    		    this.listeners = {};
    		    this.namespaces = {};
    		  }

    		  _createClass(EventTarget, [{
    		    key: "addEventNamespaceListener",
    		    value: function addEventNamespaceListener(type, callback) {
    		      if (type.indexOf('.') <= 0) {
    		        return;
    		      }

    		      this.namespaces[type] = callback;
    		      this.addEventListener(type.split('.')[0], callback);
    		    }
    		  }, {
    		    key: "removeEventNamespaceListener",
    		    value: function removeEventNamespaceListener(type) {
    		      if (type.indexOf('.') <= 0 || !this.namespaces[type]) {
    		        return;
    		      }

    		      this.removeEventListener(type.split('.')[0], this.namespaces[type]);
    		      delete this.namespaces[type];
    		    }
    		  }, {
    		    key: "addEventListener",
    		    value: function addEventListener(type, callback) {
    		      // Check if it is an event namespace
    		      if (type.indexOf('.') > 0) {
    		        this.addEventNamespaceListener(type, callback);
    		        return;
    		      }

    		      if (!(type in this.listeners)) {
    		        this.listeners[type] = [];
    		      }

    		      this.listeners[type].push(callback);
    		    }
    		  }, {
    		    key: "removeEventListener",
    		    value: function removeEventListener(type, callback) {
    		      // Check if it is an event namespace
    		      if (type.indexOf('.') > 0) {
    		        this.removeEventNamespaceListener(type);
    		        return;
    		      }

    		      if (!(type in this.listeners)) {
    		        return;
    		      }

    		      var stack = this.listeners[type];

    		      for (var i = 0, l = stack.length; i < l; i++) {
    		        if (stack[i] === callback) {
    		          stack.splice(i, 1);
    		          return;
    		        }
    		      }
    		    }
    		  }, {
    		    key: "dispatchEvent",
    		    value: function dispatchEvent(event) {
    		      if (!(event.type in this.listeners)) {
    		        return true;
    		      }

    		      var stack = this.listeners[event.type].slice();

    		      for (var i = 0, l = stack.length; i < l; i++) {
    		        stack[i].call(this, event);
    		      }

    		      return !event.defaultPrevented;
    		    }
    		  }]);

    		  return EventTarget;
    		}();

    		var events = new EventTarget();

    		/***/ }),

    		/***/ "./falseColorMapping.js":
    		/*!******************************!*\
    		  !*** ./falseColorMapping.js ***!
    		  \******************************/
    		/*! exports provided: convertImageToFalseColorImage, convertToFalseColorImage, restoreImage */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "convertImageToFalseColorImage", function() { return convertImageToFalseColorImage; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "convertToFalseColorImage", function() { return convertToFalseColorImage; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "restoreImage", function() { return restoreImage; });
    		/* harmony import */ var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enabledElements.js */ "./enabledElements.js");
    		/* harmony import */ var _pixelDataToFalseColorData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pixelDataToFalseColorData.js */ "./pixelDataToFalseColorData.js");
    		/* harmony import */ var _colors_colormap_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./colors/colormap.js */ "./colors/colormap.js");



    		/**
    		 * Retrieves the minimum and maximum pixel values from an Array of pixel data
    		 *
    		 * @param {Array} pixelData The input pixel data array
    		 *
    		 * @returns {{minPixelValue: Number, maxPixelValue: Number}} The minimum and maximum pixel values in the input Array
    		 */

    		function getPixelValues(pixelData) {
    		  var minPixelValue = Number.MAX_VALUE;
    		  var maxPixelValue = Number.MIN_VALUE;
    		  var len = pixelData.length;
    		  var pixel;

    		  for (var i = 0; i < len; i++) {
    		    pixel = pixelData[i];
    		    minPixelValue = minPixelValue < pixel ? minPixelValue : pixel;
    		    maxPixelValue = maxPixelValue > pixel ? maxPixelValue : pixel;
    		  }

    		  return {
    		    minPixelValue: minPixelValue,
    		    maxPixelValue: maxPixelValue
    		  };
    		}
    		/**
    		 * Retrieve a function that will allow an image object to be reset to its original form
    		 * after a false color mapping transformation
    		 *
    		 * @param {Image} image A Cornerstone Image Object
    		 *
    		 * @return {Function} A function for resetting an Image Object to its original form
    		 */


    		function getRestoreImageMethod(image) {
    		  if (image.restore) {
    		    return image.restore;
    		  }

    		  var color = image.color;
    		  var rgba = image.rgba;
    		  var cachedLut = image.cachedLut;
    		  var slope = image.slope;
    		  var windowWidth = image.windowWidth;
    		  var windowCenter = image.windowCenter;
    		  var minPixelValue = image.minPixelValue;
    		  var maxPixelValue = image.maxPixelValue;
    		  return function () {
    		    image.color = color;
    		    image.rgba = rgba;
    		    image.cachedLut = cachedLut;
    		    image.slope = slope;
    		    image.windowWidth = windowWidth;
    		    image.windowCenter = windowCenter;
    		    image.minPixelValue = minPixelValue;
    		    image.maxPixelValue = maxPixelValue;

    		    if (image.origPixelData) {
    		      var pixelData = image.origPixelData;

    		      image.getPixelData = function () {
    		        return pixelData;
    		      };
    		    } // Remove some attributes added by false color mapping


    		    image.origPixelData = undefined;
    		    image.colormapId = undefined;
    		    image.falseColor = undefined;
    		  };
    		} //
    		// Then we need to make sure it will be converted into a colormap object if it's as string.

    		/**
    		 * User can pass a colormap or its id as string to some of these public functions.
    		 * Then we need to make sure it will be converted into a colormap object if it's a string.
    		 *
    		 * @param {*} colormap A colormap ID or Object
    		 * @return {*} The colormap
    		 */


    		function ensuresColormap(colormap) {
    		  if (colormap && typeof colormap === 'string') {
    		    colormap = Object(_colors_colormap_js__WEBPACK_IMPORTED_MODULE_2__["getColormap"])(colormap);
    		  }

    		  return colormap;
    		}
    		/**
    		 * Restores a false color image to its original version
    		 *
    		 * @param {Image} image A Cornerstone Image Object
    		 * @returns {Boolean} True if the image object had a valid restore function, which was run. Otherwise, false.
    		 */


    		function restoreImage(image) {
    		  if (image.restore && typeof image.restore === 'function') {
    		    image.restore();
    		    return true;
    		  }

    		  return false;
    		}
    		/**
    		 * Convert an image to a false color image
    		 *
    		 * @param {Image} image A Cornerstone Image Object
    		 * @param {String|Object} colormap - it can be a colormap object or a colormap id (string)
    		 *
    		 * @returns {Boolean} - Whether or not the image has been converted to a false color image
    		 */


    		function convertImageToFalseColorImage(image, colormap) {
    		  if (image.color && !image.falseColor) {
    		    throw new Error('Color transforms are not implemented yet');
    		  } // User can pass a colormap id or a colormap object


    		  colormap = ensuresColormap(colormap);
    		  var colormapId = colormap.getId(); // Doesn't do anything if colormapId hasn't changed

    		  if (image.colormapId === colormapId) {
    		    // It has already being converted into a false color image
    		    // Using the colormapId passed as parameter
    		    return false;
    		  } // Restore the image attributes updated when converting to a false color image


    		  restoreImage(image); // Convert the image to a false color image

    		  if (colormapId) {
    		    var minPixelValue = image.minPixelValue || 0;
    		    var maxPixelValue = image.maxPixelValue || 255;
    		    image.restore = getRestoreImageMethod(image);
    		    var lookupTable = colormap.createLookupTable();
    		    lookupTable.setTableRange(minPixelValue, maxPixelValue); // Update the pixel data and render the new image

    		    Object(_pixelDataToFalseColorData_js__WEBPACK_IMPORTED_MODULE_1__["default"])(image, lookupTable); // Update min and max pixel values

    		    var pixelValues = getPixelValues(image.getPixelData());
    		    image.minPixelValue = pixelValues.minPixelValue;
    		    image.maxPixelValue = pixelValues.maxPixelValue;
    		    image.windowWidth = 255;
    		    image.windowCenter = 128; // Cache the last colormapId used for performance
    		    // Then it doesn't need to be re-rendered on next
    		    // Time if the user hasn't updated it

    		    image.colormapId = colormapId;
    		  } // Return `true` to tell the caller that the image has got updated


    		  return true;
    		}
    		/**
    		 * Convert the image of a element to a false color image
    		 *
    		 * @param {HTMLElement} element The Cornerstone element
    		 * @param {*} colormap - it can be a colormap object or a colormap id (string)
    		 *
    		 * @returns {void}
    		 */


    		function convertToFalseColorImage(element, colormap) {
    		  var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElement"])(element);
    		  return convertImageToFalseColorImage(enabledElement.image, colormap);
    		}



    		/***/ }),

    		/***/ "./fitToWindow.js":
    		/*!************************!*\
    		  !*** ./fitToWindow.js ***!
    		  \************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enabledElements.js */ "./enabledElements.js");
    		/* harmony import */ var _updateImage_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./updateImage.js */ "./updateImage.js");
    		/* harmony import */ var _internal_getImageFitScale_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal/getImageFitScale.js */ "./internal/getImageFitScale.js");



    		/**
    		 * Adjusts an image's scale and translation so the image is centered and all pixels
    		 * in the image are viewable.
    		 *
    		 * @param {HTMLElement} element The Cornerstone element to update
    		 * @returns {void}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (element) {
    		  var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElement"])(element);
    		  var image = enabledElement.image; // The new scale is the minimum of the horizontal and vertical scale values

    		  enabledElement.viewport.scale = Object(_internal_getImageFitScale_js__WEBPACK_IMPORTED_MODULE_2__["default"])(enabledElement.canvas, image, enabledElement.viewport.rotation).scaleFactor;
    		  enabledElement.viewport.translation.x = 0;
    		  enabledElement.viewport.translation.y = 0;
    		  Object(_updateImage_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element);
    		});

    		/***/ }),

    		/***/ "./generateUUID.js":
    		/*!*************************!*\
    		  !*** ./generateUUID.js ***!
    		  \*************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/**
    		* Generates a UUID for the enabledElement.
    		*
    		* @return {String} the UUID.
    		*/
    		/* harmony default export */ __webpack_exports__["default"] = (function () {
    		  // https://stackoverflow.com/a/8809472/9208320 Public Domain/MIT

    		  /* eslint no-bitwise: ["error", { "allow": ["&","|"] }] */
    		  var d = new Date().getTime();

    		  if (typeof performance !== 'undefined' && typeof performance.now === 'function') {
    		    d += performance.now(); // Use high-precision timer if available
    		  }

    		  return 'x.x.x.x.x.x.xxxx.xxx.x.x.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
    		    var r = (d + Math.random() * 16) % 16 | 0;
    		    d = Math.floor(d / 16);
    		    return (c === 'x' ? r : r & 0x3 | 0x8).toString(16);
    		  });
    		});

    		/***/ }),

    		/***/ "./getDefaultViewportForImage.js":
    		/*!***************************************!*\
    		  !*** ./getDefaultViewportForImage.js ***!
    		  \***************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enabledElements.js */ "./enabledElements.js");
    		/* harmony import */ var _internal_getDefaultViewport_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/getDefaultViewport.js */ "./internal/getDefaultViewport.js");


    		/**
    		 * Returns a default viewport for display the specified image on the specified
    		 * enabled element.  The default viewport is fit to window
    		 *
    		 * @param {HTMLElement} element The DOM element enabled for Cornerstone
    		 * @param {Image} image A Cornerstone Image Object
    		 *
    		 * @returns {Viewport} The default viewport for the image
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (element, image) {
    		  var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElement"])(element);
    		  return Object(_internal_getDefaultViewport_js__WEBPACK_IMPORTED_MODULE_1__["default"])(enabledElement.canvas, image);
    		});

    		/***/ }),

    		/***/ "./getImage.js":
    		/*!*********************!*\
    		  !*** ./getImage.js ***!
    		  \*********************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enabledElements.js */ "./enabledElements.js");

    		/**
    		 * Returns the currently displayed image for an element or undefined if no image has
    		 * been displayed yet
    		 *
    		 * @param {HTMLElement} element The DOM element enabled for Cornerstone
    		 * @returns {Image} The Cornerstone Image Object displayed in this element
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (element) {
    		  var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElement"])(element);
    		  return enabledElement.image;
    		});

    		/***/ }),

    		/***/ "./getPixels.js":
    		/*!**********************!*\
    		  !*** ./getPixels.js ***!
    		  \**********************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enabledElements.js */ "./enabledElements.js");
    		/* harmony import */ var _getStoredPixels_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getStoredPixels.js */ "./getStoredPixels.js");
    		/* harmony import */ var _internal_getModalityLUT_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal/getModalityLUT.js */ "./internal/getModalityLUT.js");



    		/**
    		 * Retrieves an array of pixels from a rectangular region with modality LUT transformation applied
    		 *
    		 * @param {HTMLElement} element The DOM element enabled for Cornerstone
    		 * @param {Number} x The x coordinate of the top left corner of the sampling rectangle in image coordinates
    		 * @param {Number} y The y coordinate of the top left corner of the sampling rectangle in image coordinates
    		 * @param {Number} width The width of the of the sampling rectangle in image coordinates
    		 * @param {Number} height The height of the of the sampling rectangle in image coordinates
    		 * @returns {Array} The modality pixel value of the pixels in the sampling rectangle
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (element, x, y, width, height) {
    		  var storedPixels = Object(_getStoredPixels_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element, x, y, width, height);
    		  var ee = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElement"])(element);
    		  var mlutfn = Object(_internal_getModalityLUT_js__WEBPACK_IMPORTED_MODULE_2__["default"])(ee.image.slope, ee.image.intercept, ee.viewport.modalityLUT);
    		  return storedPixels.map(mlutfn);
    		});

    		/***/ }),

    		/***/ "./getStoredPixels.js":
    		/*!****************************!*\
    		  !*** ./getStoredPixels.js ***!
    		  \****************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enabledElements.js */ "./enabledElements.js");

    		/**
    		 * Retrieves an array of stored pixel values from a rectangular region of an image
    		 *
    		 * @param {HTMLElement} element The DOM element enabled for Cornerstone
    		 * @param {Number} x The x coordinate of the top left corner of the sampling rectangle in image coordinates
    		 * @param {Number} y The y coordinate of the top left corner of the sampling rectangle in image coordinates
    		 * @param {Number} width The width of the of the sampling rectangle in image coordinates
    		 * @param {Number} height The height of the of the sampling rectangle in image coordinates
    		 * @returns {Array} The stored pixel value of the pixels in the sampling rectangle
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (element, x, y, width, height) {
    		  if (element === undefined) {
    		    throw new Error('getStoredPixels: parameter element must not be undefined');
    		  }

    		  x = Math.round(x);
    		  y = Math.round(y);
    		  var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElement"])(element);
    		  var storedPixels = [];
    		  var index = 0;
    		  var pixelData = enabledElement.image.getPixelData();

    		  for (var row = 0; row < height; row++) {
    		    for (var column = 0; column < width; column++) {
    		      var spIndex = (row + y) * enabledElement.image.columns + (column + x);
    		      storedPixels[index++] = pixelData[spIndex];
    		    }
    		  }

    		  return storedPixels;
    		});

    		/***/ }),

    		/***/ "./getViewport.js":
    		/*!************************!*\
    		  !*** ./getViewport.js ***!
    		  \************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enabledElements.js */ "./enabledElements.js");

    		/**
    		 * Retrieves the viewport for the specified enabled element
    		 *
    		 * @param {HTMLElement} element The DOM element enabled for Cornerstone
    		 * @returns {Viewport|undefined} The Cornerstone Viewport settings for this element, if they exist. Otherwise, undefined
    		 * @memberof ViewportSettings
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (element) {
    		  var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElement"])(element);
    		  var viewport = enabledElement.viewport;

    		  if (viewport === undefined) {
    		    return;
    		  } // Return a copy of the viewport


    		  return Object.assign({}, viewport);
    		});

    		/***/ }),

    		/***/ "./imageCache.js":
    		/*!***********************!*\
    		  !*** ./imageCache.js ***!
    		  \***********************/
    		/*! exports provided: cachedImages, setMaximumSizeBytes, putImageLoadObject, getImageLoadObject, removeImageLoadObject, getCacheInfo, purgeCache, changeImageIdCacheSize, default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cachedImages", function() { return cachedImages; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setMaximumSizeBytes", function() { return setMaximumSizeBytes; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "putImageLoadObject", function() { return putImageLoadObject; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getImageLoadObject", function() { return getImageLoadObject; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeImageLoadObject", function() { return removeImageLoadObject; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCacheInfo", function() { return getCacheInfo; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "purgeCache", function() { return purgeCache; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "changeImageIdCacheSize", function() { return changeImageIdCacheSize; });
    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./events.js */ "./events.js");
    		/* harmony import */ var _triggerEvent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./triggerEvent.js */ "./triggerEvent.js");


    		/**
    		 * This module deals with caching images
    		 * @module ImageCache
    		 */

    		var maximumSizeInBytes = 1024 * 1024 * 1024; // 1 GB

    		var cacheSizeInBytes = 0; // Dictionary of imageId to cachedImage objects

    		var imageCacheDict = {}; // Array of cachedImage objects

    		var cachedImages = [];
    		/** Sets the maximum size of cache and purges cache contents if necessary.
    		 *
    		 * @param {number} numBytes The maximun size that the cache should occupy.
    		 * @returns {void}
    		 */

    		function setMaximumSizeBytes(numBytes) {
    		  if (numBytes === undefined) {
    		    throw new Error('setMaximumSizeBytes: parameter numBytes must not be undefined');
    		  }

    		  if (numBytes.toFixed === undefined) {
    		    throw new Error('setMaximumSizeBytes: parameter numBytes must be a number');
    		  }

    		  maximumSizeInBytes = numBytes;
    		  Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_events_js__WEBPACK_IMPORTED_MODULE_0__["events"], _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].IMAGE_CACHE_MAXIMUM_SIZE_CHANGED);
    		  purgeCacheIfNecessary();
    		}
    		/**
    		 * Purges the cache if size exceeds maximum
    		 * @returns {void}
    		 */

    		function purgeCacheIfNecessary() {
    		  // If max cache size has not been exceeded, do nothing
    		  if (cacheSizeInBytes <= maximumSizeInBytes) {
    		    return;
    		  } // Cache size has been exceeded, create list of images sorted by timeStamp
    		  // So we can purge the least recently used image


    		  function compare(a, b) {
    		    if (a.timeStamp > b.timeStamp) {
    		      return -1;
    		    }

    		    if (a.timeStamp < b.timeStamp) {
    		      return 1;
    		    }

    		    return 0;
    		  }

    		  cachedImages.sort(compare); // Remove images as necessary)

    		  while (cacheSizeInBytes > maximumSizeInBytes) {
    		    var lastCachedImage = cachedImages[cachedImages.length - 1];
    		    var imageId = lastCachedImage.imageId;
    		    removeImageLoadObject(imageId);
    		    Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_events_js__WEBPACK_IMPORTED_MODULE_0__["events"], _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].IMAGE_CACHE_PROMISE_REMOVED, {
    		      imageId: imageId
    		    });
    		  }

    		  var cacheInfo = getCacheInfo();
    		  Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_events_js__WEBPACK_IMPORTED_MODULE_0__["events"], _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].IMAGE_CACHE_FULL, cacheInfo);
    		}
    		/**
    		 * Puts a new image loader into the cache
    		 *
    		 * @param {string} imageId ImageId of the image loader
    		 * @param {Object} imageLoadObject The object that is loading or loaded the image
    		 * @returns {void}
    		 */


    		function putImageLoadObject(imageId, imageLoadObject) {
    		  if (imageId === undefined) {
    		    throw new Error('putImageLoadObject: imageId must not be undefined');
    		  }

    		  if (imageLoadObject.promise === undefined) {
    		    throw new Error('putImageLoadObject: imageLoadObject.promise must not be undefined');
    		  }

    		  if (imageCacheDict.hasOwnProperty(imageId) === true) {
    		    throw new Error('putImageLoadObject: imageId already in cache');
    		  }

    		  if (imageLoadObject.cancelFn && typeof imageLoadObject.cancelFn !== 'function') {
    		    throw new Error('putImageLoadObject: imageLoadObject.cancelFn must be a function');
    		  }

    		  var cachedImage = {
    		    loaded: false,
    		    imageId: imageId,
    		    sharedCacheKey: undefined,
    		    // The sharedCacheKey for this imageId.  undefined by default
    		    imageLoadObject: imageLoadObject,
    		    timeStamp: Date.now(),
    		    sizeInBytes: 0
    		  };
    		  imageCacheDict[imageId] = cachedImage;
    		  cachedImages.push(cachedImage);
    		  imageLoadObject.promise.then(function (image) {
    		    if (cachedImages.indexOf(cachedImage) === -1) {
    		      // If the image has been purged before being loaded, we stop here.
    		      return;
    		    }

    		    cachedImage.loaded = true;
    		    cachedImage.image = image;

    		    if (image.sizeInBytes === undefined) {
    		      throw new Error('putImageLoadObject: image.sizeInBytes must not be undefined');
    		    }

    		    if (image.sizeInBytes.toFixed === undefined) {
    		      throw new Error('putImageLoadObject: image.sizeInBytes is not a number');
    		    }

    		    cachedImage.sizeInBytes = image.sizeInBytes;
    		    cacheSizeInBytes += cachedImage.sizeInBytes;
    		    var eventDetails = {
    		      action: 'addImage',
    		      image: cachedImage
    		    };
    		    Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_events_js__WEBPACK_IMPORTED_MODULE_0__["events"], _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].IMAGE_CACHE_CHANGED, eventDetails);
    		    cachedImage.sharedCacheKey = image.sharedCacheKey;
    		    purgeCacheIfNecessary();
    		  }, function () {
    		    var cachedImage = imageCacheDict[imageId];
    		    cachedImages.splice(cachedImages.indexOf(cachedImage), 1);
    		    delete imageCacheDict[imageId];
    		  });
    		}
    		/**
    		 * Retuns the object that is loading a given imageId
    		 *
    		 * @param {string} imageId Image ID
    		 * @returns {void}
    		 */

    		function getImageLoadObject(imageId) {
    		  if (imageId === undefined) {
    		    throw new Error('getImageLoadObject: imageId must not be undefined');
    		  }

    		  var cachedImage = imageCacheDict[imageId];

    		  if (cachedImage === undefined) {
    		    return;
    		  } // Bump time stamp for cached image


    		  cachedImage.timeStamp = Date.now();
    		  return cachedImage.imageLoadObject;
    		}
    		/**
    		 * Removes the image loader associated with a given Id from the cache
    		 *
    		 * @param {string} imageId Image ID
    		 * @returns {void}
    		 */

    		function removeImageLoadObject(imageId) {
    		  if (imageId === undefined) {
    		    throw new Error('removeImageLoadObject: imageId must not be undefined');
    		  }

    		  var cachedImage = imageCacheDict[imageId];

    		  if (cachedImage === undefined) {
    		    throw new Error('removeImageLoadObject: imageId was not present in imageCache');
    		  }

    		  cachedImages.splice(cachedImages.indexOf(cachedImage), 1);
    		  cacheSizeInBytes -= cachedImage.sizeInBytes;
    		  var eventDetails = {
    		    action: 'deleteImage',
    		    image: cachedImage
    		  };
    		  Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_events_js__WEBPACK_IMPORTED_MODULE_0__["events"], _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].IMAGE_CACHE_CHANGED, eventDetails);
    		  decache(cachedImage.imageLoadObject);
    		  delete imageCacheDict[imageId];
    		}
    		/**
    		 * @typedef {Object} CacheInformation
    		 * @property {number} maximumSizeInBytes  The maximum size of the cache in bytes
    		 * @property {number} cacheSizeInBytes Currently occupied space in the cache in bytes
    		 * @property {number} numberOfImagesCached Number of ImageLoaders in the cache
    		 * @returns {void}
    		 */

    		/**
    		 * Gets the current state of the cache
    		 * @returns {void}
    		 */

    		function getCacheInfo() {
    		  return {
    		    maximumSizeInBytes: maximumSizeInBytes,
    		    cacheSizeInBytes: cacheSizeInBytes,
    		    numberOfImagesCached: cachedImages.length
    		  };
    		} // This method should only be called by `removeImageLoadObject` because it's
    		// The one that knows how to deal with shared cache keys and cache size.

    		/**
    		 * INTERNAL: Removes and ImageLoader from the cache
    		 *
    		 * @param {Object} imageLoadObject Image Loader Object to remove
    		 * @returns {void}
    		 */

    		function decache(imageLoadObject) {
    		  imageLoadObject.promise.then(function () {
    		    if (imageLoadObject.decache) {
    		      imageLoadObject.decache();
    		    }
    		  }, function () {
    		    if (imageLoadObject.decache) {
    		      imageLoadObject.decache();
    		    }
    		  });
    		}
    		/**
    		 * Removes all images from cache
    		 * @returns {void}
    		 */


    		function purgeCache() {
    		  while (cachedImages.length > 0) {
    		    var removedCachedImage = cachedImages[0];
    		    removeImageLoadObject(removedCachedImage.imageId);
    		  }
    		}
    		/**
    		 * Updates the space than an image is using in the cache
    		 *
    		 * @param {string} imageId Image ID
    		 * @param {number} newCacheSize New image size
    		 * @returns {void}
    		 */

    		function changeImageIdCacheSize(imageId, newCacheSize) {
    		  var cacheEntry = imageCacheDict[imageId];

    		  if (cacheEntry) {
    		    cacheEntry.imageLoadObject.promise.then(function (image) {
    		      var cacheSizeDifference = newCacheSize - image.sizeInBytes;
    		      image.sizeInBytes = newCacheSize;
    		      cacheEntry.sizeInBytes = newCacheSize;
    		      cacheSizeInBytes += cacheSizeDifference;
    		      var eventDetails = {
    		        action: 'changeImageSize',
    		        image: image
    		      };
    		      Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_events_js__WEBPACK_IMPORTED_MODULE_0__["events"], _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].IMAGE_CACHE_CHANGED, eventDetails);
    		    });
    		  }
    		}
    		/* harmony default export */ __webpack_exports__["default"] = ({
    		  imageCache: imageCacheDict,
    		  cachedImages: cachedImages,
    		  setMaximumSizeBytes: setMaximumSizeBytes,
    		  putImageLoadObject: putImageLoadObject,
    		  getImageLoadObject: getImageLoadObject,
    		  removeImageLoadObject: removeImageLoadObject,
    		  getCacheInfo: getCacheInfo,
    		  purgeCache: purgeCache,
    		  changeImageIdCacheSize: changeImageIdCacheSize
    		});

    		/***/ }),

    		/***/ "./imageLoader.js":
    		/*!************************!*\
    		  !*** ./imageLoader.js ***!
    		  \************************/
    		/*! exports provided: loadImage, loadAndCacheImage, registerImageLoader, registerUnknownImageLoader */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadImage", function() { return loadImage; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadAndCacheImage", function() { return loadAndCacheImage; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "registerImageLoader", function() { return registerImageLoader; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "registerUnknownImageLoader", function() { return registerUnknownImageLoader; });
    		/* harmony import */ var _imageCache_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./imageCache.js */ "./imageCache.js");
    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./events.js */ "./events.js");
    		/* harmony import */ var _triggerEvent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./triggerEvent.js */ "./triggerEvent.js");



    		/**
    		 * This module deals with ImageLoaders, loading images and caching images
    		 * @module ImageLoader
    		 */

    		var imageLoaders = {};
    		var unknownImageLoader;
    		/**
    		 * Load an image using a registered Cornerstone Image Loader.
    		 *
    		 * The image loader that is used will be
    		 * determined by the image loader scheme matching against the imageId.
    		 *
    		 * @param {String} imageId A Cornerstone Image Object's imageId
    		 * @param {Object} [options] Options to be passed to the Image Loader
    		 *
    		 * @returns {ImageLoadObject} An Object which can be used to act after an image is loaded or loading fails
    		 * @memberof ImageLoader
    		 */

    		function loadImageFromImageLoader(imageId, options) {
    		  var colonIndex = imageId.indexOf(':');
    		  var scheme = imageId.substring(0, colonIndex);
    		  var loader = imageLoaders[scheme];

    		  if (loader === undefined || loader === null) {
    		    if (unknownImageLoader !== undefined) {
    		      return unknownImageLoader(imageId);
    		    }

    		    throw new Error('loadImageFromImageLoader: no image loader for imageId');
    		  }

    		  var imageLoadObject = loader(imageId, options); // Broadcast an image loaded event once the image is loaded

    		  imageLoadObject.promise.then(function (image) {
    		    Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_2__["default"])(_events_js__WEBPACK_IMPORTED_MODULE_1__["events"], _events_js__WEBPACK_IMPORTED_MODULE_1__["default"].IMAGE_LOADED, {
    		      image: image
    		    });
    		  }, function (error) {
    		    var errorObject = {
    		      imageId: imageId,
    		      error: error
    		    };
    		    Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_2__["default"])(_events_js__WEBPACK_IMPORTED_MODULE_1__["events"], _events_js__WEBPACK_IMPORTED_MODULE_1__["default"].IMAGE_LOAD_FAILED, errorObject);
    		  });
    		  return imageLoadObject;
    		}
    		/**
    		 * Loads an image given an imageId and optional priority and returns a promise which will resolve to
    		 * the loaded image object or fail if an error occurred.  The loaded image is not stored in the cache.
    		 *
    		 * @param {String} imageId A Cornerstone Image Object's imageId
    		 * @param {Object} [options] Options to be passed to the Image Loader
    		 *
    		 * @returns {ImageLoadObject} An Object which can be used to act after an image is loaded or loading fails
    		 * @memberof ImageLoader
    		 */


    		function loadImage(imageId, options) {
    		  if (imageId === undefined) {
    		    throw new Error('loadImage: parameter imageId must not be undefined');
    		  }

    		  var imageLoadObject = Object(_imageCache_js__WEBPACK_IMPORTED_MODULE_0__["getImageLoadObject"])(imageId);

    		  if (imageLoadObject !== undefined) {
    		    return imageLoadObject.promise;
    		  }

    		  return loadImageFromImageLoader(imageId, options).promise;
    		} //

    		/**
    		 * Loads an image given an imageId and optional priority and returns a promise which will resolve to
    		 * the loaded image object or fail if an error occurred. The image is stored in the cache.
    		 *
    		 * @param {String} imageId A Cornerstone Image Object's imageId
    		 * @param {Object} [options] Options to be passed to the Image Loader
    		 *
    		 * @returns {ImageLoadObject} Image Loader Object
    		 * @memberof ImageLoader
    		 */

    		function loadAndCacheImage(imageId, options) {
    		  if (imageId === undefined) {
    		    throw new Error('loadAndCacheImage: parameter imageId must not be undefined');
    		  }

    		  var imageLoadObject = Object(_imageCache_js__WEBPACK_IMPORTED_MODULE_0__["getImageLoadObject"])(imageId);

    		  if (imageLoadObject !== undefined) {
    		    return imageLoadObject.promise;
    		  }

    		  imageLoadObject = loadImageFromImageLoader(imageId, options);
    		  Object(_imageCache_js__WEBPACK_IMPORTED_MODULE_0__["putImageLoadObject"])(imageId, imageLoadObject);
    		  return imageLoadObject.promise;
    		}
    		/**
    		 * Registers an imageLoader plugin with cornerstone for the specified scheme
    		 *
    		 * @param {String} scheme The scheme to use for this image loader (e.g. 'dicomweb', 'wadouri', 'http')
    		 * @param {Function} imageLoader A Cornerstone Image Loader function
    		 * @returns {void}
    		 * @memberof ImageLoader
    		 */

    		function registerImageLoader(scheme, imageLoader) {
    		  imageLoaders[scheme] = imageLoader;
    		}
    		/**
    		 * Registers a new unknownImageLoader and returns the previous one
    		 *
    		 * @param {Function} imageLoader A Cornerstone Image Loader
    		 *
    		 * @returns {Function|Undefined} The previous Unknown Image Loader
    		 * @memberof ImageLoader
    		 */

    		function registerUnknownImageLoader(imageLoader) {
    		  var oldImageLoader = unknownImageLoader;
    		  unknownImageLoader = imageLoader;
    		  return oldImageLoader;
    		}

    		/***/ }),

    		/***/ "./index.js":
    		/*!******************!*\
    		  !*** ./index.js ***!
    		  \******************/
    		/*! exports provided: drawImage, generateLut, getDefaultViewport, setDefaultViewport, requestAnimationFrame, storedPixelDataToCanvasImageData, storedColorPixelDataToCanvasImageData, storedPixelDataToCanvasImageDataColorLUT, storedPixelDataToCanvasImageDataPseudocolorLUT, internal, renderLabelMapImage, renderPseudoColorImage, renderColorImage, renderGrayscaleImage, renderWebImage, renderToCanvas, canvasToPixel, disable, displayImage, draw, drawInvalidated, enable, getElementData, removeElementData, getEnabledElement, addEnabledElement, getEnabledElementsByImageId, getEnabledElements, addLayer, removeLayer, getLayer, getLayers, getVisibleLayers, setActiveLayer, getActiveLayer, purgeLayers, setLayerImage, fitToWindow, getDefaultViewportForImage, getDisplayedArea, getImage, getPixels, getStoredPixels, getViewport, loadImage, loadAndCacheImage, registerImageLoader, registerUnknownImageLoader, invalidate, invalidateImageId, pageToPixel, pixelToCanvas, reset, resize, setToPixelCoordinateSystem, setViewport, updateImage, pixelDataToFalseColorData, rendering, imageCache, metaData, webGL, colors, convertImageToFalseColorImage, convertToFalseColorImage, restoreImage, EVENTS, events, triggerEvent, imageLoadPoolManager, imageRetrievalPoolManager, RequestPoolManager, default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./events.js */ "./events.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EVENTS", function() { return _events_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "events", function() { return _events_js__WEBPACK_IMPORTED_MODULE_0__["events"]; });

    		/* harmony import */ var _enabledElements_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./enabledElements.js */ "./enabledElements.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getEnabledElement", function() { return _enabledElements_js__WEBPACK_IMPORTED_MODULE_1__["getEnabledElement"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "addEnabledElement", function() { return _enabledElements_js__WEBPACK_IMPORTED_MODULE_1__["addEnabledElement"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getEnabledElementsByImageId", function() { return _enabledElements_js__WEBPACK_IMPORTED_MODULE_1__["getEnabledElementsByImageId"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getEnabledElements", function() { return _enabledElements_js__WEBPACK_IMPORTED_MODULE_1__["getEnabledElements"]; });

    		/* harmony import */ var _layers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./layers.js */ "./layers.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "addLayer", function() { return _layers_js__WEBPACK_IMPORTED_MODULE_2__["addLayer"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "removeLayer", function() { return _layers_js__WEBPACK_IMPORTED_MODULE_2__["removeLayer"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getLayer", function() { return _layers_js__WEBPACK_IMPORTED_MODULE_2__["getLayer"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getLayers", function() { return _layers_js__WEBPACK_IMPORTED_MODULE_2__["getLayers"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getVisibleLayers", function() { return _layers_js__WEBPACK_IMPORTED_MODULE_2__["getVisibleLayers"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setActiveLayer", function() { return _layers_js__WEBPACK_IMPORTED_MODULE_2__["setActiveLayer"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getActiveLayer", function() { return _layers_js__WEBPACK_IMPORTED_MODULE_2__["getActiveLayer"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "purgeLayers", function() { return _layers_js__WEBPACK_IMPORTED_MODULE_2__["purgeLayers"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setLayerImage", function() { return _layers_js__WEBPACK_IMPORTED_MODULE_2__["setLayerImage"]; });

    		/* harmony import */ var _falseColorMapping_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./falseColorMapping.js */ "./falseColorMapping.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "convertImageToFalseColorImage", function() { return _falseColorMapping_js__WEBPACK_IMPORTED_MODULE_3__["convertImageToFalseColorImage"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "convertToFalseColorImage", function() { return _falseColorMapping_js__WEBPACK_IMPORTED_MODULE_3__["convertToFalseColorImage"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "restoreImage", function() { return _falseColorMapping_js__WEBPACK_IMPORTED_MODULE_3__["restoreImage"]; });

    		/* harmony import */ var _enabledElementData_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./enabledElementData.js */ "./enabledElementData.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getElementData", function() { return _enabledElementData_js__WEBPACK_IMPORTED_MODULE_4__["getElementData"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "removeElementData", function() { return _enabledElementData_js__WEBPACK_IMPORTED_MODULE_4__["removeElementData"]; });

    		/* harmony import */ var _imageLoader_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./imageLoader.js */ "./imageLoader.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "loadImage", function() { return _imageLoader_js__WEBPACK_IMPORTED_MODULE_5__["loadImage"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "loadAndCacheImage", function() { return _imageLoader_js__WEBPACK_IMPORTED_MODULE_5__["loadAndCacheImage"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "registerImageLoader", function() { return _imageLoader_js__WEBPACK_IMPORTED_MODULE_5__["registerImageLoader"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "registerUnknownImageLoader", function() { return _imageLoader_js__WEBPACK_IMPORTED_MODULE_5__["registerUnknownImageLoader"]; });

    		/* harmony import */ var _requestPool_imageLoadPoolManager_ts__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./requestPool/imageLoadPoolManager.ts */ "./requestPool/imageLoadPoolManager.ts");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "imageLoadPoolManager", function() { return _requestPool_imageLoadPoolManager_ts__WEBPACK_IMPORTED_MODULE_6__["default"]; });

    		/* harmony import */ var _requestPool_imageRetrievalPoolManager_ts__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./requestPool/imageRetrievalPoolManager.ts */ "./requestPool/imageRetrievalPoolManager.ts");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "imageRetrievalPoolManager", function() { return _requestPool_imageRetrievalPoolManager_ts__WEBPACK_IMPORTED_MODULE_7__["default"]; });

    		/* harmony import */ var _requestPool_RequestPoolManager_ts__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./requestPool/RequestPoolManager.ts */ "./requestPool/RequestPoolManager.ts");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RequestPoolManager", function() { return _requestPool_RequestPoolManager_ts__WEBPACK_IMPORTED_MODULE_8__["RequestPoolManager"]; });

    		/* harmony import */ var _canvasToPixel_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./canvasToPixel.js */ "./canvasToPixel.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "canvasToPixel", function() { return _canvasToPixel_js__WEBPACK_IMPORTED_MODULE_9__["default"]; });

    		/* harmony import */ var _colors_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./colors/index.js */ "./colors/index.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "colors", function() { return _colors_index_js__WEBPACK_IMPORTED_MODULE_10__["default"]; });

    		/* harmony import */ var _disable_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./disable.js */ "./disable.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "disable", function() { return _disable_js__WEBPACK_IMPORTED_MODULE_11__["default"]; });

    		/* harmony import */ var _displayImage_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./displayImage.js */ "./displayImage.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "displayImage", function() { return _displayImage_js__WEBPACK_IMPORTED_MODULE_12__["default"]; });

    		/* harmony import */ var _draw_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./draw.js */ "./draw.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "draw", function() { return _draw_js__WEBPACK_IMPORTED_MODULE_13__["default"]; });

    		/* harmony import */ var _internal_drawImage_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./internal/drawImage.js */ "./internal/drawImage.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "drawImage", function() { return _internal_drawImage_js__WEBPACK_IMPORTED_MODULE_14__["default"]; });

    		/* harmony import */ var _drawInvalidated_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./drawInvalidated.js */ "./drawInvalidated.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "drawInvalidated", function() { return _drawInvalidated_js__WEBPACK_IMPORTED_MODULE_15__["default"]; });

    		/* harmony import */ var _enable_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./enable.js */ "./enable.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "enable", function() { return _enable_js__WEBPACK_IMPORTED_MODULE_16__["default"]; });

    		/* harmony import */ var _fitToWindow_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./fitToWindow.js */ "./fitToWindow.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fitToWindow", function() { return _fitToWindow_js__WEBPACK_IMPORTED_MODULE_17__["default"]; });

    		/* harmony import */ var _internal_generateLut_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./internal/generateLut.js */ "./internal/generateLut.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "generateLut", function() { return _internal_generateLut_js__WEBPACK_IMPORTED_MODULE_18__["default"]; });

    		/* harmony import */ var _internal_getDefaultViewport_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./internal/getDefaultViewport.js */ "./internal/getDefaultViewport.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getDefaultViewport", function() { return _internal_getDefaultViewport_js__WEBPACK_IMPORTED_MODULE_19__["default"]; });

    		/* harmony import */ var _getDefaultViewportForImage_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./getDefaultViewportForImage.js */ "./getDefaultViewportForImage.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getDefaultViewportForImage", function() { return _getDefaultViewportForImage_js__WEBPACK_IMPORTED_MODULE_20__["default"]; });

    		/* harmony import */ var _internal_getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./internal/getDisplayedArea.js */ "./internal/getDisplayedArea.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getDisplayedArea", function() { return _internal_getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_21__["default"]; });

    		/* harmony import */ var _getImage_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./getImage.js */ "./getImage.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getImage", function() { return _getImage_js__WEBPACK_IMPORTED_MODULE_22__["default"]; });

    		/* harmony import */ var _getPixels_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./getPixels.js */ "./getPixels.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getPixels", function() { return _getPixels_js__WEBPACK_IMPORTED_MODULE_23__["default"]; });

    		/* harmony import */ var _getStoredPixels_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./getStoredPixels.js */ "./getStoredPixels.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getStoredPixels", function() { return _getStoredPixels_js__WEBPACK_IMPORTED_MODULE_24__["default"]; });

    		/* harmony import */ var _getViewport_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./getViewport.js */ "./getViewport.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getViewport", function() { return _getViewport_js__WEBPACK_IMPORTED_MODULE_25__["default"]; });

    		/* harmony import */ var _imageCache_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./imageCache.js */ "./imageCache.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "imageCache", function() { return _imageCache_js__WEBPACK_IMPORTED_MODULE_26__["default"]; });

    		/* harmony import */ var _internal_index_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./internal/index.js */ "./internal/index.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "internal", function() { return _internal_index_js__WEBPACK_IMPORTED_MODULE_27__["default"]; });

    		/* harmony import */ var _invalidate_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./invalidate.js */ "./invalidate.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "invalidate", function() { return _invalidate_js__WEBPACK_IMPORTED_MODULE_28__["default"]; });

    		/* harmony import */ var _invalidateImageId_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./invalidateImageId.js */ "./invalidateImageId.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "invalidateImageId", function() { return _invalidateImageId_js__WEBPACK_IMPORTED_MODULE_29__["default"]; });

    		/* harmony import */ var _metaData_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./metaData.js */ "./metaData.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "metaData", function() { return _metaData_js__WEBPACK_IMPORTED_MODULE_30__["default"]; });

    		/* harmony import */ var _pageToPixel_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./pageToPixel.js */ "./pageToPixel.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pageToPixel", function() { return _pageToPixel_js__WEBPACK_IMPORTED_MODULE_31__["default"]; });

    		/* harmony import */ var _pixelDataToFalseColorData_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./pixelDataToFalseColorData.js */ "./pixelDataToFalseColorData.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pixelDataToFalseColorData", function() { return _pixelDataToFalseColorData_js__WEBPACK_IMPORTED_MODULE_32__["default"]; });

    		/* harmony import */ var _pixelToCanvas_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./pixelToCanvas.js */ "./pixelToCanvas.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pixelToCanvas", function() { return _pixelToCanvas_js__WEBPACK_IMPORTED_MODULE_33__["default"]; });

    		/* harmony import */ var _rendering_renderColorImage_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./rendering/renderColorImage.js */ "./rendering/renderColorImage.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "renderColorImage", function() { return _rendering_renderColorImage_js__WEBPACK_IMPORTED_MODULE_34__["renderColorImage"]; });

    		/* harmony import */ var _rendering_renderGrayscaleImage_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./rendering/renderGrayscaleImage.js */ "./rendering/renderGrayscaleImage.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "renderGrayscaleImage", function() { return _rendering_renderGrayscaleImage_js__WEBPACK_IMPORTED_MODULE_35__["renderGrayscaleImage"]; });

    		/* harmony import */ var _rendering_renderLabelMapImage_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./rendering/renderLabelMapImage.js */ "./rendering/renderLabelMapImage.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "renderLabelMapImage", function() { return _rendering_renderLabelMapImage_js__WEBPACK_IMPORTED_MODULE_36__["renderLabelMapImage"]; });

    		/* harmony import */ var _rendering_renderPseudoColorImage_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./rendering/renderPseudoColorImage.js */ "./rendering/renderPseudoColorImage.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "renderPseudoColorImage", function() { return _rendering_renderPseudoColorImage_js__WEBPACK_IMPORTED_MODULE_37__["renderPseudoColorImage"]; });

    		/* harmony import */ var _rendering_renderToCanvas_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./rendering/renderToCanvas.js */ "./rendering/renderToCanvas.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "renderToCanvas", function() { return _rendering_renderToCanvas_js__WEBPACK_IMPORTED_MODULE_38__["default"]; });

    		/* harmony import */ var _rendering_renderWebImage_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./rendering/renderWebImage.js */ "./rendering/renderWebImage.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "renderWebImage", function() { return _rendering_renderWebImage_js__WEBPACK_IMPORTED_MODULE_39__["renderWebImage"]; });

    		/* harmony import */ var _rendering_index_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./rendering/index.js */ "./rendering/index.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rendering", function() { return _rendering_index_js__WEBPACK_IMPORTED_MODULE_40__["default"]; });

    		/* harmony import */ var _internal_requestAnimationFrame_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./internal/requestAnimationFrame.js */ "./internal/requestAnimationFrame.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "requestAnimationFrame", function() { return _internal_requestAnimationFrame_js__WEBPACK_IMPORTED_MODULE_41__["default"]; });

    		/* harmony import */ var _reset_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./reset.js */ "./reset.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reset", function() { return _reset_js__WEBPACK_IMPORTED_MODULE_42__["default"]; });

    		/* harmony import */ var _resize_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./resize.js */ "./resize.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "resize", function() { return _resize_js__WEBPACK_IMPORTED_MODULE_43__["default"]; });

    		/* harmony import */ var _internal_setDefaultViewport_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./internal/setDefaultViewport.js */ "./internal/setDefaultViewport.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setDefaultViewport", function() { return _internal_setDefaultViewport_js__WEBPACK_IMPORTED_MODULE_44__["default"]; });

    		/* harmony import */ var _setToPixelCoordinateSystem_js__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./setToPixelCoordinateSystem.js */ "./setToPixelCoordinateSystem.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setToPixelCoordinateSystem", function() { return _setToPixelCoordinateSystem_js__WEBPACK_IMPORTED_MODULE_45__["default"]; });

    		/* harmony import */ var _setViewport_js__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./setViewport.js */ "./setViewport.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setViewport", function() { return _setViewport_js__WEBPACK_IMPORTED_MODULE_46__["default"]; });

    		/* harmony import */ var _internal_storedColorPixelDataToCanvasImageData_js__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./internal/storedColorPixelDataToCanvasImageData.js */ "./internal/storedColorPixelDataToCanvasImageData.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "storedColorPixelDataToCanvasImageData", function() { return _internal_storedColorPixelDataToCanvasImageData_js__WEBPACK_IMPORTED_MODULE_47__["default"]; });

    		/* harmony import */ var _internal_storedPixelDataToCanvasImageData_js__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./internal/storedPixelDataToCanvasImageData.js */ "./internal/storedPixelDataToCanvasImageData.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "storedPixelDataToCanvasImageData", function() { return _internal_storedPixelDataToCanvasImageData_js__WEBPACK_IMPORTED_MODULE_48__["default"]; });

    		/* harmony import */ var _internal_storedPixelDataToCanvasImageDataColorLUT_js__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./internal/storedPixelDataToCanvasImageDataColorLUT.js */ "./internal/storedPixelDataToCanvasImageDataColorLUT.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "storedPixelDataToCanvasImageDataColorLUT", function() { return _internal_storedPixelDataToCanvasImageDataColorLUT_js__WEBPACK_IMPORTED_MODULE_49__["default"]; });

    		/* harmony import */ var _internal_storedPixelDataToCanvasImageDataPseudocolorLUT_js__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./internal/storedPixelDataToCanvasImageDataPseudocolorLUT.js */ "./internal/storedPixelDataToCanvasImageDataPseudocolorLUT.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "storedPixelDataToCanvasImageDataPseudocolorLUT", function() { return _internal_storedPixelDataToCanvasImageDataPseudocolorLUT_js__WEBPACK_IMPORTED_MODULE_50__["default"]; });

    		/* harmony import */ var _triggerEvent_js__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./triggerEvent.js */ "./triggerEvent.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "triggerEvent", function() { return _triggerEvent_js__WEBPACK_IMPORTED_MODULE_51__["default"]; });

    		/* harmony import */ var _updateImage_js__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./updateImage.js */ "./updateImage.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "updateImage", function() { return _updateImage_js__WEBPACK_IMPORTED_MODULE_52__["default"]; });

    		/* harmony import */ var _webgl_index_js__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./webgl/index.js */ "./webgl/index.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "webGL", function() { return _webgl_index_js__WEBPACK_IMPORTED_MODULE_53__["default"]; });

    		// Internal (some of these are from old internal/legacy expose)





















































    		 // Rendering

    		/**
    		 * @module PixelCoordinateSystem
    		 */

    		/**
    		 * @module ViewportSettings
    		 */

    		var cornerstone = {
    		  drawImage: _internal_drawImage_js__WEBPACK_IMPORTED_MODULE_14__["default"],
    		  generateLut: _internal_generateLut_js__WEBPACK_IMPORTED_MODULE_18__["default"],
    		  getDefaultViewport: _internal_getDefaultViewport_js__WEBPACK_IMPORTED_MODULE_19__["default"],
    		  requestAnimationFrame: _internal_requestAnimationFrame_js__WEBPACK_IMPORTED_MODULE_41__["default"],
    		  storedPixelDataToCanvasImageData: _internal_storedPixelDataToCanvasImageData_js__WEBPACK_IMPORTED_MODULE_48__["default"],
    		  storedColorPixelDataToCanvasImageData: _internal_storedColorPixelDataToCanvasImageData_js__WEBPACK_IMPORTED_MODULE_47__["default"],
    		  storedPixelDataToCanvasImageDataColorLUT: _internal_storedPixelDataToCanvasImageDataColorLUT_js__WEBPACK_IMPORTED_MODULE_49__["default"],
    		  storedPixelDataToCanvasImageDataPseudocolorLUT: _internal_storedPixelDataToCanvasImageDataPseudocolorLUT_js__WEBPACK_IMPORTED_MODULE_50__["default"],
    		  internal: _internal_index_js__WEBPACK_IMPORTED_MODULE_27__["default"],
    		  renderLabelMapImage: _rendering_renderLabelMapImage_js__WEBPACK_IMPORTED_MODULE_36__["renderLabelMapImage"],
    		  renderPseudoColorImage: _rendering_renderPseudoColorImage_js__WEBPACK_IMPORTED_MODULE_37__["renderPseudoColorImage"],
    		  renderColorImage: _rendering_renderColorImage_js__WEBPACK_IMPORTED_MODULE_34__["renderColorImage"],
    		  renderGrayscaleImage: _rendering_renderGrayscaleImage_js__WEBPACK_IMPORTED_MODULE_35__["renderGrayscaleImage"],
    		  renderWebImage: _rendering_renderWebImage_js__WEBPACK_IMPORTED_MODULE_39__["renderWebImage"],
    		  renderToCanvas: _rendering_renderToCanvas_js__WEBPACK_IMPORTED_MODULE_38__["default"],
    		  canvasToPixel: _canvasToPixel_js__WEBPACK_IMPORTED_MODULE_9__["default"],
    		  disable: _disable_js__WEBPACK_IMPORTED_MODULE_11__["default"],
    		  displayImage: _displayImage_js__WEBPACK_IMPORTED_MODULE_12__["default"],
    		  draw: _draw_js__WEBPACK_IMPORTED_MODULE_13__["default"],
    		  drawInvalidated: _drawInvalidated_js__WEBPACK_IMPORTED_MODULE_15__["default"],
    		  enable: _enable_js__WEBPACK_IMPORTED_MODULE_16__["default"],
    		  getElementData: _enabledElementData_js__WEBPACK_IMPORTED_MODULE_4__["getElementData"],
    		  removeElementData: _enabledElementData_js__WEBPACK_IMPORTED_MODULE_4__["removeElementData"],
    		  getEnabledElement: _enabledElements_js__WEBPACK_IMPORTED_MODULE_1__["getEnabledElement"],
    		  addEnabledElement: _enabledElements_js__WEBPACK_IMPORTED_MODULE_1__["addEnabledElement"],
    		  getEnabledElementsByImageId: _enabledElements_js__WEBPACK_IMPORTED_MODULE_1__["getEnabledElementsByImageId"],
    		  getEnabledElements: _enabledElements_js__WEBPACK_IMPORTED_MODULE_1__["getEnabledElements"],
    		  addLayer: _layers_js__WEBPACK_IMPORTED_MODULE_2__["addLayer"],
    		  removeLayer: _layers_js__WEBPACK_IMPORTED_MODULE_2__["removeLayer"],
    		  getLayer: _layers_js__WEBPACK_IMPORTED_MODULE_2__["getLayer"],
    		  getLayers: _layers_js__WEBPACK_IMPORTED_MODULE_2__["getLayers"],
    		  getVisibleLayers: _layers_js__WEBPACK_IMPORTED_MODULE_2__["getVisibleLayers"],
    		  setActiveLayer: _layers_js__WEBPACK_IMPORTED_MODULE_2__["setActiveLayer"],
    		  getActiveLayer: _layers_js__WEBPACK_IMPORTED_MODULE_2__["getActiveLayer"],
    		  purgeLayers: _layers_js__WEBPACK_IMPORTED_MODULE_2__["purgeLayers"],
    		  setLayerImage: _layers_js__WEBPACK_IMPORTED_MODULE_2__["setLayerImage"],
    		  fitToWindow: _fitToWindow_js__WEBPACK_IMPORTED_MODULE_17__["default"],
    		  getDefaultViewportForImage: _getDefaultViewportForImage_js__WEBPACK_IMPORTED_MODULE_20__["default"],
    		  getDisplayedArea: _internal_getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_21__["default"],
    		  setDefaultViewport: _internal_setDefaultViewport_js__WEBPACK_IMPORTED_MODULE_44__["default"],
    		  getImage: _getImage_js__WEBPACK_IMPORTED_MODULE_22__["default"],
    		  getPixels: _getPixels_js__WEBPACK_IMPORTED_MODULE_23__["default"],
    		  getStoredPixels: _getStoredPixels_js__WEBPACK_IMPORTED_MODULE_24__["default"],
    		  getViewport: _getViewport_js__WEBPACK_IMPORTED_MODULE_25__["default"],
    		  loadImage: _imageLoader_js__WEBPACK_IMPORTED_MODULE_5__["loadImage"],
    		  loadAndCacheImage: _imageLoader_js__WEBPACK_IMPORTED_MODULE_5__["loadAndCacheImage"],
    		  registerImageLoader: _imageLoader_js__WEBPACK_IMPORTED_MODULE_5__["registerImageLoader"],
    		  registerUnknownImageLoader: _imageLoader_js__WEBPACK_IMPORTED_MODULE_5__["registerUnknownImageLoader"],
    		  invalidate: _invalidate_js__WEBPACK_IMPORTED_MODULE_28__["default"],
    		  invalidateImageId: _invalidateImageId_js__WEBPACK_IMPORTED_MODULE_29__["default"],
    		  pageToPixel: _pageToPixel_js__WEBPACK_IMPORTED_MODULE_31__["default"],
    		  pixelToCanvas: _pixelToCanvas_js__WEBPACK_IMPORTED_MODULE_33__["default"],
    		  reset: _reset_js__WEBPACK_IMPORTED_MODULE_42__["default"],
    		  resize: _resize_js__WEBPACK_IMPORTED_MODULE_43__["default"],
    		  setToPixelCoordinateSystem: _setToPixelCoordinateSystem_js__WEBPACK_IMPORTED_MODULE_45__["default"],
    		  setViewport: _setViewport_js__WEBPACK_IMPORTED_MODULE_46__["default"],
    		  updateImage: _updateImage_js__WEBPACK_IMPORTED_MODULE_52__["default"],
    		  pixelDataToFalseColorData: _pixelDataToFalseColorData_js__WEBPACK_IMPORTED_MODULE_32__["default"],
    		  rendering: _rendering_index_js__WEBPACK_IMPORTED_MODULE_40__["default"],
    		  imageCache: _imageCache_js__WEBPACK_IMPORTED_MODULE_26__["default"],
    		  metaData: _metaData_js__WEBPACK_IMPORTED_MODULE_30__["default"],
    		  webGL: _webgl_index_js__WEBPACK_IMPORTED_MODULE_53__["default"],
    		  colors: _colors_index_js__WEBPACK_IMPORTED_MODULE_10__["default"],
    		  convertImageToFalseColorImage: _falseColorMapping_js__WEBPACK_IMPORTED_MODULE_3__["convertImageToFalseColorImage"],
    		  convertToFalseColorImage: _falseColorMapping_js__WEBPACK_IMPORTED_MODULE_3__["convertToFalseColorImage"],
    		  restoreImage: _falseColorMapping_js__WEBPACK_IMPORTED_MODULE_3__["restoreImage"],
    		  EVENTS: _events_js__WEBPACK_IMPORTED_MODULE_0__["default"],
    		  events: _events_js__WEBPACK_IMPORTED_MODULE_0__["events"],
    		  triggerEvent: _triggerEvent_js__WEBPACK_IMPORTED_MODULE_51__["default"],
    		  imageLoadPoolManager: _requestPool_imageLoadPoolManager_ts__WEBPACK_IMPORTED_MODULE_6__["default"],
    		  imageRetrievalPoolManager: _requestPool_imageRetrievalPoolManager_ts__WEBPACK_IMPORTED_MODULE_7__["default"],
    		  RequestPoolManager: _requestPool_RequestPoolManager_ts__WEBPACK_IMPORTED_MODULE_8__["RequestPoolManager"]
    		};

    		/* harmony default export */ __webpack_exports__["default"] = (cornerstone);

    		/***/ }),

    		/***/ "./internal/calculateTransform.js":
    		/*!****************************************!*\
    		  !*** ./internal/calculateTransform.js ***!
    		  \****************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transform.js */ "./internal/transform.js");
    		/* harmony import */ var _getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getDisplayedArea.js */ "./internal/getDisplayedArea.js");


    		/**
    		 * Calculate the transform for a Cornerstone enabled element
    		 *
    		 * @param {EnabledElement} enabledElement The Cornerstone Enabled Element
    		 * @param {Number} [scale] The viewport scale
    		 * @return {Transform} The current transform
    		 * @memberof Internal
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (enabledElement, scale) {
    		  var transform = new _transform_js__WEBPACK_IMPORTED_MODULE_0__["Transform"](); // Move to center of canvas

    		  transform.translate(enabledElement.canvas.width / 2, enabledElement.canvas.height / 2); // Apply the rotation before scaling for non square pixels

    		  var angle = enabledElement.viewport.rotation;

    		  if (angle !== 0) {
    		    transform.rotate(angle * Math.PI / 180);
    		  } // Apply the scale


    		  var widthScale = enabledElement.viewport.scale;
    		  var heightScale = enabledElement.viewport.scale;
    		  var imageDisplayedArea = Object(_getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_1__["default"])(enabledElement.image, enabledElement.viewport);
    		  var offsetX = imageDisplayedArea.tlhc.x - 1;
    		  var offsetY = imageDisplayedArea.tlhc.y - 1;
    		  var width = imageDisplayedArea.brhc.x - offsetX;
    		  var height = imageDisplayedArea.brhc.y - offsetY;

    		  if (imageDisplayedArea.presentationSizeMode === 'NONE') {
    		    if (enabledElement.image.rowPixelSpacing < enabledElement.image.columnPixelSpacing) {
    		      widthScale *= enabledElement.image.columnPixelSpacing / enabledElement.image.rowPixelSpacing;
    		    } else if (enabledElement.image.columnPixelSpacing < enabledElement.image.rowPixelSpacing) {
    		      heightScale *= enabledElement.image.rowPixelSpacing / enabledElement.image.columnPixelSpacing;
    		    }
    		  } else {
    		    // These should be good for "TRUE SIZE" and "MAGNIFY"
    		    widthScale = imageDisplayedArea.columnPixelSpacing;
    		    heightScale = imageDisplayedArea.rowPixelSpacing;

    		    if (imageDisplayedArea.presentationSizeMode === 'SCALE TO FIT') {
    		      // Fit TRUE IMAGE image (width/height) to window
    		      var verticalScale = enabledElement.canvas.height / (height * heightScale);
    		      var horizontalScale = enabledElement.canvas.width / (width * widthScale); // Apply new scale

    		      widthScale = heightScale = Math.min(horizontalScale, verticalScale);

    		      if (imageDisplayedArea.rowPixelSpacing < imageDisplayedArea.columnPixelSpacing) {
    		        widthScale *= imageDisplayedArea.columnPixelSpacing / imageDisplayedArea.rowPixelSpacing;
    		      } else if (imageDisplayedArea.columnPixelSpacing < imageDisplayedArea.rowPixelSpacing) {
    		        heightScale *= imageDisplayedArea.rowPixelSpacing / imageDisplayedArea.columnPixelSpacing;
    		      }
    		    }
    		  }

    		  transform.scale(widthScale, heightScale); // Unrotate to so we can translate unrotated

    		  if (angle !== 0) {
    		    transform.rotate(-angle * Math.PI / 180);
    		  } // Apply the pan offset


    		  transform.translate(enabledElement.viewport.translation.x, enabledElement.viewport.translation.y); // Rotate again so we can apply general scale

    		  if (angle !== 0) {
    		    transform.rotate(angle * Math.PI / 180);
    		  }

    		  if (scale !== undefined) {
    		    // Apply the font scale
    		    transform.scale(scale, scale);
    		  } // Apply Flip if required


    		  if (enabledElement.viewport.hflip) {
    		    transform.scale(-1, 1);
    		  }

    		  if (enabledElement.viewport.vflip) {
    		    transform.scale(1, -1);
    		  } // Move back from center of image


    		  transform.translate(-width / 2, -height / 2); // Move to displayedArea

    		  transform.translate(-offsetX, -offsetY);
    		  return transform;
    		});

    		/***/ }),

    		/***/ "./internal/computeAutoVoi.js":
    		/*!************************************!*\
    		  !*** ./internal/computeAutoVoi.js ***!
    		  \************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return computeAutoVoi; });
    		/**
    		 * Computes the VOI to display all the pixels if no VOI LUT data (Window Width/Window Center or voiLUT) exists on the viewport object.
    		 *
    		 * @param {Viewport} viewport - Object containing the viewport properties
    		 * @param {Object} image An Image loaded by a Cornerstone Image Loader
    		 * @returns {void}
    		 * @memberof Internal
    		 */
    		function computeAutoVoi(viewport, image) {
    		  if (hasVoi(viewport)) {
    		    return;
    		  }

    		  var maxVoi = image.maxPixelValue * image.slope + image.intercept;
    		  var minVoi = image.minPixelValue * image.slope + image.intercept;
    		  var ww = maxVoi - minVoi;
    		  var wc = (maxVoi + minVoi) / 2;

    		  if (viewport.voi === undefined) {
    		    viewport.voi = {
    		      windowWidth: ww,
    		      windowCenter: wc
    		    };
    		  } else {
    		    viewport.voi.windowWidth = ww;
    		    viewport.voi.windowCenter = wc;
    		  }
    		}
    		/**
    		 * Check if viewport has voi LUT data
    		 * @param {any} viewport The viewport to check for voi LUT data
    		 * @returns {Boolean} true viewport has LUT data (Window Width/Window Center or voiLUT). Otherwise, false.
    		 * @memberof Internal
    		 */

    		function hasVoi(viewport) {
    		  var hasLut = viewport.voiLUT && viewport.voiLUT.lut && viewport.voiLUT.lut.length > 0;
    		  return hasLut || viewport.voi.windowWidth !== undefined && viewport.voi.windowCenter !== undefined;
    		}

    		/***/ }),

    		/***/ "./internal/createViewport.js":
    		/*!************************************!*\
    		  !*** ./internal/createViewport.js ***!
    		  \************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _setDefaultViewport_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./setDefaultViewport.js */ "./internal/setDefaultViewport.js");

    		/**
    		 * Creates a new viewport object containing default values
    		 *
    		 * @returns {Viewport} viewport object
    		 * @memberof Internal
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function () {
    		  var initialDefaultViewport = {
    		    scale: 1,
    		    translation: {
    		      x: 0,
    		      y: 0
    		    },
    		    voi: {
    		      windowWidth: undefined,
    		      windowCenter: undefined
    		    },
    		    invert: false,
    		    pixelReplication: false,
    		    rotation: 0,
    		    hflip: false,
    		    vflip: false,
    		    modalityLUT: undefined,
    		    voiLUT: undefined,
    		    colormap: undefined,
    		    labelmap: false,
    		    displayedArea: undefined
    		  };
    		  return Object.assign({}, initialDefaultViewport, _setDefaultViewport_js__WEBPACK_IMPORTED_MODULE_0__["state"].viewport);
    		});

    		/***/ }),

    		/***/ "./internal/drawCompositeImage.js":
    		/*!****************************************!*\
    		  !*** ./internal/drawCompositeImage.js ***!
    		  \****************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _layers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../layers.js */ "./layers.js");
    		/* harmony import */ var _rendering_renderGrayscaleImage_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../rendering/renderGrayscaleImage.js */ "./rendering/renderGrayscaleImage.js");
    		/* harmony import */ var _rendering_renderColorImage_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../rendering/renderColorImage.js */ "./rendering/renderColorImage.js");
    		/* harmony import */ var _rendering_renderPseudoColorImage_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../rendering/renderPseudoColorImage.js */ "./rendering/renderPseudoColorImage.js");
    		/* harmony import */ var _rendering_renderLabelMapImage_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../rendering/renderLabelMapImage.js */ "./rendering/renderLabelMapImage.js");
    		/* harmony import */ var _setToPixelCoordinateSystem_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../setToPixelCoordinateSystem.js */ "./setToPixelCoordinateSystem.js");
    		/* harmony import */ var _getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./getDisplayedArea.js */ "./internal/getDisplayedArea.js");








    		function getViewportRatio(baseLayer, targetLayer) {
    		  if (!baseLayer.syncProps) {
    		    updateLayerSyncProps(baseLayer);
    		  }

    		  if (!targetLayer.syncProps) {
    		    updateLayerSyncProps(targetLayer);
    		  }

    		  return targetLayer.syncProps.originalScale / baseLayer.syncProps.originalScale;
    		}

    		function updateLayerSyncProps(layer) {
    		  var syncProps = layer.syncProps || {}; // This is used to keep each of the layers' viewports in sync with the active layer

    		  syncProps.originalScale = layer.viewport.scale;
    		  layer.syncProps = syncProps;
    		} // Sync all viewports based on active layer's viewport


    		function syncViewports(layers, activeLayer) {
    		  // If we intend to keep the viewport's scale, translation and rotation in sync,
    		  // loop through the layers
    		  layers.forEach(function (layer) {
    		    // Don't do anything to the active layer
    		    // Don't do anything if this layer has no viewport
    		    if (layer === activeLayer || !layer.viewport || !activeLayer.viewport) {
    		      return;
    		    }

    		    if (!layer.syncProps) {
    		      updateLayerSyncProps(layer);
    		    }

    		    var viewportRatio = getViewportRatio(activeLayer, layer); // Update the layer's translation and scale to keep them in sync with the first image
    		    // based on the ratios between the images

    		    layer.viewport.scale = activeLayer.viewport.scale * viewportRatio;
    		    layer.viewport.rotation = activeLayer.viewport.rotation;
    		    layer.viewport.translation = {
    		      x: activeLayer.viewport.translation.x / viewportRatio,
    		      y: activeLayer.viewport.translation.y / viewportRatio
    		    };
    		    layer.viewport.hflip = activeLayer.viewport.hflip;
    		    layer.viewport.vflip = activeLayer.viewport.vflip;
    		  });
    		}
    		/**
    		 * Internal function to render all layers for a Cornerstone enabled element
    		 *
    		 * @param {CanvasRenderingContext2D} context Canvas context to draw upon
    		 * @param {EnabledElementLayer[]} layers The array of all layers for this enabled element
    		 * @param {Boolean} invalidated A boolean whether or not this image has been invalidated and must be redrawn
    		 * @returns {void}
    		 * @memberof Internal
    		 */


    		function renderLayers(context, layers, invalidated) {
    		  // Loop through each layer and draw it to the canvas
    		  layers.forEach(function (layer, index) {
    		    if (!layer.image) {
    		      return;
    		    }

    		    context.save(); // Set the layer's canvas to the pixel coordinate system

    		    layer.canvas = context.canvas;
    		    Object(_setToPixelCoordinateSystem_js__WEBPACK_IMPORTED_MODULE_5__["default"])(layer, context); // Render into the layer's canvas

    		    var colormap = layer.viewport.colormap || layer.options.colormap;
    		    var labelmap = layer.viewport.labelmap;
    		    var isInvalid = layer.invalid || invalidated;

    		    if (colormap && colormap !== '' && labelmap === true) {
    		      Object(_rendering_renderLabelMapImage_js__WEBPACK_IMPORTED_MODULE_4__["addLabelMapLayer"])(layer, isInvalid);
    		    } else if (colormap && colormap !== '') {
    		      Object(_rendering_renderPseudoColorImage_js__WEBPACK_IMPORTED_MODULE_3__["addPseudoColorLayer"])(layer, isInvalid);
    		    } else if (layer.image.color === true) {
    		      Object(_rendering_renderColorImage_js__WEBPACK_IMPORTED_MODULE_2__["addColorLayer"])(layer, isInvalid);
    		    } else {
    		      // If this is the base layer, use the alpha channel for rendering of the grayscale image
    		      var useAlphaChannel = index === 0;
    		      Object(_rendering_renderGrayscaleImage_js__WEBPACK_IMPORTED_MODULE_1__["addGrayscaleLayer"])(layer, isInvalid, useAlphaChannel);
    		    } // Apply any global opacity settings that have been defined for this layer


    		    if (layer.options && layer.options.opacity) {
    		      context.globalAlpha = layer.options.opacity;
    		    } else {
    		      context.globalAlpha = 1;
    		    }

    		    if (layer.options && layer.options.fillStyle) {
    		      context.fillStyle = layer.options.fillStyle;
    		    } // Set the pixelReplication property before drawing from the layer into the
    		    // composite canvas


    		    context.imageSmoothingEnabled = !layer.viewport.pixelReplication;
    		    context.mozImageSmoothingEnabled = context.imageSmoothingEnabled; // Draw from the current layer's canvas onto the enabled element's canvas

    		    var layerDisplayedArea = Object(_getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_6__["default"])(layer.image, layer.viewport);
    		    var sx = layerDisplayedArea.tlhc.x - 1;
    		    var sy = layerDisplayedArea.tlhc.y - 1;
    		    var width = layerDisplayedArea.brhc.x - sx;
    		    var height = layerDisplayedArea.brhc.y - sy;
    		    context.drawImage(layer.canvas, sx, sy, width, height, sx, sy, width, height);
    		    context.restore();
    		    layer.invalid = false;
    		  });
    		}
    		/**
    		 * Internal API function to draw a composite image to a given enabled element
    		 *
    		 * @param {EnabledElement} enabledElement An enabled element to draw into
    		 * @param {Boolean} invalidated - true if pixel data has been invalidated and cached rendering should not be used
    		 * @returns {void}
    		 */


    		/* harmony default export */ __webpack_exports__["default"] = (function (enabledElement, invalidated) {
    		  var element = enabledElement.element;
    		  var allLayers = Object(_layers_js__WEBPACK_IMPORTED_MODULE_0__["getLayers"])(element);
    		  var activeLayer = Object(_layers_js__WEBPACK_IMPORTED_MODULE_0__["getActiveLayer"])(element);
    		  var visibleLayers = Object(_layers_js__WEBPACK_IMPORTED_MODULE_0__["getVisibleLayers"])(element);
    		  var resynced = !enabledElement.lastSyncViewportsState && enabledElement.syncViewports; // This state will help us to determine if the user has re-synced the
    		  // layers allowing us to make a new copy of the viewports

    		  enabledElement.lastSyncViewportsState = enabledElement.syncViewports; // Stores a copy of all viewports if the user has just synced them then we can use the
    		  // copies to calculate anything later (ratio, translation offset, rotation offset, etc)

    		  if (resynced) {
    		    allLayers.forEach(function (layer) {
    		      if (layer.viewport) {
    		        updateLayerSyncProps(layer);
    		      }
    		    });
    		  } // Sync all viewports in case it's activated


    		  if (enabledElement.syncViewports === true) {
    		    syncViewports(visibleLayers, activeLayer);
    		  } // Get the enabled element's canvas so we can draw to it


    		  var context = enabledElement.canvas.getContext('2d', {
    		    desynchronized: true
    		  });
    		  context.setTransform(1, 0, 0, 1, 0, 0); // Clear the canvas

    		  context.fillStyle = 'black';
    		  context.fillRect(0, 0, enabledElement.canvas.width, enabledElement.canvas.height); // Render all visible layers

    		  renderLayers(context, visibleLayers, invalidated);
    		});

    		/***/ }),

    		/***/ "./internal/drawImage.js":
    		/*!*******************************!*\
    		  !*** ./internal/drawImage.js ***!
    		  \*******************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/**
    		 * Internal API function to draw an image to a given enabled element
    		 *
    		 * @param {EnabledElement} enabledElement The Cornerstone Enabled Element to redraw
    		 * @param {Boolean} [invalidated = false] - true if pixel data has been invalidated and cached rendering should not be used
    		 * @returns {void}
    		 * @memberof Internal
    		 */
    		/* harmony default export */ __webpack_exports__["default"] = (function (enabledElement) {
    		  var invalidated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    		  enabledElement.needsRedraw = true;

    		  if (invalidated) {
    		    enabledElement.invalid = true;
    		  }
    		});

    		/***/ }),

    		/***/ "./internal/drawImageSync.js":
    		/*!***********************************!*\
    		  !*** ./internal/drawImageSync.js ***!
    		  \***********************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _now_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./now.js */ "./internal/now.js");
    		/* harmony import */ var _drawCompositeImage_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./drawCompositeImage.js */ "./internal/drawCompositeImage.js");
    		/* harmony import */ var _rendering_renderColorImage_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../rendering/renderColorImage.js */ "./rendering/renderColorImage.js");
    		/* harmony import */ var _rendering_renderGrayscaleImage_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../rendering/renderGrayscaleImage.js */ "./rendering/renderGrayscaleImage.js");
    		/* harmony import */ var _rendering_renderPseudoColorImage_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../rendering/renderPseudoColorImage.js */ "./rendering/renderPseudoColorImage.js");
    		/* harmony import */ var _rendering_renderLabelMapImage_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../rendering/renderLabelMapImage.js */ "./rendering/renderLabelMapImage.js");
    		/* harmony import */ var _triggerEvent_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../triggerEvent.js */ "./triggerEvent.js");
    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../events.js */ "./events.js");








    		/**
    		 * Draw an image to a given enabled element synchronously
    		 *
    		 * @param {EnabledElement} enabledElement An enabled element to draw into
    		 * @param {Boolean} invalidated - true if pixel data has been invalidated and cached rendering should not be used
    		 * @returns {void}
    		 * @memberof Internal
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (enabledElement, invalidated) {
    		  var image = enabledElement.image;
    		  var element = enabledElement.element;
    		  var layers = enabledElement.layers || []; // Check if enabledElement can be redrawn

    		  if (!enabledElement.canvas || !enabledElement.image) {
    		    return;
    		  } // Start measuring the time needed to draw the image/layers


    		  var start = Object(_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])();
    		  image.stats = {
    		    lastGetPixelDataTime: -1,
    		    lastStoredPixelDataToCanvasImageDataTime: -1,
    		    lastPutImageDataTime: -1,
    		    lastRenderTime: -1,
    		    lastLutGenerateTime: -1
    		  };

    		  if (layers && layers.length) {
    		    Object(_drawCompositeImage_js__WEBPACK_IMPORTED_MODULE_1__["default"])(enabledElement, invalidated);
    		  } else if (image) {
    		    var render = image.render;

    		    if (!render) {
    		      if (enabledElement.viewport.colormap && enabledElement.viewport.colormap !== '' && enabledElement.image.labelmap === true) {
    		        render = _rendering_renderLabelMapImage_js__WEBPACK_IMPORTED_MODULE_5__["renderLabelMapImage"];
    		      } else if (enabledElement.viewport.colormap && enabledElement.viewport.colormap !== '') {
    		        render = _rendering_renderPseudoColorImage_js__WEBPACK_IMPORTED_MODULE_4__["renderPseudoColorImage"];
    		      } else if (image.color) {
    		        render = _rendering_renderColorImage_js__WEBPACK_IMPORTED_MODULE_2__["renderColorImage"];
    		      } else {
    		        render = _rendering_renderGrayscaleImage_js__WEBPACK_IMPORTED_MODULE_3__["renderGrayscaleImage"];
    		      }
    		    }

    		    render(enabledElement, invalidated);
    		  } // Calculate how long it took to draw the image/layers


    		  var renderTimeInMs = Object(_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])() - start;
    		  var eventData = {
    		    viewport: enabledElement.viewport,
    		    element: element,
    		    image: image,
    		    enabledElement: enabledElement,
    		    canvasContext: enabledElement.canvas.getContext('2d', {
    		      desynchronized: true
    		    }),
    		    renderTimeInMs: renderTimeInMs
    		  };
    		  image.stats.lastRenderTime = renderTimeInMs;
    		  enabledElement.invalid = false;
    		  enabledElement.needsRedraw = false;
    		  Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_6__["default"])(element, _events_js__WEBPACK_IMPORTED_MODULE_7__["default"].IMAGE_RENDERED, eventData);
    		});

    		/***/ }),

    		/***/ "./internal/generateColorLut.js":
    		/*!**************************************!*\
    		  !*** ./internal/generateColorLut.js ***!
    		  \**************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _getVOILut_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getVOILut.js */ "./internal/getVOILut.js");

    		/**
    		 * Creates a LUT used while rendering to convert stored pixel values to
    		 * display pixels
    		 *
    		 * @param {Image} image A Cornerstone Image Object
    		 * @param {Number} windowWidth The Window Width
    		 * @param {Number} windowCenter The Window Center
    		 * @param {Boolean} invert A boolean describing whether or not the image has been inverted
    		 * @param {Array} [voiLUT] A Volume of Interest Lookup Table
    		 *
    		 * @returns {Uint8ClampedArray} A lookup table to apply to the image
    		 * @memberof Internal
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (image, windowWidth, windowCenter, invert, voiLUT) {
    		  var maxPixelValue = image.maxPixelValue;
    		  var minPixelValue = image.minPixelValue;
    		  var offset = Math.min(minPixelValue, 0);

    		  if (image.cachedLut === undefined) {
    		    var length = maxPixelValue - offset + 1;
    		    image.cachedLut = {};
    		    image.cachedLut.lutArray = new Uint8ClampedArray(length);
    		  }

    		  var lut = image.cachedLut.lutArray;
    		  var vlutfn = Object(_getVOILut_js__WEBPACK_IMPORTED_MODULE_0__["default"])(windowWidth, windowCenter, voiLUT);

    		  if (invert === true) {
    		    for (var storedValue = minPixelValue; storedValue <= maxPixelValue; storedValue++) {
    		      lut[storedValue + -offset] = 255 - vlutfn(storedValue);
    		    }
    		  } else {
    		    for (var _storedValue = minPixelValue; _storedValue <= maxPixelValue; _storedValue++) {
    		      lut[_storedValue + -offset] = vlutfn(_storedValue);
    		    }
    		  }

    		  return lut;
    		});

    		/***/ }),

    		/***/ "./internal/generateLut.js":
    		/*!*********************************!*\
    		  !*** ./internal/generateLut.js ***!
    		  \*********************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _getModalityLUT_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getModalityLUT.js */ "./internal/getModalityLUT.js");
    		/* harmony import */ var _getVOILut_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getVOILut.js */ "./internal/getVOILut.js");


    		/**
    		 * Creates a LUT used while rendering to convert stored pixel values to
    		 * display pixels
    		 *
    		 * @param {Image} image A Cornerstone Image Object
    		 * @param {Number} windowWidth The Window Width
    		 * @param {Number} windowCenter The Window Center
    		 * @param {Boolean} invert A boolean describing whether or not the image has been inverted
    		 * @param {Array} [modalityLUT] A modality Lookup Table
    		 * @param {Array} [voiLUT] A Volume of Interest Lookup Table
    		 *
    		 * @returns {Uint8ClampedArray} A lookup table to apply to the image
    		 * @memberof Internal
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (image, windowWidth, windowCenter, invert, modalityLUT, voiLUT) {
    		  var maxPixelValue = image.maxPixelValue;
    		  var minPixelValue = image.minPixelValue;
    		  var offset = Math.min(minPixelValue, 0);

    		  if (image.cachedLut === undefined) {
    		    var length = maxPixelValue - offset + 1;
    		    image.cachedLut = {};
    		    image.cachedLut.lutArray = new Uint8ClampedArray(length);
    		  }

    		  var lut = image.cachedLut.lutArray;
    		  var slopeOrInterceptAreFloat = Boolean(image.slope % 1) || Boolean(image.intercept % 1);
    		  var mlutfn = Object(_getModalityLUT_js__WEBPACK_IMPORTED_MODULE_0__["default"])(image.slope, image.intercept, modalityLUT);
    		  var vlutfn = Object(_getVOILut_js__WEBPACK_IMPORTED_MODULE_1__["default"])(windowWidth, windowCenter, voiLUT, slopeOrInterceptAreFloat);

    		  if (invert === true) {
    		    for (var storedValue = minPixelValue; storedValue <= maxPixelValue; storedValue++) {
    		      lut[storedValue + -offset] = 255 - vlutfn(mlutfn(storedValue));
    		    }
    		  } else {
    		    for (var _storedValue = minPixelValue; _storedValue <= maxPixelValue; _storedValue++) {
    		      lut[_storedValue + -offset] = vlutfn(mlutfn(_storedValue));
    		    }
    		  }

    		  return lut;
    		});

    		/***/ }),

    		/***/ "./internal/getCanvas.js":
    		/*!*******************************!*\
    		  !*** ./internal/getCanvas.js ***!
    		  \*******************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getCanvas; });
    		var CANVAS_CSS_CLASS = 'cornerstone-canvas';
    		/**
    		 * Create a canvas and append it to the element
    		 *
    		 * @param {HTMLElement} element An HTML Element
    		 * @return {HTMLElement} canvas A Canvas DOM element
    		 */

    		function createCanvas(element) {
    		  var canvas = document.createElement('canvas');
    		  canvas.style.display = 'block';
    		  canvas.classList.add(CANVAS_CSS_CLASS);
    		  element.appendChild(canvas);
    		  return canvas;
    		}
    		/**
    		 * Create a canvas or returns the one that already exists for a given element
    		 *
    		 * @param {HTMLElement} element An HTML Element
    		 * @return {HTMLElement} canvas A Canvas DOM element
    		 */


    		function getCanvas(element) {
    		  var selector = "canvas.".concat(CANVAS_CSS_CLASS);
    		  return element.querySelector(selector) || createCanvas(element);
    		}

    		/***/ }),

    		/***/ "./internal/getDefaultViewport.js":
    		/*!****************************************!*\
    		  !*** ./internal/getDefaultViewport.js ***!
    		  \****************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _createViewport_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./createViewport.js */ "./internal/createViewport.js");
    		/* harmony import */ var _getImageFitScale_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getImageFitScale.js */ "./internal/getImageFitScale.js");


    		/**
    		 * Creates a new viewport object containing default values for the image and canvas
    		 *
    		 * @param {HTMLElement} canvas A Canvas DOM element
    		 * @param {Image} image A Cornerstone Image Object
    		 * @returns {Viewport} viewport object
    		 * @memberof Internal
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (canvas, image) {
    		  if (canvas === undefined) {
    		    throw new Error('getDefaultViewport: parameter canvas must not be undefined');
    		  }

    		  if (image === undefined) {
    		    return Object(_createViewport_js__WEBPACK_IMPORTED_MODULE_0__["default"])();
    		  } // Fit image to window


    		  var scale = Object(_getImageFitScale_js__WEBPACK_IMPORTED_MODULE_1__["default"])(canvas, image, 0).scaleFactor;
    		  return {
    		    scale: scale,
    		    translation: {
    		      x: 0,
    		      y: 0
    		    },
    		    voi: {
    		      windowWidth: image.windowWidth,
    		      windowCenter: image.windowCenter
    		    },
    		    invert: image.invert,
    		    pixelReplication: false,
    		    rotation: 0,
    		    hflip: false,
    		    vflip: false,
    		    modalityLUT: image.modalityLUT,
    		    voiLUT: image.voiLUT,
    		    colormap: image.colormap,
    		    labelmap: Boolean(image.labelmap),
    		    displayedArea: undefined
    		  };
    		});

    		/***/ }),

    		/***/ "./internal/getDisplayedArea.js":
    		/*!**************************************!*\
    		  !*** ./internal/getDisplayedArea.js ***!
    		  \**************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/**
    		 * Returns the displayedArea from the viewport if exists or
    		 * creates a new displayedArea object containing default values for the image
    		 *
    		 * @param {Image} image A Cornerstone Image Object
    		 * @param {Viewport} viewport An optional viewport Object
    		 * @returns {DisplayedArea} displayedArea object
    		 * @memberof Internal
    		 */
    		/* harmony default export */ __webpack_exports__["default"] = (function (image) {
    		  var viewport = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

    		  if (viewport && viewport.displayedArea) {
    		    return viewport.displayedArea;
    		  }

    		  if (image === undefined) {
    		    throw new Error('getDisplayedArea: parameter image must not be undefined');
    		  }

    		  return {
    		    tlhc: {
    		      x: 1,
    		      y: 1
    		    },
    		    brhc: {
    		      x: image.columns,
    		      y: image.rows
    		    },
    		    rowPixelSpacing: image.rowPixelSpacing === undefined ? 1 : image.rowPixelSpacing,
    		    columnPixelSpacing: image.columnPixelSpacing === undefined ? 1 : image.columnPixelSpacing,
    		    presentationSizeMode: 'NONE'
    		  };
    		});

    		/***/ }),

    		/***/ "./internal/getFillStyle.js":
    		/*!**********************************!*\
    		  !*** ./internal/getFillStyle.js ***!
    		  \**********************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/**
    		 * Get current fillStyle for enabled element
    		 *
    		 * @param {Object} enabledElement Enabled element
    		 * @returns {String} Current fillStyle of enabled element
    		 */
    		/* harmony default export */ __webpack_exports__["default"] = (function (enabledElement) {
    		  var _ref = enabledElement.viewport || {},
    		      invert = _ref.invert;

    		  var _ref2 = enabledElement.options || {},
    		      fillStyle = _ref2.fillStyle;

    		  if (['black', 'white'].indexOf(fillStyle) !== -1) {
    		    return invert ? 'white' : 'black';
    		  }

    		  return 'black';
    		});

    		/***/ }),

    		/***/ "./internal/getImageFitScale.js":
    		/*!**************************************!*\
    		  !*** ./internal/getImageFitScale.js ***!
    		  \**************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _validator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validator.js */ "./internal/validator.js");
    		/* harmony import */ var _getImageSize_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getImageSize.js */ "./internal/getImageSize.js");


    		/**
    		 * Calculates the horizontal, vertical and minimum scale factor for an image
    		   @param {{width, height}} windowSize The window size where the image is displayed. This can be any HTML element or structure with a width, height fields (e.g. canvas).
    		 * @param {any} image The cornerstone image object
    		 * @param {Number} rotation Optional. The rotation angle of the image.
    		 * @return {{horizontalScale, verticalScale, scaleFactor}} The calculated horizontal, vertical and minimum scale factor
    		 * @memberof Internal
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (windowSize, image) {
    		  var rotation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
    		  Object(_validator_js__WEBPACK_IMPORTED_MODULE_0__["validateParameterUndefinedOrNull"])(windowSize, 'getImageScale: parameter windowSize must not be undefined');
    		  Object(_validator_js__WEBPACK_IMPORTED_MODULE_0__["validateParameterUndefinedOrNull"])(image, 'getImageScale: parameter image must not be undefined');
    		  var imageSize = Object(_getImageSize_js__WEBPACK_IMPORTED_MODULE_1__["default"])(image, rotation);
    		  var rowPixelSpacing = image.rowPixelSpacing || 1;
    		  var columnPixelSpacing = image.columnPixelSpacing || 1;
    		  var verticalRatio = 1;
    		  var horizontalRatio = 1;

    		  if (rowPixelSpacing < columnPixelSpacing) {
    		    horizontalRatio = columnPixelSpacing / rowPixelSpacing;
    		  } else {
    		    // even if they are equal we want to calculate this ratio (the ration might be 0.5)
    		    verticalRatio = rowPixelSpacing / columnPixelSpacing;
    		  }

    		  var verticalScale = windowSize.height / imageSize.height / verticalRatio;
    		  var horizontalScale = windowSize.width / imageSize.width / horizontalRatio; // Fit image to window

    		  return {
    		    verticalScale: verticalScale,
    		    horizontalScale: horizontalScale,
    		    scaleFactor: Math.min(horizontalScale, verticalScale)
    		  };
    		});

    		/***/ }),

    		/***/ "./internal/getImageSize.js":
    		/*!**********************************!*\
    		  !*** ./internal/getImageSize.js ***!
    		  \**********************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _validator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validator.js */ "./internal/validator.js");

    		/**
    		 * Check if the angle is rotated
    		 * @param {Number} rotation the rotation angle
    		 * @returns {Boolean} true if the angle is rotated; Otherwise, false.
    		 * @memberof Internal
    		 */

    		function isRotated(rotation) {
    		  return !(rotation === null || rotation === undefined || rotation === 0 || rotation === 180);
    		}
    		/**
    		 * Retrieves the current image dimensions given an enabled element
    		 *
    		 * @param {any} image The Cornerstone image.
    		 * @param {Number} rotation Optional. The rotation angle of the image.
    		 * @return {{width:Number, height:Number}} The Image dimensions
    		 * @memberof Internal
    		 */


    		/* harmony default export */ __webpack_exports__["default"] = (function (image) {
    		  var rotation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
    		  Object(_validator_js__WEBPACK_IMPORTED_MODULE_0__["validateParameterUndefinedOrNull"])(image, 'getImageSize: parameter image must not be undefined');
    		  Object(_validator_js__WEBPACK_IMPORTED_MODULE_0__["validateParameterUndefinedOrNull"])(image.width, 'getImageSize: parameter image must have width');
    		  Object(_validator_js__WEBPACK_IMPORTED_MODULE_0__["validateParameterUndefinedOrNull"])(image.height, 'getImageSize: parameter image must have height');

    		  if (isRotated(rotation)) {
    		    return {
    		      height: image.width,
    		      width: image.height
    		    };
    		  }

    		  return {
    		    width: image.width,
    		    height: image.height
    		  };
    		});

    		/***/ }),

    		/***/ "./internal/getModalityLUT.js":
    		/*!************************************!*\
    		  !*** ./internal/getModalityLUT.js ***!
    		  \************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/**
    		 * Generates a linear modality transformation function
    		 *
    		 * See DICOM PS3.3 C.11.1 Modality LUT Module
    		 *
    		 * http://dicom.nema.org/medical/Dicom/current/output/chtml/part03/sect_C.11.html
    		 *
    		 * @param {Number} slope m in the equation specified by Rescale Intercept (0028,1052).
    		 * @param {Number} intercept The value b in relationship between stored values (SV) and the output units specified in Rescale Type (0028,1054).

    		 Output units = m*SV + b.
    		 * @return {function(*): *} A linear modality LUT function. Given a stored pixel it returns the modality pixel value
    		 * @memberof Internal
    		 */
    		function generateLinearModalityLUT(slope, intercept) {
    		  return function (storedPixelValue) {
    		    return storedPixelValue * slope + intercept;
    		  };
    		}

    		function generateNonLinearModalityLUT(modalityLUT) {
    		  var minValue = modalityLUT.lut[0];
    		  var maxValue = modalityLUT.lut[modalityLUT.lut.length - 1];
    		  var maxValueMapped = modalityLUT.firstValueMapped + modalityLUT.lut.length;
    		  return function (storedPixelValue) {
    		    if (storedPixelValue < modalityLUT.firstValueMapped) {
    		      return minValue;
    		    } else if (storedPixelValue >= maxValueMapped) {
    		      return maxValue;
    		    }

    		    return modalityLUT.lut[storedPixelValue];
    		  };
    		}
    		/**
    		 * Get the appropriate Modality LUT for the current situation.
    		 *
    		 * @param {Number} [slope] m in the equation specified by Rescale Intercept (0028,1052).
    		 * @param {Number} [intercept] The value b in relationship between stored values (SV) and the output units specified in Rescale Type (0028,1054).
    		 * @param {Function} [modalityLUT] A modality LUT function. Given a stored pixel it returns the modality pixel value.
    		 *
    		 * @return {function(*): *} A modality LUT function. Given a stored pixel it returns the modality pixel value.
    		 * @memberof Internal
    		 */


    		/* harmony default export */ __webpack_exports__["default"] = (function (slope, intercept, modalityLUT) {
    		  if (modalityLUT) {
    		    return generateNonLinearModalityLUT(modalityLUT);
    		  }

    		  return generateLinearModalityLUT(slope, intercept);
    		});

    		/***/ }),

    		/***/ "./internal/getTransform.js":
    		/*!**********************************!*\
    		  !*** ./internal/getTransform.js ***!
    		  \**********************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _calculateTransform_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./calculateTransform.js */ "./internal/calculateTransform.js");

    		/* harmony default export */ __webpack_exports__["default"] = (function (enabledElement) {
    		  // For now we will calculate it every time it is requested.
    		  // In the future, we may want to cache it in the enabled element to speed things up.
    		  return Object(_calculateTransform_js__WEBPACK_IMPORTED_MODULE_0__["default"])(enabledElement);
    		});

    		/***/ }),

    		/***/ "./internal/getVOILut.js":
    		/*!*******************************!*\
    		  !*** ./internal/getVOILut.js ***!
    		  \*******************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

    		function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

    		function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

    		function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

    		function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

    		function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

    		/* eslint no-bitwise: 0 */

    		/**
    		 * Volume of Interest Lookup Table Function
    		 *
    		 * @typedef {Function} VOILUTFunction
    		 *
    		 * @param {Number} modalityLutValue
    		 * @returns {Number} transformed value
    		 * @memberof Objects
    		 */

    		/**
    		 * @module: VOILUT
    		 */

    		/**
    		 *
    		 * @param {Number} windowWidth Window Width
    		 * @param {Number} windowCenter Window Center
    		 * @returns {VOILUTFunction} VOI LUT mapping function
    		 * @memberof VOILUT
    		 */
    		function generateLinearVOILUT(windowWidth, windowCenter) {
    		  return function (modalityLutValue) {
    		    return ((modalityLutValue - windowCenter) / windowWidth + 0.5) * 255.0;
    		  };
    		}
    		/**
    		 * Generate a non-linear volume of interest lookup table
    		 *
    		 * @param {LUT} voiLUT Volume of Interest Lookup Table Object
    		 * @param {Boolean} roundModalityLUTValues Do a Math.round of modality lut to compute non linear voilut

    		 *
    		 * @returns {VOILUTFunction} VOI LUT mapping function
    		 * @memberof VOILUT
    		 */


    		function generateNonLinearVOILUT(voiLUT, roundModalityLUTValues) {
    		  // We don't trust the voiLUT.numBitsPerEntry, mainly thanks to Agfa!
    		  var bitsPerEntry = Math.max.apply(Math, _toConsumableArray(voiLUT.lut)).toString(2).length;
    		  var shift = bitsPerEntry - 8;
    		  var minValue = voiLUT.lut[0] >> shift;
    		  var maxValue = voiLUT.lut[voiLUT.lut.length - 1] >> shift;
    		  var maxValueMapped = voiLUT.firstValueMapped + voiLUT.lut.length - 1;
    		  return function (modalityLutValue) {
    		    if (modalityLutValue < voiLUT.firstValueMapped) {
    		      return minValue;
    		    } else if (modalityLutValue >= maxValueMapped) {
    		      return maxValue;
    		    }

    		    if (roundModalityLUTValues) {
    		      return voiLUT.lut[Math.round(modalityLutValue) - voiLUT.firstValueMapped] >> shift;
    		    }

    		    return voiLUT.lut[modalityLutValue - voiLUT.firstValueMapped] >> shift;
    		  };
    		}
    		/**
    		 * Retrieve a VOI LUT mapping function given the current windowing settings
    		 * and the VOI LUT for the image
    		 *
    		 * @param {Number} windowWidth Window Width
    		 * @param {Number} windowCenter Window Center
    		 * @param {LUT} [voiLUT] Volume of Interest Lookup Table Object
    		 * @param {Boolean} roundModalityLUTValues Do a Math.round of modality lut to compute non linear voilut
    		 *
    		 * @return {VOILUTFunction} VOI LUT mapping function
    		 * @memberof VOILUT
    		 */


    		/* harmony default export */ __webpack_exports__["default"] = (function (windowWidth, windowCenter, voiLUT, roundModalityLUTValues) {
    		  if (voiLUT) {
    		    return generateNonLinearVOILUT(voiLUT, roundModalityLUTValues);
    		  }

    		  return generateLinearVOILUT(windowWidth, windowCenter);
    		});

    		/***/ }),

    		/***/ "./internal/guid.js":
    		/*!**************************!*\
    		  !*** ./internal/guid.js ***!
    		  \**************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		function s4() {
    		  return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
    		}
    		/**
    		 * Generate a unique identifier
    		 *
    		 * @return {string} A unique identifier
    		 * @memberof Internal
    		 */


    		/* harmony default export */ __webpack_exports__["default"] = (function () {
    		  return "".concat(s4() + s4(), "-").concat(s4(), "-").concat(s4(), "-").concat(s4(), "-").concat(s4()).concat(s4()).concat(s4());
    		});

    		/***/ }),

    		/***/ "./internal/index.js":
    		/*!***************************!*\
    		  !*** ./internal/index.js ***!
    		  \***************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transform.js */ "./internal/transform.js");
    		/* harmony import */ var _calculateTransform_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./calculateTransform.js */ "./internal/calculateTransform.js");
    		/* harmony import */ var _drawImage_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./drawImage.js */ "./internal/drawImage.js");
    		/* harmony import */ var _generateLut_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./generateLut.js */ "./internal/generateLut.js");
    		/* harmony import */ var _getDefaultViewport_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getDefaultViewport.js */ "./internal/getDefaultViewport.js");
    		/* harmony import */ var _getTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./getTransform.js */ "./internal/getTransform.js");
    		/* harmony import */ var _requestAnimationFrame_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./requestAnimationFrame.js */ "./internal/requestAnimationFrame.js");
    		/* harmony import */ var _setDefaultViewport_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./setDefaultViewport.js */ "./internal/setDefaultViewport.js");
    		/* harmony import */ var _storedColorPixelDataToCanvasImageData_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./storedColorPixelDataToCanvasImageData.js */ "./internal/storedColorPixelDataToCanvasImageData.js");
    		/* harmony import */ var _storedPixelDataToCanvasImageData_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./storedPixelDataToCanvasImageData.js */ "./internal/storedPixelDataToCanvasImageData.js");
    		/* harmony import */ var _storedPixelDataToCanvasImageDataColorLUT_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./storedPixelDataToCanvasImageDataColorLUT.js */ "./internal/storedPixelDataToCanvasImageDataColorLUT.js");
    		/* harmony import */ var _storedPixelDataToCanvasImageDataPseudocolorLUT_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./storedPixelDataToCanvasImageDataPseudocolorLUT.js */ "./internal/storedPixelDataToCanvasImageDataPseudocolorLUT.js");
    		/* harmony import */ var _storedPixelDataToCanvasImageDataRGBA_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./storedPixelDataToCanvasImageDataRGBA.js */ "./internal/storedPixelDataToCanvasImageDataRGBA.js");













    		/**
    		 * @module Internal
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = ({
    		  drawImage: _drawImage_js__WEBPACK_IMPORTED_MODULE_2__["default"],
    		  generateLut: _generateLut_js__WEBPACK_IMPORTED_MODULE_3__["default"],
    		  getDefaultViewport: _getDefaultViewport_js__WEBPACK_IMPORTED_MODULE_4__["default"],
    		  requestAnimationFrame: _requestAnimationFrame_js__WEBPACK_IMPORTED_MODULE_6__["default"],
    		  setDefaultViewport: _setDefaultViewport_js__WEBPACK_IMPORTED_MODULE_7__["default"],
    		  storedPixelDataToCanvasImageData: _storedPixelDataToCanvasImageData_js__WEBPACK_IMPORTED_MODULE_9__["default"],
    		  storedPixelDataToCanvasImageDataRGBA: _storedPixelDataToCanvasImageDataRGBA_js__WEBPACK_IMPORTED_MODULE_12__["default"],
    		  storedPixelDataToCanvasImageDataColorLUT: _storedPixelDataToCanvasImageDataColorLUT_js__WEBPACK_IMPORTED_MODULE_10__["default"],
    		  storedPixelDataToCanvasImageDataPseudocolorLUT: _storedPixelDataToCanvasImageDataPseudocolorLUT_js__WEBPACK_IMPORTED_MODULE_11__["default"],
    		  storedColorPixelDataToCanvasImageData: _storedColorPixelDataToCanvasImageData_js__WEBPACK_IMPORTED_MODULE_8__["default"],
    		  getTransform: _getTransform_js__WEBPACK_IMPORTED_MODULE_5__["default"],
    		  calculateTransform: _calculateTransform_js__WEBPACK_IMPORTED_MODULE_1__["default"],
    		  Transform: _transform_js__WEBPACK_IMPORTED_MODULE_0__["Transform"]
    		});

    		/***/ }),

    		/***/ "./internal/now.js":
    		/*!*************************!*\
    		  !*** ./internal/now.js ***!
    		  \*************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/**
    		 * @module Polyfills
    		 */

    		/**
    		 * Use the performance.now() method if possible, and if not, use Date.now()
    		 *
    		 * @return {number} Time elapsed since the time origin
    		 * @memberof Polyfills
    		 */
    		/* harmony default export */ __webpack_exports__["default"] = (function () {
    		  if (window.performance) {
    		    return performance.now();
    		  }

    		  return Date.now();
    		});

    		/***/ }),

    		/***/ "./internal/requestAnimationFrame.js":
    		/*!*******************************************!*\
    		  !*** ./internal/requestAnimationFrame.js ***!
    		  \*******************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		function requestFrame(callback) {
    		  window.setTimeout(callback, 1000 / 60);
    		}
    		/**
    		 * Polyfills requestAnimationFrame for older browsers.
    		 *
    		 * @param {Function} callback A parameter specifying a function to call when it's time to update your animation for the next repaint. The callback has one single argument, a DOMHighResTimeStamp, which indicates the current time (the time returned from performance.now() ) for when requestAnimationFrame starts to fire callbacks.
    		 *
    		 * @return {Number} A long integer value, the request id, that uniquely identifies the entry in the callback list. This is a non-zero value, but you may not make any other assumptions about its value. You can pass this value to window.cancelAnimationFrame() to cancel the refresh callback request.
    		 * @memberof Polyfills
    		 */


    		/* harmony default export */ __webpack_exports__["default"] = (function (callback) {
    		  return window.requestAnimationFrame(callback) || window.webkitRequestAnimationFrame(callback) || window.mozRequestAnimationFrame(callback) || window.oRequestAnimationFrame(callback) || window.msRequestAnimationFrame(callback) || requestFrame(callback);
    		});

    		/***/ }),

    		/***/ "./internal/setDefaultViewport.js":
    		/*!****************************************!*\
    		  !*** ./internal/setDefaultViewport.js ***!
    		  \****************************************/
    		/*! exports provided: default, state */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "state", function() { return state; });
    		var state = {
    		  viewport: {}
    		};
    		/**
    		 * Sets new default values for `getDefaultViewport`
    		 *
    		 * @param {Object} viewport - Object that sets new default values for getDefaultViewport
    		 * @returns {undefined}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (viewport) {
    		  state.viewport = viewport || {};
    		});


    		/***/ }),

    		/***/ "./internal/storedColorPixelDataToCanvasImageData.js":
    		/*!***********************************************************!*\
    		  !*** ./internal/storedColorPixelDataToCanvasImageData.js ***!
    		  \***********************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _now_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./now.js */ "./internal/now.js");

    		/**
    		 * Converts stored color pixel values to display pixel values using a LUT.
    		 *
    		 * Note: Skips alpha value for any input image pixel data.
    		 *
    		 * @param {Image} image A Cornerstone Image Object
    		 * @param {Array} lut Lookup table array
    		 * @param {Uint8ClampedArray} canvasImageDataData canvasImageData.data buffer filled with white pixels
    		 *
    		 * @returns {void}
    		 * @memberof Internal
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (image, lut, canvasImageDataData) {
    		  var start = Object(_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])();
    		  var pixelData = image.getPixelData();
    		  image.stats.lastGetPixelDataTime = Object(_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])() - start;
    		  var minPixelValue = image.minPixelValue;
    		  var canvasImageDataIndex = 0;
    		  var storedPixelDataIndex = 0;
    		  var numPixels = pixelData.length; // NOTE: As of Nov 2014, most javascript engines have lower performance when indexing negative indexes.
    		  // We have a special code path for this case that improves performance.  Thanks to @jpambrun for this enhancement

    		  start = Object(_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])();

    		  if (minPixelValue < 0) {
    		    while (storedPixelDataIndex < numPixels) {
    		      canvasImageDataData[canvasImageDataIndex++] = lut[pixelData[storedPixelDataIndex++] + -minPixelValue]; // Red

    		      canvasImageDataData[canvasImageDataIndex++] = lut[pixelData[storedPixelDataIndex++] + -minPixelValue]; // Green

    		      canvasImageDataData[canvasImageDataIndex] = lut[pixelData[storedPixelDataIndex] + -minPixelValue]; // Blue

    		      storedPixelDataIndex += 2;
    		      canvasImageDataIndex += 2;
    		    }
    		  } else {
    		    while (storedPixelDataIndex < numPixels) {
    		      canvasImageDataData[canvasImageDataIndex++] = lut[pixelData[storedPixelDataIndex++]]; // Red

    		      canvasImageDataData[canvasImageDataIndex++] = lut[pixelData[storedPixelDataIndex++]]; // Green

    		      canvasImageDataData[canvasImageDataIndex] = lut[pixelData[storedPixelDataIndex]]; // Blue

    		      storedPixelDataIndex += 2;
    		      canvasImageDataIndex += 2;
    		    }
    		  }

    		  image.stats.lastStoredPixelDataToCanvasImageDataTime = Object(_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])() - start;
    		});

    		/***/ }),

    		/***/ "./internal/storedPixelDataToCanvasImageData.js":
    		/*!******************************************************!*\
    		  !*** ./internal/storedPixelDataToCanvasImageData.js ***!
    		  \******************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _now_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./now.js */ "./internal/now.js");

    		/**
    		 * This function transforms stored pixel values into a canvas image data buffer
    		 * by using a LUT.  This is the most performance sensitive code in cornerstone and
    		 * we use a special trick to make this go as fast as possible.  Specifically we
    		 * use the alpha channel only to control the luminance rather than the red, green and
    		 * blue channels which makes it over 3x faster. The canvasImageDataData buffer needs
    		 * to be previously filled with white pixels.
    		 *
    		 * NOTE: Attribution would be appreciated if you use this technique!
    		 *
    		 * @param {Image} image A Cornerstone Image Object
    		 * @param {Array} lut Lookup table array
    		 * @param {Uint8ClampedArray} canvasImageDataData canvasImageData.data buffer filled with white pixels
    		 *
    		 * @returns {void}
    		 * @memberof Internal
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (image, lut, canvasImageDataData) {
    		  var start = Object(_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])();
    		  var pixelData = image.getPixelData();
    		  image.stats.lastGetPixelDataTime = Object(_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])() - start;
    		  var numPixels = pixelData.length;
    		  var minPixelValue = image.minPixelValue;
    		  var canvasImageDataIndex = 3;
    		  var storedPixelDataIndex = 0; // NOTE: As of Nov 2014, most javascript engines have lower performance when indexing negative indexes.
    		  // We have a special code path for this case that improves performance.  Thanks to @jpambrun for this enhancement
    		  // Added two paths (Int16Array, Uint16Array) to avoid polymorphic deoptimization in chrome.

    		  start = Object(_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])();

    		  if (pixelData instanceof Int16Array) {
    		    if (minPixelValue < 0) {
    		      while (storedPixelDataIndex < numPixels) {
    		        canvasImageDataData[canvasImageDataIndex] = lut[pixelData[storedPixelDataIndex++] + -minPixelValue]; // Alpha

    		        canvasImageDataIndex += 4;
    		      }
    		    } else {
    		      while (storedPixelDataIndex < numPixels) {
    		        canvasImageDataData[canvasImageDataIndex] = lut[pixelData[storedPixelDataIndex++]]; // Alpha

    		        canvasImageDataIndex += 4;
    		      }
    		    }
    		  } else if (pixelData instanceof Uint16Array) {
    		    while (storedPixelDataIndex < numPixels) {
    		      canvasImageDataData[canvasImageDataIndex] = lut[pixelData[storedPixelDataIndex++]]; // Alpha

    		      canvasImageDataIndex += 4;
    		    }
    		  } else if (minPixelValue < 0) {
    		    while (storedPixelDataIndex < numPixels) {
    		      canvasImageDataData[canvasImageDataIndex] = lut[pixelData[storedPixelDataIndex++] + -minPixelValue]; // Alpha

    		      canvasImageDataIndex += 4;
    		    }
    		  } else {
    		    while (storedPixelDataIndex < numPixels) {
    		      canvasImageDataData[canvasImageDataIndex] = lut[pixelData[storedPixelDataIndex++]]; // Alpha

    		      canvasImageDataIndex += 4;
    		    }
    		  }

    		  image.stats.lastStoredPixelDataToCanvasImageDataTime = Object(_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])() - start;
    		});

    		/***/ }),

    		/***/ "./internal/storedPixelDataToCanvasImageDataColorLUT.js":
    		/*!**************************************************************!*\
    		  !*** ./internal/storedPixelDataToCanvasImageDataColorLUT.js ***!
    		  \**************************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _colors_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors/index.js */ "./colors/index.js");
    		/* harmony import */ var _now_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./now.js */ "./internal/now.js");


    		/**
    		 *
    		 * @param {Image} image A Cornerstone Image Object
    		 * @param {LookupTable|Array} colorLut Lookup table array
    		 * @param {Uint8ClampedArray} canvasImageDataData canvasImageData.data buffer filled with white pixels
    		 *
    		 * @returns {void}
    		 * @memberof Internal
    		 */

    		function storedPixelDataToCanvasImageDataColorLUT(image, colorLut, canvasImageDataData) {
    		  var start = Object(_now_js__WEBPACK_IMPORTED_MODULE_1__["default"])();
    		  var pixelData = image.getPixelData();
    		  image.stats.lastGetPixelDataTime = Object(_now_js__WEBPACK_IMPORTED_MODULE_1__["default"])() - start;
    		  var numPixels = pixelData.length;
    		  var minPixelValue = image.minPixelValue;
    		  var canvasImageDataIndex = 0;
    		  var storedPixelDataIndex = 0;
    		  var rgba;
    		  var clut;
    		  start = Object(_now_js__WEBPACK_IMPORTED_MODULE_1__["default"])();

    		  if (colorLut instanceof _colors_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].LookupTable) {
    		    clut = colorLut.Table;
    		  } else {
    		    clut = colorLut;
    		  }

    		  if (minPixelValue < 0) {
    		    while (storedPixelDataIndex < numPixels) {
    		      rgba = clut[pixelData[storedPixelDataIndex++] + -minPixelValue];
    		      canvasImageDataData[canvasImageDataIndex++] = rgba[0];
    		      canvasImageDataData[canvasImageDataIndex++] = rgba[1];
    		      canvasImageDataData[canvasImageDataIndex++] = rgba[2];
    		      canvasImageDataData[canvasImageDataIndex++] = rgba[3];
    		    }
    		  } else {
    		    while (storedPixelDataIndex < numPixels) {
    		      rgba = clut[pixelData[storedPixelDataIndex++]];
    		      canvasImageDataData[canvasImageDataIndex++] = rgba[0];
    		      canvasImageDataData[canvasImageDataIndex++] = rgba[1];
    		      canvasImageDataData[canvasImageDataIndex++] = rgba[2];
    		      canvasImageDataData[canvasImageDataIndex++] = rgba[3];
    		    }
    		  }

    		  image.stats.lastStoredPixelDataToCanvasImageDataTime = Object(_now_js__WEBPACK_IMPORTED_MODULE_1__["default"])() - start;
    		}

    		/* harmony default export */ __webpack_exports__["default"] = (storedPixelDataToCanvasImageDataColorLUT);

    		/***/ }),

    		/***/ "./internal/storedPixelDataToCanvasImageDataPseudocolorLUT.js":
    		/*!********************************************************************!*\
    		  !*** ./internal/storedPixelDataToCanvasImageDataPseudocolorLUT.js ***!
    		  \********************************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _colors_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors/index.js */ "./colors/index.js");
    		/* harmony import */ var _now_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./now.js */ "./internal/now.js");


    		/**
    		 *
    		 * @param {Image} image A Cornerstone Image Object
    		 * @param {Array} grayscaleLut Lookup table array
    		 * @param {LookupTable|Array} colorLut Lookup table array
    		 * @param {Uint8ClampedArray} canvasImageDataData canvasImageData.data buffer filled with white pixels
    		 *
    		 * @returns {void}
    		 * @memberof Internal
    		 */

    		function storedPixelDataToCanvasImageDataPseudocolorLUT(image, grayscaleLut, colorLut, canvasImageDataData) {
    		  var start = Object(_now_js__WEBPACK_IMPORTED_MODULE_1__["default"])();
    		  var pixelData = image.getPixelData();
    		  image.stats.lastGetPixelDataTime = Object(_now_js__WEBPACK_IMPORTED_MODULE_1__["default"])() - start;
    		  var numPixels = pixelData.length;
    		  var minPixelValue = image.minPixelValue;
    		  var canvasImageDataIndex = 0;
    		  var storedPixelDataIndex = 0;
    		  var grayscale;
    		  var rgba;
    		  var clut;
    		  start = Object(_now_js__WEBPACK_IMPORTED_MODULE_1__["default"])();

    		  if (colorLut instanceof _colors_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].LookupTable) {
    		    clut = colorLut.Table;
    		  } else {
    		    clut = colorLut;
    		  }

    		  if (minPixelValue < 0) {
    		    while (storedPixelDataIndex < numPixels) {
    		      grayscale = grayscaleLut[pixelData[storedPixelDataIndex++] + -minPixelValue];
    		      rgba = clut[grayscale];
    		      canvasImageDataData[canvasImageDataIndex++] = rgba[0];
    		      canvasImageDataData[canvasImageDataIndex++] = rgba[1];
    		      canvasImageDataData[canvasImageDataIndex++] = rgba[2];
    		      canvasImageDataData[canvasImageDataIndex++] = rgba[3];
    		    }
    		  } else {
    		    while (storedPixelDataIndex < numPixels) {
    		      grayscale = grayscaleLut[pixelData[storedPixelDataIndex++]];
    		      rgba = clut[grayscale];
    		      canvasImageDataData[canvasImageDataIndex++] = rgba[0];
    		      canvasImageDataData[canvasImageDataIndex++] = rgba[1];
    		      canvasImageDataData[canvasImageDataIndex++] = rgba[2];
    		      canvasImageDataData[canvasImageDataIndex++] = rgba[3];
    		    }
    		  }

    		  image.stats.lastStoredPixelDataToCanvasImageDataTime = Object(_now_js__WEBPACK_IMPORTED_MODULE_1__["default"])() - start;
    		}

    		/* harmony default export */ __webpack_exports__["default"] = (storedPixelDataToCanvasImageDataPseudocolorLUT);

    		/***/ }),

    		/***/ "./internal/storedPixelDataToCanvasImageDataRGBA.js":
    		/*!**********************************************************!*\
    		  !*** ./internal/storedPixelDataToCanvasImageDataRGBA.js ***!
    		  \**********************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _now_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./now.js */ "./internal/now.js");

    		/**
    		 * This function transforms stored pixel values into a canvas image data buffer
    		 * by using a LUT.
    		 *
    		 * @param {Image} image A Cornerstone Image Object
    		 * @param {Array} lut Lookup table array
    		 * @param {Uint8ClampedArray} canvasImageDataData canvasImageData.data buffer filled with white pixels
    		 *
    		 * @returns {void}
    		 * @memberof Internal
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (image, lut, canvasImageDataData) {
    		  var start = Object(_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])();
    		  var pixelData = image.getPixelData();
    		  image.stats.lastGetPixelDataTime = Object(_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])() - start;
    		  var numPixels = pixelData.length;
    		  var minPixelValue = image.minPixelValue;
    		  var canvasImageDataIndex = 0;
    		  var storedPixelDataIndex = 0;
    		  var pixelValue; // NOTE: As of Nov 2014, most javascript engines have lower performance when indexing negative indexes.
    		  // We have a special code path for this case that improves performance.  Thanks to @jpambrun for this enhancement
    		  // Added two paths (Int16Array, Uint16Array) to avoid polymorphic deoptimization in chrome.

    		  start = Object(_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])();

    		  if (pixelData instanceof Int16Array) {
    		    if (minPixelValue < 0) {
    		      while (storedPixelDataIndex < numPixels) {
    		        pixelValue = lut[pixelData[storedPixelDataIndex++] + -minPixelValue];
    		        canvasImageDataData[canvasImageDataIndex++] = pixelValue;
    		        canvasImageDataData[canvasImageDataIndex++] = pixelValue;
    		        canvasImageDataData[canvasImageDataIndex++] = pixelValue;
    		        canvasImageDataData[canvasImageDataIndex++] = 255; // Alpha
    		      }
    		    } else {
    		      while (storedPixelDataIndex < numPixels) {
    		        pixelValue = lut[pixelData[storedPixelDataIndex++]];
    		        canvasImageDataData[canvasImageDataIndex++] = pixelValue;
    		        canvasImageDataData[canvasImageDataIndex++] = pixelValue;
    		        canvasImageDataData[canvasImageDataIndex++] = pixelValue;
    		        canvasImageDataData[canvasImageDataIndex++] = 255; // Alpha
    		      }
    		    }
    		  } else if (pixelData instanceof Uint16Array) {
    		    while (storedPixelDataIndex < numPixels) {
    		      pixelValue = lut[pixelData[storedPixelDataIndex++]];
    		      canvasImageDataData[canvasImageDataIndex++] = pixelValue;
    		      canvasImageDataData[canvasImageDataIndex++] = pixelValue;
    		      canvasImageDataData[canvasImageDataIndex++] = pixelValue;
    		      canvasImageDataData[canvasImageDataIndex++] = 255; // Alpha
    		    }
    		  } else if (minPixelValue < 0) {
    		    while (storedPixelDataIndex < numPixels) {
    		      pixelValue = lut[pixelData[storedPixelDataIndex++] + -minPixelValue];
    		      canvasImageDataData[canvasImageDataIndex++] = pixelValue;
    		      canvasImageDataData[canvasImageDataIndex++] = pixelValue;
    		      canvasImageDataData[canvasImageDataIndex++] = pixelValue;
    		      canvasImageDataData[canvasImageDataIndex++] = 255; // Alpha
    		    }
    		  } else {
    		    while (storedPixelDataIndex < numPixels) {
    		      pixelValue = lut[pixelData[storedPixelDataIndex++]];
    		      canvasImageDataData[canvasImageDataIndex++] = pixelValue;
    		      canvasImageDataData[canvasImageDataIndex++] = pixelValue;
    		      canvasImageDataData[canvasImageDataIndex++] = pixelValue;
    		      canvasImageDataData[canvasImageDataIndex++] = 255; // Alpha
    		    }
    		  }

    		  image.stats.lastStoredPixelDataToCanvasImageDataTime = Object(_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])() - start;
    		});

    		/***/ }),

    		/***/ "./internal/storedRGBAPixelDataToCanvasImageData.js":
    		/*!**********************************************************!*\
    		  !*** ./internal/storedRGBAPixelDataToCanvasImageData.js ***!
    		  \**********************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _now_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./now.js */ "./internal/now.js");

    		/**
    		 * Converts stored RGBA color pixel values to display pixel values using a LUT.
    		 *
    		 * @param {Image} image A Cornerstone Image Object
    		 * @param {Array} lut Lookup table array
    		 * @param {Uint8ClampedArray} canvasImageDataData canvasImageData.data buffer filled with white pixels
    		 *
    		 * @returns {void}
    		 * @memberof Internal
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (image, lut, canvasImageDataData) {
    		  var start = Object(_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])();
    		  var pixelData = image.getPixelData();
    		  image.stats.lastGetPixelDataTime = Object(_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])() - start;
    		  var minPixelValue = image.minPixelValue;
    		  var canvasImageDataIndex = 0;
    		  var storedPixelDataIndex = 0;
    		  var numPixels = pixelData.length; // NOTE: As of Nov 2014, most javascript engines have lower performance when indexing negative indexes.
    		  // We have a special code path for this case that improves performance.  Thanks to @jpambrun for this enhancement

    		  start = Object(_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])();

    		  if (minPixelValue < 0) {
    		    while (storedPixelDataIndex < numPixels) {
    		      canvasImageDataData[canvasImageDataIndex++] = lut[pixelData[storedPixelDataIndex++] + -minPixelValue]; // Red

    		      canvasImageDataData[canvasImageDataIndex++] = lut[pixelData[storedPixelDataIndex++] + -minPixelValue]; // Green

    		      canvasImageDataData[canvasImageDataIndex++] = lut[pixelData[storedPixelDataIndex++] + -minPixelValue]; // Blue

    		      canvasImageDataData[canvasImageDataIndex++] = pixelData[storedPixelDataIndex++];
    		    }
    		  } else {
    		    while (storedPixelDataIndex < numPixels) {
    		      canvasImageDataData[canvasImageDataIndex++] = lut[pixelData[storedPixelDataIndex++]]; // Red

    		      canvasImageDataData[canvasImageDataIndex++] = lut[pixelData[storedPixelDataIndex++]]; // Green

    		      canvasImageDataData[canvasImageDataIndex++] = lut[pixelData[storedPixelDataIndex++]]; // Blue

    		      canvasImageDataData[canvasImageDataIndex++] = pixelData[storedPixelDataIndex++];
    		    }
    		  }

    		  image.stats.lastStoredPixelDataToCanvasImageDataTime = Object(_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])() - start;
    		});

    		/***/ }),

    		/***/ "./internal/transform.js":
    		/*!*******************************!*\
    		  !*** ./internal/transform.js ***!
    		  \*******************************/
    		/*! exports provided: Transform */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Transform", function() { return Transform; });
    		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

    		function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

    		function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); return Constructor; }

    		// By Simon Sarris
    		// Www.simonsarris.com
    		// Sarris@acm.org
    		//
    		// Free to use and distribute at will
    		// So long as you are nice to people, etc
    		// Simple class for keeping track of the current transformation matrix
    		// For instance:
    		//    Var t = new Transform();
    		//    T.rotate(5);
    		//    Var m = t.m;
    		//    Ctx.setTransform(m[0], m[1], m[2], m[3], m[4], m[5]);
    		// Is equivalent to:
    		//    Ctx.rotate(5);
    		// But now you can retrieve it :)
    		// Remember that this does not account for any CSS transforms applied to the canvas
    		var Transform = /*#__PURE__*/function () {
    		  function Transform() {
    		    _classCallCheck(this, Transform);

    		    this.reset();
    		  }

    		  _createClass(Transform, [{
    		    key: "reset",
    		    value: function reset() {
    		      this.m = [1, 0, 0, 1, 0, 0];
    		    }
    		  }, {
    		    key: "clone",
    		    value: function clone() {
    		      var transform = new Transform();
    		      transform.m[0] = this.m[0];
    		      transform.m[1] = this.m[1];
    		      transform.m[2] = this.m[2];
    		      transform.m[3] = this.m[3];
    		      transform.m[4] = this.m[4];
    		      transform.m[5] = this.m[5];
    		      return transform;
    		    }
    		  }, {
    		    key: "multiply",
    		    value: function multiply(matrix) {
    		      var m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];
    		      var m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];
    		      var m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];
    		      var m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];
    		      var dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];
    		      var dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];
    		      this.m[0] = m11;
    		      this.m[1] = m12;
    		      this.m[2] = m21;
    		      this.m[3] = m22;
    		      this.m[4] = dx;
    		      this.m[5] = dy;
    		    }
    		  }, {
    		    key: "invert",
    		    value: function invert() {
    		      var d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);
    		      var m0 = this.m[3] * d;
    		      var m1 = -this.m[1] * d;
    		      var m2 = -this.m[2] * d;
    		      var m3 = this.m[0] * d;
    		      var m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);
    		      var m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);
    		      this.m[0] = m0;
    		      this.m[1] = m1;
    		      this.m[2] = m2;
    		      this.m[3] = m3;
    		      this.m[4] = m4;
    		      this.m[5] = m5;
    		    }
    		  }, {
    		    key: "rotate",
    		    value: function rotate(rad) {
    		      var c = Math.cos(rad);
    		      var s = Math.sin(rad);
    		      var m11 = this.m[0] * c + this.m[2] * s;
    		      var m12 = this.m[1] * c + this.m[3] * s;
    		      var m21 = this.m[0] * -s + this.m[2] * c;
    		      var m22 = this.m[1] * -s + this.m[3] * c;
    		      this.m[0] = m11;
    		      this.m[1] = m12;
    		      this.m[2] = m21;
    		      this.m[3] = m22;
    		    }
    		  }, {
    		    key: "translate",
    		    value: function translate(x, y) {
    		      this.m[4] += this.m[0] * x + this.m[2] * y;
    		      this.m[5] += this.m[1] * x + this.m[3] * y;
    		    }
    		  }, {
    		    key: "scale",
    		    value: function scale(sx, sy) {
    		      this.m[0] *= sx;
    		      this.m[1] *= sx;
    		      this.m[2] *= sy;
    		      this.m[3] *= sy;
    		    }
    		  }, {
    		    key: "transformPoint",
    		    value: function transformPoint(px, py) {
    		      var x = px;
    		      var y = py;
    		      px = x * this.m[0] + y * this.m[2] + this.m[4];
    		      py = x * this.m[1] + y * this.m[3] + this.m[5];
    		      return {
    		        x: px,
    		        y: py
    		      };
    		    }
    		  }]);

    		  return Transform;
    		}();

    		/***/ }),

    		/***/ "./internal/tryEnableWebgl.js":
    		/*!************************************!*\
    		  !*** ./internal/tryEnableWebgl.js ***!
    		  \************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _webgl_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../webgl/index.js */ "./webgl/index.js");

    		/**
    		 * Checks if webGL is supported and initializes the rendering engine.
    		 * @param {any} options Options to check if webgl rendering is requested (e.g. enable webgl by passing {renderer: 'webgl'})
    		 * @returns {Boolean} true if webgl rendering has been successfully initialized. Otherwise, false.
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (options) {
    		  if (_webgl_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].renderer.isWebGLAvailable()) {
    		    // If WebGL is available on the device, initialize the renderer
    		    // And return the renderCanvas from the WebGL rendering path
    		    _webgl_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].renderer.initRenderer();
    		    options.renderer = 'webgl';
    		    options.desynchronized = true;
    		    options.preserveDrawingBuffer = true;
    		    return true;
    		  } // If WebGL is not available on this device, we will fall back
    		  // To using the Canvas renderer


    		  console.error('WebGL not available, falling back to Canvas renderer');
    		  delete options.renderer;
    		  delete options.preserveDrawingBuffer;
    		  return false;
    		});

    		/***/ }),

    		/***/ "./internal/validator.js":
    		/*!*******************************!*\
    		  !*** ./internal/validator.js ***!
    		  \*******************************/
    		/*! exports provided: validateParameterUndefined, validateParameterUndefinedOrNull */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "validateParameterUndefined", function() { return validateParameterUndefined; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "validateParameterUndefinedOrNull", function() { return validateParameterUndefinedOrNull; });
    		/**
    		 * Check if the supplied parameter is undefined and throws and error
    		 * @param {any} checkParam the parameter to validate for undefined
    		 * @param {any} errorMsg the error message to be thrown
    		 * @returns {void}
    		 * @memberof internal
    		 */
    		function validateParameterUndefined(checkParam, errorMsg) {
    		  if (checkParam === undefined) {
    		    throw new Error(errorMsg);
    		  }
    		}
    		/**
    		 * Check if the supplied parameter is undefined or null and throws and error
    		 * @param {any} checkParam the parameter to validate for undefined
    		 * @param {any} errorMsg the error message to be thrown
    		 * @returns {void}
    		 * @memberof internal
    		 */

    		function validateParameterUndefinedOrNull(checkParam, errorMsg) {
    		  if (checkParam === undefined || checkParam === null) {
    		    throw new Error(errorMsg);
    		  }
    		}

    		/***/ }),

    		/***/ "./invalidate.js":
    		/*!***********************!*\
    		  !*** ./invalidate.js ***!
    		  \***********************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enabledElements.js */ "./enabledElements.js");
    		/* harmony import */ var _triggerEvent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./triggerEvent.js */ "./triggerEvent.js");
    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./events.js */ "./events.js");



    		/**
    		 * Sets the invalid flag on the enabled element and fires an event
    		 * @param {HTMLElement} element The DOM element enabled for Cornerstone
    		 * @returns {void}
    		 * @memberof Drawing
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (element) {
    		  var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElement"])(element);
    		  enabledElement.invalid = true;
    		  enabledElement.needsRedraw = true;
    		  var eventData = {
    		    element: element
    		  };
    		  Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element, _events_js__WEBPACK_IMPORTED_MODULE_2__["default"].INVALIDATED, eventData);
    		});

    		/***/ }),

    		/***/ "./invalidateImageId.js":
    		/*!******************************!*\
    		  !*** ./invalidateImageId.js ***!
    		  \******************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enabledElements.js */ "./enabledElements.js");
    		/* harmony import */ var _internal_drawImage_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/drawImage.js */ "./internal/drawImage.js");


    		/**
    		 * Forces the image to be updated/redrawn for all enabled elements
    		 * displaying the specified imageId
    		 *
    		 * @param {string} imageId The imageId of the Cornerstone Image Object to redraw
    		 * @returns {void}
    		 * @memberof Drawing
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (imageId) {
    		  var enabledElements = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElementsByImageId"])(imageId);
    		  enabledElements.forEach(function (enabledElement) {
    		    Object(_internal_drawImage_js__WEBPACK_IMPORTED_MODULE_1__["default"])(enabledElement, true);
    		  });
    		});

    		/***/ }),

    		/***/ "./layers.js":
    		/*!*******************!*\
    		  !*** ./layers.js ***!
    		  \*******************/
    		/*! exports provided: rescaleImage, addLayer, removeLayer, getLayer, getLayers, getVisibleLayers, setActiveLayer, setLayerImage, getActiveLayer, purgeLayers */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rescaleImage", function() { return rescaleImage; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addLayer", function() { return addLayer; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeLayer", function() { return removeLayer; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLayer", function() { return getLayer; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLayers", function() { return getLayers; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getVisibleLayers", function() { return getVisibleLayers; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setActiveLayer", function() { return setActiveLayer; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setLayerImage", function() { return setLayerImage; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getActiveLayer", function() { return getActiveLayer; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "purgeLayers", function() { return purgeLayers; });
    		/* harmony import */ var _internal_guid_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/guid.js */ "./internal/guid.js");
    		/* harmony import */ var _enabledElements_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./enabledElements.js */ "./enabledElements.js");
    		/* harmony import */ var _internal_getDefaultViewport_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal/getDefaultViewport.js */ "./internal/getDefaultViewport.js");
    		/* harmony import */ var _internal_getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./internal/getDisplayedArea.js */ "./internal/getDisplayedArea.js");
    		/* harmony import */ var _updateImage_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./updateImage.js */ "./updateImage.js");
    		/* harmony import */ var _triggerEvent_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./triggerEvent.js */ "./triggerEvent.js");
    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./events.js */ "./events.js");







    		/**
    		 * @module EnabledElementLayers
    		 */

    		/**
    		 * Helper function to trigger an event on a Cornerstone element with
    		 * a specific layerId
    		 *
    		 * @param {String} eventName The event name (e.g. CornerstoneLayerAdded)
    		 * @param {EnabledElement} enabledElement The Cornerstone enabled element
    		 * @param {String} layerId The layer's unique identifier
    		 * @returns {void}
    		 * @memberof EnabledElementLayers
    		 */

    		function triggerEventForLayer(eventName, enabledElement, layerId) {
    		  var element = enabledElement.element;
    		  var eventData = {
    		    viewport: enabledElement.viewport,
    		    element: enabledElement.element,
    		    image: enabledElement.image,
    		    enabledElement: enabledElement,
    		    layerId: layerId
    		  };
    		  Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_5__["default"])(element, eventName, eventData);
    		}
    		/**
    		 * Rescale the target layer to the base layer based on the
    		 * relative size of each image and their pixel dimensions.
    		 *
    		 * This function will update the Viewport parameters of the
    		 * target layer to a new scale.
    		 *
    		 * @param {EnabledElementLayer} baseLayer The base layer
    		 * @param {EnabledElementLayer} targetLayer The target layer to rescale
    		 * @returns {void}
    		 * @memberof EnabledElementLayers
    		 */


    		function rescaleImage(baseLayer, targetLayer) {
    		  if (baseLayer.layerId === targetLayer.layerId) {
    		    throw new Error('rescaleImage: both arguments represent the same layer');
    		  }

    		  var baseImage = baseLayer.image;
    		  var targetImage = targetLayer.image; // Return if these images don't have an imageId (e.g. for dynamic images)

    		  if (!baseImage.imageId || !targetImage.imageId) {
    		    return;
    		  } // Column pixel spacing need to be considered when calculating the
    		  // ratio between the layer added and base layer images


    		  var targetDisplayedArea = Object(_internal_getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_3__["default"])(targetImage, targetLayer.viewport);
    		  var baseDisplayedArea = Object(_internal_getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_3__["default"])(baseImage, baseLayer.viewport);
    		  var colRelative = targetDisplayedArea.columnPixelSpacing * targetImage.width / (baseDisplayedArea.columnPixelSpacing * baseImage.width);
    		  var viewportRatio = targetLayer.viewport.scale / baseLayer.viewport.scale * colRelative;
    		  targetLayer.viewport.scale = baseLayer.viewport.scale * viewportRatio;
    		}
    		/**
    		 * Add a layer to a Cornerstone element
    		 *
    		 * @param {HTMLElement} element The DOM element enabled for Cornerstone
    		 * @param {Image} image A Cornerstone Image object to add as a new layer
    		 * @param {Object} options Options for the layer
    		 *
    		 * @returns {String} layerId The new layer's unique identifier
    		 * @memberof EnabledElementLayers
    		 */

    		function addLayer(element, image, options) {
    		  var layerId = Object(_internal_guid_js__WEBPACK_IMPORTED_MODULE_0__["default"])();
    		  var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_1__["getEnabledElement"])(element);
    		  var layers = enabledElement.layers;
    		  var viewport;

    		  if (image) {
    		    viewport = Object(_internal_getDefaultViewport_js__WEBPACK_IMPORTED_MODULE_2__["default"])(enabledElement.canvas, image); // Override the defaults if any optional viewport settings
    		    // have been specified

    		    if (options && options.viewport) {
    		      viewport = Object.assign(viewport, options.viewport);
    		    }
    		  } // Set syncViewports to true by default when a new layer is added


    		  if (enabledElement.syncViewports !== false) {
    		    enabledElement.syncViewports = true;
    		  }

    		  var newLayer = {
    		    image: image,
    		    layerId: layerId,
    		    viewport: viewport,
    		    options: options || {},
    		    renderingTools: {}
    		  }; // Rescale the new layer based on the base layer to make sure
    		  // they will have a proportional size (pixel spacing)

    		  if (layers.length && image) {
    		    rescaleImage(layers[0], newLayer);
    		  }

    		  layers.push(newLayer);
    		  triggerEventForLayer(_events_js__WEBPACK_IMPORTED_MODULE_6__["default"].LAYER_ADDED, enabledElement, layerId); // Set the layer as active if it's the first layer added

    		  if (layers.length === 1 && image) {
    		    setActiveLayer(element, layerId);
    		  }

    		  return layerId;
    		}
    		/**
    		 * Remove a layer from a Cornerstone element given a layer ID
    		 *
    		 * @param {HTMLElement} element The DOM element enabled for Cornerstone
    		 * @param {String} layerId The unique identifier for the layer
    		 * @returns {void}
    		 * @memberof EnabledElementLayers
    		 */

    		function removeLayer(element, layerId) {
    		  var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_1__["getEnabledElement"])(element);
    		  var layers = enabledElement.layers;
    		  var index = enabledElement.layers.findIndex(function (layer) {
    		    return layer.layerId === layerId;
    		  });

    		  if (index !== -1) {
    		    layers.splice(index, 1); // If the current layer is active, and we have other layers,
    		    // switch to the first layer that remains in the array

    		    if (layerId === enabledElement.activeLayerId && layers.length) {
    		      setActiveLayer(element, layers[0].layerId);
    		    }

    		    triggerEventForLayer(_events_js__WEBPACK_IMPORTED_MODULE_6__["default"].LAYER_REMOVED, enabledElement, layerId);
    		  }
    		}
    		/**
    		 * Retrieve a layer from a Cornerstone element given a layer ID
    		 *
    		 * @param {HTMLElement} element The DOM element enabled for Cornerstone
    		 * @param {String} layerId The unique identifier for the layer
    		 * @return {EnabledElementLayer} The layer
    		 * @memberof EnabledElementLayers
    		 */

    		function getLayer(element, layerId) {
    		  var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_1__["getEnabledElement"])(element);
    		  return enabledElement.layers.find(function (layer) {
    		    return layer.layerId === layerId;
    		  });
    		}
    		/**
    		 * Retrieve all layers for a Cornerstone element
    		 *
    		 * @param {HTMLElement} element The DOM element enabled for Cornerstone
    		 *
    		 * @return {EnabledElementLayer[]} An array of layers
    		 * @memberof EnabledElementLayers
    		 */

    		function getLayers(element) {
    		  var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_1__["getEnabledElement"])(element);
    		  return enabledElement.layers;
    		}
    		/**
    		 * Retrieve all visible layers for a Cornerstone element
    		 *
    		 * @param {HTMLElement} element The DOM element enabled for Cornerstone
    		 *
    		 * @return {EnabledElementLayer[]} An array of layers
    		 * @memberof EnabledElementLayers
    		 */

    		function getVisibleLayers(element) {
    		  var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_1__["getEnabledElement"])(element);
    		  return enabledElement.layers.filter(function (layer) {
    		    return layer.options && layer.options.visible !== false && layer.options.opacity !== 0;
    		  });
    		}
    		/**
    		 * Set the active layer for a Cornerstone element
    		 *
    		 * @param {HTMLElement} element The DOM element enabled for Cornerstone
    		 * @param {String} layerId The unique identifier for the layer
    		 * @returns {void}
    		 * @memberof EnabledElementLayers
    		 */

    		function setActiveLayer(element, layerId) {
    		  var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_1__["getEnabledElement"])(element); // Stop here if this layer is already active

    		  if (enabledElement.activeLayerId === layerId) {
    		    return;
    		  }

    		  var index = enabledElement.layers.findIndex(function (layer) {
    		    return layer.layerId === layerId;
    		  });

    		  if (index === -1) {
    		    throw new Error('setActiveLayer: layer not found in layers array');
    		  }

    		  var layer = enabledElement.layers[index];

    		  if (!layer.image) {
    		    throw new Error('setActiveLayer: layer with undefined image cannot be set as active.');
    		  }

    		  enabledElement.activeLayerId = layerId;
    		  enabledElement.image = layer.image;
    		  enabledElement.viewport = layer.viewport;
    		  Object(_updateImage_js__WEBPACK_IMPORTED_MODULE_4__["default"])(element);
    		  triggerEventForLayer(_events_js__WEBPACK_IMPORTED_MODULE_6__["default"].ACTIVE_LAYER_CHANGED, enabledElement, layerId);
    		}
    		/**
    		 * Set a new image for a specific layerId
    		 *
    		 * @param {HTMLElement} element The DOM element enabled for Cornerstone
    		 * @param {Image} image The image to be displayed in this layer
    		 * @param {String} [layerId] The unique identifier for the layer
    		 * @returns {void}
    		 * @memberof EnabledElementLayers
    		 */

    		function setLayerImage(element, image, layerId) {
    		  var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_1__["getEnabledElement"])(element);
    		  var baseLayer = enabledElement.layers[0];
    		  var layer;

    		  if (layerId) {
    		    layer = getLayer(element, layerId);
    		  } else {
    		    layer = getActiveLayer(element);
    		  }

    		  if (!layer) {
    		    throw new Error('setLayerImage: Layer not found');
    		  }

    		  layer.image = image;

    		  if (!image) {
    		    layer.viewport = undefined;
    		    return;
    		  }

    		  if (!layer.viewport) {
    		    var defaultViewport = Object(_internal_getDefaultViewport_js__WEBPACK_IMPORTED_MODULE_2__["default"])(enabledElement.canvas, image); // Override the defaults if any optional viewport settings
    		    // have been specified

    		    if (layer.options && layer.options.viewport) {
    		      layer.viewport = Object.assign(defaultViewport, layer.options.viewport);
    		    }

    		    if (baseLayer.layerId !== layerId) {
    		      rescaleImage(baseLayer, layer);
    		    }
    		  }
    		}
    		/**
    		 * Retrieve the currently active layer for a Cornerstone element
    		 *
    		 * @param {HTMLElement} element The DOM element enabled for Cornerstone
    		 * @return {EnabledElementLayer} The currently active layer
    		 * @memberof EnabledElementLayers
    		 */

    		function getActiveLayer(element) {
    		  var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_1__["getEnabledElement"])(element);
    		  return enabledElement.layers.find(function (layer) {
    		    return layer.layerId === enabledElement.activeLayerId;
    		  });
    		}
    		/**
    		 * Purge the layers
    		 *
    		 * @param {HTMLElement} element The DOM element enabled for Cornerstone
    		 *
    		 * @returns {void}
    		 */

    		function purgeLayers(element) {
    		  var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_1__["getEnabledElement"])(element);
    		  enabledElement.layers = [];
    		  delete enabledElement.activeLayerId;
    		  delete enabledElement.lastSyncViewportsState;
    		}

    		/***/ }),

    		/***/ "./metaData.js":
    		/*!*********************!*\
    		  !*** ./metaData.js ***!
    		  \*********************/
    		/*! exports provided: addProvider, removeProvider, default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addProvider", function() { return addProvider; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeProvider", function() { return removeProvider; });
    		// This module defines a way to access various metadata about an imageId.  This layer of abstraction exists
    		// So metadata can be provided in different ways (e.g. by parsing DICOM P10 or by a WADO-RS document)
    		var providers = [];
    		/**
    		 * @module Metadata
    		 */

    		/**
    		 * Adds a metadata provider with the specified priority
    		 * @param {Function} provider Metadata provider function
    		 * @param {Number} [priority=0] - 0 is default/normal, > 0 is high, < 0 is low
    		 *
    		 * @returns {void}
    		 * @memberof Metadata
    		 */

    		function addProvider(provider) {
    		  var priority = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    		  var i; // Find the right spot to insert this provider based on priority

    		  for (i = 0; i < providers.length; i++) {
    		    if (providers[i].priority <= priority) {
    		      break;
    		    }
    		  } // Insert the decode task at position i


    		  providers.splice(i, 0, {
    		    priority: priority,
    		    provider: provider
    		  });
    		}
    		/**
    		 * Removes the specified provider
    		 *
    		 * @param {Function} provider Metadata provider function
    		 *
    		 * @returns {void}
    		 * @memberof Metadata
    		 */

    		function removeProvider(provider) {
    		  for (var i = 0; i < providers.length; i++) {
    		    if (providers[i].provider === provider) {
    		      providers.splice(i, 1);
    		      break;
    		    }
    		  }
    		}
    		/**
    		 * Gets metadata from the registered metadata providers.  Will call each one from highest priority to lowest
    		 * until one responds
    		 *
    		 * @param {String} type The type of metadata requested from the metadata store
    		 * @param {String} imageId The Cornerstone Image Object's imageId
    		 *
    		 * @returns {*} The metadata retrieved from the metadata store
    		 * @memberof Metadata
    		 */

    		function getMetaData(type, imageId) {
    		  // Invoke each provider in priority order until one returns something
    		  for (var i = 0; i < providers.length; i++) {
    		    var result = providers[i].provider(type, imageId);

    		    if (result !== undefined) {
    		      return result;
    		    }
    		  }
    		}

    		/* harmony default export */ __webpack_exports__["default"] = ({
    		  addProvider: addProvider,
    		  removeProvider: removeProvider,
    		  get: getMetaData
    		});

    		/***/ }),

    		/***/ "./pageToPixel.js":
    		/*!************************!*\
    		  !*** ./pageToPixel.js ***!
    		  \************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enabledElements.js */ "./enabledElements.js");
    		/* harmony import */ var _internal_getTransform_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/getTransform.js */ "./internal/getTransform.js");


    		/**
    		 * Converts a point in the page coordinate system to the pixel coordinate
    		 * system
    		 *
    		 * @param {HTMLElement} element The Cornerstone element within which the input point lies
    		 * @param {Number} pageX The x value in the page coordinate system
    		 * @param {Number} pageY The y value in the page coordinate system
    		 *
    		 * @returns {{x: Number, y: Number}} The transformed point in the pixel coordinate system
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (element, pageX, pageY) {
    		  var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElement"])(element);

    		  if (enabledElement.image === undefined) {
    		    throw new Error('image has not been loaded yet');
    		  } // Convert the pageX and pageY to the canvas client coordinates


    		  var rect = element.getBoundingClientRect();
    		  var clientX = pageX - rect.left - window.pageXOffset;
    		  var clientY = pageY - rect.top - window.pageYOffset;
    		  var pt = {
    		    x: clientX,
    		    y: clientY
    		  };
    		  var transform = Object(_internal_getTransform_js__WEBPACK_IMPORTED_MODULE_1__["default"])(enabledElement);
    		  transform.invert();
    		  return transform.transformPoint(pt.x, pt.y);
    		});

    		/***/ }),

    		/***/ "./pixelDataToFalseColorData.js":
    		/*!**************************************!*\
    		  !*** ./pixelDataToFalseColorData.js ***!
    		  \**************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return pixelDataToFalseColorData; });
    		/* harmony import */ var _colors_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./colors/index.js */ "./colors/index.js");

    		/**
    		 * Converts the image pixel data into a false color data
    		 *
    		 * @param {Image} image A Cornerstone Image Object
    		 * @param {Object} lookupTable A lookup table Object
    		 *
    		 * @returns {void}
    		 * @deprecated This function is superseded by the ability to set the Viewport parameters
    		 * to include colormaps.
    		 */

    		function pixelDataToFalseColorData(image, lookupTable) {
    		  if (image.color && !image.falseColor) {
    		    throw new Error('Color transforms are not implemented yet');
    		  }

    		  var minPixelValue = image.minPixelValue;
    		  var canvasImageDataIndex = 0;
    		  var storedPixelDataIndex = 0;
    		  var numPixels = image.width * image.height;
    		  var origPixelData = image.origPixelData || image.getPixelData();
    		  var storedColorPixelData = new Uint8Array(numPixels * 4);
    		  var sp;
    		  var mapped;
    		  image.color = true;
    		  image.falseColor = true;
    		  image.origPixelData = origPixelData;

    		  if (lookupTable instanceof _colors_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].LookupTable) {
    		    lookupTable.build();

    		    while (storedPixelDataIndex < numPixels) {
    		      sp = origPixelData[storedPixelDataIndex++];
    		      mapped = lookupTable.mapValue(sp);
    		      storedColorPixelData[canvasImageDataIndex++] = mapped[0];
    		      storedColorPixelData[canvasImageDataIndex++] = mapped[1];
    		      storedColorPixelData[canvasImageDataIndex++] = mapped[2];
    		      storedColorPixelData[canvasImageDataIndex++] = mapped[3];
    		    }
    		  } else if (minPixelValue < 0) {
    		    while (storedPixelDataIndex < numPixels) {
    		      sp = origPixelData[storedPixelDataIndex++];
    		      storedColorPixelData[canvasImageDataIndex++] = lookupTable[sp + -minPixelValue][0]; // Red

    		      storedColorPixelData[canvasImageDataIndex++] = lookupTable[sp + -minPixelValue][1]; // Green

    		      storedColorPixelData[canvasImageDataIndex++] = lookupTable[sp + -minPixelValue][2]; // Blue

    		      storedColorPixelData[canvasImageDataIndex++] = lookupTable[sp + -minPixelValue][3]; // Alpha
    		    }
    		  } else {
    		    while (storedPixelDataIndex < numPixels) {
    		      sp = origPixelData[storedPixelDataIndex++];
    		      storedColorPixelData[canvasImageDataIndex++] = lookupTable[sp][0]; // Red

    		      storedColorPixelData[canvasImageDataIndex++] = lookupTable[sp][1]; // Green

    		      storedColorPixelData[canvasImageDataIndex++] = lookupTable[sp][2]; // Blue

    		      storedColorPixelData[canvasImageDataIndex++] = lookupTable[sp][3]; // Alpha
    		    }
    		  }

    		  image.rgba = true;
    		  image.cachedLut = undefined;
    		  image.render = undefined;
    		  image.slope = 1;
    		  image.intercept = 0;
    		  image.minPixelValue = 0;
    		  image.maxPixelValue = 255;
    		  image.windowWidth = 255;
    		  image.windowCenter = 128;

    		  image.getPixelData = function () {
    		    return storedColorPixelData;
    		  };
    		}

    		/***/ }),

    		/***/ "./pixelToCanvas.js":
    		/*!**************************!*\
    		  !*** ./pixelToCanvas.js ***!
    		  \**************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enabledElements.js */ "./enabledElements.js");
    		/* harmony import */ var _internal_getTransform_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/getTransform.js */ "./internal/getTransform.js");


    		/**
    		 * Converts a point in the pixel coordinate system to the canvas coordinate system
    		 * system.  This can be used to render using canvas context without having the weird
    		 * side effects that come from scaling and non square pixels
    		 *
    		 * @param {HTMLElement} element An HTML Element enabled for Cornerstone
    		 * @param {{x: Number, y: Number}} pt The transformed point in the pixel coordinate system
    		 *
    		 * @returns {{x: Number, y: Number}} The input point in the canvas coordinate system
    		 * @memberof PixelCoordinateSystem
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (element, pt) {
    		  var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElement"])(element);
    		  var transform = Object(_internal_getTransform_js__WEBPACK_IMPORTED_MODULE_1__["default"])(enabledElement);
    		  return transform.transformPoint(pt.x, pt.y);
    		});

    		/***/ }),

    		/***/ "./rendering/doesImageNeedToBeRendered.js":
    		/*!************************************************!*\
    		  !*** ./rendering/doesImageNeedToBeRendered.js ***!
    		  \************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/**
    		 * Determine whether or not an Enabled Element needs to be re-rendered.
    		 *
    		 * If the imageId has changed, or if any of the last rendered viewport
    		 * parameters have changed, this function will return true.
    		 *
    		 * @param {EnabledElement} enabledElement An Enabled Element
    		 * @param {Image} image An Image
    		 * @return {boolean} Whether or not the Enabled Element needs to re-render its image
    		 * @memberof rendering
    		 */
    		/* harmony default export */ __webpack_exports__["default"] = (function (enabledElement, image) {
    		  var lastRenderedImageId = enabledElement.renderingTools.lastRenderedImageId;
    		  var lastRenderedViewport = enabledElement.renderingTools.lastRenderedViewport;
    		  return image.imageId !== lastRenderedImageId || !lastRenderedViewport || lastRenderedViewport.windowCenter !== enabledElement.viewport.voi.windowCenter || lastRenderedViewport.windowWidth !== enabledElement.viewport.voi.windowWidth || lastRenderedViewport.invert !== enabledElement.viewport.invert || lastRenderedViewport.rotation !== enabledElement.viewport.rotation || lastRenderedViewport.hflip !== enabledElement.viewport.hflip || lastRenderedViewport.vflip !== enabledElement.viewport.vflip || lastRenderedViewport.modalityLUT !== enabledElement.viewport.modalityLUT || lastRenderedViewport.voiLUT !== enabledElement.viewport.voiLUT || lastRenderedViewport.colormap !== enabledElement.viewport.colormap;
    		});

    		/***/ }),

    		/***/ "./rendering/getLut.js":
    		/*!*****************************!*\
    		  !*** ./rendering/getLut.js ***!
    		  \*****************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _internal_computeAutoVoi_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/computeAutoVoi.js */ "./internal/computeAutoVoi.js");
    		/* harmony import */ var _lutMatches_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lutMatches.js */ "./rendering/lutMatches.js");
    		/* harmony import */ var _internal_generateLut_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/generateLut.js */ "./internal/generateLut.js");



    		/**
    		 * Retrieve or generate a LUT Array for an Image and Viewport
    		 *
    		 * @param {Image} image An Image Object
    		 * @param {Viewport} viewport An Viewport Object
    		 * @param {Boolean} invalidated Whether or not the LUT data has been invalidated
    		 * (e.g. by a change to the windowWidth, windowCenter, or invert viewport parameters).
    		 * @return {Uint8ClampedArray} LUT Array
    		 * @memberof rendering
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (image, viewport, invalidated) {
    		  // If we have a cached lut and it has the right values, return it immediately
    		  if (image.cachedLut !== undefined && image.cachedLut.windowCenter === viewport.voi.windowCenter && image.cachedLut.windowWidth === viewport.voi.windowWidth && Object(_lutMatches_js__WEBPACK_IMPORTED_MODULE_1__["default"])(image.cachedLut.modalityLUT, viewport.modalityLUT) && Object(_lutMatches_js__WEBPACK_IMPORTED_MODULE_1__["default"])(image.cachedLut.voiLUT, viewport.voiLUT) && image.cachedLut.invert === viewport.invert && invalidated !== true) {
    		    return image.cachedLut.lutArray;
    		  }

    		  Object(_internal_computeAutoVoi_js__WEBPACK_IMPORTED_MODULE_0__["default"])(viewport, image); // Lut is invalid or not present, regenerate it and cache it

    		  Object(_internal_generateLut_js__WEBPACK_IMPORTED_MODULE_2__["default"])(image, viewport.voi.windowWidth, viewport.voi.windowCenter, viewport.invert, viewport.modalityLUT, viewport.voiLUT);
    		  image.cachedLut.windowWidth = viewport.voi.windowWidth;
    		  image.cachedLut.windowCenter = viewport.voi.windowCenter;
    		  image.cachedLut.invert = viewport.invert;
    		  image.cachedLut.voiLUT = viewport.voiLUT;
    		  image.cachedLut.modalityLUT = viewport.modalityLUT;
    		  return image.cachedLut.lutArray;
    		});

    		/***/ }),

    		/***/ "./rendering/index.js":
    		/*!****************************!*\
    		  !*** ./rendering/index.js ***!
    		  \****************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _renderColorImage_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./renderColorImage.js */ "./rendering/renderColorImage.js");
    		/* harmony import */ var _renderGrayscaleImage_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./renderGrayscaleImage.js */ "./rendering/renderGrayscaleImage.js");
    		/* harmony import */ var _renderWebImage_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./renderWebImage.js */ "./rendering/renderWebImage.js");
    		/* harmony import */ var _renderPseudoColorImage_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./renderPseudoColorImage.js */ "./rendering/renderPseudoColorImage.js");
    		/* harmony import */ var _renderLabelMapImage_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./renderLabelMapImage.js */ "./rendering/renderLabelMapImage.js");
    		/* harmony import */ var _renderToCanvas_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./renderToCanvas.js */ "./rendering/renderToCanvas.js");






    		/**
    		 * @module rendering
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = ({
    		  colorImage: _renderColorImage_js__WEBPACK_IMPORTED_MODULE_0__["renderColorImage"],
    		  grayscaleImage: _renderGrayscaleImage_js__WEBPACK_IMPORTED_MODULE_1__["renderGrayscaleImage"],
    		  webImage: _renderWebImage_js__WEBPACK_IMPORTED_MODULE_2__["renderWebImage"],
    		  pseudoColorImage: _renderPseudoColorImage_js__WEBPACK_IMPORTED_MODULE_3__["renderPseudoColorImage"],
    		  labelMapImage: _renderLabelMapImage_js__WEBPACK_IMPORTED_MODULE_4__["renderLabelMapImage"],
    		  toCanvas: _renderToCanvas_js__WEBPACK_IMPORTED_MODULE_5__["default"]
    		});

    		/***/ }),

    		/***/ "./rendering/initializeRenderCanvas.js":
    		/*!*********************************************!*\
    		  !*** ./rendering/initializeRenderCanvas.js ***!
    		  \*********************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/**
    		 * Sets size and clears canvas
    		 *
    		 * @param {Object} enabledElement Cornerstone Enabled Element
    		 * @param {Object} image Image to be rendered
    		 * @returns {void}
    		 * @memberof rendering
    		 */
    		/* harmony default export */ __webpack_exports__["default"] = (function (enabledElement, image) {
    		  var renderCanvas = enabledElement.renderingTools.renderCanvas; // Resize the canvas

    		  renderCanvas.width = image.width;
    		  renderCanvas.height = image.height;
    		  var canvasContext = renderCanvas.getContext('2d', {
    		    desynchronized: true
    		  }); // NOTE - we need to fill the render canvas with white pixels since we
    		  // control the luminance using the alpha channel to improve rendering performance.

    		  canvasContext.fillStyle = 'white';
    		  canvasContext.fillRect(0, 0, renderCanvas.width, renderCanvas.height);
    		  var renderCanvasData = canvasContext.getImageData(0, 0, image.width, image.height);
    		  enabledElement.renderingTools.renderCanvasContext = canvasContext;
    		  enabledElement.renderingTools.renderCanvasData = renderCanvasData;
    		});

    		/***/ }),

    		/***/ "./rendering/lutMatches.js":
    		/*!*********************************!*\
    		  !*** ./rendering/lutMatches.js ***!
    		  \*********************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/**
    		 * Check if two lookup tables match
    		 *
    		 * @param {LUT} a A lookup table function
    		 * @param {LUT} b Another lookup table function
    		 * @return {boolean} Whether or not they match
    		 * @memberof rendering
    		 */
    		/* harmony default export */ __webpack_exports__["default"] = (function (a, b) {
    		  // If undefined, they are equal
    		  if (!a && !b) {
    		    return true;
    		  } // If one is undefined, not equal


    		  if (!a || !b) {
    		    return false;
    		  } // Check the unique ids


    		  return a.id === b.id;
    		});

    		/***/ }),

    		/***/ "./rendering/renderColorImage.js":
    		/*!***************************************!*\
    		  !*** ./rendering/renderColorImage.js ***!
    		  \***************************************/
    		/*! exports provided: renderColorImage, addColorLayer */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "renderColorImage", function() { return renderColorImage; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addColorLayer", function() { return addColorLayer; });
    		/* harmony import */ var _internal_now_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/now.js */ "./internal/now.js");
    		/* harmony import */ var _internal_getFillStyle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal/getFillStyle.js */ "./internal/getFillStyle.js");
    		/* harmony import */ var _internal_generateColorLut_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/generateColorLut.js */ "./internal/generateColorLut.js");
    		/* harmony import */ var _internal_storedColorPixelDataToCanvasImageData_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../internal/storedColorPixelDataToCanvasImageData.js */ "./internal/storedColorPixelDataToCanvasImageData.js");
    		/* harmony import */ var _internal_storedRGBAPixelDataToCanvasImageData_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../internal/storedRGBAPixelDataToCanvasImageData.js */ "./internal/storedRGBAPixelDataToCanvasImageData.js");
    		/* harmony import */ var _setToPixelCoordinateSystem_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../setToPixelCoordinateSystem.js */ "./setToPixelCoordinateSystem.js");
    		/* harmony import */ var _webgl_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../webgl/index.js */ "./webgl/index.js");
    		/* harmony import */ var _doesImageNeedToBeRendered_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./doesImageNeedToBeRendered.js */ "./rendering/doesImageNeedToBeRendered.js");
    		/* harmony import */ var _initializeRenderCanvas_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./initializeRenderCanvas.js */ "./rendering/initializeRenderCanvas.js");
    		/* harmony import */ var _saveLastRendered_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./saveLastRendered.js */ "./rendering/saveLastRendered.js");
    		/* harmony import */ var _internal_getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../internal/getDisplayedArea.js */ "./internal/getDisplayedArea.js");











    		/**
    		 * Generates an appropriate Look Up Table to render the given image with the given window width and level (specified in the viewport)
    		 * Uses an internal cache for performance
    		 *
    		 * @param {Object} image  The image to be rendered
    		 * @param {Object} viewport The viewport values used for rendering
    		 * @returns {Uint8ClampedArray} Look Up Table array.
    		 * @memberof rendering
    		 */

    		function getLut(image, viewport) {
    		  // If we have a cached lut and it has the right values, return it immediately
    		  if (image.cachedLut !== undefined && image.cachedLut.windowCenter === viewport.voi.windowCenter && image.cachedLut.windowWidth === viewport.voi.windowWidth && image.cachedLut.invert === viewport.invert) {
    		    return image.cachedLut.lutArray;
    		  } // Lut is invalid or not present, regenerate it and cache it


    		  Object(_internal_generateColorLut_js__WEBPACK_IMPORTED_MODULE_2__["default"])(image, viewport.voi.windowWidth, viewport.voi.windowCenter, viewport.invert);
    		  image.cachedLut.windowWidth = viewport.voi.windowWidth;
    		  image.cachedLut.windowCenter = viewport.voi.windowCenter;
    		  image.cachedLut.invert = viewport.invert;
    		  return image.cachedLut.lutArray;
    		}
    		/**
    		 * Returns an appropriate canvas to render the Image. If the canvas available in the cache is appropriate
    		 * it is returned, otherwise adjustments are made. It also sets the color transfer functions.
    		 *
    		 * @param {Object} enabledElement The cornerstone enabled element
    		 * @param {Object} image The image to be rendered
    		 * @param {Boolean} invalidated Is pixel data valid
    		 * @returns {HTMLCanvasElement} An appropriate canvas for rendering the image
    		 * @memberof rendering
    		 */


    		function getRenderCanvas(enabledElement, image, invalidated) {
    		  var canvasWasColor = enabledElement.renderingTools.lastRenderedIsColor === true;

    		  if (!enabledElement.renderingTools.renderCanvas || !canvasWasColor) {
    		    enabledElement.renderingTools.renderCanvas = document.createElement('canvas');
    		  }

    		  var renderCanvas = enabledElement.renderingTools.renderCanvas; // The ww/wc is identity and not inverted - get a canvas with the image rendered into it for
    		  // Fast drawing

    		  if (enabledElement.viewport.voi.windowWidth === 255 && enabledElement.viewport.voi.windowCenter === 128 && enabledElement.viewport.invert === false && image.getCanvas && image.getCanvas()) {
    		    return image.getCanvas();
    		  } // Apply the lut to the stored pixel data onto the render canvas


    		  if (Object(_doesImageNeedToBeRendered_js__WEBPACK_IMPORTED_MODULE_7__["default"])(enabledElement, image) === false && invalidated !== true) {
    		    return renderCanvas;
    		  } // If our render canvas does not match the size of this image reset it
    		  // NOTE: This might be inefficient if we are updating multiple images of different
    		  // Sizes frequently.


    		  if (renderCanvas.width !== image.width || renderCanvas.height !== image.height) {
    		    Object(_initializeRenderCanvas_js__WEBPACK_IMPORTED_MODULE_8__["default"])(enabledElement, image);
    		  } // Get the lut to use


    		  var start = Object(_internal_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])();
    		  var colorLut = getLut(image, enabledElement.viewport);
    		  image.stats = image.stats || {};
    		  image.stats.lastLutGenerateTime = Object(_internal_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])() - start;
    		  var renderCanvasData = enabledElement.renderingTools.renderCanvasData;
    		  var renderCanvasContext = enabledElement.renderingTools.renderCanvasContext; // The color image voi/invert has been modified - apply the lut to the underlying
    		  // Pixel data and put it into the renderCanvas

    		  if (image.rgba) {
    		    Object(_internal_storedRGBAPixelDataToCanvasImageData_js__WEBPACK_IMPORTED_MODULE_4__["default"])(image, colorLut, renderCanvasData.data);
    		  } else {
    		    Object(_internal_storedColorPixelDataToCanvasImageData_js__WEBPACK_IMPORTED_MODULE_3__["default"])(image, colorLut, renderCanvasData.data);
    		  }

    		  start = Object(_internal_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])();
    		  renderCanvasContext.putImageData(renderCanvasData, 0, 0);
    		  image.stats.lastPutImageDataTime = Object(_internal_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])() - start;
    		  return renderCanvas;
    		}
    		/**
    		 * API function to render a color image to an enabled element
    		 *
    		 * @param {EnabledElement} enabledElement The Cornerstone Enabled Element to redraw
    		 * @param {Boolean} invalidated - true if pixel data has been invalidated and cached rendering should not be used
    		 * @returns {void}
    		 * @memberof rendering
    		 */


    		function renderColorImage(enabledElement, invalidated) {
    		  if (enabledElement === undefined) {
    		    throw new Error('renderColorImage: enabledElement parameter must not be undefined');
    		  }

    		  var image = enabledElement.image;

    		  if (image === undefined) {
    		    throw new Error('renderColorImage: image must be loaded before it can be drawn');
    		  } // Get the canvas context and reset the transform


    		  var context = enabledElement.canvas.getContext('2d', {
    		    desynchronized: true
    		  });
    		  context.setTransform(1, 0, 0, 1, 0, 0); // Clear the canvas

    		  context.fillStyle = Object(_internal_getFillStyle_js__WEBPACK_IMPORTED_MODULE_1__["default"])(enabledElement);
    		  context.fillRect(0, 0, enabledElement.canvas.width, enabledElement.canvas.height); // Turn off image smooth/interpolation if pixelReplication is set in the viewport

    		  context.imageSmoothingEnabled = !enabledElement.viewport.pixelReplication;
    		  context.mozImageSmoothingEnabled = context.imageSmoothingEnabled; // Save the canvas context state and apply the viewport properties

    		  Object(_setToPixelCoordinateSystem_js__WEBPACK_IMPORTED_MODULE_5__["default"])(enabledElement, context);
    		  var renderCanvas;

    		  if (enabledElement.options && enabledElement.options.renderer && enabledElement.options.renderer.toLowerCase() === 'webgl') {
    		    // If this enabled element has the option set for WebGL, we should
    		    // User it as our renderer.
    		    renderCanvas = _webgl_index_js__WEBPACK_IMPORTED_MODULE_6__["default"].renderer.render(enabledElement);
    		  } else {
    		    // If no options are set we will retrieve the renderCanvas through the
    		    // Normal Canvas rendering path
    		    renderCanvas = getRenderCanvas(enabledElement, image, invalidated);
    		  }

    		  var imageDisplayedArea = Object(_internal_getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_10__["default"])(enabledElement.image, enabledElement.viewport);
    		  var sx = imageDisplayedArea.tlhc.x - 1;
    		  var sy = imageDisplayedArea.tlhc.y - 1;
    		  var width = imageDisplayedArea.brhc.x - sx;
    		  var height = imageDisplayedArea.brhc.y - sy;
    		  context.drawImage(renderCanvas, sx, sy, width, height, sx, sy, width, height);
    		  enabledElement.renderingTools = Object(_saveLastRendered_js__WEBPACK_IMPORTED_MODULE_9__["default"])(enabledElement);
    		}
    		function addColorLayer(layer, invalidated) {
    		  if (layer === undefined) {
    		    throw new Error('addColorLayer: layer parameter must not be undefined');
    		  }

    		  var image = layer.image;

    		  if (image === undefined) {
    		    throw new Error('addColorLayer: image must be loaded before it can be drawn');
    		  } // All multi-layer images should include the alpha value


    		  image.rgba = true;
    		  layer.canvas = getRenderCanvas(layer, image, invalidated);
    		  var context = layer.canvas.getContext('2d', {
    		    desynchronized: true
    		  }); // Turn off image smooth/interpolation if pixelReplication is set in the viewport

    		  context.imageSmoothingEnabled = !layer.viewport.pixelReplication;
    		  context.mozImageSmoothingEnabled = context.imageSmoothingEnabled;
    		  layer.renderingTools = Object(_saveLastRendered_js__WEBPACK_IMPORTED_MODULE_9__["default"])(layer);
    		}

    		/***/ }),

    		/***/ "./rendering/renderGrayscaleImage.js":
    		/*!*******************************************!*\
    		  !*** ./rendering/renderGrayscaleImage.js ***!
    		  \*******************************************/
    		/*! exports provided: renderGrayscaleImage, addGrayscaleLayer */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "renderGrayscaleImage", function() { return renderGrayscaleImage; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addGrayscaleLayer", function() { return addGrayscaleLayer; });
    		/* harmony import */ var _internal_getFillStyle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/getFillStyle.js */ "./internal/getFillStyle.js");
    		/* harmony import */ var _internal_storedPixelDataToCanvasImageData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal/storedPixelDataToCanvasImageData.js */ "./internal/storedPixelDataToCanvasImageData.js");
    		/* harmony import */ var _internal_storedPixelDataToCanvasImageDataRGBA_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/storedPixelDataToCanvasImageDataRGBA.js */ "./internal/storedPixelDataToCanvasImageDataRGBA.js");
    		/* harmony import */ var _setToPixelCoordinateSystem_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../setToPixelCoordinateSystem.js */ "./setToPixelCoordinateSystem.js");
    		/* harmony import */ var _internal_now_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../internal/now.js */ "./internal/now.js");
    		/* harmony import */ var _webgl_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../webgl/index.js */ "./webgl/index.js");
    		/* harmony import */ var _getLut_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./getLut.js */ "./rendering/getLut.js");
    		/* harmony import */ var _doesImageNeedToBeRendered_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./doesImageNeedToBeRendered.js */ "./rendering/doesImageNeedToBeRendered.js");
    		/* harmony import */ var _initializeRenderCanvas_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./initializeRenderCanvas.js */ "./rendering/initializeRenderCanvas.js");
    		/* harmony import */ var _saveLastRendered_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./saveLastRendered.js */ "./rendering/saveLastRendered.js");
    		/* harmony import */ var _internal_getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../internal/getDisplayedArea.js */ "./internal/getDisplayedArea.js");











    		/**
    		 * Returns an appropriate canvas to render the Image. If the canvas available in the cache is appropriate
    		 * it is returned, otherwise adjustments are made. It also sets the color transfer functions.
    		 *
    		 * @param {Object} enabledElement The cornerstone enabled element
    		 * @param {Object} image The image to be rendered
    		 * @param {Boolean} invalidated Is pixel data valid
    		 * @param {Boolean} [useAlphaChannel = true] Will an alpha channel be used
    		 * @returns {HTMLCanvasElement} An appropriate canvas for rendering the image
    		 * @memberof rendering
    		 */

    		function getRenderCanvas(enabledElement, image, invalidated) {
    		  var useAlphaChannel = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;
    		  var canvasWasColor = enabledElement.renderingTools.lastRenderedIsColor === true;

    		  if (!enabledElement.renderingTools.renderCanvas || canvasWasColor) {
    		    enabledElement.renderingTools.renderCanvas = document.createElement('canvas');
    		    Object(_initializeRenderCanvas_js__WEBPACK_IMPORTED_MODULE_8__["default"])(enabledElement, image);
    		  }

    		  var renderCanvas = enabledElement.renderingTools.renderCanvas;

    		  if (Object(_doesImageNeedToBeRendered_js__WEBPACK_IMPORTED_MODULE_7__["default"])(enabledElement, image) === false && invalidated !== true) {
    		    return renderCanvas;
    		  } // If our render canvas does not match the size of this image reset it
    		  // NOTE: This might be inefficient if we are updating multiple images of different
    		  // Sizes frequently.


    		  if (renderCanvas.width !== image.width || renderCanvas.height !== image.height) {
    		    Object(_initializeRenderCanvas_js__WEBPACK_IMPORTED_MODULE_8__["default"])(enabledElement, image);
    		  } // Get the lut to use


    		  var start = Object(_internal_now_js__WEBPACK_IMPORTED_MODULE_4__["default"])();
    		  var lut = Object(_getLut_js__WEBPACK_IMPORTED_MODULE_6__["default"])(image, enabledElement.viewport, invalidated);
    		  image.stats = image.stats || {};
    		  image.stats.lastLutGenerateTime = Object(_internal_now_js__WEBPACK_IMPORTED_MODULE_4__["default"])() - start;
    		  var renderCanvasData = enabledElement.renderingTools.renderCanvasData;
    		  var renderCanvasContext = enabledElement.renderingTools.renderCanvasContext; // Gray scale image - apply the lut and put the resulting image onto the render canvas

    		  if (useAlphaChannel) {
    		    Object(_internal_storedPixelDataToCanvasImageData_js__WEBPACK_IMPORTED_MODULE_1__["default"])(image, lut, renderCanvasData.data);
    		  } else {
    		    Object(_internal_storedPixelDataToCanvasImageDataRGBA_js__WEBPACK_IMPORTED_MODULE_2__["default"])(image, lut, renderCanvasData.data);
    		  }

    		  start = Object(_internal_now_js__WEBPACK_IMPORTED_MODULE_4__["default"])();
    		  renderCanvasContext.putImageData(renderCanvasData, 0, 0);
    		  image.stats.lastPutImageDataTime = Object(_internal_now_js__WEBPACK_IMPORTED_MODULE_4__["default"])() - start;
    		  return renderCanvas;
    		}
    		/**
    		 * API function to draw a grayscale image to a given enabledElement
    		 *
    		 * @param {EnabledElement} enabledElement The Cornerstone Enabled Element to redraw
    		 * @param {Boolean} invalidated - true if pixel data has been invalidated and cached rendering should not be used
    		 * @returns {void}
    		 * @memberof rendering
    		 */


    		function renderGrayscaleImage(enabledElement, invalidated) {
    		  if (enabledElement === undefined) {
    		    throw new Error('drawImage: enabledElement parameter must not be undefined');
    		  }

    		  var image = enabledElement.image;

    		  if (image === undefined) {
    		    throw new Error('drawImage: image must be loaded before it can be drawn');
    		  } // Get the canvas context and reset the transform


    		  var context = enabledElement.canvas.getContext('2d', {
    		    desynchronized: true
    		  });
    		  context.setTransform(1, 0, 0, 1, 0, 0); // Clear the canvas

    		  context.fillStyle = Object(_internal_getFillStyle_js__WEBPACK_IMPORTED_MODULE_0__["default"])(enabledElement);
    		  context.fillRect(0, 0, enabledElement.canvas.width, enabledElement.canvas.height); // Turn off image smooth/interpolation if pixelReplication is set in the viewport

    		  context.imageSmoothingEnabled = !enabledElement.viewport.pixelReplication;
    		  context.mozImageSmoothingEnabled = context.imageSmoothingEnabled; // Save the canvas context state and apply the viewport properties

    		  Object(_setToPixelCoordinateSystem_js__WEBPACK_IMPORTED_MODULE_3__["default"])(enabledElement, context);
    		  var renderCanvas;

    		  if (enabledElement.options && enabledElement.options.renderer && enabledElement.options.renderer.toLowerCase() === 'webgl') {
    		    // If this enabled element has the option set for WebGL, we should
    		    // User it as our renderer.
    		    renderCanvas = _webgl_index_js__WEBPACK_IMPORTED_MODULE_5__["default"].renderer.render(enabledElement);
    		  } else {
    		    // If no options are set we will retrieve the renderCanvas through the
    		    // Normal Canvas rendering path
    		    renderCanvas = getRenderCanvas(enabledElement, image, invalidated);
    		  }

    		  var imageDisplayedArea = Object(_internal_getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_10__["default"])(enabledElement.image, enabledElement.viewport);
    		  var sx = imageDisplayedArea.tlhc.x - 1;
    		  var sy = imageDisplayedArea.tlhc.y - 1;
    		  var width = imageDisplayedArea.brhc.x - sx;
    		  var height = imageDisplayedArea.brhc.y - sy;
    		  context.drawImage(renderCanvas, sx, sy, width, height, sx, sy, width, height);
    		  enabledElement.renderingTools = Object(_saveLastRendered_js__WEBPACK_IMPORTED_MODULE_9__["default"])(enabledElement);
    		}
    		/**
    		 * API function to draw a grayscale image to a given layer
    		 *
    		 * @param {EnabledElementLayer} layer The layer that the image will be added to
    		 * @param {Boolean} invalidated - true if pixel data has been invalidated and cached rendering should not be used
    		 * @param {Boolean} [useAlphaChannel] - Whether or not to render the grayscale image using only the alpha channel.
    		                                        This does not work if this layer is not the first layer in the enabledElement.
    		 * @returns {void}
    		 */

    		function addGrayscaleLayer(layer, invalidated) {
    		  var useAlphaChannel = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

    		  if (layer === undefined) {
    		    throw new Error('addGrayscaleLayer: layer parameter must not be undefined');
    		  }

    		  var image = layer.image;

    		  if (image === undefined) {
    		    throw new Error('addGrayscaleLayer: image must be loaded before it can be drawn');
    		  }

    		  layer.canvas = getRenderCanvas(layer, image, invalidated, useAlphaChannel);
    		  var context = layer.canvas.getContext('2d', {
    		    desynchronized: true
    		  }); // Turn off image smooth/interpolation if pixelReplication is set in the viewport

    		  context.imageSmoothingEnabled = !layer.viewport.pixelReplication;
    		  context.mozImageSmoothingEnabled = context.imageSmoothingEnabled;
    		  layer.renderingTools = Object(_saveLastRendered_js__WEBPACK_IMPORTED_MODULE_9__["default"])(layer);
    		}

    		/***/ }),

    		/***/ "./rendering/renderLabelMapImage.js":
    		/*!******************************************!*\
    		  !*** ./rendering/renderLabelMapImage.js ***!
    		  \******************************************/
    		/*! exports provided: renderLabelMapImage, addLabelMapLayer */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "renderLabelMapImage", function() { return renderLabelMapImage; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addLabelMapLayer", function() { return addLabelMapLayer; });
    		/* harmony import */ var _setToPixelCoordinateSystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../setToPixelCoordinateSystem.js */ "./setToPixelCoordinateSystem.js");
    		/* harmony import */ var _internal_now_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal/now.js */ "./internal/now.js");
    		/* harmony import */ var _internal_getFillStyle_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/getFillStyle.js */ "./internal/getFillStyle.js");
    		/* harmony import */ var _initializeRenderCanvas_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./initializeRenderCanvas.js */ "./rendering/initializeRenderCanvas.js");
    		/* harmony import */ var _saveLastRendered_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./saveLastRendered.js */ "./rendering/saveLastRendered.js");
    		/* harmony import */ var _doesImageNeedToBeRendered_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./doesImageNeedToBeRendered.js */ "./rendering/doesImageNeedToBeRendered.js");
    		/* harmony import */ var _internal_storedPixelDataToCanvasImageDataColorLUT_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../internal/storedPixelDataToCanvasImageDataColorLUT.js */ "./internal/storedPixelDataToCanvasImageDataColorLUT.js");
    		/* harmony import */ var _colors_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../colors/index.js */ "./colors/index.js");
    		/* harmony import */ var _internal_getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../internal/getDisplayedArea.js */ "./internal/getDisplayedArea.js");









    		/**
    		 * Returns an appropriate canvas to render the Image. If the canvas available in the cache is appropriate
    		 * it is returned, otherwise adjustments are made. It also sets the color transfer functions.
    		 *
    		 * @param {Object} enabledElement The cornerstone enabled element
    		 * @param {Object} image The image to be rendered
    		 * @param {Boolean} invalidated Is pixel data valid
    		 * @returns {HTMLCanvasElement} An appropriate canvas for rendering the image
    		 * @memberof rendering
    		 */

    		function getRenderCanvas(enabledElement, image, invalidated) {
    		  if (!enabledElement.renderingTools.renderCanvas) {
    		    enabledElement.renderingTools.renderCanvas = document.createElement('canvas');
    		  }

    		  var renderCanvas = enabledElement.renderingTools.renderCanvas;
    		  var colormap = enabledElement.viewport.colormap || enabledElement.options.colormap;

    		  if (enabledElement.options.colormap) {
    		    console.warn('enabledElement.options.colormap is deprecated. Use enabledElement.viewport.colormap instead');
    		  }

    		  if (colormap && typeof colormap === 'string') {
    		    colormap = _colors_index_js__WEBPACK_IMPORTED_MODULE_7__["default"].getColormap(colormap);
    		  }

    		  if (!colormap) {
    		    throw new Error('renderLabelMapImage: colormap not found.');
    		  }

    		  var colormapId = colormap.getId();

    		  if (Object(_doesImageNeedToBeRendered_js__WEBPACK_IMPORTED_MODULE_5__["default"])(enabledElement, image) === false && invalidated !== true && enabledElement.renderingTools.colormapId === colormapId) {
    		    return renderCanvas;
    		  } // If our render canvas does not match the size of this image reset it
    		  // NOTE: This might be inefficient if we are updating multiple images of different
    		  // Sizes frequently.


    		  if (renderCanvas.width !== image.width || renderCanvas.height !== image.height) {
    		    Object(_initializeRenderCanvas_js__WEBPACK_IMPORTED_MODULE_3__["default"])(enabledElement, image);
    		  } // Get the lut to use


    		  var start = Object(_internal_now_js__WEBPACK_IMPORTED_MODULE_1__["default"])();

    		  if (!enabledElement.renderingTools.colorLut || invalidated || enabledElement.renderingTools.colormapId !== colormapId) {
    		    enabledElement.renderingTools.colorLut = colormap.createLookupTable();
    		    enabledElement.renderingTools.colormapId = colormapId;
    		  }

    		  image.stats = image.stats || {};
    		  image.stats.lastLutGenerateTime = Object(_internal_now_js__WEBPACK_IMPORTED_MODULE_1__["default"])() - start;
    		  var colorLut = enabledElement.renderingTools.colorLut;
    		  var renderCanvasData = enabledElement.renderingTools.renderCanvasData;
    		  var renderCanvasContext = enabledElement.renderingTools.renderCanvasContext;
    		  Object(_internal_storedPixelDataToCanvasImageDataColorLUT_js__WEBPACK_IMPORTED_MODULE_6__["default"])(image, colorLut, renderCanvasData.data);
    		  start = Object(_internal_now_js__WEBPACK_IMPORTED_MODULE_1__["default"])();
    		  renderCanvasContext.putImageData(renderCanvasData, 0, 0);
    		  image.stats.lastPutImageDataTime = Object(_internal_now_js__WEBPACK_IMPORTED_MODULE_1__["default"])() - start;
    		  return renderCanvas;
    		}
    		/**
    		 * API function to draw a label map image to a given enabledElement
    		 *
    		 * @param {EnabledElement} enabledElement The Cornerstone Enabled Element to redraw
    		 * @param {Boolean} invalidated - true if pixel data has been invalidated and cached rendering should not be used
    		 * @returns {void}
    		 * @memberof rendering
    		 */


    		function renderLabelMapImage(enabledElement, invalidated) {
    		  if (enabledElement === undefined) {
    		    throw new Error('renderLabelMapImage: enabledElement parameter must not be undefined');
    		  }

    		  var image = enabledElement.image;

    		  if (image === undefined) {
    		    throw new Error('renderLabelMapImage: image must be loaded before it can be drawn');
    		  } // Get the canvas context and reset the transform


    		  var context = enabledElement.canvas.getContext('2d', {
    		    desynchronized: true
    		  });
    		  context.setTransform(1, 0, 0, 1, 0, 0); // Clear the canvas

    		  context.fillStyle = Object(_internal_getFillStyle_js__WEBPACK_IMPORTED_MODULE_2__["default"])(enabledElement);
    		  context.fillRect(0, 0, enabledElement.canvas.width, enabledElement.canvas.height); // Turn off image smooth/interpolation if pixelReplication is set in the viewport

    		  context.imageSmoothingEnabled = !enabledElement.viewport.pixelReplication;
    		  context.mozImageSmoothingEnabled = context.imageSmoothingEnabled; // Save the canvas context state and apply the viewport properties

    		  Object(_setToPixelCoordinateSystem_js__WEBPACK_IMPORTED_MODULE_0__["default"])(enabledElement, context); // If no options are set we will retrieve the renderCanvas through the
    		  // Normal Canvas rendering path
    		  // TODO: Add WebGL support for label map pipeline

    		  var renderCanvas = getRenderCanvas(enabledElement, image, invalidated);
    		  var imageDisplayedArea = Object(_internal_getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_8__["default"])(enabledElement.image, enabledElement.viewport);
    		  var sx = imageDisplayedArea.tlhc.x - 1;
    		  var sy = imageDisplayedArea.tlhc.y - 1;
    		  var width = imageDisplayedArea.brhc.x - sx;
    		  var height = imageDisplayedArea.brhc.y - sy;
    		  context.drawImage(renderCanvas, sx, sy, width, height, sx, sy, width, height);
    		  enabledElement.renderingTools = Object(_saveLastRendered_js__WEBPACK_IMPORTED_MODULE_4__["default"])(enabledElement);
    		}
    		/**
    		 * API function to draw a pseudo-color image to a given layer
    		 *
    		 * @param {EnabledElementLayer} layer The layer that the image will be added to
    		 * @param {Boolean} invalidated - true if pixel data has been invalidated and cached rendering should not be used
    		 * @returns {void}
    		 */

    		function addLabelMapLayer(layer, invalidated) {
    		  if (layer === undefined) {
    		    throw new Error('addLabelMapLayer: layer parameter must not be undefined');
    		  }

    		  var image = layer.image;

    		  if (image === undefined) {
    		    throw new Error('addLabelMapLayer: image must be loaded before it can be drawn');
    		  }

    		  layer.canvas = getRenderCanvas(layer, image, invalidated);
    		  var context = layer.canvas.getContext('2d', {
    		    desynchronized: true
    		  }); // Turn off image smooth/interpolation if pixelReplication is set in the viewport

    		  context.imageSmoothingEnabled = !layer.viewport.pixelReplication;
    		  context.mozImageSmoothingEnabled = context.imageSmoothingEnabled;
    		  layer.renderingTools = Object(_saveLastRendered_js__WEBPACK_IMPORTED_MODULE_4__["default"])(layer);
    		}

    		/***/ }),

    		/***/ "./rendering/renderPseudoColorImage.js":
    		/*!*********************************************!*\
    		  !*** ./rendering/renderPseudoColorImage.js ***!
    		  \*********************************************/
    		/*! exports provided: renderPseudoColorImage, addPseudoColorLayer */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "renderPseudoColorImage", function() { return renderPseudoColorImage; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addPseudoColorLayer", function() { return addPseudoColorLayer; });
    		/* harmony import */ var _setToPixelCoordinateSystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../setToPixelCoordinateSystem.js */ "./setToPixelCoordinateSystem.js");
    		/* harmony import */ var _internal_now_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal/now.js */ "./internal/now.js");
    		/* harmony import */ var _internal_getFillStyle_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/getFillStyle.js */ "./internal/getFillStyle.js");
    		/* harmony import */ var _initializeRenderCanvas_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./initializeRenderCanvas.js */ "./rendering/initializeRenderCanvas.js");
    		/* harmony import */ var _getLut_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getLut.js */ "./rendering/getLut.js");
    		/* harmony import */ var _saveLastRendered_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./saveLastRendered.js */ "./rendering/saveLastRendered.js");
    		/* harmony import */ var _doesImageNeedToBeRendered_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./doesImageNeedToBeRendered.js */ "./rendering/doesImageNeedToBeRendered.js");
    		/* harmony import */ var _internal_storedPixelDataToCanvasImageDataPseudocolorLUT_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../internal/storedPixelDataToCanvasImageDataPseudocolorLUT.js */ "./internal/storedPixelDataToCanvasImageDataPseudocolorLUT.js");
    		/* harmony import */ var _colors_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../colors/index.js */ "./colors/index.js");
    		/* harmony import */ var _internal_getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../internal/getDisplayedArea.js */ "./internal/getDisplayedArea.js");










    		/**
    		 * Returns an appropriate canvas to render the Image. If the canvas available in the cache is appropriate
    		 * it is returned, otherwise adjustments are made. It also sets the color transfer functions.
    		 *
    		 * @param {Object} enabledElement The cornerstone enabled element
    		 * @param {Object} image The image to be rendered
    		 * @param {Boolean} invalidated Is pixel data valid
    		 * @returns {HTMLCanvasElement} An appropriate canvas for rendering the image
    		 * @memberof rendering
    		 */

    		function getRenderCanvas(enabledElement, image, invalidated) {
    		  if (!enabledElement.renderingTools.renderCanvas) {
    		    enabledElement.renderingTools.renderCanvas = document.createElement('canvas');
    		  }

    		  var renderCanvas = enabledElement.renderingTools.renderCanvas;
    		  var colormap = enabledElement.viewport.colormap || enabledElement.options.colormap;

    		  if (enabledElement.options && enabledElement.options.colormap) {
    		    console.warn('enabledElement.options.colormap is deprecated. Use enabledElement.viewport.colormap instead');
    		  }

    		  if (colormap && typeof colormap === 'string') {
    		    colormap = _colors_index_js__WEBPACK_IMPORTED_MODULE_8__["default"].getColormap(colormap);
    		  }

    		  if (!colormap) {
    		    throw new Error('renderPseudoColorImage: colormap not found.');
    		  }

    		  var colormapId = colormap.getId();

    		  if (Object(_doesImageNeedToBeRendered_js__WEBPACK_IMPORTED_MODULE_6__["default"])(enabledElement, image) === false && invalidated !== true && enabledElement.renderingTools.colormapId === colormapId) {
    		    return renderCanvas;
    		  } // If our render canvas does not match the size of this image reset it
    		  // NOTE: This might be inefficient if we are updating multiple images of different
    		  // Sizes frequently.


    		  if (renderCanvas.width !== image.width || renderCanvas.height !== image.height) {
    		    Object(_initializeRenderCanvas_js__WEBPACK_IMPORTED_MODULE_3__["default"])(enabledElement, image);
    		  } // Get the lut to use


    		  var start = Object(_internal_now_js__WEBPACK_IMPORTED_MODULE_1__["default"])();

    		  if (!enabledElement.renderingTools.colorLut || invalidated || enabledElement.renderingTools.colormapId !== colormapId) {
    		    colormap.setNumberOfColors(256);
    		    enabledElement.renderingTools.colorLut = colormap.createLookupTable();
    		    enabledElement.renderingTools.colormapId = colormapId;
    		  }

    		  var lut = Object(_getLut_js__WEBPACK_IMPORTED_MODULE_4__["default"])(image, enabledElement.viewport, invalidated);
    		  image.stats = image.stats || {};
    		  image.stats.lastLutGenerateTime = Object(_internal_now_js__WEBPACK_IMPORTED_MODULE_1__["default"])() - start;
    		  var colorLut = enabledElement.renderingTools.colorLut;
    		  var renderCanvasData = enabledElement.renderingTools.renderCanvasData;
    		  var renderCanvasContext = enabledElement.renderingTools.renderCanvasContext;
    		  Object(_internal_storedPixelDataToCanvasImageDataPseudocolorLUT_js__WEBPACK_IMPORTED_MODULE_7__["default"])(image, lut, colorLut, renderCanvasData.data);
    		  start = Object(_internal_now_js__WEBPACK_IMPORTED_MODULE_1__["default"])();
    		  renderCanvasContext.putImageData(renderCanvasData, 0, 0);
    		  image.stats.lastPutImageDataTime = Object(_internal_now_js__WEBPACK_IMPORTED_MODULE_1__["default"])() - start;
    		  return renderCanvas;
    		}
    		/**
    		 * API function to draw a pseudo-color image to a given enabledElement
    		 *
    		 * @param {EnabledElement} enabledElement The Cornerstone Enabled Element to redraw
    		 * @param {Boolean} invalidated - true if pixel data has been invalidated and cached rendering should not be used
    		 * @returns {void}
    		 * @memberof rendering
    		 */


    		function renderPseudoColorImage(enabledElement, invalidated) {
    		  if (enabledElement === undefined) {
    		    throw new Error('drawImage: enabledElement parameter must not be undefined');
    		  }

    		  var image = enabledElement.image;

    		  if (image === undefined) {
    		    throw new Error('drawImage: image must be loaded before it can be drawn');
    		  } // Get the canvas context and reset the transform


    		  var context = enabledElement.canvas.getContext('2d', {
    		    desynchronized: true
    		  });
    		  context.setTransform(1, 0, 0, 1, 0, 0); // Clear the canvas

    		  context.fillStyle = Object(_internal_getFillStyle_js__WEBPACK_IMPORTED_MODULE_2__["default"])(enabledElement);
    		  context.fillRect(0, 0, enabledElement.canvas.width, enabledElement.canvas.height); // Turn off image smooth/interpolation if pixelReplication is set in the viewport

    		  context.imageSmoothingEnabled = !enabledElement.viewport.pixelReplication;
    		  context.mozImageSmoothingEnabled = context.imageSmoothingEnabled; // Save the canvas context state and apply the viewport properties

    		  Object(_setToPixelCoordinateSystem_js__WEBPACK_IMPORTED_MODULE_0__["default"])(enabledElement, context); // If no options are set we will retrieve the renderCanvas through the
    		  // Normal Canvas rendering path
    		  // TODO: Add WebGL support for pseudocolor pipeline

    		  var renderCanvas = getRenderCanvas(enabledElement, image, invalidated);
    		  var imageDisplayedArea = Object(_internal_getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_9__["default"])(enabledElement.image, enabledElement.viewport);
    		  var sx = imageDisplayedArea.tlhc.x - 1;
    		  var sy = imageDisplayedArea.tlhc.y - 1;
    		  var width = imageDisplayedArea.brhc.x - sx;
    		  var height = imageDisplayedArea.brhc.y - sy;
    		  context.drawImage(renderCanvas, sx, sy, width, height, sx, sy, width, height);
    		  enabledElement.renderingTools = Object(_saveLastRendered_js__WEBPACK_IMPORTED_MODULE_5__["default"])(enabledElement);
    		}
    		/**
    		 * API function to draw a pseudo-color image to a given layer
    		 *
    		 * @param {EnabledElementLayer} layer The layer that the image will be added to
    		 * @param {Boolean} invalidated - true if pixel data has been invalidated and cached rendering should not be used
    		 * @returns {void}
    		 */

    		function addPseudoColorLayer(layer, invalidated) {
    		  if (layer === undefined) {
    		    throw new Error('addPseudoColorLayer: layer parameter must not be undefined');
    		  }

    		  var image = layer.image;

    		  if (image === undefined) {
    		    throw new Error('addPseudoColorLayer: image must be loaded before it can be drawn');
    		  }

    		  layer.canvas = getRenderCanvas(layer, image, invalidated);
    		  var context = layer.canvas.getContext('2d', {
    		    desynchronized: true
    		  }); // Turn off image smooth/interpolation if pixelReplication is set in the viewport

    		  context.imageSmoothingEnabled = !layer.viewport.pixelReplication;
    		  context.mozImageSmoothingEnabled = context.imageSmoothingEnabled;
    		  layer.renderingTools = Object(_saveLastRendered_js__WEBPACK_IMPORTED_MODULE_5__["default"])(layer);
    		}

    		/***/ }),

    		/***/ "./rendering/renderToCanvas.js":
    		/*!*************************************!*\
    		  !*** ./rendering/renderToCanvas.js ***!
    		  \*************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _triggerEvent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../triggerEvent.js */ "./triggerEvent.js");
    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../events.js */ "./events.js");
    		/* harmony import */ var _internal_drawImageSync_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/drawImageSync.js */ "./internal/drawImageSync.js");
    		/* harmony import */ var _internal_getDefaultViewport_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../internal/getDefaultViewport.js */ "./internal/getDefaultViewport.js");
    		/* harmony import */ var _internal_tryEnableWebgl_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../internal/tryEnableWebgl.js */ "./internal/tryEnableWebgl.js");





    		/**
    		 * @typedef {Object} EnabledElementStub
    		 * @property {HTMLElement} element  The enabled element
    		 * @property {HTMLCanvasElement} canvas The current canvas
    		 * @property {Object} image Currently displayed image
    		 * @property {Boolean} invalid Whether or not the image pixel data has been changed
    		 * @property {Boolean} needsRedraw  A flag for triggering a redraw of the canvas without re-retrieving the pixel data, since it remains valid
    		 * @property {Object} options Layer drawing options
    		 * @property {Object[]} layers Layers added to the EnabledElement
    		 * @property {Object} data
    		 * @property {Object} renderingTools
    		 * @property {Object} viewport The current viewport
    		 * @memberof rendering
    		 */

    		/**
    		 * creates a dummy enabled element
    		 *
    		 * @param {HTMLCanvasElement} canvas the canvas that will be assigned to the enabled element.
    		 * @param {any} image An Image loaded by a Cornerstone Image Loader
    		 * @param { any } options Options for rendering the image (e.g.enable webgl by {renderer: 'webgl' })
    		 * @param { any } viewport A set of Cornerstone viewport parameters
    		 * @returns {EnabledElementStub} a dummy enabled element
    		 * @memberof rendering
    		 */

    		function createEnabledElementStub(canvas, image, options, viewport) {
    		  return {
    		    element: canvas,
    		    canvas: canvas,
    		    image: image,
    		    invalid: true,
    		    // True if image needs to be drawn, false if not
    		    needsRedraw: true,
    		    options: options,
    		    layers: [],
    		    data: {},
    		    renderingTools: {},
    		    viewport: viewport
    		  };
    		}
    		/**
    		 * Render the image to the provided canvas immediately.
    		 * @param {any} canvas The HTML canvas where the image will be rendered.
    		 * @param {any} image An Image loaded by a Cornerstone Image Loader
    		 * @param {any} [viewport = null] A set of Cornerstone viewport parameters
    		 * @param {any} [options = null] Options for rendering the image (e.g. enable webgl by {renderer: 'webgl'})
    		 * @returns {void}
    		 * @memberof rendering
    		 */


    		/* harmony default export */ __webpack_exports__["default"] = (function (canvas, image) {
    		  var viewport = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
    		  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

    		  if (canvas === undefined) {
    		    throw new Error('renderToCanvas: parameter canvas cannot be undefined');
    		  } // If this enabled element has the option set for WebGL, we should
    		  // Check if this device actually supports it


    		  if (options && options.renderer && options.renderer.toLowerCase() === 'webgl') {
    		    Object(_internal_tryEnableWebgl_js__WEBPACK_IMPORTED_MODULE_4__["default"])(options);
    		  }

    		  var defaultViewport = Object(_internal_getDefaultViewport_js__WEBPACK_IMPORTED_MODULE_3__["default"])(canvas, image);

    		  if (viewport) {
    		    Object.assign(defaultViewport, viewport);
    		  }

    		  var enabledElementStub = createEnabledElementStub(canvas, image, options, defaultViewport);
    		  var eventDetails = {
    		    enabledElement: enabledElementStub,
    		    timestamp: Date.now()
    		  };
    		  Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_0__["default"])(enabledElementStub.element, _events_js__WEBPACK_IMPORTED_MODULE_1__["default"].PRE_RENDER, eventDetails);
    		  Object(_internal_drawImageSync_js__WEBPACK_IMPORTED_MODULE_2__["default"])(enabledElementStub, enabledElementStub.invalid);
    		});

    		/***/ }),

    		/***/ "./rendering/renderWebImage.js":
    		/*!*************************************!*\
    		  !*** ./rendering/renderWebImage.js ***!
    		  \*************************************/
    		/*! exports provided: renderWebImage */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "renderWebImage", function() { return renderWebImage; });
    		/* harmony import */ var _setToPixelCoordinateSystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../setToPixelCoordinateSystem.js */ "./setToPixelCoordinateSystem.js");
    		/* harmony import */ var _renderColorImage_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./renderColorImage.js */ "./rendering/renderColorImage.js");
    		/* harmony import */ var _internal_getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/getDisplayedArea.js */ "./internal/getDisplayedArea.js");



    		/**
    		 * API function to draw a standard web image (PNG, JPG) to an enabledImage
    		 *
    		 * @param {EnabledElement} enabledElement The Cornerstone Enabled Element to redraw
    		 * @param {Boolean} invalidated - true if pixel data has been invalidated and cached rendering should not be used
    		 * @returns {void}
    		 * @memberof rendering
    		 */

    		function renderWebImage(enabledElement, invalidated) {
    		  if (enabledElement === undefined) {
    		    throw new Error('renderWebImage: enabledElement parameter must not be undefined');
    		  }

    		  var image = enabledElement.image;

    		  if (image === undefined) {
    		    throw new Error('renderWebImage: image must be loaded before it can be drawn');
    		  } // If the viewport ww/wc and invert all match the initial state of the image, we can draw the image
    		  // Directly. If any of those are changed, we call renderColorImage() to apply the lut


    		  if (enabledElement.viewport.voi.windowWidth === enabledElement.image.windowWidth && enabledElement.viewport.voi.windowCenter === enabledElement.image.windowCenter && enabledElement.viewport.invert === false) {
    		    // Get the canvas context and reset the transform
    		    var context = enabledElement.canvas.getContext('2d', {
    		      desynchronized: true
    		    });
    		    context.setTransform(1, 0, 0, 1, 0, 0); // Clear the canvas

    		    context.fillStyle = 'black';
    		    context.fillRect(0, 0, enabledElement.canvas.width, enabledElement.canvas.height); // Turn off image smooth/interpolation if pixelReplication is set in the viewport

    		    context.imageSmoothingEnabled = !enabledElement.viewport.pixelReplication;
    		    context.mozImageSmoothingEnabled = context.imageSmoothingEnabled; // Save the canvas context state and apply the viewport properties

    		    Object(_setToPixelCoordinateSystem_js__WEBPACK_IMPORTED_MODULE_0__["default"])(enabledElement, context);
    		    var imageDisplayedArea = Object(_internal_getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_2__["default"])(enabledElement.image, enabledElement.viewport);
    		    var sx = imageDisplayedArea.tlhc.x - 1;
    		    var sy = imageDisplayedArea.tlhc.y - 1;
    		    var width = imageDisplayedArea.brhc.x - sx;
    		    var height = imageDisplayedArea.brhc.y - sy;
    		    context.drawImage(image.getImage(), sx, sy, width, height, sx, sy, width, height);
    		  } else {
    		    Object(_renderColorImage_js__WEBPACK_IMPORTED_MODULE_1__["renderColorImage"])(enabledElement, invalidated);
    		  }
    		}

    		/***/ }),

    		/***/ "./rendering/saveLastRendered.js":
    		/*!***************************************!*\
    		  !*** ./rendering/saveLastRendered.js ***!
    		  \***************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/**
    		 * Saves the parameters of the last render into renderingTools, used later to decide if data can be reused.
    		 *
    		 * @param {Object} enabledElement Cornerstone EnabledElement
    		 * @returns {Object} enabledElement.renderingTools
    		 * @memberof rendering
    		 */
    		/* harmony default export */ __webpack_exports__["default"] = (function (enabledElement) {
    		  var imageId = enabledElement.image.imageId;
    		  var viewport = enabledElement.viewport;
    		  var isColor = enabledElement.image.color;
    		  enabledElement.renderingTools.lastRenderedImageId = imageId;
    		  enabledElement.renderingTools.lastRenderedIsColor = isColor;
    		  enabledElement.renderingTools.lastRenderedViewport = {
    		    windowCenter: viewport.voi.windowCenter,
    		    windowWidth: viewport.voi.windowWidth,
    		    invert: viewport.invert,
    		    rotation: viewport.rotation,
    		    hflip: viewport.hflip,
    		    vflip: viewport.vflip,
    		    modalityLUT: viewport.modalityLUT,
    		    voiLUT: viewport.voiLUT,
    		    colormap: viewport.colormap
    		  };
    		  return enabledElement.renderingTools;
    		});

    		/***/ }),

    		/***/ "./requestPool/RequestPoolManager.ts":
    		/*!*******************************************!*\
    		  !*** ./requestPool/RequestPoolManager.ts ***!
    		  \*******************************************/
    		/*! exports provided: RequestPoolManager */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RequestPoolManager", function() { return RequestPoolManager; });
    		function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike) { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

    		function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

    		function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

    		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

    		function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

    		function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); return Constructor; }

    		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

    		var RequestPoolManager = /*#__PURE__*/function () {
    		  // priority is fixed for interaction and thumbnail to be 0, however,
    		  // the priority of prefetch can be configured and it can have priorities other
    		  // than 0 (highest priority)
    		  // TODO: Some of this stuff shouldn't be public but it's easier right now
    		  function RequestPoolManager() {
    		    _classCallCheck(this, RequestPoolManager);

    		    _defineProperty(this, "requestPool", void 0);

    		    _defineProperty(this, "awake", void 0);

    		    _defineProperty(this, "numRequests", void 0);

    		    _defineProperty(this, "maxNumRequests", void 0);

    		    _defineProperty(this, "grabDelay", void 0);

    		    _defineProperty(this, "timeoutHandle", void 0);

    		    this.requestPool = {
    		      interaction: {
    		        0: []
    		      },
    		      thumbnail: {
    		        0: []
    		      },
    		      prefetch: {
    		        0: []
    		      }
    		    };
    		    this.awake = false;
    		    this.grabDelay = 5;
    		    this.numRequests = {
    		      interaction: 0,
    		      thumbnail: 0,
    		      prefetch: 0
    		    };
    		    this.maxNumRequests = {
    		      interaction: 6,
    		      thumbnail: 6,
    		      prefetch: 5
    		    };
    		  }

    		  _createClass(RequestPoolManager, [{
    		    key: "destroy",
    		    value: function destroy() {
    		      if (this.timeoutHandle) {
    		        window.clearTimeout(this.timeoutHandle);
    		      }
    		    }
    		    /**
    		     * Adds the requests to the pool of requests.
    		     *
    		     * @param requestFn - A function that returns a promise which resolves in the image
    		     * @param type - Priority category, it can be either of interaction, prefetch,
    		     * or thumbnail.
    		     * @param additionalDetails - Additional details that requests can contain.
    		     * For instance the volumeUID for the volume requests
    		     * @param priority - Priority number for each category of requests. Its default
    		     * value is priority 0. The lower the priority number, the higher the priority number
    		     *
    		     * @returns void
    		     *
    		     */

    		  }, {
    		    key: "addRequest",
    		    value: function addRequest(requestFn, type, additionalDetails) {
    		      var priority = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
    		      var addToBeginning = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
    		      // Describe the request
    		      var requestDetails = {
    		        requestFn: requestFn,
    		        type: type,
    		        additionalDetails: additionalDetails
    		      }; // Check if the priority group exists on the request type

    		      if (this.requestPool[type][priority] === undefined) {
    		        this.requestPool[type][priority] = [];
    		      } // Adding the request to the correct priority group of the request type


    		      if (addToBeginning) {
    		        // Add it to the beginning of the stack
    		        this.requestPool[type][priority].unshift(requestDetails);
    		      } else {
    		        // Add it to the end of the stack
    		        this.requestPool[type][priority].push(requestDetails);
    		      } // Wake up


    		      if (!this.awake) {
    		        this.awake = true;
    		        this.startGrabbing();
    		      }
    		    }
    		    /**
    		     * Filter the requestPoolManager's pool of request based on the result of
    		     * provided filter function. The provided filter function needs to return false or true
    		     *
    		     * @param filterFunction The filter function for filtering of the requests to keep
    		     * @category requestPool
    		     */

    		  }, {
    		    key: "filterRequests",
    		    value: function filterRequests(filterFunction) {
    		      var _this = this;

    		      Object.keys(this.requestPool).forEach(function (type) {
    		        var requestType = _this.requestPool[type];
    		        Object.keys(requestType).forEach(function (priority) {
    		          requestType[priority] = requestType[priority].filter(function (requestDetails) {
    		            return filterFunction(requestDetails);
    		          });
    		        });
    		      });
    		    }
    		    /**
    		     * Clears the requests specific to the provided type. For instance, the
    		     * pool of requests of type 'interaction' can be cleared via this function.
    		     *
    		     *
    		     * @param type category of the request (either interaction, prefetch or thumbnail)
    		     * @category requestPool
    		     */

    		  }, {
    		    key: "clearRequestStack",
    		    value: function clearRequestStack(type) {
    		      if (!this.requestPool[type]) {
    		        throw new Error("No category for the type ".concat(type, " found"));
    		      }

    		      this.requestPool[type] = {
    		        0: []
    		      };
    		    }
    		  }, {
    		    key: "sendRequest",
    		    value: function sendRequest(_ref) {
    		      var _this2 = this;

    		      var requestFn = _ref.requestFn,
    		          type = _ref.type;
    		      // Increment the number of current requests of this type
    		      this.numRequests[type]++;
    		      this.awake = true;
    		      requestFn()["finally"](function () {
    		        _this2.numRequests[type]--;

    		        _this2.startAgain();
    		      });
    		    }
    		  }, {
    		    key: "startGrabbing",
    		    value: function startGrabbing() {
    		      // Begin by grabbing X images
    		      // TODO: This is the reason things aren't going as fast as expected
    		      // const maxSimultaneousRequests = getMaxSimultaneousRequests()
    		      // this.maxNumRequests = {
    		      //   interaction: Math.max(maxSimultaneousRequests, 1),
    		      //   thumbnail: Math.max(maxSimultaneousRequests - 2, 1),
    		      //   prefetch: Math.max(maxSimultaneousRequests - 1, 1),
    		      // }
    		      var maxRequests = this.maxNumRequests.interaction + this.maxNumRequests.thumbnail + this.maxNumRequests.prefetch;
    		      var currentRequests = this.numRequests.interaction + this.numRequests.thumbnail + this.numRequests.prefetch;
    		      var requestsToSend = maxRequests - currentRequests;

    		      for (var i = 0; i < requestsToSend; i++) {
    		        var _requestDetails = this.getNextRequest();

    		        if (_requestDetails === false) {
    		          break;
    		        } else if (_requestDetails) {
    		          this.sendRequest(_requestDetails);
    		        }
    		      }
    		    }
    		  }, {
    		    key: "startAgain",
    		    value: function startAgain() {
    		      var _this3 = this;

    		      if (!this.awake) {
    		        return;
    		      }

    		      if (this.grabDelay) {
    		        this.timeoutHandle = window.setTimeout(function () {
    		          _this3.startGrabbing();
    		        }, this.grabDelay);
    		      } else {
    		        this.startGrabbing();
    		      }
    		    }
    		  }, {
    		    key: "getSortedPriorityGroups",
    		    value: function getSortedPriorityGroups(type) {
    		      var _this4 = this;

    		      var priorities = Object.keys(this.requestPool[type]).map(Number).filter(function (priority) {
    		        return _this4.requestPool[type][priority].length;
    		      }).sort();
    		      return priorities;
    		    }
    		  }, {
    		    key: "getNextRequest",
    		    value: function getNextRequest() {
    		      var interactionPriorities = this.getSortedPriorityGroups('interaction');

    		      var _iterator = _createForOfIteratorHelper(interactionPriorities),
    		          _step;

    		      try {
    		        for (_iterator.s(); !(_step = _iterator.n()).done;) {
    		          var priority = _step.value;

    		          if (this.requestPool.interaction[priority].length && this.numRequests.interaction < this.maxNumRequests.interaction) {
    		            return this.requestPool.interaction[priority].shift();
    		          }
    		        }
    		      } catch (err) {
    		        _iterator.e(err);
    		      } finally {
    		        _iterator.f();
    		      }

    		      var thumbnailPriorities = this.getSortedPriorityGroups('thumbnail');

    		      var _iterator2 = _createForOfIteratorHelper(thumbnailPriorities),
    		          _step2;

    		      try {
    		        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
    		          var _priority = _step2.value;

    		          if (this.requestPool.thumbnail[_priority].length && this.numRequests.thumbnail < this.maxNumRequests.thumbnail) {
    		            return this.requestPool.thumbnail[_priority].shift();
    		          }
    		        }
    		      } catch (err) {
    		        _iterator2.e(err);
    		      } finally {
    		        _iterator2.f();
    		      }

    		      var prefetchPriorities = this.getSortedPriorityGroups('prefetch');

    		      var _iterator3 = _createForOfIteratorHelper(prefetchPriorities),
    		          _step3;

    		      try {
    		        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
    		          var _priority2 = _step3.value;

    		          if (this.requestPool.prefetch[_priority2].length && this.numRequests.prefetch < this.maxNumRequests.prefetch) {
    		            return this.requestPool.prefetch[_priority2].shift();
    		          }
    		        }
    		      } catch (err) {
    		        _iterator3.e(err);
    		      } finally {
    		        _iterator3.f();
    		      }

    		      if (!interactionPriorities.length && !thumbnailPriorities.length && !prefetchPriorities.length) {
    		        this.awake = false;
    		      }

    		      return false;
    		    }
    		    /**
    		     * Returns the request pool containing different categories, their priority and
    		     * the added request details.
    		     *
    		     * @returns
    		     * @category requestPool
    		     */

    		  }, {
    		    key: "getRequestPool",
    		    value: function getRequestPool() {
    		      return this.requestPool;
    		    }
    		  }]);

    		  return RequestPoolManager;
    		}();



    		/***/ }),

    		/***/ "./requestPool/imageLoadPoolManager.ts":
    		/*!*********************************************!*\
    		  !*** ./requestPool/imageLoadPoolManager.ts ***!
    		  \*********************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _RequestPoolManager_ts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./RequestPoolManager.ts */ "./requestPool/RequestPoolManager.ts");
    		 // Loading = Retrieval + Decoding

    		var imageLoadPoolManager = new _RequestPoolManager_ts__WEBPACK_IMPORTED_MODULE_0__["RequestPoolManager"]();
    		imageLoadPoolManager.maxNumRequests = {
    		  interaction: 1000,
    		  thumbnail: 1000,
    		  prefetch: 1000
    		};
    		imageLoadPoolManager.grabDelay = 0;
    		/* harmony default export */ __webpack_exports__["default"] = (imageLoadPoolManager);

    		/***/ }),

    		/***/ "./requestPool/imageRetrievalPoolManager.ts":
    		/*!**************************************************!*\
    		  !*** ./requestPool/imageRetrievalPoolManager.ts ***!
    		  \**************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _RequestPoolManager_ts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./RequestPoolManager.ts */ "./requestPool/RequestPoolManager.ts");
    		 // Retrieval (usually) === XHR requests

    		var imageRetrievalPoolManager = new _RequestPoolManager_ts__WEBPACK_IMPORTED_MODULE_0__["RequestPoolManager"]();
    		imageRetrievalPoolManager.maxNumRequests = {
    		  interaction: 20,
    		  thumbnail: 20,
    		  prefetch: 20
    		};
    		imageRetrievalPoolManager.grabDelay = 0;
    		/* harmony default export */ __webpack_exports__["default"] = (imageRetrievalPoolManager);

    		/***/ }),

    		/***/ "./reset.js":
    		/*!******************!*\
    		  !*** ./reset.js ***!
    		  \******************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _internal_getDefaultViewport_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/getDefaultViewport.js */ "./internal/getDefaultViewport.js");
    		/* harmony import */ var _enabledElements_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./enabledElements.js */ "./enabledElements.js");
    		/* harmony import */ var _updateImage_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./updateImage.js */ "./updateImage.js");



    		/**
    		 * Resets the viewport to the default settings
    		 *
    		 * @param {HTMLElement} element An HTML Element enabled for Cornerstone
    		 * @returns {void}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (element) {
    		  var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_1__["getEnabledElement"])(element);
    		  enabledElement.viewport = Object(_internal_getDefaultViewport_js__WEBPACK_IMPORTED_MODULE_0__["default"])(enabledElement.canvas, enabledElement.image);
    		  Object(_updateImage_js__WEBPACK_IMPORTED_MODULE_2__["default"])(element);
    		});

    		/***/ }),

    		/***/ "./resize.js":
    		/*!*******************!*\
    		  !*** ./resize.js ***!
    		  \*******************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enabledElements.js */ "./enabledElements.js");
    		/* harmony import */ var _fitToWindow_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fitToWindow.js */ "./fitToWindow.js");
    		/* harmony import */ var _updateImage_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./updateImage.js */ "./updateImage.js");
    		/* harmony import */ var _triggerEvent_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./triggerEvent.js */ "./triggerEvent.js");
    		/* harmony import */ var _internal_getImageSize_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./internal/getImageSize.js */ "./internal/getImageSize.js");
    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./events.js */ "./events.js");






    		/**
    		 * This module is responsible for enabling an element to display images with cornerstone
    		 *
    		 * @param {HTMLElement} element The DOM element enabled for Cornerstone
    		 * @param {HTMLElement} canvas The Canvas DOM element within the DOM element enabled for Cornerstone
    		 * @returns {void}
    		 */

    		function setCanvasSize(element, canvas) {
    		  // The device pixel ratio is 1.0 for normal displays and > 1.0
    		  // For high DPI displays like Retina

    		  /*
    		      This functionality is disabled due to buggy behavior on systems with mixed DPI's.  If the canvas
    		    is created on a display with high DPI (e.g. 2.0) and then the browser window is dragged to
    		    a different display with a different DPI (e.g. 1.0), the canvas is not recreated so the pageToPixel
    		    produces incorrect results.  I couldn't find any way to determine when the DPI changed other than
    		    by polling which is not very clean.  If anyone has any ideas here, please let me know, but for now
    		    we will disable this functionality.  We may want
    		    to add a mechanism to optionally enable this functionality if we can determine it is safe to do
    		    so (e.g. iPad or iPhone or perhaps enumerate the displays on the system.  I am choosing
    		    to be cautious here since I would rather not have bug reports or safety issues related to this
    		    scenario.
    		      var devicePixelRatio = window.devicePixelRatio;
    		    if(devicePixelRatio === undefined) {
    		        devicePixelRatio = 1.0;
    		    }
    		    */
    		  // Avoid setting the same value because it flashes the canvas with IE and Edge
    		  if (canvas.width !== element.clientWidth) {
    		    canvas.width = element.clientWidth;
    		    canvas.style.width = "".concat(element.clientWidth, "px");
    		  } // Avoid setting the same value because it flashes the canvas with IE and Edge


    		  if (canvas.height !== element.clientHeight) {
    		    canvas.height = element.clientHeight;
    		    canvas.style.height = "".concat(element.clientHeight, "px");
    		  }
    		}
    		/**
    		 * Checks if the image of a given enabled element fitted the window
    		 * before the resize
    		 *
    		 * @param {EnabledElement} enabledElement The Cornerstone Enabled Element
    		 * @param {number} oldCanvasWidth The width of the canvas before the resize
    		 * @param {number} oldCanvasHeight The height of the canvas before the resize
    		 * @return {Boolean} true if it fitted the windows, false otherwise
    		 */


    		function wasFitToWindow(enabledElement, oldCanvasWidth, oldCanvasHeight) {
    		  var scale = enabledElement.viewport.scale;
    		  var imageSize = Object(_internal_getImageSize_js__WEBPACK_IMPORTED_MODULE_4__["default"])(enabledElement.image, enabledElement.viewport.rotation);
    		  var imageWidth = Math.round(imageSize.width * scale);
    		  var imageHeight = Math.round(imageSize.height * scale);
    		  var x = enabledElement.viewport.translation.x;
    		  var y = enabledElement.viewport.translation.y;
    		  return imageWidth === oldCanvasWidth && imageHeight <= oldCanvasHeight || imageWidth <= oldCanvasWidth && imageHeight === oldCanvasHeight && x === 0 && y === 0;
    		}
    		/**
    		 * Rescale the image relative to the changed size of the canvas
    		 *
    		 * @param {EnabledElement} enabledElement The Cornerstone Enabled Element
    		 * @param {number} oldCanvasWidth The width of the canvas before the resize
    		 * @param {number} oldCanvasHeight The height of the canvas before the resize
    		 * @return {void}
    		 */


    		function relativeRescale(enabledElement, oldCanvasWidth, oldCanvasHeight) {
    		  var scale = enabledElement.viewport.scale;
    		  var canvasWidth = enabledElement.canvas.width;
    		  var canvasHeight = enabledElement.canvas.height;
    		  var relWidthChange = canvasWidth / oldCanvasWidth;
    		  var relHeightChange = canvasHeight / oldCanvasHeight;
    		  var relChange = Math.sqrt(relWidthChange * relHeightChange);
    		  enabledElement.viewport.scale = relChange * scale;
    		}
    		/**
    		 * Resizes an enabled element and optionally fits the image to window
    		 *
    		 * @param {HTMLElement} element The DOM element enabled for Cornerstone
    		 * @param {Boolean} forceFitToWindow true to to force a refit, false to rescale accordingly
    		 * @returns {void}
    		 */


    		/* harmony default export */ __webpack_exports__["default"] = (function (element, forceFitToWindow) {
    		  var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElement"])(element);
    		  var oldCanvasWidth = enabledElement.canvas.width;
    		  var oldCanvasHeight = enabledElement.canvas.height;
    		  setCanvasSize(element, enabledElement.canvas);
    		  var eventData = {
    		    element: element
    		  };
    		  Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_3__["default"])(element, _events_js__WEBPACK_IMPORTED_MODULE_5__["default"].ELEMENT_RESIZED, eventData);

    		  if (enabledElement.image === undefined) {
    		    return;
    		  }

    		  if (forceFitToWindow || wasFitToWindow(enabledElement, oldCanvasWidth, oldCanvasHeight)) {
    		    // Fit the image to the window again if it fitted before the resize
    		    Object(_fitToWindow_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element);
    		  } else {
    		    // Adapt the scale of a zoomed or panned image relative to the size change
    		    relativeRescale(enabledElement, oldCanvasWidth, oldCanvasHeight);
    		    Object(_updateImage_js__WEBPACK_IMPORTED_MODULE_2__["default"])(element);
    		  }
    		});

    		/***/ }),

    		/***/ "./setToPixelCoordinateSystem.js":
    		/*!***************************************!*\
    		  !*** ./setToPixelCoordinateSystem.js ***!
    		  \***************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _internal_calculateTransform_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/calculateTransform.js */ "./internal/calculateTransform.js");

    		/**
    		 * Sets the canvas context transformation matrix to the pixel coordinate system.  This allows
    		 * geometry to be driven using the canvas context using coordinates in the pixel coordinate system
    		 * @param {EnabledElement} enabledElement The
    		 * @param {CanvasRenderingContext2D} context The CanvasRenderingContext2D for the enabledElement's Canvas
    		 * @param {Number} [scale] Optional scale to apply
    		 * @returns {void}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (enabledElement, context, scale) {
    		  if (enabledElement === undefined) {
    		    throw new Error('setToPixelCoordinateSystem: parameter enabledElement must not be undefined');
    		  }

    		  if (context === undefined) {
    		    throw new Error('setToPixelCoordinateSystem: parameter context must not be undefined');
    		  }

    		  var transform = Object(_internal_calculateTransform_js__WEBPACK_IMPORTED_MODULE_0__["default"])(enabledElement, scale);
    		  context.setTransform(transform.m[0], transform.m[1], transform.m[2], transform.m[3], transform.m[4], transform.m[5]);
    		});

    		/***/ }),

    		/***/ "./setViewport.js":
    		/*!************************!*\
    		  !*** ./setViewport.js ***!
    		  \************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _internal_getDefaultViewport_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/getDefaultViewport.js */ "./internal/getDefaultViewport.js");
    		/* harmony import */ var _enabledElements_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./enabledElements.js */ "./enabledElements.js");
    		/* harmony import */ var _updateImage_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./updateImage.js */ "./updateImage.js");



    		var MIN_WINDOW_WIDTH = 0.000001;
    		var MIN_VIEWPORT_SCALE = 0.0001;
    		/**
    		 * Sets/updates viewport of a given enabled element
    		 *
    		 * @param {HTMLElement} element - DOM element of the enabled element
    		 * @param {Viewport} [viewport] - Object containing the viewport properties
    		 * @returns {void}
    		 * @memberof ViewportSettings
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (element, viewport) {
    		  var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_1__["getEnabledElement"])(element); // If viewport is not already set, start with default and merge new
    		  // viewport options later

    		  if (enabledElement.viewport === undefined) {
    		    enabledElement.viewport = Object(_internal_getDefaultViewport_js__WEBPACK_IMPORTED_MODULE_0__["default"])(enabledElement.canvas);
    		  } // Merge viewport


    		  if (viewport) {
    		    for (var attrname in viewport) {
    		      if (viewport[attrname] !== null) {
    		        enabledElement.viewport[attrname] = viewport[attrname];
    		      }
    		    }
    		  } // Prevent window width from being too small (note that values close to zero are valid and can occur with
    		  // PET images in particular)


    		  if (enabledElement.viewport.voi.windowWidth) {
    		    enabledElement.viewport.voi.windowWidth = Math.max(enabledElement.viewport.voi.windowWidth, MIN_WINDOW_WIDTH);
    		  } // Prevent scale from getting too small


    		  if (enabledElement.viewport.scale) {
    		    enabledElement.viewport.scale = Math.max(enabledElement.viewport.scale, MIN_VIEWPORT_SCALE);
    		  } // Normalize the rotation value to a positive rotation in degrees


    		  enabledElement.viewport.rotation %= 360;

    		  if (enabledElement.viewport.rotation < 0) {
    		    enabledElement.viewport.rotation += 360;
    		  }

    		  if (enabledElement.image) {
    		    // Force the image to be updated since the viewport has been modified
    		    Object(_updateImage_js__WEBPACK_IMPORTED_MODULE_2__["default"])(element);
    		  }
    		});

    		/***/ }),

    		/***/ "./triggerEvent.js":
    		/*!*************************!*\
    		  !*** ./triggerEvent.js ***!
    		  \*************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return triggerEvent; });
    		/**
    		 * Trigger a CustomEvent
    		 *
    		 * @param {EventTarget} el The element or EventTarget to trigger the event upon
    		 * @param {String} type The event type name
    		 * @param {Object|null} detail=null The event data to be sent
    		 * @returns {Boolean} The return value is false if at least one event listener called preventDefault(). Otherwise it returns true.
    		 */
    		function triggerEvent(el, type) {
    		  var detail = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
    		  var event; // This check is needed to polyfill CustomEvent on IE11-

    		  if (typeof window.CustomEvent === 'function') {
    		    event = new CustomEvent(type, {
    		      detail: detail,
    		      cancelable: true
    		    });
    		  } else {
    		    event = document.createEvent('CustomEvent');
    		    event.initCustomEvent(type, true, true, detail);
    		  }

    		  return el.dispatchEvent(event);
    		}

    		/***/ }),

    		/***/ "./updateImage.js":
    		/*!************************!*\
    		  !*** ./updateImage.js ***!
    		  \************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enabledElements.js */ "./enabledElements.js");
    		/* harmony import */ var _internal_drawImage_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/drawImage.js */ "./internal/drawImage.js");


    		/**
    		 * Forces the image to be updated/redrawn for the specified enabled element
    		 * @param {HTMLElement} element An HTML Element enabled for Cornerstone
    		 * @param {Boolean} [invalidated=false] Whether or not the image pixel data has been changed, necessitating a redraw
    		 *
    		 * @returns {void}
    		 * @memberof Drawing
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (element) {
    		  var invalidated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    		  var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElement"])(element);
    		  Object(_internal_drawImage_js__WEBPACK_IMPORTED_MODULE_1__["default"])(enabledElement, invalidated);
    		});

    		/***/ }),

    		/***/ "./webgl/createProgramFromString.js":
    		/*!******************************************!*\
    		  !*** ./webgl/createProgramFromString.js ***!
    		  \******************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/**
    		 * Creates and compiles a shader.
    		 *
    		 * @param {!WebGLRenderingContext} gl The WebGL Context.
    		 * @param {string} shaderSource The GLSL source code for the shader.
    		 * @param {number} shaderType The type of shader, VERTEX_SHADER or FRAGMENT_SHADER.
    		 *
    		 * @return {!WebGLShader} The shader.
    		 * @memberof WebGLRendering
    		 */
    		function compileShader(gl, shaderSource, shaderType) {
    		  // Create the shader object
    		  var shader = gl.createShader(shaderType); // Set the shader source code.

    		  gl.shaderSource(shader, shaderSource); // Compile the shader

    		  gl.compileShader(shader); // Check if it compiled

    		  var success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);

    		  if (!success && !gl.isContextLost()) {
    		    // Something went wrong during compilation; get the error
    		    var infoLog = gl.getShaderInfoLog(shader);
    		    console.error("Could not compile shader:\n".concat(infoLog));
    		  }

    		  return shader;
    		}
    		/**
    		 * Creates a program from 2 shaders.
    		 *
    		 * @param {!WebGLRenderingContext} gl The WebGL context.
    		 * @param {!WebGLShader} vertexShader A vertex shader.
    		 * @param {!WebGLShader} fragmentShader A fragment shader.
    		 * @return {!WebGLProgram} A program.
    		 * @memberof WebGLRendering
    		 */


    		function createProgram(gl, vertexShader, fragmentShader) {
    		  // Create a program.
    		  var program = gl.createProgram(); // Attach the shaders.

    		  gl.attachShader(program, vertexShader);
    		  gl.attachShader(program, fragmentShader); // Link the program.

    		  gl.linkProgram(program); // Check if it linked.

    		  var success = gl.getProgramParameter(program, gl.LINK_STATUS);

    		  if (!success && !gl.isContextLost()) {
    		    // Something went wrong with the link
    		    var infoLog = gl.getProgramInfoLog(program);
    		    console.error("WebGL program filed to link:\n".concat(infoLog));
    		  }

    		  return program;
    		}
    		/**
    		 * Creates a program from 2 shaders source (Strings)
    		 * @param  {!WebGLRenderingContext} gl              The WebGL context.
    		 * @param  {!WebGLShader} vertexShaderSrc   Vertex shader string
    		 * @param  {!WebGLShader} fragShaderSrc Fragment shader string
    		 * @return {!WebGLProgram}                 A program
    		 * @memberof WebGLRendering
    		 */


    		/* harmony default export */ __webpack_exports__["default"] = (function (gl, vertexShaderSrc, fragShaderSrc) {
    		  var vertexShader = compileShader(gl, vertexShaderSrc, gl.VERTEX_SHADER);
    		  var fragShader = compileShader(gl, fragShaderSrc, gl.FRAGMENT_SHADER);
    		  return createProgram(gl, vertexShader, fragShader);
    		});

    		/***/ }),

    		/***/ "./webgl/index.js":
    		/*!************************!*\
    		  !*** ./webgl/index.js ***!
    		  \************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _renderer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./renderer.js */ "./webgl/renderer.js");
    		/* harmony import */ var _createProgramFromString_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./createProgramFromString.js */ "./webgl/createProgramFromString.js");
    		/* harmony import */ var _textureCache_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./textureCache.js */ "./webgl/textureCache.js");



    		/**
    		 * @module WebGLRendering
    		 */

    		var mod = {
    		  createProgramFromString: _createProgramFromString_js__WEBPACK_IMPORTED_MODULE_1__["default"],
    		  renderer: {
    		    render: _renderer_js__WEBPACK_IMPORTED_MODULE_0__["render"],
    		    initRenderer: _renderer_js__WEBPACK_IMPORTED_MODULE_0__["initRenderer"],
    		    getRenderCanvas: _renderer_js__WEBPACK_IMPORTED_MODULE_0__["getRenderCanvas"],
    		    isWebGLAvailable: _renderer_js__WEBPACK_IMPORTED_MODULE_0__["isWebGLAvailable"]
    		  },
    		  textureCache: _textureCache_js__WEBPACK_IMPORTED_MODULE_2__["default"]
    		};
    		Object.defineProperty(mod, 'isWebGLInitialized', {
    		  enumerable: true,
    		  configurable: false,
    		  get: function get() {
    		    return _renderer_js__WEBPACK_IMPORTED_MODULE_0__["isWebGLInitialized"];
    		  }
    		});
    		/* harmony default export */ __webpack_exports__["default"] = (mod);

    		/***/ }),

    		/***/ "./webgl/renderer.js":
    		/*!***************************!*\
    		  !*** ./webgl/renderer.js ***!
    		  \***************************/
    		/*! exports provided: isWebGLInitialized, getRenderCanvas, initRenderer, render, isWebGLAvailable */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isWebGLInitialized", function() { return isWebGLInitialized; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getRenderCanvas", function() { return getRenderCanvas; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initRenderer", function() { return initRenderer; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isWebGLAvailable", function() { return isWebGLAvailable; });
    		/* harmony import */ var _shaders_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shaders/index.js */ "./webgl/shaders/index.js");
    		/* harmony import */ var _vertexShader_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vertexShader.js */ "./webgl/vertexShader.js");
    		/* harmony import */ var _textureCache_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./textureCache.js */ "./webgl/textureCache.js");
    		/* harmony import */ var _createProgramFromString_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./createProgramFromString.js */ "./webgl/createProgramFromString.js");
    		/* eslint no-bitwise: 0 */




    		var renderCanvas = document.createElement('canvas');
    		var gl;
    		var texCoordBuffer;
    		var positionBuffer;
    		var isWebGLInitialized = false;

    		function getRenderCanvas() {
    		  return renderCanvas;
    		}

    		function initShaders() {
    		  for (var id in _shaders_index_js__WEBPACK_IMPORTED_MODULE_0__["shaders"]) {
    		    // Console.log("WEBGL: Loading shader", id);
    		    var shader = _shaders_index_js__WEBPACK_IMPORTED_MODULE_0__["shaders"][id];
    		    shader.attributes = {};
    		    shader.uniforms = {};
    		    shader.vert = _vertexShader_js__WEBPACK_IMPORTED_MODULE_1__["vertexShader"];
    		    shader.program = Object(_createProgramFromString_js__WEBPACK_IMPORTED_MODULE_3__["default"])(gl, shader.vert, shader.frag);
    		    shader.attributes.texCoordLocation = gl.getAttribLocation(shader.program, 'a_texCoord');
    		    gl.enableVertexAttribArray(shader.attributes.texCoordLocation);
    		    shader.attributes.positionLocation = gl.getAttribLocation(shader.program, 'a_position');
    		    gl.enableVertexAttribArray(shader.attributes.positionLocation);
    		    shader.uniforms.resolutionLocation = gl.getUniformLocation(shader.program, 'u_resolution');
    		  }
    		}

    		function initRenderer() {
    		  if (isWebGLInitialized === true) {
    		    // Console.log("WEBGL Renderer already initialized");
    		    return;
    		  }

    		  if (initWebGL(renderCanvas)) {
    		    initBuffers();
    		    initShaders(); // Console.log("WEBGL Renderer initialized!");

    		    isWebGLInitialized = true;
    		  }
    		}

    		function updateRectangle(gl, width, height) {
    		  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([width, height, 0, height, width, 0, 0, 0]), gl.STATIC_DRAW);
    		}

    		function handleLostContext(event) {
    		  event.preventDefault();
    		  console.warn('WebGL Context Lost!');
    		}

    		function handleRestoredContext(event) {
    		  event.preventDefault();
    		  isWebGLInitialized = false;
    		  _textureCache_js__WEBPACK_IMPORTED_MODULE_2__["default"].purgeCache();
    		  initRenderer(); // Console.log('WebGL Context Restored.');
    		}

    		function initWebGL(canvas) {
    		  gl = null;

    		  try {
    		    // Try to grab the standard context. If it fails, fallback to experimental.
    		    var options = {
    		      desynchronized: true,
    		      preserveDrawingBuffer: true // Preserve buffer so we can copy to display canvas element

    		    }; // ---------------- Testing purposes -------------
    		    // If (debug === true && WebGLDebugUtils) {
    		    //    RenderCanvas = WebGLDebugUtils.makeLostContextSimulatingCanvas(renderCanvas);
    		    // }
    		    // ---------------- Testing purposes -------------

    		    gl = canvas.getContext('webgl', options) || canvas.getContext('experimental-webgl', options); // Set up event listeners for context lost / context restored

    		    canvas.removeEventListener('webglcontextlost', handleLostContext, false);
    		    canvas.addEventListener('webglcontextlost', handleLostContext, false);
    		    canvas.removeEventListener('webglcontextrestored', handleRestoredContext, false);
    		    canvas.addEventListener('webglcontextrestored', handleRestoredContext, false);
    		  } catch (error) {
    		    throw new Error('Error creating WebGL context');
    		  } // If we don't have a GL context, give up now


    		  if (!gl) {
    		    console.error('Unable to initialize WebGL. Your browser may not support it.');
    		    gl = null;
    		  }

    		  return gl;
    		}
    		/**
    		 * Returns the image data type as a string representation.
    		 * @param {any} image The cornerstone image object
    		 * @returns {string} image data type (rgb, iint16, uint16, int8 and uint8)
    		 * @memberof WebGLRendering
    		 */


    		function getImageDataType(image) {
    		  if (image.color) {
    		    return 'rgb';
    		  }

    		  var pixelData = image.getPixelData();

    		  if (pixelData instanceof Int16Array) {
    		    return 'int16';
    		  }

    		  if (pixelData instanceof Uint16Array) {
    		    return 'uint16';
    		  }

    		  if (pixelData instanceof Int8Array) {
    		    return 'int8';
    		  }

    		  return 'uint8';
    		}

    		function getShaderProgram(image) {
    		  var datatype = getImageDataType(image); // We need a mechanism for
    		  // Choosing the shader based on the image datatype
    		  // Console.log("Datatype: " + datatype);

    		  if (_shaders_index_js__WEBPACK_IMPORTED_MODULE_0__["shaders"].hasOwnProperty(datatype)) {
    		    return _shaders_index_js__WEBPACK_IMPORTED_MODULE_0__["shaders"][datatype];
    		  }

    		  return _shaders_index_js__WEBPACK_IMPORTED_MODULE_0__["shaders"].rgb;
    		}

    		function generateTexture(image) {
    		  var TEXTURE_FORMAT = {
    		    uint8: gl.LUMINANCE,
    		    int8: gl.LUMINANCE_ALPHA,
    		    uint16: gl.LUMINANCE_ALPHA,
    		    int16: gl.RGB,
    		    rgb: gl.RGB
    		  };
    		  var TEXTURE_BYTES = {
    		    int8: 1,
    		    // Luminance
    		    uint16: 2,
    		    // Luminance + Alpha
    		    int16: 3,
    		    // RGB
    		    rgb: 3 // RGB

    		  };
    		  var imageDataType = getImageDataType(image);
    		  var format = TEXTURE_FORMAT[imageDataType]; // GL texture configuration

    		  var texture = gl.createTexture();
    		  gl.bindTexture(gl.TEXTURE_2D, texture);
    		  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);
    		  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);
    		  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
    		  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
    		  gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);
    		  var imageData = _shaders_index_js__WEBPACK_IMPORTED_MODULE_0__["dataUtilities"][imageDataType].storedPixelDataToImageData(image, image.width, image.height);
    		  gl.texImage2D(gl.TEXTURE_2D, 0, format, image.width, image.height, 0, format, gl.UNSIGNED_BYTE, imageData); // Calculate the size in bytes of this image in memory

    		  var sizeInBytes = image.width * image.height * TEXTURE_BYTES[imageDataType];
    		  return {
    		    texture: texture,
    		    sizeInBytes: sizeInBytes
    		  };
    		}

    		function getImageTexture(image) {
    		  var imageTexture = _textureCache_js__WEBPACK_IMPORTED_MODULE_2__["default"].getImageTexture(image.imageId);

    		  if (!imageTexture) {
    		    // Console.log("Generating texture for imageid: ", image.imageId);
    		    imageTexture = generateTexture(image);
    		    _textureCache_js__WEBPACK_IMPORTED_MODULE_2__["default"].putImageTexture(image, imageTexture);
    		  }

    		  return imageTexture.texture;
    		}

    		function initBuffers() {
    		  positionBuffer = gl.createBuffer();
    		  gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);
    		  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([1, 1, 0, 1, 1, 0, 0, 0]), gl.STATIC_DRAW);
    		  texCoordBuffer = gl.createBuffer();
    		  gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);
    		  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0]), gl.STATIC_DRAW);
    		}

    		function renderQuad(shader, parameters, texture, width, height) {
    		  gl.clearColor(1.0, 0.0, 0.0, 1.0);
    		  gl.viewport(0, 0, width, height);
    		  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);
    		  gl.useProgram(shader.program);
    		  gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);
    		  gl.vertexAttribPointer(shader.attributes.texCoordLocation, 2, gl.FLOAT, false, 0, 0);
    		  gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);
    		  gl.vertexAttribPointer(shader.attributes.positionLocation, 2, gl.FLOAT, false, 0, 0);

    		  for (var key in parameters) {
    		    var uniformLocation = gl.getUniformLocation(shader.program, key);

    		    if (!uniformLocation) {
    		      continue; // Disabling this error for now since RGB requires minPixelValue
    		      // but the other shaders do not.
    		      // throw `Could not access location for uniform: ${key}`;
    		    }

    		    var uniform = parameters[key];
    		    var type = uniform.type;
    		    var value = uniform.value;

    		    if (type === 'i') {
    		      gl.uniform1i(uniformLocation, value);
    		    } else if (type === 'f') {
    		      gl.uniform1f(uniformLocation, value);
    		    } else if (type === '2f') {
    		      gl.uniform2f(uniformLocation, value[0], value[1]);
    		    }
    		  }

    		  updateRectangle(gl, width, height);
    		  gl.activeTexture(gl.TEXTURE0);
    		  gl.bindTexture(gl.TEXTURE_2D, texture);
    		  gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);
    		}

    		function render(enabledElement) {
    		  // Resize the canvas
    		  var image = enabledElement.image;
    		  renderCanvas.width = image.width;
    		  renderCanvas.height = image.height;
    		  var viewport = enabledElement.viewport; // Render the current image

    		  var shader = getShaderProgram(image);
    		  var texture = getImageTexture(image);
    		  var parameters = {
    		    u_resolution: {
    		      type: '2f',
    		      value: [image.width, image.height]
    		    },
    		    wc: {
    		      type: 'f',
    		      value: viewport.voi.windowCenter
    		    },
    		    ww: {
    		      type: 'f',
    		      value: viewport.voi.windowWidth
    		    },
    		    slope: {
    		      type: 'f',
    		      value: image.slope
    		    },
    		    intercept: {
    		      type: 'f',
    		      value: image.intercept
    		    },
    		    minPixelValue: {
    		      type: 'f',
    		      value: image.minPixelValue
    		    },
    		    invert: {
    		      type: 'i',
    		      value: viewport.invert ? 1 : 0
    		    }
    		  };
    		  renderQuad(shader, parameters, texture, image.width, image.height);
    		  return renderCanvas;
    		}
    		function isWebGLAvailable() {
    		  // Adapted from
    		  // http://stackoverflow.com/questions/9899807/three-js-detect-webgl-support-and-fallback-to-regular-canvas
    		  var options = {
    		    failIfMajorPerformanceCaveat: true
    		  };

    		  try {
    		    var canvas = document.createElement('canvas');
    		    return Boolean(window.WebGLRenderingContext) && (canvas.getContext('webgl', options) || canvas.getContext('experimental-webgl', options));
    		  } catch (e) {
    		    return false;
    		  }
    		}

    		/***/ }),

    		/***/ "./webgl/shaders/index.js":
    		/*!********************************!*\
    		  !*** ./webgl/shaders/index.js ***!
    		  \********************************/
    		/*! exports provided: shaders, dataUtilities */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shaders", function() { return shaders; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dataUtilities", function() { return dataUtilities; });
    		/* harmony import */ var _int16_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./int16.js */ "./webgl/shaders/int16.js");
    		/* harmony import */ var _int8_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./int8.js */ "./webgl/shaders/int8.js");
    		/* harmony import */ var _rgb_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./rgb.js */ "./webgl/shaders/rgb.js");
    		/* harmony import */ var _uint16_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./uint16.js */ "./webgl/shaders/uint16.js");
    		/* harmony import */ var _uint8_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./uint8.js */ "./webgl/shaders/uint8.js");





    		var shaders = {
    		  int16: _int16_js__WEBPACK_IMPORTED_MODULE_0__["int16Shader"],
    		  int8: _int8_js__WEBPACK_IMPORTED_MODULE_1__["int8Shader"],
    		  rgb: _rgb_js__WEBPACK_IMPORTED_MODULE_2__["rgbShader"],
    		  uint16: _uint16_js__WEBPACK_IMPORTED_MODULE_3__["uint16Shader"],
    		  uint8: _uint8_js__WEBPACK_IMPORTED_MODULE_4__["uint8Shader"]
    		};
    		var dataUtilities = {
    		  int16: _int16_js__WEBPACK_IMPORTED_MODULE_0__["int16DataUtilities"],
    		  int8: _int8_js__WEBPACK_IMPORTED_MODULE_1__["int8DataUtilities"],
    		  rgb: _rgb_js__WEBPACK_IMPORTED_MODULE_2__["rgbDataUtilities"],
    		  uint16: _uint16_js__WEBPACK_IMPORTED_MODULE_3__["uint16DataUtilities"],
    		  uint8: _uint8_js__WEBPACK_IMPORTED_MODULE_4__["uint8DataUtilities"]
    		};


    		/***/ }),

    		/***/ "./webgl/shaders/int16.js":
    		/*!********************************!*\
    		  !*** ./webgl/shaders/int16.js ***!
    		  \********************************/
    		/*! exports provided: int16DataUtilities, int16Shader */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "int16DataUtilities", function() { return int16DataUtilities; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "int16Shader", function() { return int16Shader; });
    		/* eslint no-bitwise: 0 */
    		var int16Shader = {};
    		/**
    		 * Convert stored pixel data to image data.
    		 *
    		 * Pack int16 into three uint8 channels (r, g, b)
    		 *
    		 * @param {Image} image A Cornerstone Image Object
    		 * @returns {Uint8Array} The image data for use by the WebGL shader
    		 * @memberof WebGLRendering
    		 */

    		function storedPixelDataToImageData(image) {
    		  // Transfer image data to alpha and luminance channels of WebGL texture
    		  // Credit to @jpambrun and @fernandojsg
    		  // Pack int16 into three uint8 channels (r, g, b)
    		  var pixelData = image.getPixelData();
    		  var numberOfChannels = 3;
    		  var data = new Uint8Array(image.width * image.height * numberOfChannels);
    		  var offset = 0;

    		  for (var i = 0; i < pixelData.length; i++) {
    		    var val = Math.abs(pixelData[i]);
    		    data[offset++] = val & 0xFF;
    		    data[offset++] = val >> 8;
    		    data[offset++] = pixelData[i] < 0 ? 0 : 1; // 0 For negative, 1 for positive
    		  }

    		  return data;
    		}

    		var int16DataUtilities = {
    		  storedPixelDataToImageData: storedPixelDataToImageData
    		};
    		int16Shader.frag = 'precision mediump float;' + 'uniform sampler2D u_image;' + 'uniform float ww;' + 'uniform float wc;' + 'uniform float slope;' + 'uniform float intercept;' + 'uniform int invert;' + 'varying vec2 v_texCoord;' + 'void main() {' + // Get texture
    		'vec4 color = texture2D(u_image, v_texCoord);' + // Calculate luminance from packed texture
    		'float intensity = color.r*256.0 + color.g*65536.0;' + 'if (color.b == 0.0)' + 'intensity = -intensity;' + // Rescale based on slope and window settings
    		'intensity = intensity * slope + intercept;' + 'float center0 = wc - 0.5;' + 'float width0 = max(ww, 1.0);' + 'intensity = (intensity - center0) / width0 + 0.5;' + // Clamp intensity
    		'intensity = clamp(intensity, 0.0, 1.0);' + // RGBA output
    		'gl_FragColor = vec4(intensity, intensity, intensity, 1.0);' + // Apply any inversion necessary
    		'if (invert == 1)' + 'gl_FragColor.rgb = 1.0 - gl_FragColor.rgb;' + '}';


    		/***/ }),

    		/***/ "./webgl/shaders/int8.js":
    		/*!*******************************!*\
    		  !*** ./webgl/shaders/int8.js ***!
    		  \*******************************/
    		/*! exports provided: int8DataUtilities, int8Shader */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "int8DataUtilities", function() { return int8DataUtilities; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "int8Shader", function() { return int8Shader; });
    		var int8Shader = {};
    		/**
    		 * Convert stored pixel data to image data.
    		 *
    		 * Store data in Uint8Array
    		 *
    		 * @param {Image} image A Cornerstone Image Object
    		 * @returns {Uint8Array} The image data for use by the WebGL shader
    		 * @memberof WebGLRendering
    		 */

    		function storedPixelDataToImageData(image) {
    		  // Transfer image data to alpha channel of WebGL texture
    		  // Store data in Uint8Array
    		  var pixelData = image.getPixelData();
    		  var numberOfChannels = 2;
    		  var data = new Uint8Array(image.width * image.height * numberOfChannels);
    		  var offset = 0;

    		  for (var i = 0; i < pixelData.length; i++) {
    		    data[offset++] = pixelData[i];
    		    data[offset++] = pixelData[i] < 0 ? 0 : 1; // 0 For negative, 1 for positive
    		  }

    		  return data;
    		}

    		var int8DataUtilities = {
    		  storedPixelDataToImageData: storedPixelDataToImageData
    		};
    		int8Shader.frag = 'precision mediump float;' + 'uniform sampler2D u_image;' + 'uniform float ww;' + 'uniform float wc;' + 'uniform float slope;' + 'uniform float intercept;' + 'uniform int invert;' + 'varying vec2 v_texCoord;' + 'void main() {' + // Get texture
    		'vec4 color = texture2D(u_image, v_texCoord);' + // Calculate luminance from packed texture
    		'float intensity = color.r*256.;' + 'if (color.a == 0.0)' + 'intensity = -intensity;' + // Rescale based on slope and window settings
    		'intensity = intensity * slope + intercept;' + 'float center0 = wc - 0.5;' + 'float width0 = max(ww, 1.0);' + 'intensity = (intensity - center0) / width0 + 0.5;' + // Clamp intensity
    		'intensity = clamp(intensity, 0.0, 1.0);' + // RGBA output
    		'gl_FragColor = vec4(intensity, intensity, intensity, 1.0);' + // Apply any inversion necessary
    		'if (invert == 1)' + 'gl_FragColor.rgb = 1.0 - gl_FragColor.rgb;' + '}';


    		/***/ }),

    		/***/ "./webgl/shaders/rgb.js":
    		/*!******************************!*\
    		  !*** ./webgl/shaders/rgb.js ***!
    		  \******************************/
    		/*! exports provided: rgbDataUtilities, rgbShader */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rgbDataUtilities", function() { return rgbDataUtilities; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rgbShader", function() { return rgbShader; });
    		var rgbShader = {};
    		/**
    		 * Convert stored pixel data to image data.
    		 *
    		 * Pack RGB images into a 3-channel RGB texture
    		 *
    		 * @param {Image} image A Cornerstone Image Object
    		 * @returns {Uint8Array} The image data for use by the WebGL shader
    		 * @memberof WebGLRendering
    		 */

    		function storedPixelDataToImageData(image) {
    		  var minPixelValue = image.minPixelValue;
    		  var canvasImageDataIndex = 0;
    		  var storedPixelDataIndex = 0; // Only 3 channels, since we use WebGL's RGB texture format

    		  var numStoredPixels = image.width * image.height * 4;
    		  var numOutputPixels = image.width * image.height * 3;
    		  var storedPixelData = image.getPixelData();
    		  var data = new Uint8Array(numOutputPixels); // NOTE: As of Nov 2014, most javascript engines have lower performance when indexing negative indexes.
    		  // We have a special code path for this case that improves performance.  Thanks to @jpambrun for this enhancement

    		  if (minPixelValue < 0) {
    		    while (storedPixelDataIndex < numStoredPixels) {
    		      data[canvasImageDataIndex++] = storedPixelData[storedPixelDataIndex++] + -minPixelValue; // Red

    		      data[canvasImageDataIndex++] = storedPixelData[storedPixelDataIndex++] + -minPixelValue; // Green

    		      data[canvasImageDataIndex++] = storedPixelData[storedPixelDataIndex++] + -minPixelValue; // Blue

    		      storedPixelDataIndex += 1; // The stored pixel data has 4 channels
    		    }
    		  } else {
    		    while (storedPixelDataIndex < numStoredPixels) {
    		      data[canvasImageDataIndex++] = storedPixelData[storedPixelDataIndex++]; // Red

    		      data[canvasImageDataIndex++] = storedPixelData[storedPixelDataIndex++]; // Green

    		      data[canvasImageDataIndex++] = storedPixelData[storedPixelDataIndex++]; // Blue

    		      storedPixelDataIndex += 1; // The stored pixel data has 4 channels
    		    }
    		  }

    		  return data;
    		}

    		var rgbDataUtilities = {
    		  storedPixelDataToImageData: storedPixelDataToImageData
    		};
    		rgbShader.frag = 'precision mediump float;' + 'uniform sampler2D u_image;' + 'uniform float ww;' + 'uniform float wc;' + 'uniform float slope;' + 'uniform float intercept;' + 'uniform float minPixelValue;' + 'uniform int invert;' + 'varying vec2 v_texCoord;' + 'void main() {' + // Get texture
    		'vec3 color = texture2D(u_image, v_texCoord).xyz;' + // Rescale based on slope and intercept
    		'color = color * 256.0 * slope + intercept;' + // Apply window settings
    		'float center0 = wc - 0.5 - minPixelValue;' + 'float width0 = max(ww, 1.0);' + 'color = (color - center0) / width0 + 0.5;' + // RGBA output
    		'gl_FragColor = vec4(color, 1);' + // Apply any inversion necessary
    		'if (invert == 1)' + 'gl_FragColor.rgb = 1. - gl_FragColor.rgb;' + '}';


    		/***/ }),

    		/***/ "./webgl/shaders/uint16.js":
    		/*!*********************************!*\
    		  !*** ./webgl/shaders/uint16.js ***!
    		  \*********************************/
    		/*! exports provided: uint16DataUtilities, uint16Shader */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "uint16DataUtilities", function() { return uint16DataUtilities; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "uint16Shader", function() { return uint16Shader; });
    		/* eslint no-bitwise: 0 */
    		var uint16Shader = {};
    		/**
    		 * Convert stored pixel data to image data.
    		 *
    		 * For uint16 pack uint16 into two uint8 channels (r and a).
    		 *
    		 * @param {Image} image A Cornerstone Image Object
    		 * @returns {Uint8Array} The image data for use by the WebGL shader
    		 * @memberof WebGLRendering
    		 */

    		function storedPixelDataToImageData(image) {
    		  // Transfer image data to alpha and luminance channels of WebGL texture
    		  // Credit to @jpambrun and @fernandojsg
    		  // Pack uint16 into two uint8 channels (r and a)
    		  var pixelData = image.getPixelData();
    		  var numberOfChannels = 2;
    		  var data = new Uint8Array(image.width * image.height * numberOfChannels);
    		  var offset = 0;

    		  for (var i = 0; i < pixelData.length; i++) {
    		    var val = pixelData[i];
    		    data[offset++] = val & 0xFF;
    		    data[offset++] = val >> 8;
    		  }

    		  return data;
    		}

    		var uint16DataUtilities = {
    		  storedPixelDataToImageData: storedPixelDataToImageData
    		};
    		uint16Shader.frag = 'precision mediump float;' + 'uniform sampler2D u_image;' + 'uniform float ww;' + 'uniform float wc;' + 'uniform float slope;' + 'uniform float intercept;' + 'uniform int invert;' + 'varying vec2 v_texCoord;' + 'void main() {' + // Get texture
    		'vec4 color = texture2D(u_image, v_texCoord);' + // Calculate luminance from packed texture
    		'float intensity = color.r*256.0 + color.a*65536.0;' + // Rescale based on slope and window settings
    		'intensity = intensity * slope + intercept;' + 'float center0 = wc - 0.5;' + 'float width0 = max(ww, 1.0);' + 'intensity = (intensity - center0) / width0 + 0.5;' + // Clamp intensity
    		'intensity = clamp(intensity, 0.0, 1.0);' + // RGBA output
    		'gl_FragColor = vec4(intensity, intensity, intensity, 1.0);' + // Apply any inversion necessary
    		'if (invert == 1)' + 'gl_FragColor.rgb = 1.0 - gl_FragColor.rgb;' + '}';


    		/***/ }),

    		/***/ "./webgl/shaders/uint8.js":
    		/*!********************************!*\
    		  !*** ./webgl/shaders/uint8.js ***!
    		  \********************************/
    		/*! exports provided: uint8DataUtilities, uint8Shader */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "uint8DataUtilities", function() { return uint8DataUtilities; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "uint8Shader", function() { return uint8Shader; });
    		var uint8Shader = {};
    		/**
    		 * Convert stored pixel data to image data. Here we will store
    		 * all data in the alpha channel.
    		 *
    		 * @param {Image} image A Cornerstone Image Object
    		 * @returns {Uint8Array} The image data for use by the WebGL shader
    		 * @memberof WebGLRendering
    		 */

    		function storedPixelDataToImageData(image) {
    		  // Transfer image data to alpha channel of WebGL texture
    		  return image.getPixelData();
    		}

    		var uint8DataUtilities = {
    		  storedPixelDataToImageData: storedPixelDataToImageData
    		};
    		uint8Shader.frag = 'precision mediump float;' + 'uniform sampler2D u_image;' + 'uniform float ww;' + 'uniform float wc;' + 'uniform float slope;' + 'uniform float intercept;' + 'uniform int invert;' + 'varying vec2 v_texCoord;' + 'void main() {' + // Get texture
    		'vec4 color = texture2D(u_image, v_texCoord);' + // Calculate luminance from packed texture
    		'float intensity = color.r*256.0;' + // Rescale based on slope and window settings
    		'intensity = intensity * slope + intercept;' + 'float center0 = wc - 0.5;' + 'float width0 = max(ww, 1.0);' + 'intensity = (intensity - center0) / width0 + 0.5;' + // Clamp intensity
    		'intensity = clamp(intensity, 0.0, 1.0);' + // RGBA output
    		'gl_FragColor = vec4(intensity, intensity, intensity, 1.0);' + // Apply any inversion necessary
    		'if (invert == 1)' + 'gl_FragColor.rgb = 1.0 - gl_FragColor.rgb;' + '}';


    		/***/ }),

    		/***/ "./webgl/textureCache.js":
    		/*!*******************************!*\
    		  !*** ./webgl/textureCache.js ***!
    		  \*******************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../events.js */ "./events.js");
    		/* harmony import */ var _triggerEvent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../triggerEvent.js */ "./triggerEvent.js");


    		/**
    		 * This module deals with caching image textures in VRAM for WebGL
    		 * @module WebGLTextureCache
    		 */

    		var imageCache = {};
    		var cachedImages = [];
    		var maximumSizeInBytes = 1024 * 1024 * 256; // 256 MB

    		var cacheSizeInBytes = 0;

    		function getCacheInfo() {
    		  return {
    		    maximumSizeInBytes: maximumSizeInBytes,
    		    cacheSizeInBytes: cacheSizeInBytes,
    		    numberOfImagesCached: cachedImages.length
    		  };
    		}

    		function purgeCacheIfNecessary() {
    		  // If max cache size has not been exceeded, do nothing
    		  if (cacheSizeInBytes <= maximumSizeInBytes) {
    		    return;
    		  } // Cache size has been exceeded, create list of images sorted by timeStamp
    		  // So we can purge the least recently used image


    		  function compare(a, b) {
    		    if (a.timeStamp > b.timeStamp) {
    		      return -1;
    		    }

    		    if (a.timeStamp < b.timeStamp) {
    		      return 1;
    		    }

    		    return 0;
    		  }

    		  cachedImages.sort(compare); // Remove images as necessary

    		  while (cacheSizeInBytes > maximumSizeInBytes) {
    		    var lastCachedImage = cachedImages[cachedImages.length - 1];
    		    cacheSizeInBytes -= lastCachedImage.sizeInBytes;
    		    delete imageCache[lastCachedImage.imageId];
    		    cachedImages.pop();
    		    Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_events_js__WEBPACK_IMPORTED_MODULE_0__["events"], _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].WEBGL_TEXTURE_REMOVED, {
    		      imageId: lastCachedImage.imageId
    		    });
    		  }

    		  var cacheInfo = getCacheInfo();
    		  Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_events_js__WEBPACK_IMPORTED_MODULE_0__["events"], _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].WEBGL_TEXTURE_CACHE_FULL, cacheInfo);
    		}

    		function setMaximumSizeBytes(numBytes) {
    		  if (numBytes === undefined) {
    		    throw new Error('setMaximumSizeBytes: parameter numBytes must not be undefined');
    		  }

    		  if (numBytes.toFixed === undefined) {
    		    throw new Error('setMaximumSizeBytes: parameter numBytes must be a number');
    		  }

    		  maximumSizeInBytes = numBytes;
    		  purgeCacheIfNecessary();
    		}

    		function putImageTexture(image, imageTexture) {
    		  var imageId = image.imageId;

    		  if (image === undefined) {
    		    throw new Error('putImageTexture: image must not be undefined');
    		  }

    		  if (imageId === undefined) {
    		    throw new Error('putImageTexture: imageId must not be undefined');
    		  }

    		  if (imageTexture === undefined) {
    		    throw new Error('putImageTexture: imageTexture must not be undefined');
    		  }

    		  if (Object.prototype.hasOwnProperty.call(imageCache, imageId) === true) {
    		    throw new Error('putImageTexture: imageId already in cache');
    		  }

    		  var cachedImage = {
    		    imageId: imageId,
    		    imageTexture: imageTexture,
    		    timeStamp: new Date(),
    		    sizeInBytes: imageTexture.sizeInBytes
    		  };
    		  imageCache[imageId] = cachedImage;
    		  cachedImages.push(cachedImage);

    		  if (imageTexture.sizeInBytes === undefined) {
    		    throw new Error('putImageTexture: imageTexture.sizeInBytes must not be undefined');
    		  }

    		  if (imageTexture.sizeInBytes.toFixed === undefined) {
    		    throw new Error('putImageTexture: imageTexture.sizeInBytes is not a number');
    		  }

    		  cacheSizeInBytes += cachedImage.sizeInBytes;
    		  purgeCacheIfNecessary();
    		}

    		function getImageTexture(imageId) {
    		  if (imageId === undefined) {
    		    throw new Error('getImageTexture: imageId must not be undefined');
    		  }

    		  var cachedImage = imageCache[imageId];

    		  if (cachedImage === undefined) {
    		    return;
    		  } // Bump time stamp for cached image


    		  cachedImage.timeStamp = new Date();
    		  return cachedImage.imageTexture;
    		}

    		function removeImageTexture(imageId) {
    		  if (imageId === undefined) {
    		    throw new Error('removeImageTexture: imageId must not be undefined');
    		  }

    		  var cachedImage = imageCache[imageId];

    		  if (cachedImage === undefined) {
    		    throw new Error('removeImageTexture: imageId must not be undefined');
    		  }

    		  cachedImages.splice(cachedImages.indexOf(cachedImage), 1);
    		  cacheSizeInBytes -= cachedImage.sizeInBytes;
    		  delete imageCache[imageId];
    		  return cachedImage.imageTexture;
    		}

    		function purgeCache() {
    		  while (cachedImages.length > 0) {
    		    var removedCachedImage = cachedImages.pop();
    		    delete imageCache[removedCachedImage.imageId];
    		  }

    		  cacheSizeInBytes = 0;
    		}

    		/* harmony default export */ __webpack_exports__["default"] = ({
    		  purgeCache: purgeCache,
    		  getImageTexture: getImageTexture,
    		  putImageTexture: putImageTexture,
    		  removeImageTexture: removeImageTexture,
    		  setMaximumSizeBytes: setMaximumSizeBytes
    		});

    		/***/ }),

    		/***/ "./webgl/vertexShader.js":
    		/*!*******************************!*\
    		  !*** ./webgl/vertexShader.js ***!
    		  \*******************************/
    		/*! exports provided: vertexShader */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vertexShader", function() { return vertexShader; });
    		var vertexShader = 'attribute vec2 a_position;' + 'attribute vec2 a_texCoord;' + 'uniform vec2 u_resolution;' + 'varying vec2 v_texCoord;' + 'void main() {' + 'vec2 zeroToOne = a_position / u_resolution;' + 'vec2 zeroToTwo = zeroToOne * 2.0;' + 'vec2 clipSpace = zeroToTwo - 1.0;' + 'gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);' + 'v_texCoord = a_texCoord;' + '}';

    		/***/ })

    		/******/ });
    		});
    		
    	} (cornerstone$1));
    	return cornerstone$1.exports;
    }

    var cornerstoneExports = requireCornerstone();
    var cornerstone = /*@__PURE__*/getDefaultExportFromCjs(cornerstoneExports);

    var cornerstoneTools$1 = {exports: {}};

    /*! cornerstone-tools - 3.19.3 - 2019-08-30 | (c) 2017 Chris Hafey | https://github.com/cornerstonejs/cornerstoneTools */

    var hasRequiredCornerstoneTools;

    function requireCornerstoneTools () {
    	if (hasRequiredCornerstoneTools) return cornerstoneTools$1.exports;
    	hasRequiredCornerstoneTools = 1;
    	(function (module, exports) {
    		(function webpackUniversalModuleDefinition(root, factory) {
    			module.exports = factory();
    		})(window, function() {
    		return /******/ (function(modules) { // webpackBootstrap
    		/******/ 	function hotDisposeChunk(chunkId) {
    		/******/ 		delete installedChunks[chunkId];
    		/******/ 	}
    		/******/ 	var parentHotUpdateCallback = window["webpackHotUpdate"];
    		/******/ 	window["webpackHotUpdate"] = // eslint-disable-next-line no-unused-vars
    		/******/ 	function webpackHotUpdateCallback(chunkId, moreModules) {
    		/******/ 		hotAddUpdateChunk(chunkId, moreModules);
    		/******/ 		if (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);
    		/******/ 	} ;
    		/******/
    		/******/ 	// eslint-disable-next-line no-unused-vars
    		/******/ 	function hotDownloadUpdateChunk(chunkId) {
    		/******/ 		var script = document.createElement("script");
    		/******/ 		script.charset = "utf-8";
    		/******/ 		script.src = __webpack_require__.p + "" + chunkId + "." + hotCurrentHash + ".hot-update.js";
    		/******/ 		document.head.appendChild(script);
    		/******/ 	}
    		/******/
    		/******/ 	// eslint-disable-next-line no-unused-vars
    		/******/ 	function hotDownloadManifest(requestTimeout) {
    		/******/ 		requestTimeout = requestTimeout || 10000;
    		/******/ 		return new Promise(function(resolve, reject) {
    		/******/ 			if (typeof XMLHttpRequest === "undefined") {
    		/******/ 				return reject(new Error("No browser support"));
    		/******/ 			}
    		/******/ 			try {
    		/******/ 				var request = new XMLHttpRequest();
    		/******/ 				var requestPath = __webpack_require__.p + "" + hotCurrentHash + ".hot-update.json";
    		/******/ 				request.open("GET", requestPath, true);
    		/******/ 				request.timeout = requestTimeout;
    		/******/ 				request.send(null);
    		/******/ 			} catch (err) {
    		/******/ 				return reject(err);
    		/******/ 			}
    		/******/ 			request.onreadystatechange = function() {
    		/******/ 				if (request.readyState !== 4) return;
    		/******/ 				if (request.status === 0) {
    		/******/ 					// timeout
    		/******/ 					reject(
    		/******/ 						new Error("Manifest request to " + requestPath + " timed out.")
    		/******/ 					);
    		/******/ 				} else if (request.status === 404) {
    		/******/ 					// no update available
    		/******/ 					resolve();
    		/******/ 				} else if (request.status !== 200 && request.status !== 304) {
    		/******/ 					// other failure
    		/******/ 					reject(new Error("Manifest request to " + requestPath + " failed."));
    		/******/ 				} else {
    		/******/ 					// success
    		/******/ 					try {
    		/******/ 						var update = JSON.parse(request.responseText);
    		/******/ 					} catch (e) {
    		/******/ 						reject(e);
    		/******/ 						return;
    		/******/ 					}
    		/******/ 					resolve(update);
    		/******/ 				}
    		/******/ 			};
    		/******/ 		});
    		/******/ 	}
    		/******/
    		/******/ 	var hotApplyOnUpdate = true;
    		/******/ 	// eslint-disable-next-line no-unused-vars
    		/******/ 	var hotCurrentHash = "d00b0c5c15ba1ce5d787";
    		/******/ 	var hotRequestTimeout = 10000;
    		/******/ 	var hotCurrentModuleData = {};
    		/******/ 	var hotCurrentChildModule;
    		/******/ 	// eslint-disable-next-line no-unused-vars
    		/******/ 	var hotCurrentParents = [];
    		/******/ 	// eslint-disable-next-line no-unused-vars
    		/******/ 	var hotCurrentParentsTemp = [];
    		/******/
    		/******/ 	// eslint-disable-next-line no-unused-vars
    		/******/ 	function hotCreateRequire(moduleId) {
    		/******/ 		var me = installedModules[moduleId];
    		/******/ 		if (!me) return __webpack_require__;
    		/******/ 		var fn = function(request) {
    		/******/ 			if (me.hot.active) {
    		/******/ 				if (installedModules[request]) {
    		/******/ 					if (installedModules[request].parents.indexOf(moduleId) === -1) {
    		/******/ 						installedModules[request].parents.push(moduleId);
    		/******/ 					}
    		/******/ 				} else {
    		/******/ 					hotCurrentParents = [moduleId];
    		/******/ 					hotCurrentChildModule = request;
    		/******/ 				}
    		/******/ 				if (me.children.indexOf(request) === -1) {
    		/******/ 					me.children.push(request);
    		/******/ 				}
    		/******/ 			} else {
    		/******/ 				console.warn(
    		/******/ 					"[HMR] unexpected require(" +
    		/******/ 						request +
    		/******/ 						") from disposed module " +
    		/******/ 						moduleId
    		/******/ 				);
    		/******/ 				hotCurrentParents = [];
    		/******/ 			}
    		/******/ 			return __webpack_require__(request);
    		/******/ 		};
    		/******/ 		var ObjectFactory = function ObjectFactory(name) {
    		/******/ 			return {
    		/******/ 				configurable: true,
    		/******/ 				enumerable: true,
    		/******/ 				get: function() {
    		/******/ 					return __webpack_require__[name];
    		/******/ 				},
    		/******/ 				set: function(value) {
    		/******/ 					__webpack_require__[name] = value;
    		/******/ 				}
    		/******/ 			};
    		/******/ 		};
    		/******/ 		for (var name in __webpack_require__) {
    		/******/ 			if (
    		/******/ 				Object.prototype.hasOwnProperty.call(__webpack_require__, name) &&
    		/******/ 				name !== "e" &&
    		/******/ 				name !== "t"
    		/******/ 			) {
    		/******/ 				Object.defineProperty(fn, name, ObjectFactory(name));
    		/******/ 			}
    		/******/ 		}
    		/******/ 		fn.e = function(chunkId) {
    		/******/ 			if (hotStatus === "ready") hotSetStatus("prepare");
    		/******/ 			hotChunksLoading++;
    		/******/ 			return __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {
    		/******/ 				finishChunkLoading();
    		/******/ 				throw err;
    		/******/ 			});
    		/******/
    		/******/ 			function finishChunkLoading() {
    		/******/ 				hotChunksLoading--;
    		/******/ 				if (hotStatus === "prepare") {
    		/******/ 					if (!hotWaitingFilesMap[chunkId]) {
    		/******/ 						hotEnsureUpdateChunk(chunkId);
    		/******/ 					}
    		/******/ 					if (hotChunksLoading === 0 && hotWaitingFiles === 0) {
    		/******/ 						hotUpdateDownloaded();
    		/******/ 					}
    		/******/ 				}
    		/******/ 			}
    		/******/ 		};
    		/******/ 		fn.t = function(value, mode) {
    		/******/ 			if (mode & 1) value = fn(value);
    		/******/ 			return __webpack_require__.t(value, mode & -2);
    		/******/ 		};
    		/******/ 		return fn;
    		/******/ 	}
    		/******/
    		/******/ 	// eslint-disable-next-line no-unused-vars
    		/******/ 	function hotCreateModule(moduleId) {
    		/******/ 		var hot = {
    		/******/ 			// private stuff
    		/******/ 			_acceptedDependencies: {},
    		/******/ 			_declinedDependencies: {},
    		/******/ 			_selfAccepted: false,
    		/******/ 			_selfDeclined: false,
    		/******/ 			_disposeHandlers: [],
    		/******/ 			_main: hotCurrentChildModule !== moduleId,
    		/******/
    		/******/ 			// Module API
    		/******/ 			active: true,
    		/******/ 			accept: function(dep, callback) {
    		/******/ 				if (dep === undefined) hot._selfAccepted = true;
    		/******/ 				else if (typeof dep === "function") hot._selfAccepted = dep;
    		/******/ 				else if (typeof dep === "object")
    		/******/ 					for (var i = 0; i < dep.length; i++)
    		/******/ 						hot._acceptedDependencies[dep[i]] = callback || function() {};
    		/******/ 				else hot._acceptedDependencies[dep] = callback || function() {};
    		/******/ 			},
    		/******/ 			decline: function(dep) {
    		/******/ 				if (dep === undefined) hot._selfDeclined = true;
    		/******/ 				else if (typeof dep === "object")
    		/******/ 					for (var i = 0; i < dep.length; i++)
    		/******/ 						hot._declinedDependencies[dep[i]] = true;
    		/******/ 				else hot._declinedDependencies[dep] = true;
    		/******/ 			},
    		/******/ 			dispose: function(callback) {
    		/******/ 				hot._disposeHandlers.push(callback);
    		/******/ 			},
    		/******/ 			addDisposeHandler: function(callback) {
    		/******/ 				hot._disposeHandlers.push(callback);
    		/******/ 			},
    		/******/ 			removeDisposeHandler: function(callback) {
    		/******/ 				var idx = hot._disposeHandlers.indexOf(callback);
    		/******/ 				if (idx >= 0) hot._disposeHandlers.splice(idx, 1);
    		/******/ 			},
    		/******/
    		/******/ 			// Management API
    		/******/ 			check: hotCheck,
    		/******/ 			apply: hotApply,
    		/******/ 			status: function(l) {
    		/******/ 				if (!l) return hotStatus;
    		/******/ 				hotStatusHandlers.push(l);
    		/******/ 			},
    		/******/ 			addStatusHandler: function(l) {
    		/******/ 				hotStatusHandlers.push(l);
    		/******/ 			},
    		/******/ 			removeStatusHandler: function(l) {
    		/******/ 				var idx = hotStatusHandlers.indexOf(l);
    		/******/ 				if (idx >= 0) hotStatusHandlers.splice(idx, 1);
    		/******/ 			},
    		/******/
    		/******/ 			//inherit from previous dispose call
    		/******/ 			data: hotCurrentModuleData[moduleId]
    		/******/ 		};
    		/******/ 		hotCurrentChildModule = undefined;
    		/******/ 		return hot;
    		/******/ 	}
    		/******/
    		/******/ 	var hotStatusHandlers = [];
    		/******/ 	var hotStatus = "idle";
    		/******/
    		/******/ 	function hotSetStatus(newStatus) {
    		/******/ 		hotStatus = newStatus;
    		/******/ 		for (var i = 0; i < hotStatusHandlers.length; i++)
    		/******/ 			hotStatusHandlers[i].call(null, newStatus);
    		/******/ 	}
    		/******/
    		/******/ 	// while downloading
    		/******/ 	var hotWaitingFiles = 0;
    		/******/ 	var hotChunksLoading = 0;
    		/******/ 	var hotWaitingFilesMap = {};
    		/******/ 	var hotRequestedFilesMap = {};
    		/******/ 	var hotAvailableFilesMap = {};
    		/******/ 	var hotDeferred;
    		/******/
    		/******/ 	// The update info
    		/******/ 	var hotUpdate, hotUpdateNewHash;
    		/******/
    		/******/ 	function toModuleId(id) {
    		/******/ 		var isNumber = +id + "" === id;
    		/******/ 		return isNumber ? +id : id;
    		/******/ 	}
    		/******/
    		/******/ 	function hotCheck(apply) {
    		/******/ 		if (hotStatus !== "idle") {
    		/******/ 			throw new Error("check() is only allowed in idle status");
    		/******/ 		}
    		/******/ 		hotApplyOnUpdate = apply;
    		/******/ 		hotSetStatus("check");
    		/******/ 		return hotDownloadManifest(hotRequestTimeout).then(function(update) {
    		/******/ 			if (!update) {
    		/******/ 				hotSetStatus("idle");
    		/******/ 				return null;
    		/******/ 			}
    		/******/ 			hotRequestedFilesMap = {};
    		/******/ 			hotWaitingFilesMap = {};
    		/******/ 			hotAvailableFilesMap = update.c;
    		/******/ 			hotUpdateNewHash = update.h;
    		/******/
    		/******/ 			hotSetStatus("prepare");
    		/******/ 			var promise = new Promise(function(resolve, reject) {
    		/******/ 				hotDeferred = {
    		/******/ 					resolve: resolve,
    		/******/ 					reject: reject
    		/******/ 				};
    		/******/ 			});
    		/******/ 			hotUpdate = {};
    		/******/ 			var chunkId = "cornerstoneTools";
    		/******/ 			// eslint-disable-next-line no-lone-blocks
    		/******/ 			{
    		/******/ 				/*globals chunkId */
    		/******/ 				hotEnsureUpdateChunk(chunkId);
    		/******/ 			}
    		/******/ 			if (
    		/******/ 				hotStatus === "prepare" &&
    		/******/ 				hotChunksLoading === 0 &&
    		/******/ 				hotWaitingFiles === 0
    		/******/ 			) {
    		/******/ 				hotUpdateDownloaded();
    		/******/ 			}
    		/******/ 			return promise;
    		/******/ 		});
    		/******/ 	}
    		/******/
    		/******/ 	// eslint-disable-next-line no-unused-vars
    		/******/ 	function hotAddUpdateChunk(chunkId, moreModules) {
    		/******/ 		if (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])
    		/******/ 			return;
    		/******/ 		hotRequestedFilesMap[chunkId] = false;
    		/******/ 		for (var moduleId in moreModules) {
    		/******/ 			if (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
    		/******/ 				hotUpdate[moduleId] = moreModules[moduleId];
    		/******/ 			}
    		/******/ 		}
    		/******/ 		if (--hotWaitingFiles === 0 && hotChunksLoading === 0) {
    		/******/ 			hotUpdateDownloaded();
    		/******/ 		}
    		/******/ 	}
    		/******/
    		/******/ 	function hotEnsureUpdateChunk(chunkId) {
    		/******/ 		if (!hotAvailableFilesMap[chunkId]) {
    		/******/ 			hotWaitingFilesMap[chunkId] = true;
    		/******/ 		} else {
    		/******/ 			hotRequestedFilesMap[chunkId] = true;
    		/******/ 			hotWaitingFiles++;
    		/******/ 			hotDownloadUpdateChunk(chunkId);
    		/******/ 		}
    		/******/ 	}
    		/******/
    		/******/ 	function hotUpdateDownloaded() {
    		/******/ 		hotSetStatus("ready");
    		/******/ 		var deferred = hotDeferred;
    		/******/ 		hotDeferred = null;
    		/******/ 		if (!deferred) return;
    		/******/ 		if (hotApplyOnUpdate) {
    		/******/ 			// Wrap deferred object in Promise to mark it as a well-handled Promise to
    		/******/ 			// avoid triggering uncaught exception warning in Chrome.
    		/******/ 			// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666
    		/******/ 			Promise.resolve()
    		/******/ 				.then(function() {
    		/******/ 					return hotApply(hotApplyOnUpdate);
    		/******/ 				})
    		/******/ 				.then(
    		/******/ 					function(result) {
    		/******/ 						deferred.resolve(result);
    		/******/ 					},
    		/******/ 					function(err) {
    		/******/ 						deferred.reject(err);
    		/******/ 					}
    		/******/ 				);
    		/******/ 		} else {
    		/******/ 			var outdatedModules = [];
    		/******/ 			for (var id in hotUpdate) {
    		/******/ 				if (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {
    		/******/ 					outdatedModules.push(toModuleId(id));
    		/******/ 				}
    		/******/ 			}
    		/******/ 			deferred.resolve(outdatedModules);
    		/******/ 		}
    		/******/ 	}
    		/******/
    		/******/ 	function hotApply(options) {
    		/******/ 		if (hotStatus !== "ready")
    		/******/ 			throw new Error("apply() is only allowed in ready status");
    		/******/ 		options = options || {};
    		/******/
    		/******/ 		var cb;
    		/******/ 		var i;
    		/******/ 		var j;
    		/******/ 		var module;
    		/******/ 		var moduleId;
    		/******/
    		/******/ 		function getAffectedStuff(updateModuleId) {
    		/******/ 			var outdatedModules = [updateModuleId];
    		/******/ 			var outdatedDependencies = {};
    		/******/
    		/******/ 			var queue = outdatedModules.map(function(id) {
    		/******/ 				return {
    		/******/ 					chain: [id],
    		/******/ 					id: id
    		/******/ 				};
    		/******/ 			});
    		/******/ 			while (queue.length > 0) {
    		/******/ 				var queueItem = queue.pop();
    		/******/ 				var moduleId = queueItem.id;
    		/******/ 				var chain = queueItem.chain;
    		/******/ 				module = installedModules[moduleId];
    		/******/ 				if (!module || module.hot._selfAccepted) continue;
    		/******/ 				if (module.hot._selfDeclined) {
    		/******/ 					return {
    		/******/ 						type: "self-declined",
    		/******/ 						chain: chain,
    		/******/ 						moduleId: moduleId
    		/******/ 					};
    		/******/ 				}
    		/******/ 				if (module.hot._main) {
    		/******/ 					return {
    		/******/ 						type: "unaccepted",
    		/******/ 						chain: chain,
    		/******/ 						moduleId: moduleId
    		/******/ 					};
    		/******/ 				}
    		/******/ 				for (var i = 0; i < module.parents.length; i++) {
    		/******/ 					var parentId = module.parents[i];
    		/******/ 					var parent = installedModules[parentId];
    		/******/ 					if (!parent) continue;
    		/******/ 					if (parent.hot._declinedDependencies[moduleId]) {
    		/******/ 						return {
    		/******/ 							type: "declined",
    		/******/ 							chain: chain.concat([parentId]),
    		/******/ 							moduleId: moduleId,
    		/******/ 							parentId: parentId
    		/******/ 						};
    		/******/ 					}
    		/******/ 					if (outdatedModules.indexOf(parentId) !== -1) continue;
    		/******/ 					if (parent.hot._acceptedDependencies[moduleId]) {
    		/******/ 						if (!outdatedDependencies[parentId])
    		/******/ 							outdatedDependencies[parentId] = [];
    		/******/ 						addAllToSet(outdatedDependencies[parentId], [moduleId]);
    		/******/ 						continue;
    		/******/ 					}
    		/******/ 					delete outdatedDependencies[parentId];
    		/******/ 					outdatedModules.push(parentId);
    		/******/ 					queue.push({
    		/******/ 						chain: chain.concat([parentId]),
    		/******/ 						id: parentId
    		/******/ 					});
    		/******/ 				}
    		/******/ 			}
    		/******/
    		/******/ 			return {
    		/******/ 				type: "accepted",
    		/******/ 				moduleId: updateModuleId,
    		/******/ 				outdatedModules: outdatedModules,
    		/******/ 				outdatedDependencies: outdatedDependencies
    		/******/ 			};
    		/******/ 		}
    		/******/
    		/******/ 		function addAllToSet(a, b) {
    		/******/ 			for (var i = 0; i < b.length; i++) {
    		/******/ 				var item = b[i];
    		/******/ 				if (a.indexOf(item) === -1) a.push(item);
    		/******/ 			}
    		/******/ 		}
    		/******/
    		/******/ 		// at begin all updates modules are outdated
    		/******/ 		// the "outdated" status can propagate to parents if they don't accept the children
    		/******/ 		var outdatedDependencies = {};
    		/******/ 		var outdatedModules = [];
    		/******/ 		var appliedUpdate = {};
    		/******/
    		/******/ 		var warnUnexpectedRequire = function warnUnexpectedRequire() {
    		/******/ 			console.warn(
    		/******/ 				"[HMR] unexpected require(" + result.moduleId + ") to disposed module"
    		/******/ 			);
    		/******/ 		};
    		/******/
    		/******/ 		for (var id in hotUpdate) {
    		/******/ 			if (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {
    		/******/ 				moduleId = toModuleId(id);
    		/******/ 				/** @type {TODO} */
    		/******/ 				var result;
    		/******/ 				if (hotUpdate[id]) {
    		/******/ 					result = getAffectedStuff(moduleId);
    		/******/ 				} else {
    		/******/ 					result = {
    		/******/ 						type: "disposed",
    		/******/ 						moduleId: id
    		/******/ 					};
    		/******/ 				}
    		/******/ 				/** @type {Error|false} */
    		/******/ 				var abortError = false;
    		/******/ 				var doApply = false;
    		/******/ 				var doDispose = false;
    		/******/ 				var chainInfo = "";
    		/******/ 				if (result.chain) {
    		/******/ 					chainInfo = "\nUpdate propagation: " + result.chain.join(" -> ");
    		/******/ 				}
    		/******/ 				switch (result.type) {
    		/******/ 					case "self-declined":
    		/******/ 						if (options.onDeclined) options.onDeclined(result);
    		/******/ 						if (!options.ignoreDeclined)
    		/******/ 							abortError = new Error(
    		/******/ 								"Aborted because of self decline: " +
    		/******/ 									result.moduleId +
    		/******/ 									chainInfo
    		/******/ 							);
    		/******/ 						break;
    		/******/ 					case "declined":
    		/******/ 						if (options.onDeclined) options.onDeclined(result);
    		/******/ 						if (!options.ignoreDeclined)
    		/******/ 							abortError = new Error(
    		/******/ 								"Aborted because of declined dependency: " +
    		/******/ 									result.moduleId +
    		/******/ 									" in " +
    		/******/ 									result.parentId +
    		/******/ 									chainInfo
    		/******/ 							);
    		/******/ 						break;
    		/******/ 					case "unaccepted":
    		/******/ 						if (options.onUnaccepted) options.onUnaccepted(result);
    		/******/ 						if (!options.ignoreUnaccepted)
    		/******/ 							abortError = new Error(
    		/******/ 								"Aborted because " + moduleId + " is not accepted" + chainInfo
    		/******/ 							);
    		/******/ 						break;
    		/******/ 					case "accepted":
    		/******/ 						if (options.onAccepted) options.onAccepted(result);
    		/******/ 						doApply = true;
    		/******/ 						break;
    		/******/ 					case "disposed":
    		/******/ 						if (options.onDisposed) options.onDisposed(result);
    		/******/ 						doDispose = true;
    		/******/ 						break;
    		/******/ 					default:
    		/******/ 						throw new Error("Unexception type " + result.type);
    		/******/ 				}
    		/******/ 				if (abortError) {
    		/******/ 					hotSetStatus("abort");
    		/******/ 					return Promise.reject(abortError);
    		/******/ 				}
    		/******/ 				if (doApply) {
    		/******/ 					appliedUpdate[moduleId] = hotUpdate[moduleId];
    		/******/ 					addAllToSet(outdatedModules, result.outdatedModules);
    		/******/ 					for (moduleId in result.outdatedDependencies) {
    		/******/ 						if (
    		/******/ 							Object.prototype.hasOwnProperty.call(
    		/******/ 								result.outdatedDependencies,
    		/******/ 								moduleId
    		/******/ 							)
    		/******/ 						) {
    		/******/ 							if (!outdatedDependencies[moduleId])
    		/******/ 								outdatedDependencies[moduleId] = [];
    		/******/ 							addAllToSet(
    		/******/ 								outdatedDependencies[moduleId],
    		/******/ 								result.outdatedDependencies[moduleId]
    		/******/ 							);
    		/******/ 						}
    		/******/ 					}
    		/******/ 				}
    		/******/ 				if (doDispose) {
    		/******/ 					addAllToSet(outdatedModules, [result.moduleId]);
    		/******/ 					appliedUpdate[moduleId] = warnUnexpectedRequire;
    		/******/ 				}
    		/******/ 			}
    		/******/ 		}
    		/******/
    		/******/ 		// Store self accepted outdated modules to require them later by the module system
    		/******/ 		var outdatedSelfAcceptedModules = [];
    		/******/ 		for (i = 0; i < outdatedModules.length; i++) {
    		/******/ 			moduleId = outdatedModules[i];
    		/******/ 			if (
    		/******/ 				installedModules[moduleId] &&
    		/******/ 				installedModules[moduleId].hot._selfAccepted &&
    		/******/ 				// removed self-accepted modules should not be required
    		/******/ 				appliedUpdate[moduleId] !== warnUnexpectedRequire
    		/******/ 			) {
    		/******/ 				outdatedSelfAcceptedModules.push({
    		/******/ 					module: moduleId,
    		/******/ 					errorHandler: installedModules[moduleId].hot._selfAccepted
    		/******/ 				});
    		/******/ 			}
    		/******/ 		}
    		/******/
    		/******/ 		// Now in "dispose" phase
    		/******/ 		hotSetStatus("dispose");
    		/******/ 		Object.keys(hotAvailableFilesMap).forEach(function(chunkId) {
    		/******/ 			if (hotAvailableFilesMap[chunkId] === false) {
    		/******/ 				hotDisposeChunk(chunkId);
    		/******/ 			}
    		/******/ 		});
    		/******/
    		/******/ 		var idx;
    		/******/ 		var queue = outdatedModules.slice();
    		/******/ 		while (queue.length > 0) {
    		/******/ 			moduleId = queue.pop();
    		/******/ 			module = installedModules[moduleId];
    		/******/ 			if (!module) continue;
    		/******/
    		/******/ 			var data = {};
    		/******/
    		/******/ 			// Call dispose handlers
    		/******/ 			var disposeHandlers = module.hot._disposeHandlers;
    		/******/ 			for (j = 0; j < disposeHandlers.length; j++) {
    		/******/ 				cb = disposeHandlers[j];
    		/******/ 				cb(data);
    		/******/ 			}
    		/******/ 			hotCurrentModuleData[moduleId] = data;
    		/******/
    		/******/ 			// disable module (this disables requires from this module)
    		/******/ 			module.hot.active = false;
    		/******/
    		/******/ 			// remove module from cache
    		/******/ 			delete installedModules[moduleId];
    		/******/
    		/******/ 			// when disposing there is no need to call dispose handler
    		/******/ 			delete outdatedDependencies[moduleId];
    		/******/
    		/******/ 			// remove "parents" references from all children
    		/******/ 			for (j = 0; j < module.children.length; j++) {
    		/******/ 				var child = installedModules[module.children[j]];
    		/******/ 				if (!child) continue;
    		/******/ 				idx = child.parents.indexOf(moduleId);
    		/******/ 				if (idx >= 0) {
    		/******/ 					child.parents.splice(idx, 1);
    		/******/ 				}
    		/******/ 			}
    		/******/ 		}
    		/******/
    		/******/ 		// remove outdated dependency from module children
    		/******/ 		var dependency;
    		/******/ 		var moduleOutdatedDependencies;
    		/******/ 		for (moduleId in outdatedDependencies) {
    		/******/ 			if (
    		/******/ 				Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)
    		/******/ 			) {
    		/******/ 				module = installedModules[moduleId];
    		/******/ 				if (module) {
    		/******/ 					moduleOutdatedDependencies = outdatedDependencies[moduleId];
    		/******/ 					for (j = 0; j < moduleOutdatedDependencies.length; j++) {
    		/******/ 						dependency = moduleOutdatedDependencies[j];
    		/******/ 						idx = module.children.indexOf(dependency);
    		/******/ 						if (idx >= 0) module.children.splice(idx, 1);
    		/******/ 					}
    		/******/ 				}
    		/******/ 			}
    		/******/ 		}
    		/******/
    		/******/ 		// Now in "apply" phase
    		/******/ 		hotSetStatus("apply");
    		/******/
    		/******/ 		hotCurrentHash = hotUpdateNewHash;
    		/******/
    		/******/ 		// insert new code
    		/******/ 		for (moduleId in appliedUpdate) {
    		/******/ 			if (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {
    		/******/ 				modules[moduleId] = appliedUpdate[moduleId];
    		/******/ 			}
    		/******/ 		}
    		/******/
    		/******/ 		// call accept handlers
    		/******/ 		var error = null;
    		/******/ 		for (moduleId in outdatedDependencies) {
    		/******/ 			if (
    		/******/ 				Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)
    		/******/ 			) {
    		/******/ 				module = installedModules[moduleId];
    		/******/ 				if (module) {
    		/******/ 					moduleOutdatedDependencies = outdatedDependencies[moduleId];
    		/******/ 					var callbacks = [];
    		/******/ 					for (i = 0; i < moduleOutdatedDependencies.length; i++) {
    		/******/ 						dependency = moduleOutdatedDependencies[i];
    		/******/ 						cb = module.hot._acceptedDependencies[dependency];
    		/******/ 						if (cb) {
    		/******/ 							if (callbacks.indexOf(cb) !== -1) continue;
    		/******/ 							callbacks.push(cb);
    		/******/ 						}
    		/******/ 					}
    		/******/ 					for (i = 0; i < callbacks.length; i++) {
    		/******/ 						cb = callbacks[i];
    		/******/ 						try {
    		/******/ 							cb(moduleOutdatedDependencies);
    		/******/ 						} catch (err) {
    		/******/ 							if (options.onErrored) {
    		/******/ 								options.onErrored({
    		/******/ 									type: "accept-errored",
    		/******/ 									moduleId: moduleId,
    		/******/ 									dependencyId: moduleOutdatedDependencies[i],
    		/******/ 									error: err
    		/******/ 								});
    		/******/ 							}
    		/******/ 							if (!options.ignoreErrored) {
    		/******/ 								if (!error) error = err;
    		/******/ 							}
    		/******/ 						}
    		/******/ 					}
    		/******/ 				}
    		/******/ 			}
    		/******/ 		}
    		/******/
    		/******/ 		// Load self accepted modules
    		/******/ 		for (i = 0; i < outdatedSelfAcceptedModules.length; i++) {
    		/******/ 			var item = outdatedSelfAcceptedModules[i];
    		/******/ 			moduleId = item.module;
    		/******/ 			hotCurrentParents = [moduleId];
    		/******/ 			try {
    		/******/ 				__webpack_require__(moduleId);
    		/******/ 			} catch (err) {
    		/******/ 				if (typeof item.errorHandler === "function") {
    		/******/ 					try {
    		/******/ 						item.errorHandler(err);
    		/******/ 					} catch (err2) {
    		/******/ 						if (options.onErrored) {
    		/******/ 							options.onErrored({
    		/******/ 								type: "self-accept-error-handler-errored",
    		/******/ 								moduleId: moduleId,
    		/******/ 								error: err2,
    		/******/ 								originalError: err
    		/******/ 							});
    		/******/ 						}
    		/******/ 						if (!options.ignoreErrored) {
    		/******/ 							if (!error) error = err2;
    		/******/ 						}
    		/******/ 						if (!error) error = err;
    		/******/ 					}
    		/******/ 				} else {
    		/******/ 					if (options.onErrored) {
    		/******/ 						options.onErrored({
    		/******/ 							type: "self-accept-errored",
    		/******/ 							moduleId: moduleId,
    		/******/ 							error: err
    		/******/ 						});
    		/******/ 					}
    		/******/ 					if (!options.ignoreErrored) {
    		/******/ 						if (!error) error = err;
    		/******/ 					}
    		/******/ 				}
    		/******/ 			}
    		/******/ 		}
    		/******/
    		/******/ 		// handle errors in accept handlers and self accepted module load
    		/******/ 		if (error) {
    		/******/ 			hotSetStatus("fail");
    		/******/ 			return Promise.reject(error);
    		/******/ 		}
    		/******/
    		/******/ 		hotSetStatus("idle");
    		/******/ 		return new Promise(function(resolve) {
    		/******/ 			resolve(outdatedModules);
    		/******/ 		});
    		/******/ 	}
    		/******/
    		/******/ 	// The module cache
    		/******/ 	var installedModules = {};
    		/******/
    		/******/ 	// The require function
    		/******/ 	function __webpack_require__(moduleId) {
    		/******/
    		/******/ 		// Check if module is in cache
    		/******/ 		if(installedModules[moduleId]) {
    		/******/ 			return installedModules[moduleId].exports;
    		/******/ 		}
    		/******/ 		// Create a new module (and put it into the cache)
    		/******/ 		var module = installedModules[moduleId] = {
    		/******/ 			i: moduleId,
    		/******/ 			l: false,
    		/******/ 			exports: {},
    		/******/ 			hot: hotCreateModule(moduleId),
    		/******/ 			parents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),
    		/******/ 			children: []
    		/******/ 		};
    		/******/
    		/******/ 		// Execute the module function
    		/******/ 		modules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));
    		/******/
    		/******/ 		// Flag the module as loaded
    		/******/ 		module.l = true;
    		/******/
    		/******/ 		// Return the exports of the module
    		/******/ 		return module.exports;
    		/******/ 	}
    		/******/
    		/******/
    		/******/ 	// expose the modules object (__webpack_modules__)
    		/******/ 	__webpack_require__.m = modules;
    		/******/
    		/******/ 	// expose the module cache
    		/******/ 	__webpack_require__.c = installedModules;
    		/******/
    		/******/ 	// define getter function for harmony exports
    		/******/ 	__webpack_require__.d = function(exports, name, getter) {
    		/******/ 		if(!__webpack_require__.o(exports, name)) {
    		/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
    		/******/ 		}
    		/******/ 	};
    		/******/
    		/******/ 	// define __esModule on exports
    		/******/ 	__webpack_require__.r = function(exports) {
    		/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
    		/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
    		/******/ 		}
    		/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
    		/******/ 	};
    		/******/
    		/******/ 	// create a fake namespace object
    		/******/ 	// mode & 1: value is a module id, require it
    		/******/ 	// mode & 2: merge all properties of value into the ns
    		/******/ 	// mode & 4: return value when already ns object
    		/******/ 	// mode & 8|1: behave like require
    		/******/ 	__webpack_require__.t = function(value, mode) {
    		/******/ 		if(mode & 1) value = __webpack_require__(value);
    		/******/ 		if(mode & 8) return value;
    		/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
    		/******/ 		var ns = Object.create(null);
    		/******/ 		__webpack_require__.r(ns);
    		/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
    		/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
    		/******/ 		return ns;
    		/******/ 	};
    		/******/
    		/******/ 	// getDefaultExport function for compatibility with non-harmony modules
    		/******/ 	__webpack_require__.n = function(module) {
    		/******/ 		var getter = module && module.__esModule ?
    		/******/ 			function getDefault() { return module['default']; } :
    		/******/ 			function getModuleExports() { return module; };
    		/******/ 		__webpack_require__.d(getter, 'a', getter);
    		/******/ 		return getter;
    		/******/ 	};
    		/******/
    		/******/ 	// Object.prototype.hasOwnProperty.call
    		/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
    		/******/
    		/******/ 	// __webpack_public_path__
    		/******/ 	__webpack_require__.p = "";
    		/******/
    		/******/ 	// __webpack_hash__
    		/******/ 	__webpack_require__.h = function() { return hotCurrentHash; };
    		/******/
    		/******/
    		/******/ 	// Load entry module and return exports
    		/******/ 	return hotCreateRequire("./index.js")(__webpack_require__.s = "./index.js");
    		/******/ })
    		/************************************************************************/
    		/******/ ({

    		/***/ "../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js":
    		/*!*******************************************************************!*\
    		  !*** ../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js ***!
    		  \*******************************************************************/
    		/*! no static exports found */
    		/***/ (function(module, exports) {

    		function _arrayWithoutHoles(arr) {
    		  if (Array.isArray(arr)) {
    		    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
    		      arr2[i] = arr[i];
    		    }

    		    return arr2;
    		  }
    		}

    		module.exports = _arrayWithoutHoles;

    		/***/ }),

    		/***/ "../node_modules/@babel/runtime/helpers/assertThisInitialized.js":
    		/*!***********************************************************************!*\
    		  !*** ../node_modules/@babel/runtime/helpers/assertThisInitialized.js ***!
    		  \***********************************************************************/
    		/*! no static exports found */
    		/***/ (function(module, exports) {

    		function _assertThisInitialized(self) {
    		  if (self === void 0) {
    		    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    		  }

    		  return self;
    		}

    		module.exports = _assertThisInitialized;

    		/***/ }),

    		/***/ "../node_modules/@babel/runtime/helpers/asyncToGenerator.js":
    		/*!******************************************************************!*\
    		  !*** ../node_modules/@babel/runtime/helpers/asyncToGenerator.js ***!
    		  \******************************************************************/
    		/*! no static exports found */
    		/***/ (function(module, exports) {

    		function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
    		  try {
    		    var info = gen[key](arg);
    		    var value = info.value;
    		  } catch (error) {
    		    reject(error);
    		    return;
    		  }

    		  if (info.done) {
    		    resolve(value);
    		  } else {
    		    Promise.resolve(value).then(_next, _throw);
    		  }
    		}

    		function _asyncToGenerator(fn) {
    		  return function () {
    		    var self = this,
    		        args = arguments;
    		    return new Promise(function (resolve, reject) {
    		      var gen = fn.apply(self, args);

    		      function _next(value) {
    		        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
    		      }

    		      function _throw(err) {
    		        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
    		      }

    		      _next(undefined);
    		    });
    		  };
    		}

    		module.exports = _asyncToGenerator;

    		/***/ }),

    		/***/ "../node_modules/@babel/runtime/helpers/classCallCheck.js":
    		/*!****************************************************************!*\
    		  !*** ../node_modules/@babel/runtime/helpers/classCallCheck.js ***!
    		  \****************************************************************/
    		/*! no static exports found */
    		/***/ (function(module, exports) {

    		function _classCallCheck(instance, Constructor) {
    		  if (!(instance instanceof Constructor)) {
    		    throw new TypeError("Cannot call a class as a function");
    		  }
    		}

    		module.exports = _classCallCheck;

    		/***/ }),

    		/***/ "../node_modules/@babel/runtime/helpers/createClass.js":
    		/*!*************************************************************!*\
    		  !*** ../node_modules/@babel/runtime/helpers/createClass.js ***!
    		  \*************************************************************/
    		/*! no static exports found */
    		/***/ (function(module, exports) {

    		function _defineProperties(target, props) {
    		  for (var i = 0; i < props.length; i++) {
    		    var descriptor = props[i];
    		    descriptor.enumerable = descriptor.enumerable || false;
    		    descriptor.configurable = true;
    		    if ("value" in descriptor) descriptor.writable = true;
    		    Object.defineProperty(target, descriptor.key, descriptor);
    		  }
    		}

    		function _createClass(Constructor, protoProps, staticProps) {
    		  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    		  if (staticProps) _defineProperties(Constructor, staticProps);
    		  return Constructor;
    		}

    		module.exports = _createClass;

    		/***/ }),

    		/***/ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js":
    		/*!****************************************************************!*\
    		  !*** ../node_modules/@babel/runtime/helpers/getPrototypeOf.js ***!
    		  \****************************************************************/
    		/*! no static exports found */
    		/***/ (function(module, exports) {

    		function _getPrototypeOf(o) {
    		  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    		    return o.__proto__ || Object.getPrototypeOf(o);
    		  };
    		  return _getPrototypeOf(o);
    		}

    		module.exports = _getPrototypeOf;

    		/***/ }),

    		/***/ "../node_modules/@babel/runtime/helpers/inherits.js":
    		/*!**********************************************************!*\
    		  !*** ../node_modules/@babel/runtime/helpers/inherits.js ***!
    		  \**********************************************************/
    		/*! no static exports found */
    		/***/ (function(module, exports, __webpack_require__) {

    		var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf */ "../node_modules/@babel/runtime/helpers/setPrototypeOf.js");

    		function _inherits(subClass, superClass) {
    		  if (typeof superClass !== "function" && superClass !== null) {
    		    throw new TypeError("Super expression must either be null or a function");
    		  }

    		  subClass.prototype = Object.create(superClass && superClass.prototype, {
    		    constructor: {
    		      value: subClass,
    		      writable: true,
    		      configurable: true
    		    }
    		  });
    		  if (superClass) setPrototypeOf(subClass, superClass);
    		}

    		module.exports = _inherits;

    		/***/ }),

    		/***/ "../node_modules/@babel/runtime/helpers/iterableToArray.js":
    		/*!*****************************************************************!*\
    		  !*** ../node_modules/@babel/runtime/helpers/iterableToArray.js ***!
    		  \*****************************************************************/
    		/*! no static exports found */
    		/***/ (function(module, exports) {

    		function _iterableToArray(iter) {
    		  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
    		}

    		module.exports = _iterableToArray;

    		/***/ }),

    		/***/ "../node_modules/@babel/runtime/helpers/nonIterableSpread.js":
    		/*!*******************************************************************!*\
    		  !*** ../node_modules/@babel/runtime/helpers/nonIterableSpread.js ***!
    		  \*******************************************************************/
    		/*! no static exports found */
    		/***/ (function(module, exports) {

    		function _nonIterableSpread() {
    		  throw new TypeError("Invalid attempt to spread non-iterable instance");
    		}

    		module.exports = _nonIterableSpread;

    		/***/ }),

    		/***/ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js":
    		/*!***************************************************************************!*\
    		  !*** ../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js ***!
    		  \***************************************************************************/
    		/*! no static exports found */
    		/***/ (function(module, exports, __webpack_require__) {

    		var _typeof = __webpack_require__(/*! ../helpers/typeof */ "../node_modules/@babel/runtime/helpers/typeof.js");

    		var assertThisInitialized = __webpack_require__(/*! ./assertThisInitialized */ "../node_modules/@babel/runtime/helpers/assertThisInitialized.js");

    		function _possibleConstructorReturn(self, call) {
    		  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    		    return call;
    		  }

    		  return assertThisInitialized(self);
    		}

    		module.exports = _possibleConstructorReturn;

    		/***/ }),

    		/***/ "../node_modules/@babel/runtime/helpers/setPrototypeOf.js":
    		/*!****************************************************************!*\
    		  !*** ../node_modules/@babel/runtime/helpers/setPrototypeOf.js ***!
    		  \****************************************************************/
    		/*! no static exports found */
    		/***/ (function(module, exports) {

    		function _setPrototypeOf(o, p) {
    		  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    		    o.__proto__ = p;
    		    return o;
    		  };

    		  return _setPrototypeOf(o, p);
    		}

    		module.exports = _setPrototypeOf;

    		/***/ }),

    		/***/ "../node_modules/@babel/runtime/helpers/toConsumableArray.js":
    		/*!*******************************************************************!*\
    		  !*** ../node_modules/@babel/runtime/helpers/toConsumableArray.js ***!
    		  \*******************************************************************/
    		/*! no static exports found */
    		/***/ (function(module, exports, __webpack_require__) {

    		var arrayWithoutHoles = __webpack_require__(/*! ./arrayWithoutHoles */ "../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js");

    		var iterableToArray = __webpack_require__(/*! ./iterableToArray */ "../node_modules/@babel/runtime/helpers/iterableToArray.js");

    		var nonIterableSpread = __webpack_require__(/*! ./nonIterableSpread */ "../node_modules/@babel/runtime/helpers/nonIterableSpread.js");

    		function _toConsumableArray(arr) {
    		  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();
    		}

    		module.exports = _toConsumableArray;

    		/***/ }),

    		/***/ "../node_modules/@babel/runtime/helpers/typeof.js":
    		/*!********************************************************!*\
    		  !*** ../node_modules/@babel/runtime/helpers/typeof.js ***!
    		  \********************************************************/
    		/*! no static exports found */
    		/***/ (function(module, exports) {

    		function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

    		function _typeof(obj) {
    		  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    		    module.exports = _typeof = function _typeof(obj) {
    		      return _typeof2(obj);
    		    };
    		  } else {
    		    module.exports = _typeof = function _typeof(obj) {
    		      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    		    };
    		  }

    		  return _typeof(obj);
    		}

    		module.exports = _typeof;

    		/***/ }),

    		/***/ "../node_modules/@babel/runtime/regenerator/index.js":
    		/*!***********************************************************!*\
    		  !*** ../node_modules/@babel/runtime/regenerator/index.js ***!
    		  \***********************************************************/
    		/*! no static exports found */
    		/***/ (function(module, exports, __webpack_require__) {

    		module.exports = __webpack_require__(/*! regenerator-runtime */ "../node_modules/regenerator-runtime/runtime-module.js");


    		/***/ }),

    		/***/ "../node_modules/ms/index.js":
    		/*!***********************************!*\
    		  !*** ../node_modules/ms/index.js ***!
    		  \***********************************/
    		/*! no static exports found */
    		/***/ (function(module, exports) {

    		/**
    		 * Helpers.
    		 */

    		var s = 1000;
    		var m = s * 60;
    		var h = m * 60;
    		var d = h * 24;
    		var w = d * 7;
    		var y = d * 365.25;

    		/**
    		 * Parse or format the given `val`.
    		 *
    		 * Options:
    		 *
    		 *  - `long` verbose formatting [false]
    		 *
    		 * @param {String|Number} val
    		 * @param {Object} [options]
    		 * @throws {Error} throw an error if val is not a non-empty string or a number
    		 * @return {String|Number}
    		 * @api public
    		 */

    		module.exports = function(val, options) {
    		  options = options || {};
    		  var type = typeof val;
    		  if (type === 'string' && val.length > 0) {
    		    return parse(val);
    		  } else if (type === 'number' && isNaN(val) === false) {
    		    return options.long ? fmtLong(val) : fmtShort(val);
    		  }
    		  throw new Error(
    		    'val is not a non-empty string or a valid number. val=' +
    		      JSON.stringify(val)
    		  );
    		};

    		/**
    		 * Parse the given `str` and return milliseconds.
    		 *
    		 * @param {String} str
    		 * @return {Number}
    		 * @api private
    		 */

    		function parse(str) {
    		  str = String(str);
    		  if (str.length > 100) {
    		    return;
    		  }
    		  var match = /^((?:\d+)?\-?\d?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(
    		    str
    		  );
    		  if (!match) {
    		    return;
    		  }
    		  var n = parseFloat(match[1]);
    		  var type = (match[2] || 'ms').toLowerCase();
    		  switch (type) {
    		    case 'years':
    		    case 'year':
    		    case 'yrs':
    		    case 'yr':
    		    case 'y':
    		      return n * y;
    		    case 'weeks':
    		    case 'week':
    		    case 'w':
    		      return n * w;
    		    case 'days':
    		    case 'day':
    		    case 'd':
    		      return n * d;
    		    case 'hours':
    		    case 'hour':
    		    case 'hrs':
    		    case 'hr':
    		    case 'h':
    		      return n * h;
    		    case 'minutes':
    		    case 'minute':
    		    case 'mins':
    		    case 'min':
    		    case 'm':
    		      return n * m;
    		    case 'seconds':
    		    case 'second':
    		    case 'secs':
    		    case 'sec':
    		    case 's':
    		      return n * s;
    		    case 'milliseconds':
    		    case 'millisecond':
    		    case 'msecs':
    		    case 'msec':
    		    case 'ms':
    		      return n;
    		    default:
    		      return undefined;
    		  }
    		}

    		/**
    		 * Short format for `ms`.
    		 *
    		 * @param {Number} ms
    		 * @return {String}
    		 * @api private
    		 */

    		function fmtShort(ms) {
    		  var msAbs = Math.abs(ms);
    		  if (msAbs >= d) {
    		    return Math.round(ms / d) + 'd';
    		  }
    		  if (msAbs >= h) {
    		    return Math.round(ms / h) + 'h';
    		  }
    		  if (msAbs >= m) {
    		    return Math.round(ms / m) + 'm';
    		  }
    		  if (msAbs >= s) {
    		    return Math.round(ms / s) + 's';
    		  }
    		  return ms + 'ms';
    		}

    		/**
    		 * Long format for `ms`.
    		 *
    		 * @param {Number} ms
    		 * @return {String}
    		 * @api private
    		 */

    		function fmtLong(ms) {
    		  var msAbs = Math.abs(ms);
    		  if (msAbs >= d) {
    		    return plural(ms, msAbs, d, 'day');
    		  }
    		  if (msAbs >= h) {
    		    return plural(ms, msAbs, h, 'hour');
    		  }
    		  if (msAbs >= m) {
    		    return plural(ms, msAbs, m, 'minute');
    		  }
    		  if (msAbs >= s) {
    		    return plural(ms, msAbs, s, 'second');
    		  }
    		  return ms + ' ms';
    		}

    		/**
    		 * Pluralization helper.
    		 */

    		function plural(ms, msAbs, n, name) {
    		  var isPlural = msAbs >= n * 1.5;
    		  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');
    		}


    		/***/ }),

    		/***/ "../node_modules/process/browser.js":
    		/*!******************************************!*\
    		  !*** ../node_modules/process/browser.js ***!
    		  \******************************************/
    		/*! no static exports found */
    		/***/ (function(module, exports) {

    		// shim for using process in browser
    		var process = module.exports = {};

    		// cached from whatever global is present so that test runners that stub it
    		// don't break things.  But we need to wrap it in a try catch in case it is
    		// wrapped in strict mode code which doesn't define any globals.  It's inside a
    		// function because try/catches deoptimize in certain engines.

    		var cachedSetTimeout;
    		var cachedClearTimeout;

    		function defaultSetTimout() {
    		    throw new Error('setTimeout has not been defined');
    		}
    		function defaultClearTimeout () {
    		    throw new Error('clearTimeout has not been defined');
    		}
    		(function () {
    		    try {
    		        if (typeof setTimeout === 'function') {
    		            cachedSetTimeout = setTimeout;
    		        } else {
    		            cachedSetTimeout = defaultSetTimout;
    		        }
    		    } catch (e) {
    		        cachedSetTimeout = defaultSetTimout;
    		    }
    		    try {
    		        if (typeof clearTimeout === 'function') {
    		            cachedClearTimeout = clearTimeout;
    		        } else {
    		            cachedClearTimeout = defaultClearTimeout;
    		        }
    		    } catch (e) {
    		        cachedClearTimeout = defaultClearTimeout;
    		    }
    		} ());
    		function runTimeout(fun) {
    		    if (cachedSetTimeout === setTimeout) {
    		        //normal enviroments in sane situations
    		        return setTimeout(fun, 0);
    		    }
    		    // if setTimeout wasn't available but was latter defined
    		    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
    		        cachedSetTimeout = setTimeout;
    		        return setTimeout(fun, 0);
    		    }
    		    try {
    		        // when when somebody has screwed with setTimeout but no I.E. maddness
    		        return cachedSetTimeout(fun, 0);
    		    } catch(e){
    		        try {
    		            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
    		            return cachedSetTimeout.call(null, fun, 0);
    		        } catch(e){
    		            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
    		            return cachedSetTimeout.call(this, fun, 0);
    		        }
    		    }


    		}
    		function runClearTimeout(marker) {
    		    if (cachedClearTimeout === clearTimeout) {
    		        //normal enviroments in sane situations
    		        return clearTimeout(marker);
    		    }
    		    // if clearTimeout wasn't available but was latter defined
    		    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
    		        cachedClearTimeout = clearTimeout;
    		        return clearTimeout(marker);
    		    }
    		    try {
    		        // when when somebody has screwed with setTimeout but no I.E. maddness
    		        return cachedClearTimeout(marker);
    		    } catch (e){
    		        try {
    		            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
    		            return cachedClearTimeout.call(null, marker);
    		        } catch (e){
    		            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
    		            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
    		            return cachedClearTimeout.call(this, marker);
    		        }
    		    }



    		}
    		var queue = [];
    		var draining = false;
    		var currentQueue;
    		var queueIndex = -1;

    		function cleanUpNextTick() {
    		    if (!draining || !currentQueue) {
    		        return;
    		    }
    		    draining = false;
    		    if (currentQueue.length) {
    		        queue = currentQueue.concat(queue);
    		    } else {
    		        queueIndex = -1;
    		    }
    		    if (queue.length) {
    		        drainQueue();
    		    }
    		}

    		function drainQueue() {
    		    if (draining) {
    		        return;
    		    }
    		    var timeout = runTimeout(cleanUpNextTick);
    		    draining = true;

    		    var len = queue.length;
    		    while(len) {
    		        currentQueue = queue;
    		        queue = [];
    		        while (++queueIndex < len) {
    		            if (currentQueue) {
    		                currentQueue[queueIndex].run();
    		            }
    		        }
    		        queueIndex = -1;
    		        len = queue.length;
    		    }
    		    currentQueue = null;
    		    draining = false;
    		    runClearTimeout(timeout);
    		}

    		process.nextTick = function (fun) {
    		    var args = new Array(arguments.length - 1);
    		    if (arguments.length > 1) {
    		        for (var i = 1; i < arguments.length; i++) {
    		            args[i - 1] = arguments[i];
    		        }
    		    }
    		    queue.push(new Item(fun, args));
    		    if (queue.length === 1 && !draining) {
    		        runTimeout(drainQueue);
    		    }
    		};

    		// v8 likes predictible objects
    		function Item(fun, array) {
    		    this.fun = fun;
    		    this.array = array;
    		}
    		Item.prototype.run = function () {
    		    this.fun.apply(null, this.array);
    		};
    		process.title = 'browser';
    		process.browser = true;
    		process.env = {};
    		process.argv = [];
    		process.version = ''; // empty string to avoid regexp issues
    		process.versions = {};

    		function noop() {}

    		process.on = noop;
    		process.addListener = noop;
    		process.once = noop;
    		process.off = noop;
    		process.removeListener = noop;
    		process.removeAllListeners = noop;
    		process.emit = noop;
    		process.prependListener = noop;
    		process.prependOnceListener = noop;

    		process.listeners = function (name) { return [] };

    		process.binding = function (name) {
    		    throw new Error('process.binding is not supported');
    		};

    		process.cwd = function () { return '/' };
    		process.chdir = function (dir) {
    		    throw new Error('process.chdir is not supported');
    		};
    		process.umask = function() { return 0; };


    		/***/ }),

    		/***/ "../node_modules/regenerator-runtime/runtime-module.js":
    		/*!*************************************************************!*\
    		  !*** ../node_modules/regenerator-runtime/runtime-module.js ***!
    		  \*************************************************************/
    		/*! no static exports found */
    		/***/ (function(module, exports, __webpack_require__) {

    		/**
    		 * Copyright (c) 2014-present, Facebook, Inc.
    		 *
    		 * This source code is licensed under the MIT license found in the
    		 * LICENSE file in the root directory of this source tree.
    		 */

    		// This method of obtaining a reference to the global object needs to be
    		// kept identical to the way it is obtained in runtime.js
    		var g = (function() {
    		  return this || (typeof self === "object" && self);
    		})() || Function("return this")();

    		// Use `getOwnPropertyNames` because not all browsers support calling
    		// `hasOwnProperty` on the global `self` object in a worker. See #183.
    		var hadRuntime = g.regeneratorRuntime &&
    		  Object.getOwnPropertyNames(g).indexOf("regeneratorRuntime") >= 0;

    		// Save the old regeneratorRuntime in case it needs to be restored later.
    		var oldRuntime = hadRuntime && g.regeneratorRuntime;

    		// Force reevalutation of runtime.js.
    		g.regeneratorRuntime = undefined;

    		module.exports = __webpack_require__(/*! ./runtime */ "../node_modules/regenerator-runtime/runtime.js");

    		if (hadRuntime) {
    		  // Restore the original runtime.
    		  g.regeneratorRuntime = oldRuntime;
    		} else {
    		  // Remove the global property added by runtime.js.
    		  try {
    		    delete g.regeneratorRuntime;
    		  } catch(e) {
    		    g.regeneratorRuntime = undefined;
    		  }
    		}


    		/***/ }),

    		/***/ "../node_modules/regenerator-runtime/runtime.js":
    		/*!******************************************************!*\
    		  !*** ../node_modules/regenerator-runtime/runtime.js ***!
    		  \******************************************************/
    		/*! no static exports found */
    		/***/ (function(module, exports) {

    		/**
    		 * Copyright (c) 2014-present, Facebook, Inc.
    		 *
    		 * This source code is licensed under the MIT license found in the
    		 * LICENSE file in the root directory of this source tree.
    		 */

    		!(function(global) {

    		  var Op = Object.prototype;
    		  var hasOwn = Op.hasOwnProperty;
    		  var undefined$1; // More compressible than void 0.
    		  var $Symbol = typeof Symbol === "function" ? Symbol : {};
    		  var iteratorSymbol = $Symbol.iterator || "@@iterator";
    		  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
    		  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

    		  var inModule = typeof module === "object";
    		  var runtime = global.regeneratorRuntime;
    		  if (runtime) {
    		    if (inModule) {
    		      // If regeneratorRuntime is defined globally and we're in a module,
    		      // make the exports object identical to regeneratorRuntime.
    		      module.exports = runtime;
    		    }
    		    // Don't bother evaluating the rest of this file if the runtime was
    		    // already defined globally.
    		    return;
    		  }

    		  // Define the runtime globally (as expected by generated code) as either
    		  // module.exports (if we're in a module) or a new, empty object.
    		  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

    		  function wrap(innerFn, outerFn, self, tryLocsList) {
    		    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    		    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    		    var generator = Object.create(protoGenerator.prototype);
    		    var context = new Context(tryLocsList || []);

    		    // The ._invoke method unifies the implementations of the .next,
    		    // .throw, and .return methods.
    		    generator._invoke = makeInvokeMethod(innerFn, self, context);

    		    return generator;
    		  }
    		  runtime.wrap = wrap;

    		  // Try/catch helper to minimize deoptimizations. Returns a completion
    		  // record like context.tryEntries[i].completion. This interface could
    		  // have been (and was previously) designed to take a closure to be
    		  // invoked without arguments, but in all the cases we care about we
    		  // already have an existing method we want to call, so there's no need
    		  // to create a new function object. We can even get away with assuming
    		  // the method takes exactly one argument, since that happens to be true
    		  // in every case, so we don't have to touch the arguments object. The
    		  // only additional allocation required is the completion record, which
    		  // has a stable shape and so hopefully should be cheap to allocate.
    		  function tryCatch(fn, obj, arg) {
    		    try {
    		      return { type: "normal", arg: fn.call(obj, arg) };
    		    } catch (err) {
    		      return { type: "throw", arg: err };
    		    }
    		  }

    		  var GenStateSuspendedStart = "suspendedStart";
    		  var GenStateSuspendedYield = "suspendedYield";
    		  var GenStateExecuting = "executing";
    		  var GenStateCompleted = "completed";

    		  // Returning this object from the innerFn has the same effect as
    		  // breaking out of the dispatch switch statement.
    		  var ContinueSentinel = {};

    		  // Dummy constructor functions that we use as the .constructor and
    		  // .constructor.prototype properties for functions that return Generator
    		  // objects. For full spec compliance, you may wish to configure your
    		  // minifier not to mangle the names of these two functions.
    		  function Generator() {}
    		  function GeneratorFunction() {}
    		  function GeneratorFunctionPrototype() {}

    		  // This is a polyfill for %IteratorPrototype% for environments that
    		  // don't natively support it.
    		  var IteratorPrototype = {};
    		  IteratorPrototype[iteratorSymbol] = function () {
    		    return this;
    		  };

    		  var getProto = Object.getPrototypeOf;
    		  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
    		  if (NativeIteratorPrototype &&
    		      NativeIteratorPrototype !== Op &&
    		      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    		    // This environment has a native %IteratorPrototype%; use it instead
    		    // of the polyfill.
    		    IteratorPrototype = NativeIteratorPrototype;
    		  }

    		  var Gp = GeneratorFunctionPrototype.prototype =
    		    Generator.prototype = Object.create(IteratorPrototype);
    		  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
    		  GeneratorFunctionPrototype.constructor = GeneratorFunction;
    		  GeneratorFunctionPrototype[toStringTagSymbol] =
    		    GeneratorFunction.displayName = "GeneratorFunction";

    		  // Helper for defining the .next, .throw, and .return methods of the
    		  // Iterator interface in terms of a single ._invoke method.
    		  function defineIteratorMethods(prototype) {
    		    ["next", "throw", "return"].forEach(function(method) {
    		      prototype[method] = function(arg) {
    		        return this._invoke(method, arg);
    		      };
    		    });
    		  }

    		  runtime.isGeneratorFunction = function(genFun) {
    		    var ctor = typeof genFun === "function" && genFun.constructor;
    		    return ctor
    		      ? ctor === GeneratorFunction ||
    		        // For the native GeneratorFunction constructor, the best we can
    		        // do is to check its .name property.
    		        (ctor.displayName || ctor.name) === "GeneratorFunction"
    		      : false;
    		  };

    		  runtime.mark = function(genFun) {
    		    if (Object.setPrototypeOf) {
    		      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    		    } else {
    		      genFun.__proto__ = GeneratorFunctionPrototype;
    		      if (!(toStringTagSymbol in genFun)) {
    		        genFun[toStringTagSymbol] = "GeneratorFunction";
    		      }
    		    }
    		    genFun.prototype = Object.create(Gp);
    		    return genFun;
    		  };

    		  // Within the body of any async function, `await x` is transformed to
    		  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
    		  // `hasOwn.call(value, "__await")` to determine if the yielded value is
    		  // meant to be awaited.
    		  runtime.awrap = function(arg) {
    		    return { __await: arg };
    		  };

    		  function AsyncIterator(generator) {
    		    function invoke(method, arg, resolve, reject) {
    		      var record = tryCatch(generator[method], generator, arg);
    		      if (record.type === "throw") {
    		        reject(record.arg);
    		      } else {
    		        var result = record.arg;
    		        var value = result.value;
    		        if (value &&
    		            typeof value === "object" &&
    		            hasOwn.call(value, "__await")) {
    		          return Promise.resolve(value.__await).then(function(value) {
    		            invoke("next", value, resolve, reject);
    		          }, function(err) {
    		            invoke("throw", err, resolve, reject);
    		          });
    		        }

    		        return Promise.resolve(value).then(function(unwrapped) {
    		          // When a yielded Promise is resolved, its final value becomes
    		          // the .value of the Promise<{value,done}> result for the
    		          // current iteration.
    		          result.value = unwrapped;
    		          resolve(result);
    		        }, function(error) {
    		          // If a rejected Promise was yielded, throw the rejection back
    		          // into the async generator function so it can be handled there.
    		          return invoke("throw", error, resolve, reject);
    		        });
    		      }
    		    }

    		    var previousPromise;

    		    function enqueue(method, arg) {
    		      function callInvokeWithMethodAndArg() {
    		        return new Promise(function(resolve, reject) {
    		          invoke(method, arg, resolve, reject);
    		        });
    		      }

    		      return previousPromise =
    		        // If enqueue has been called before, then we want to wait until
    		        // all previous Promises have been resolved before calling invoke,
    		        // so that results are always delivered in the correct order. If
    		        // enqueue has not been called before, then it is important to
    		        // call invoke immediately, without waiting on a callback to fire,
    		        // so that the async generator function has the opportunity to do
    		        // any necessary setup in a predictable way. This predictability
    		        // is why the Promise constructor synchronously invokes its
    		        // executor callback, and why async functions synchronously
    		        // execute code before the first await. Since we implement simple
    		        // async functions in terms of async generators, it is especially
    		        // important to get this right, even though it requires care.
    		        previousPromise ? previousPromise.then(
    		          callInvokeWithMethodAndArg,
    		          // Avoid propagating failures to Promises returned by later
    		          // invocations of the iterator.
    		          callInvokeWithMethodAndArg
    		        ) : callInvokeWithMethodAndArg();
    		    }

    		    // Define the unified helper method that is used to implement .next,
    		    // .throw, and .return (see defineIteratorMethods).
    		    this._invoke = enqueue;
    		  }

    		  defineIteratorMethods(AsyncIterator.prototype);
    		  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    		    return this;
    		  };
    		  runtime.AsyncIterator = AsyncIterator;

    		  // Note that simple async functions are implemented on top of
    		  // AsyncIterator objects; they just return a Promise for the value of
    		  // the final result produced by the iterator.
    		  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
    		    var iter = new AsyncIterator(
    		      wrap(innerFn, outerFn, self, tryLocsList)
    		    );

    		    return runtime.isGeneratorFunction(outerFn)
    		      ? iter // If outerFn is a generator, return the full iterator.
    		      : iter.next().then(function(result) {
    		          return result.done ? result.value : iter.next();
    		        });
    		  };

    		  function makeInvokeMethod(innerFn, self, context) {
    		    var state = GenStateSuspendedStart;

    		    return function invoke(method, arg) {
    		      if (state === GenStateExecuting) {
    		        throw new Error("Generator is already running");
    		      }

    		      if (state === GenStateCompleted) {
    		        if (method === "throw") {
    		          throw arg;
    		        }

    		        // Be forgiving, per 25.3.3.3.3 of the spec:
    		        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
    		        return doneResult();
    		      }

    		      context.method = method;
    		      context.arg = arg;

    		      while (true) {
    		        var delegate = context.delegate;
    		        if (delegate) {
    		          var delegateResult = maybeInvokeDelegate(delegate, context);
    		          if (delegateResult) {
    		            if (delegateResult === ContinueSentinel) continue;
    		            return delegateResult;
    		          }
    		        }

    		        if (context.method === "next") {
    		          // Setting context._sent for legacy support of Babel's
    		          // function.sent implementation.
    		          context.sent = context._sent = context.arg;

    		        } else if (context.method === "throw") {
    		          if (state === GenStateSuspendedStart) {
    		            state = GenStateCompleted;
    		            throw context.arg;
    		          }

    		          context.dispatchException(context.arg);

    		        } else if (context.method === "return") {
    		          context.abrupt("return", context.arg);
    		        }

    		        state = GenStateExecuting;

    		        var record = tryCatch(innerFn, self, context);
    		        if (record.type === "normal") {
    		          // If an exception is thrown from innerFn, we leave state ===
    		          // GenStateExecuting and loop back for another invocation.
    		          state = context.done
    		            ? GenStateCompleted
    		            : GenStateSuspendedYield;

    		          if (record.arg === ContinueSentinel) {
    		            continue;
    		          }

    		          return {
    		            value: record.arg,
    		            done: context.done
    		          };

    		        } else if (record.type === "throw") {
    		          state = GenStateCompleted;
    		          // Dispatch the exception by looping back around to the
    		          // context.dispatchException(context.arg) call above.
    		          context.method = "throw";
    		          context.arg = record.arg;
    		        }
    		      }
    		    };
    		  }

    		  // Call delegate.iterator[context.method](context.arg) and handle the
    		  // result, either by returning a { value, done } result from the
    		  // delegate iterator, or by modifying context.method and context.arg,
    		  // setting context.delegate to null, and returning the ContinueSentinel.
    		  function maybeInvokeDelegate(delegate, context) {
    		    var method = delegate.iterator[context.method];
    		    if (method === undefined$1) {
    		      // A .throw or .return when the delegate iterator has no .throw
    		      // method always terminates the yield* loop.
    		      context.delegate = null;

    		      if (context.method === "throw") {
    		        if (delegate.iterator.return) {
    		          // If the delegate iterator has a return method, give it a
    		          // chance to clean up.
    		          context.method = "return";
    		          context.arg = undefined$1;
    		          maybeInvokeDelegate(delegate, context);

    		          if (context.method === "throw") {
    		            // If maybeInvokeDelegate(context) changed context.method from
    		            // "return" to "throw", let that override the TypeError below.
    		            return ContinueSentinel;
    		          }
    		        }

    		        context.method = "throw";
    		        context.arg = new TypeError(
    		          "The iterator does not provide a 'throw' method");
    		      }

    		      return ContinueSentinel;
    		    }

    		    var record = tryCatch(method, delegate.iterator, context.arg);

    		    if (record.type === "throw") {
    		      context.method = "throw";
    		      context.arg = record.arg;
    		      context.delegate = null;
    		      return ContinueSentinel;
    		    }

    		    var info = record.arg;

    		    if (! info) {
    		      context.method = "throw";
    		      context.arg = new TypeError("iterator result is not an object");
    		      context.delegate = null;
    		      return ContinueSentinel;
    		    }

    		    if (info.done) {
    		      // Assign the result of the finished delegate to the temporary
    		      // variable specified by delegate.resultName (see delegateYield).
    		      context[delegate.resultName] = info.value;

    		      // Resume execution at the desired location (see delegateYield).
    		      context.next = delegate.nextLoc;

    		      // If context.method was "throw" but the delegate handled the
    		      // exception, let the outer generator proceed normally. If
    		      // context.method was "next", forget context.arg since it has been
    		      // "consumed" by the delegate iterator. If context.method was
    		      // "return", allow the original .return call to continue in the
    		      // outer generator.
    		      if (context.method !== "return") {
    		        context.method = "next";
    		        context.arg = undefined$1;
    		      }

    		    } else {
    		      // Re-yield the result returned by the delegate method.
    		      return info;
    		    }

    		    // The delegate iterator is finished, so forget it and continue with
    		    // the outer generator.
    		    context.delegate = null;
    		    return ContinueSentinel;
    		  }

    		  // Define Generator.prototype.{next,throw,return} in terms of the
    		  // unified ._invoke helper method.
    		  defineIteratorMethods(Gp);

    		  Gp[toStringTagSymbol] = "Generator";

    		  // A Generator should always return itself as the iterator object when the
    		  // @@iterator function is called on it. Some browsers' implementations of the
    		  // iterator prototype chain incorrectly implement this, causing the Generator
    		  // object to not be returned from this call. This ensures that doesn't happen.
    		  // See https://github.com/facebook/regenerator/issues/274 for more details.
    		  Gp[iteratorSymbol] = function() {
    		    return this;
    		  };

    		  Gp.toString = function() {
    		    return "[object Generator]";
    		  };

    		  function pushTryEntry(locs) {
    		    var entry = { tryLoc: locs[0] };

    		    if (1 in locs) {
    		      entry.catchLoc = locs[1];
    		    }

    		    if (2 in locs) {
    		      entry.finallyLoc = locs[2];
    		      entry.afterLoc = locs[3];
    		    }

    		    this.tryEntries.push(entry);
    		  }

    		  function resetTryEntry(entry) {
    		    var record = entry.completion || {};
    		    record.type = "normal";
    		    delete record.arg;
    		    entry.completion = record;
    		  }

    		  function Context(tryLocsList) {
    		    // The root entry object (effectively a try statement without a catch
    		    // or a finally block) gives us a place to store values thrown from
    		    // locations where there is no enclosing try statement.
    		    this.tryEntries = [{ tryLoc: "root" }];
    		    tryLocsList.forEach(pushTryEntry, this);
    		    this.reset(true);
    		  }

    		  runtime.keys = function(object) {
    		    var keys = [];
    		    for (var key in object) {
    		      keys.push(key);
    		    }
    		    keys.reverse();

    		    // Rather than returning an object with a next method, we keep
    		    // things simple and return the next function itself.
    		    return function next() {
    		      while (keys.length) {
    		        var key = keys.pop();
    		        if (key in object) {
    		          next.value = key;
    		          next.done = false;
    		          return next;
    		        }
    		      }

    		      // To avoid creating an additional object, we just hang the .value
    		      // and .done properties off the next function object itself. This
    		      // also ensures that the minifier will not anonymize the function.
    		      next.done = true;
    		      return next;
    		    };
    		  };

    		  function values(iterable) {
    		    if (iterable) {
    		      var iteratorMethod = iterable[iteratorSymbol];
    		      if (iteratorMethod) {
    		        return iteratorMethod.call(iterable);
    		      }

    		      if (typeof iterable.next === "function") {
    		        return iterable;
    		      }

    		      if (!isNaN(iterable.length)) {
    		        var i = -1, next = function next() {
    		          while (++i < iterable.length) {
    		            if (hasOwn.call(iterable, i)) {
    		              next.value = iterable[i];
    		              next.done = false;
    		              return next;
    		            }
    		          }

    		          next.value = undefined$1;
    		          next.done = true;

    		          return next;
    		        };

    		        return next.next = next;
    		      }
    		    }

    		    // Return an iterator with no values.
    		    return { next: doneResult };
    		  }
    		  runtime.values = values;

    		  function doneResult() {
    		    return { value: undefined$1, done: true };
    		  }

    		  Context.prototype = {
    		    constructor: Context,

    		    reset: function(skipTempReset) {
    		      this.prev = 0;
    		      this.next = 0;
    		      // Resetting context._sent for legacy support of Babel's
    		      // function.sent implementation.
    		      this.sent = this._sent = undefined$1;
    		      this.done = false;
    		      this.delegate = null;

    		      this.method = "next";
    		      this.arg = undefined$1;

    		      this.tryEntries.forEach(resetTryEntry);

    		      if (!skipTempReset) {
    		        for (var name in this) {
    		          // Not sure about the optimal order of these conditions:
    		          if (name.charAt(0) === "t" &&
    		              hasOwn.call(this, name) &&
    		              !isNaN(+name.slice(1))) {
    		            this[name] = undefined$1;
    		          }
    		        }
    		      }
    		    },

    		    stop: function() {
    		      this.done = true;

    		      var rootEntry = this.tryEntries[0];
    		      var rootRecord = rootEntry.completion;
    		      if (rootRecord.type === "throw") {
    		        throw rootRecord.arg;
    		      }

    		      return this.rval;
    		    },

    		    dispatchException: function(exception) {
    		      if (this.done) {
    		        throw exception;
    		      }

    		      var context = this;
    		      function handle(loc, caught) {
    		        record.type = "throw";
    		        record.arg = exception;
    		        context.next = loc;

    		        if (caught) {
    		          // If the dispatched exception was caught by a catch block,
    		          // then let that catch block handle the exception normally.
    		          context.method = "next";
    		          context.arg = undefined$1;
    		        }

    		        return !! caught;
    		      }

    		      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
    		        var entry = this.tryEntries[i];
    		        var record = entry.completion;

    		        if (entry.tryLoc === "root") {
    		          // Exception thrown outside of any try block that could handle
    		          // it, so set the completion value of the entire function to
    		          // throw the exception.
    		          return handle("end");
    		        }

    		        if (entry.tryLoc <= this.prev) {
    		          var hasCatch = hasOwn.call(entry, "catchLoc");
    		          var hasFinally = hasOwn.call(entry, "finallyLoc");

    		          if (hasCatch && hasFinally) {
    		            if (this.prev < entry.catchLoc) {
    		              return handle(entry.catchLoc, true);
    		            } else if (this.prev < entry.finallyLoc) {
    		              return handle(entry.finallyLoc);
    		            }

    		          } else if (hasCatch) {
    		            if (this.prev < entry.catchLoc) {
    		              return handle(entry.catchLoc, true);
    		            }

    		          } else if (hasFinally) {
    		            if (this.prev < entry.finallyLoc) {
    		              return handle(entry.finallyLoc);
    		            }

    		          } else {
    		            throw new Error("try statement without catch or finally");
    		          }
    		        }
    		      }
    		    },

    		    abrupt: function(type, arg) {
    		      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
    		        var entry = this.tryEntries[i];
    		        if (entry.tryLoc <= this.prev &&
    		            hasOwn.call(entry, "finallyLoc") &&
    		            this.prev < entry.finallyLoc) {
    		          var finallyEntry = entry;
    		          break;
    		        }
    		      }

    		      if (finallyEntry &&
    		          (type === "break" ||
    		           type === "continue") &&
    		          finallyEntry.tryLoc <= arg &&
    		          arg <= finallyEntry.finallyLoc) {
    		        // Ignore the finally entry if control is not jumping to a
    		        // location outside the try/catch block.
    		        finallyEntry = null;
    		      }

    		      var record = finallyEntry ? finallyEntry.completion : {};
    		      record.type = type;
    		      record.arg = arg;

    		      if (finallyEntry) {
    		        this.method = "next";
    		        this.next = finallyEntry.finallyLoc;
    		        return ContinueSentinel;
    		      }

    		      return this.complete(record);
    		    },

    		    complete: function(record, afterLoc) {
    		      if (record.type === "throw") {
    		        throw record.arg;
    		      }

    		      if (record.type === "break" ||
    		          record.type === "continue") {
    		        this.next = record.arg;
    		      } else if (record.type === "return") {
    		        this.rval = this.arg = record.arg;
    		        this.method = "return";
    		        this.next = "end";
    		      } else if (record.type === "normal" && afterLoc) {
    		        this.next = afterLoc;
    		      }

    		      return ContinueSentinel;
    		    },

    		    finish: function(finallyLoc) {
    		      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
    		        var entry = this.tryEntries[i];
    		        if (entry.finallyLoc === finallyLoc) {
    		          this.complete(entry.completion, entry.afterLoc);
    		          resetTryEntry(entry);
    		          return ContinueSentinel;
    		        }
    		      }
    		    },

    		    "catch": function(tryLoc) {
    		      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
    		        var entry = this.tryEntries[i];
    		        if (entry.tryLoc === tryLoc) {
    		          var record = entry.completion;
    		          if (record.type === "throw") {
    		            var thrown = record.arg;
    		            resetTryEntry(entry);
    		          }
    		          return thrown;
    		        }
    		      }

    		      // The context.catch method must only be called with a location
    		      // argument that corresponds to a known catch block.
    		      throw new Error("illegal catch attempt");
    		    },

    		    delegateYield: function(iterable, resultName, nextLoc) {
    		      this.delegate = {
    		        iterator: values(iterable),
    		        resultName: resultName,
    		        nextLoc: nextLoc
    		      };

    		      if (this.method === "next") {
    		        // Deliberately forget the last sent value so that we don't
    		        // accidentally pass it on to the delegate.
    		        this.arg = undefined$1;
    		      }

    		      return ContinueSentinel;
    		    }
    		  };
    		})(
    		  // In sloppy mode, unbound `this` refers to the global object, fallback to
    		  // Function constructor if we're in global strict mode. That is sadly a form
    		  // of indirect eval which violates Content Security Policy.
    		  (function() {
    		    return this || (typeof self === "object" && self);
    		  })() || Function("return this")()
    		);


    		/***/ }),

    		/***/ "./drawing/draw.js":
    		/*!*************************!*\
    		  !*** ./drawing/draw.js ***!
    		  \*************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/**
    		 * This function manages the {@link https://www.w3.org/TR/2dcontext/#the-canvas-state|save/restore}
    		 * pattern for working in a new context state stack. The parameter `fn` is passed the `context` and can
    		 * execute any API calls in a clean stack.
    		 * @public
    		 * @method draw
    		 * @memberof Drawing
    		 *
    		 * @param {CanvasRenderingContext2D} context - Target Canvas
    		 * @param {ContextFn} fn - A function which performs drawing operations within the given context.
    		 * @returns {undefined}
    		 */
    		/* harmony default export */ __webpack_exports__["default"] = (function (context, fn) {
    		  context.save();
    		  fn(context);
    		  context.restore();
    		});

    		/***/ }),

    		/***/ "./drawing/drawArrow.js":
    		/*!******************************!*\
    		  !*** ./drawing/drawArrow.js ***!
    		  \******************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _drawLine_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./drawLine.js */ "./drawing/drawLine.js");
    		/* harmony import */ var _drawJoinedLines_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./drawJoinedLines.js */ "./drawing/drawJoinedLines.js");


    		/**
    		 * Draw an arrow using the drawing API.
    		 * @public
    		 * @method drawArrow
    		 * @memberof Drawing
    		 *
    		 * @param  {Object} context   The canvas context.
    		 * @param  {Object} start     The start position.
    		 * @param  {Object} end       The end position.
    		 * @param  {string} color     The color of the arrow.
    		 * @param  {number} lineWidth The width of the arrow line.
    		 * @returns {undefined}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (context, start, end, color, lineWidth) {
    		  // Variables to be used when creating the arrow
    		  var headLength = 10;
    		  var angle = Math.atan2(end.y - start.y, end.x - start.x); // Starting path of the arrow from the start square to the end square and drawing the stroke

    		  var options = {
    		    color: color,
    		    lineWidth: lineWidth
    		  };
    		  Object(_drawLine_js__WEBPACK_IMPORTED_MODULE_0__["default"])(context, undefined, start, end, options, 'canvas');
    		  options = {
    		    color: color,
    		    lineWidth: lineWidth,
    		    fillStyle: color
    		  };
    		  var points = [{
    		    x: end.x - headLength * Math.cos(angle - Math.PI / 7),
    		    y: end.y - headLength * Math.sin(angle - Math.PI / 7)
    		  }, {
    		    x: end.x - headLength * Math.cos(angle + Math.PI / 7),
    		    y: end.y - headLength * Math.sin(angle + Math.PI / 7)
    		  }, end];
    		  Object(_drawJoinedLines_js__WEBPACK_IMPORTED_MODULE_1__["default"])(context, undefined, end, points, options, 'canvas');
    		});

    		/***/ }),

    		/***/ "./drawing/drawCircle.js":
    		/*!*******************************!*\
    		  !*** ./drawing/drawCircle.js ***!
    		  \*******************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _path_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./path.js */ "./drawing/path.js");


    		/**
    		 * Draw a circle with given `center` and `radius`.
    		 * @public
    		 * @method drawCircle
    		 * @memberof Drawing
    		 *
    		 * @param {CanvasRenderingContext2D} context - Target context
    		 * @param {HTMLElement} element - The DOM Element to draw on
    		 * @param {Object} center - `{ x, y }` in either pixel or canvas coordinates.
    		 * @param {number} radius - The circle's radius in canvas units.
    		 * @param {Object} options - See {@link path}
    		 * @param {String} [coordSystem='pixel'] - Can be "pixel" (default) or "canvas". The coordinate
    		 *     system of the points passed in to the function. If "pixel" then cornerstone.pixelToCanvas
    		 *     is used to transform the points from pixel to canvas coordinates.
    		 * @returns {undefined}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (context, element, center, radius, options) {
    		  var coordSystem = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'pixel';

    		  if (coordSystem === 'pixel') {
    		    center = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.pixelToCanvas(element, center);
    		  }

    		  Object(_path_js__WEBPACK_IMPORTED_MODULE_1__["default"])(context, options, function (context) {
    		    context.arc(center.x, center.y, radius, 0, 2 * Math.PI);
    		  });
    		});

    		/***/ }),

    		/***/ "./drawing/drawEllipse.js":
    		/*!********************************!*\
    		  !*** ./drawing/drawEllipse.js ***!
    		  \********************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _path_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./path.js */ "./drawing/path.js");
    		/* harmony import */ var _util_pointProjector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/pointProjector.js */ "./util/pointProjector.js");



    		/**
    		 * Draw an ellipse within the bounding box defined by `corner1` and `corner2`.
    		 * @public
    		 * @method drawEllipse
    		 * @memberof Drawing
    		 *
    		 * @param {CanvasRenderingContext2D} context - Target context
    		 * @param {HTMLElement} element - The DOM Element to draw on
    		 * @param {Object} corner1 - `{ x, y }` in either pixel or canvas coordinates.
    		 * @param {Object} corner2 - `{ x, y }` in either pixel or canvas coordinates.
    		 * @param {Object} options - See {@link path}
    		 * @param {String} [coordSystem='pixel'] - Can be "pixel" (default) or "canvas". The coordinate
    		 *     system of the points passed in to the function. If "pixel" then cornerstone.pixelToCanvas
    		 *     is used to transform the points from pixel to canvas coordinates.
    		 * @param {Number} initialRotation - Ellipse initial rotation
    		 * @returns {undefined}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (context, element, corner1, corner2, options) {
    		  var coordSystem = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'pixel';
    		  var initialRotation = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0.0;

    		  if (coordSystem === 'pixel') {
    		    corner1 = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.pixelToCanvas(element, corner1);
    		    corner2 = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.pixelToCanvas(element, corner2);
    		  }

    		  var viewport = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.getViewport(element); // Calculate the center of the image

    		  var width = element.clientWidth,
    		      height = element.clientHeight;
    		  var scale = viewport.scale,
    		      translation = viewport.translation;
    		  var rotation = viewport.rotation - initialRotation;
    		  var centerPoint = {
    		    x: width / 2 + translation.x * scale,
    		    y: height / 2 + translation.y * scale
    		  };

    		  if (Math.abs(rotation) > 0.05) {
    		    corner1 = Object(_util_pointProjector_js__WEBPACK_IMPORTED_MODULE_2__["rotatePoint"])(corner1, centerPoint, -rotation);
    		    corner2 = Object(_util_pointProjector_js__WEBPACK_IMPORTED_MODULE_2__["rotatePoint"])(corner2, centerPoint, -rotation);
    		  }

    		  var w = Math.abs(corner1.x - corner2.x);
    		  var h = Math.abs(corner1.y - corner2.y);
    		  var xMin = Math.min(corner1.x, corner2.x);
    		  var yMin = Math.min(corner1.y, corner2.y);
    		  var center = {
    		    x: xMin + w / 2,
    		    y: yMin + h / 2
    		  };

    		  if (Math.abs(rotation) > 0.05) {
    		    center = Object(_util_pointProjector_js__WEBPACK_IMPORTED_MODULE_2__["rotatePoint"])(center, centerPoint, rotation);
    		  }

    		  var angle = rotation * Math.PI / 180;
    		  Object(_path_js__WEBPACK_IMPORTED_MODULE_1__["default"])(context, options, function (context) {
    		    context.ellipse(center.x, center.y, w / 2, h / 2, angle, 0, 2 * Math.PI);
    		    context.closePath();
    		  });
    		});

    		/***/ }),

    		/***/ "./drawing/drawHandles.js":
    		/*!********************************!*\
    		  !*** ./drawing/drawHandles.js ***!
    		  \********************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _stateManagement_toolStyle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../stateManagement/toolStyle.js */ "./stateManagement/toolStyle.js");
    		/* harmony import */ var _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../stateManagement/toolColors.js */ "./stateManagement/toolColors.js");
    		/* harmony import */ var _path_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./path.js */ "./drawing/path.js");
    		/* harmony import */ var _store_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../store/index.js */ "./store/index.js");





    		/**
    		 * Draws proivded handles to the provided context
    		 * @public
    		 * @method drawHandles
    		 * @memberof Drawing
    		 *
    		 * @param {CanvasRenderingContext2D} context - Target context
    		 * @param {*} evtDetail - Cornerstone's 'cornerstoneimagerendered' event's `detail`
    		 * @param {Object[]|Object} handles - An array of handle objects, or an object w/ named handle objects
    		 * @param {Object} [options={}] - Options object
    		 * @param {string} [options.color]
    		 * @param {Boolean} [options.drawHandlesIfActive=false] - Whether the handles should only be drawn if Active (hovered/selected)
    		 * @param {string} [options.fill]
    		 * @param {Number} [options.handleRadius=6]
    		 * @returns {undefined}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (context, evtDetail, handles) {
    		  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
    		  var element = evtDetail.element;
    		  var defaultColor = _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_2__["default"].getToolColor();
    		  context.strokeStyle = options.color || defaultColor;
    		  var handleKeys = Object.keys(handles);

    		  var _loop = function _loop(i) {
    		    var handleKey = handleKeys[i];
    		    var handle = handles[handleKey];

    		    if (handle.drawnIndependently === true) {
    		      return "continue";
    		    }

    		    if (options.drawHandlesIfActive === true && !handle.active) {
    		      return "continue";
    		    }

    		    var lineWidth = handle.active ? _stateManagement_toolStyle_js__WEBPACK_IMPORTED_MODULE_1__["default"].getActiveWidth() : _stateManagement_toolStyle_js__WEBPACK_IMPORTED_MODULE_1__["default"].getToolWidth();
    		    var fillStyle = options.fill;
    		    Object(_path_js__WEBPACK_IMPORTED_MODULE_3__["default"])(context, {
    		      lineWidth: lineWidth,
    		      fillStyle: fillStyle
    		    }, function (context) {
    		      var handleCanvasCoords = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.pixelToCanvas(element, handle); // Handle's radisu, then tool's radius, then default radius

    		      var handleRadius = handle.radius || options.handleRadius || _store_index_js__WEBPACK_IMPORTED_MODULE_4__["state"].handleRadius;
    		      context.arc(handleCanvasCoords.x, handleCanvasCoords.y, handleRadius, 0, 2 * Math.PI);
    		    });
    		  };

    		  for (var i = 0; i < handleKeys.length; i++) {
    		    var _ret = _loop(i);

    		    if (_ret === "continue") continue;
    		  }
    		});

    		/***/ }),

    		/***/ "./drawing/drawJoinedLines.js":
    		/*!************************************!*\
    		  !*** ./drawing/drawJoinedLines.js ***!
    		  \************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _path_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./path.js */ "./drawing/path.js");


    		/**
    		 * Draw a series of joined lines, starting at `start` and then going to each point in `points`.
    		 * @public
    		 * @method drawJoinedLines
    		 * @memberof Drawing
    		 *
    		 * @param {CanvasRenderingContext2D} context - Target context
    		 * @param {HTMLElement} element - The DOM Element to draw on
    		 * @param {Object} start - `{ x, y }` in either pixel or canvas coordinates.
    		 * @param {Object[]} points - `[{ x, y }]` An array of points in either pixel or canvas coordinates.
    		 * @param {Object} options - See {@link path}
    		 * @param {String} [coordSystem='pixel'] - Can be "pixel" (default) or "canvas". The coordinate
    		 *     system of the points passed in to the function. If "pixel" then cornerstone.pixelToCanvas
    		 *     is used to transform the points from pixel to canvas coordinates.
    		 * @returns {undefined}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (context, element, start, points, options) {
    		  var coordSystem = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'pixel';
    		  Object(_path_js__WEBPACK_IMPORTED_MODULE_1__["default"])(context, options, function (context) {
    		    if (coordSystem === 'pixel') {
    		      start = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.pixelToCanvas(element, start);
    		      points = points.map(function (p) {
    		        return _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.pixelToCanvas(element, p);
    		      });
    		    }

    		    context.moveTo(start.x, start.y);
    		    points.forEach(function (_ref) {
    		      var x = _ref.x,
    		          y = _ref.y;
    		      context.lineTo(x, y);
    		    });
    		  });
    		});

    		/***/ }),

    		/***/ "./drawing/drawLine.js":
    		/*!*****************************!*\
    		  !*** ./drawing/drawLine.js ***!
    		  \*****************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return drawLine; });
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _path_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./path.js */ "./drawing/path.js");


    		/**
    		 * Draw a line between `start` and `end`.
    		 *
    		 * @public
    		 * @method drawLine
    		 * @memberof Drawing
    		 *
    		 * @param {CanvasRenderingContext2D} context
    		 * @param {HTMLElement} element - The DOM Element to draw on
    		 * @param {Object} start - `{ x, y } in either pixel or canvas coordinates.
    		 * @param {Object} end - `{ x, y }` in either pixel or canvas coordinates.
    		 * @param {Object} options - See {@link path}
    		 * @param {String} [coordSystem='pixel'] - Can be "pixel" (default) or "canvas". The coordinate
    		 *     system of the points passed in to the function. If "pixel" then cornerstone.pixelToCanvas
    		 *     is used to transform the points from pixel to canvas coordinates.
    		 * @returns {undefined}
    		 */

    		function drawLine(context, element, start, end, options) {
    		  var coordSystem = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'pixel';
    		  Object(_path_js__WEBPACK_IMPORTED_MODULE_1__["default"])(context, options, function (context) {
    		    if (coordSystem === 'pixel') {
    		      start = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.pixelToCanvas(element, start);
    		      end = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.pixelToCanvas(element, end);
    		    }

    		    context.moveTo(start.x, start.y);
    		    context.lineTo(end.x, end.y);
    		  });
    		}

    		/***/ }),

    		/***/ "./drawing/drawLines.js":
    		/*!******************************!*\
    		  !*** ./drawing/drawLines.js ***!
    		  \******************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _path_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./path.js */ "./drawing/path.js");


    		/**
    		 * Draw multiple lines.
    		 * @public
    		 * @method drawJoinedLines
    		 * @memberof Drawing
    		 *
    		 * @param {CanvasRenderingContext2D} context - Target context
    		 * @param {HTMLElement} element - The DOM Element to draw on
    		 * @param {Object[]} lines - `[{ start: {x, y}, end: { x, y }]` An array of `start`, `end` pairs.
    		 *     Each point is `{ x, y }` in either pixel or canvas coordinates.
    		 * @param {Object} options - See {@link path}
    		 * @param {String} [coordSystem='pixel'] - Can be "pixel" (default) or "canvas". The coordinate
    		 *     system of the points passed in to the function. If "pixel" then cornerstone.pixelToCanvas
    		 *     is used to transform the points from pixel to canvas coordinates.
    		 * @returns {undefined}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (context, element, lines, options) {
    		  var coordSystem = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'pixel';
    		  Object(_path_js__WEBPACK_IMPORTED_MODULE_1__["default"])(context, options, function (context) {
    		    lines.forEach(function (line) {
    		      var start = line.start;
    		      var end = line.end;

    		      if (coordSystem === 'pixel') {
    		        var cornerstone = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone;
    		        start = cornerstone.pixelToCanvas(element, start);
    		        end = cornerstone.pixelToCanvas(element, end);
    		      }

    		      context.moveTo(start.x, start.y);
    		      context.lineTo(end.x, end.y);
    		    });
    		  });
    		});

    		/***/ }),

    		/***/ "./drawing/drawLink.js":
    		/*!*****************************!*\
    		  !*** ./drawing/drawLink.js ***!
    		  \*****************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _drawLine_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./drawLine.js */ "./drawing/drawLine.js");


    		/**
    		 * Draw a link between an annotation to a box.
    		 * @public
    		 * @method drawLink
    		 * @memberof Drawing
    		 *
    		 * @param  {Object[]} linkAnchorPoints An array of possible anchor points.
    		 * @param  {Object} refPoint         A reference point to select the anchor point.
    		 * @param  {Object} boundingBox    The bounding box to link.
    		 * @param  {Object} context          The canvas context.
    		 * @param  {string} color            The link color.
    		 * @param  {number} lineWidth        The line width of the link.
    		 * @returns {undefined}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (linkAnchorPoints, refPoint, boundingBox, context, color, lineWidth) {
    		  // Draw a link from "the closest anchor point to refPoint" to "the nearest midpoint on the bounding box".
    		  // Find the closest anchor point to RefPoint
    		  var start = linkAnchorPoints.length > 0 ? _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstoneMath.point.findClosestPoint(linkAnchorPoints, refPoint) : refPoint; // Calculate the midpoints of the bounding box

    		  var boundingBoxPoints = [{
    		    x: boundingBox.left + boundingBox.width / 2,
    		    y: boundingBox.top
    		  }, {
    		    x: boundingBox.left,
    		    y: boundingBox.top + boundingBox.height / 2
    		  }, {
    		    x: boundingBox.left + boundingBox.width / 2,
    		    y: boundingBox.top + boundingBox.height
    		  }, {
    		    x: boundingBox.left + boundingBox.width,
    		    y: boundingBox.top + boundingBox.height / 2
    		  }]; // Calculate the link endpoint by identifying which midpoint of the bounding box
    		  // Is closest to the start point.

    		  var end = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstoneMath.point.findClosestPoint(boundingBoxPoints, start); // Finally we draw the dashed linking line

    		  var options = {
    		    color: color,
    		    lineWidth: lineWidth,
    		    lineDash: [2, 3]
    		  };
    		  Object(_drawLine_js__WEBPACK_IMPORTED_MODULE_1__["default"])(context, undefined, start, end, options, 'canvas');
    		});

    		/***/ }),

    		/***/ "./drawing/drawLinkedTextBox.js":
    		/*!**************************************!*\
    		  !*** ./drawing/drawLinkedTextBox.js ***!
    		  \**************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _drawTextBox_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./drawTextBox.js */ "./drawing/drawTextBox.js");
    		/* harmony import */ var _drawLink_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./drawLink.js */ "./drawing/drawLink.js");



    		/**
    		 * Draw a link between an annotation to a textBox.
    		 * @public
    		 * @method drawLinkedTextBox
    		 * @memberof Drawing
    		 *
    		 * @param {Object} context - The canvas context.
    		 * @param {HTMLElement} element - The element on which to draw the link.
    		 * @param {Object} textBox - The textBox to link.
    		 * @param {Object} text - The text to display in the textbox.
    		 * @param {Object[]} handles - The handles of the annotation.
    		 * @param {Object[]} textBoxAnchorPoints - An array of possible anchor points on the textBox.
    		 * @param {string} color - The link color.
    		 * @param {number} lineWidth - The line width of the link.
    		 * @param {number} xOffset - The x offset of the textbox.
    		 * @param {boolean} yCenter - Vertically centers the text if true.
    		 * @returns {undefined}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (context, element, textBox, text, handles, textBoxAnchorPoints, color, lineWidth, xOffset, yCenter) {
    		  var cornerstone = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone; // Convert the textbox Image coordinates into Canvas coordinates

    		  var textCoords = cornerstone.pixelToCanvas(element, textBox);

    		  if (xOffset) {
    		    textCoords.x += xOffset;
    		  }

    		  var options = {
    		    centering: {
    		      x: false,
    		      y: yCenter
    		    }
    		  }; // Draw the text box

    		  textBox.boundingBox = Object(_drawTextBox_js__WEBPACK_IMPORTED_MODULE_1__["default"])(context, text, textCoords.x, textCoords.y, color, options);

    		  if (textBox.hasMoved) {
    		    // Identify the possible anchor points for the tool -> text line
    		    var linkAnchorPoints = textBoxAnchorPoints(handles).map(function (h) {
    		      return cornerstone.pixelToCanvas(element, h);
    		    }); // Draw dashed link line between tool and text

    		    Object(_drawLink_js__WEBPACK_IMPORTED_MODULE_2__["default"])(linkAnchorPoints, textCoords, textBox.boundingBox, context, color, lineWidth);
    		  }
    		});

    		/***/ }),

    		/***/ "./drawing/drawRect.js":
    		/*!*****************************!*\
    		  !*** ./drawing/drawRect.js ***!
    		  \*****************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _path_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./path.js */ "./drawing/path.js");
    		/* harmony import */ var _util_pointProjector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/pointProjector.js */ "./util/pointProjector.js");



    		/**
    		 * Draw a rectangle defined by `corner1` and `corner2`.
    		 * @public
    		 * @method drawRect
    		 * @memberof Drawing
    		 *
    		 * @param {CanvasRenderingContext2D} context - Target context
    		 * @param {HTMLElement} element - The DOM Element to draw on
    		 * @param {Object} corner1 - `{ x, y }` in either pixel or canvas coordinates.
    		 * @param {Object} corner2 - `{ x, y }` in either pixel or canvas coordinates.
    		 * @param {Object} options - See {@link path}
    		 * @param {String} [coordSystem='pixel'] - Can be "pixel" (default) or "canvas". The coordinate
    		 *     system of the points passed in to the function. If "pixel" then cornerstone.pixelToCanvas
    		 *     is used to transform the points from pixel to canvas coordinates.
    		 * @param {Number} initialRotation - Rectangle initial rotation
    		 * @returns {undefined}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (context, element, corner1, corner2, options) {
    		  var coordSystem = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'pixel';
    		  var initialRotation = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0.0;

    		  if (coordSystem === 'pixel') {
    		    var cornerstone = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone;
    		    corner1 = cornerstone.pixelToCanvas(element, corner1);
    		    corner2 = cornerstone.pixelToCanvas(element, corner2);
    		  }

    		  var viewport = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.getViewport(element); // Calculate the center of the image

    		  var width = element.clientWidth,
    		      height = element.clientHeight;
    		  var scale = viewport.scale,
    		      translation = viewport.translation;
    		  var rotation = viewport.rotation - initialRotation;
    		  var centerPoint = {
    		    x: width / 2 + translation.x * scale,
    		    y: height / 2 + translation.y * scale
    		  };

    		  if (Math.abs(rotation) > 0.05) {
    		    corner1 = Object(_util_pointProjector_js__WEBPACK_IMPORTED_MODULE_2__["rotatePoint"])(corner1, centerPoint, -rotation);
    		    corner2 = Object(_util_pointProjector_js__WEBPACK_IMPORTED_MODULE_2__["rotatePoint"])(corner2, centerPoint, -rotation);
    		  }

    		  var w = Math.abs(corner1.x - corner2.x);
    		  var h = Math.abs(corner1.y - corner2.y);
    		  corner1 = {
    		    x: Math.min(corner1.x, corner2.x),
    		    y: Math.min(corner1.y, corner2.y)
    		  };
    		  corner2 = {
    		    x: corner1.x + w,
    		    y: corner1.y + h
    		  };
    		  var corner3 = {
    		    x: corner1.x + w,
    		    y: corner1.y
    		  };
    		  var corner4 = {
    		    x: corner1.x,
    		    y: corner1.y + h
    		  };

    		  if (Math.abs(rotation) > 0.05) {
    		    corner1 = Object(_util_pointProjector_js__WEBPACK_IMPORTED_MODULE_2__["rotatePoint"])(corner1, centerPoint, rotation);
    		    corner2 = Object(_util_pointProjector_js__WEBPACK_IMPORTED_MODULE_2__["rotatePoint"])(corner2, centerPoint, rotation);
    		    corner3 = Object(_util_pointProjector_js__WEBPACK_IMPORTED_MODULE_2__["rotatePoint"])(corner3, centerPoint, rotation);
    		    corner4 = Object(_util_pointProjector_js__WEBPACK_IMPORTED_MODULE_2__["rotatePoint"])(corner4, centerPoint, rotation);
    		  }

    		  Object(_path_js__WEBPACK_IMPORTED_MODULE_1__["default"])(context, options, function (context) {
    		    context.moveTo(corner1.x, corner1.y);
    		    context.lineTo(corner3.x, corner3.y);
    		    context.moveTo(corner3.x, corner3.y);
    		    context.lineTo(corner2.x, corner2.y);
    		    context.moveTo(corner2.x, corner2.y);
    		    context.lineTo(corner4.x, corner4.y);
    		    context.moveTo(corner4.x, corner4.y);
    		    context.lineTo(corner1.x, corner1.y);
    		  });
    		});

    		/***/ }),

    		/***/ "./drawing/drawTextBox.js":
    		/*!********************************!*\
    		  !*** ./drawing/drawTextBox.js ***!
    		  \********************************/
    		/*! exports provided: textBoxWidth, default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "textBoxWidth", function() { return textBoxWidth; });
    		/* harmony import */ var _stateManagement_textStyle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../stateManagement/textStyle.js */ "./stateManagement/textStyle.js");
    		/* harmony import */ var _draw_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./draw.js */ "./drawing/draw.js");
    		/* harmony import */ var _fillTextLines_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fillTextLines.js */ "./drawing/fillTextLines.js");
    		/* harmony import */ var _fillBox_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fillBox.js */ "./drawing/fillBox.js");




    		/**
    		 * Compute the width of the box required to display the given `text` with a given `padding`.
    		 * @public
    		 * @function textBoxWidth
    		 * @memberof Drawing
    		 *
    		 * @param {CanvasRenderingContext2D} context - Target context
    		 * @param {String} text - The text to find the width of.
    		 * @param {Number} padding - The padding to apply on either end of the text.
    		 * @returns {Number} computed text box width
    		 */

    		function textBoxWidth(context, text, padding) {
    		  var font = _stateManagement_textStyle_js__WEBPACK_IMPORTED_MODULE_0__["default"].getFont();
    		  var origFont = context.font;

    		  if (font && font !== origFont) {
    		    context.font = font;
    		  }

    		  var width = context.measureText(text).width;

    		  if (font && font !== origFont) {
    		    context.font = origFont;
    		  }

    		  return width + 2 * padding;
    		}
    		/**
    		 * Draws a textBox.
    		 * @public
    		 * @function drawTextBox
    		 * @memberof Drawing
    		 *
    		 * @param  {CanvasRenderingContext2D} context The canvas context.
    		 * @param  {string} textLines   The text to display.
    		 * @param  {number} x           The x position of the textBox.
    		 * @param  {number} y           The y position of the textBox.
    		 * @param  {string} color       The color of the textBox.
    		 * @param  {Object} options     Options for the textBox.
    		 * @returns {Object} {top, left, width, height} - Bounding box; can be used for pointNearTool
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (context, textLines, x, y, color, options) {
    		  if (Object.prototype.toString.call(textLines) !== '[object Array]') {
    		    textLines = [textLines];
    		  }

    		  var padding = 5;
    		  var fontSize = _stateManagement_textStyle_js__WEBPACK_IMPORTED_MODULE_0__["default"].getFontSize();
    		  var backgroundColor = _stateManagement_textStyle_js__WEBPACK_IMPORTED_MODULE_0__["default"].getBackgroundColor(); // Find the longest text width in the array of text data

    		  var maxWidth = 0;
    		  textLines.forEach(function (text) {
    		    // Get the text width in the current font
    		    var width = textBoxWidth(context, text, padding); // Find the maximum with for all the text rows;

    		    maxWidth = Math.max(maxWidth, width);
    		  }); // Calculate the bounding box for this text box

    		  var boundingBox = {
    		    width: maxWidth,
    		    height: padding + textLines.length * (fontSize + padding)
    		  };
    		  Object(_draw_js__WEBPACK_IMPORTED_MODULE_1__["default"])(context, function (context) {
    		    context.strokeStyle = color; // Draw the background box with padding

    		    if (options && options.centering && options.centering.x === true) {
    		      x -= boundingBox.width / 2;
    		    }

    		    if (options && options.centering && options.centering.y === true) {
    		      y -= boundingBox.height / 2;
    		    }

    		    boundingBox.left = x;
    		    boundingBox.top = y;
    		    var fillStyle = options && options.debug === true ? '#FF0000' : backgroundColor;
    		    Object(_fillBox_js__WEBPACK_IMPORTED_MODULE_3__["default"])(context, boundingBox, fillStyle); // Draw each of the text lines on top of the background box

    		    Object(_fillTextLines_js__WEBPACK_IMPORTED_MODULE_2__["default"])(context, boundingBox, textLines, color, padding);
    		  }); // Return the bounding box so it can be used for pointNearHandle

    		  return boundingBox;
    		});

    		/***/ }),

    		/***/ "./drawing/fillBox.js":
    		/*!****************************!*\
    		  !*** ./drawing/fillBox.js ***!
    		  \****************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/**
    		 * Draw a filled rectangle defined by `boundingBox` using the style defined by `fillStyle`.
    		 * @public
    		 * @method fillBox
    		 * @memberof Drawing
    		 *
    		 * @param {CanvasRenderingContext2D} context - Target context
    		 * @param {Object} boundingBox - `{ left, top, width, height }` in canvas coordinates.
    		 * @param {FillStyle} fillStyle - The fillStyle to apply to the region.
    		 * @returns {undefined}
    		 */
    		/* harmony default export */ __webpack_exports__["default"] = (function (context, boundingBox, fillStyle) {
    		  context.fillStyle = fillStyle;
    		  context.fillRect(boundingBox.left, boundingBox.top, boundingBox.width, boundingBox.height);
    		});

    		/***/ }),

    		/***/ "./drawing/fillOutsideRect.js":
    		/*!************************************!*\
    		  !*** ./drawing/fillOutsideRect.js ***!
    		  \************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _path_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./path.js */ "./drawing/path.js");


    		/**
    		 * Fill the region outside a rectangle defined by `corner1` and `corner2`.
    		 * @public
    		 * @method fillOutsideRect
    		 * @memberof Drawing
    		 *
    		 * @param {CanvasRenderingContext2D} context - Target context
    		 * @param {HTMLElement} element - The DOM Element to draw on
    		 * @param {Object} corner1 - `{ x, y }` in either pixel or canvas coordinates.
    		 * @param {Object} corner2 - `{ x, y }` in either pixel or canvas coordinates.
    		 * @param {Object} options - See {@link path}
    		 * @param {String} [coordSystem='pixel'] - Can be "pixel" (default) or "canvas". The coordinate
    		 *     system of the points passed in to the function. If "pixel" then cornerstone.pixelToCanvas
    		 *     is used to transform the points from pixel to canvas coordinates.
    		 * @returns {undefined}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (context, element, corner1, corner2, options) {
    		  var coordSystem = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'pixel';

    		  if (coordSystem === 'pixel') {
    		    var cornerstone = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone;
    		    corner1 = cornerstone.pixelToCanvas(element, corner1);
    		    corner2 = cornerstone.pixelToCanvas(element, corner2);
    		  }

    		  var left = Math.min(corner1.x, corner2.x);
    		  var top = Math.min(corner1.y, corner2.y);
    		  var width = Math.abs(corner1.x - corner2.x);
    		  var height = Math.abs(corner1.y - corner2.y);
    		  Object(_path_js__WEBPACK_IMPORTED_MODULE_1__["default"])(context, options, function (context) {
    		    context.rect(0, 0, context.canvas.clientWidth, context.canvas.clientHeight);
    		    context.rect(left + width, top, -width, height);
    		  });
    		});

    		/***/ }),

    		/***/ "./drawing/fillTextLines.js":
    		/*!**********************************!*\
    		  !*** ./drawing/fillTextLines.js ***!
    		  \**********************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _stateManagement_textStyle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../stateManagement/textStyle.js */ "./stateManagement/textStyle.js");

    		/**
    		 * Draw multiple lines of text within a bounding box.
    		 * @public
    		 * @method fillTextLines
    		 * @memberof Drawing
    		 *
    		 * @param {CanvasRenderingContext2D} context - Target context
    		 * @param {Object} boundingBox - `{ left, top }` in canvas coordinates. Only the top-left corner is specified, as the text will take up as much space as it needs.
    		 * @param {String[]} textLines - The text to be displayed.
    		 * @param {FillStyle} fillStyle - The fillStyle to apply to the text.
    		 * @param {Number} padding - The amount of padding above/below each line in canvas units. Note this gives an inter-line spacing of `2*padding`.
    		 * @returns {undefined}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (context, boundingBox, textLines, fillStyle, padding) {
    		  var fontSize = _stateManagement_textStyle_js__WEBPACK_IMPORTED_MODULE_0__["default"].getFontSize();
    		  context.font = _stateManagement_textStyle_js__WEBPACK_IMPORTED_MODULE_0__["default"].getFont();
    		  context.textBaseline = 'top';
    		  context.fillStyle = fillStyle;
    		  textLines.forEach(function (text, index) {
    		    context.fillText(text, boundingBox.left + padding, boundingBox.top + padding + index * (fontSize + padding));
    		  });
    		});

    		/***/ }),

    		/***/ "./drawing/getNewContext.js":
    		/*!**********************************!*\
    		  !*** ./drawing/getNewContext.js ***!
    		  \**********************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/**
    		 * Create a new {@link CanvasRenderingContext2D|context} object for the given {@link HTMLCanvasElement|canvas}
    		 * and set the transform to the {@link https://www.w3.org/TR/2dcontext/#transformations|identity transform}.
    		 *
    		 * @public
    		 * @function getNewContext
    		 * @memberof Drawing
    		 *
    		 * @param {HTMLCanvasElement} canvas - Canvas you would like the context for
    		 * @returns {CanvasRenderingContext2D} - The provided canvas's 2d context
    		 */
    		/* harmony default export */ __webpack_exports__["default"] = (function (canvas) {
    		  var context = canvas.getContext('2d');
    		  context.setTransform(1, 0, 0, 1, 0, 0);
    		  return context;
    		});

    		/***/ }),

    		/***/ "./drawing/index.js":
    		/*!**************************!*\
    		  !*** ./drawing/index.js ***!
    		  \**************************/
    		/*! exports provided: draw, drawArrow, drawCircle, drawEllipse, drawHandles, drawJoinedLines, drawLine, drawLines, drawLink, drawLinkedTextBox, drawRect, drawTextBox, fillBox, fillOutsideRect, fillTextLines, getNewContext, path, setShadow, transformCanvasContext, resetCanvasContextTransform */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _draw_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./draw.js */ "./drawing/draw.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "draw", function() { return _draw_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

    		/* harmony import */ var _drawArrow_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./drawArrow.js */ "./drawing/drawArrow.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "drawArrow", function() { return _drawArrow_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });

    		/* harmony import */ var _drawCircle_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./drawCircle.js */ "./drawing/drawCircle.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "drawCircle", function() { return _drawCircle_js__WEBPACK_IMPORTED_MODULE_2__["default"]; });

    		/* harmony import */ var _drawEllipse_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./drawEllipse.js */ "./drawing/drawEllipse.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "drawEllipse", function() { return _drawEllipse_js__WEBPACK_IMPORTED_MODULE_3__["default"]; });

    		/* harmony import */ var _drawHandles_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./drawHandles.js */ "./drawing/drawHandles.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "drawHandles", function() { return _drawHandles_js__WEBPACK_IMPORTED_MODULE_4__["default"]; });

    		/* harmony import */ var _drawJoinedLines_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./drawJoinedLines.js */ "./drawing/drawJoinedLines.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "drawJoinedLines", function() { return _drawJoinedLines_js__WEBPACK_IMPORTED_MODULE_5__["default"]; });

    		/* harmony import */ var _drawLine_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./drawLine.js */ "./drawing/drawLine.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "drawLine", function() { return _drawLine_js__WEBPACK_IMPORTED_MODULE_6__["default"]; });

    		/* harmony import */ var _drawLines_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./drawLines.js */ "./drawing/drawLines.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "drawLines", function() { return _drawLines_js__WEBPACK_IMPORTED_MODULE_7__["default"]; });

    		/* harmony import */ var _drawLink_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./drawLink.js */ "./drawing/drawLink.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "drawLink", function() { return _drawLink_js__WEBPACK_IMPORTED_MODULE_8__["default"]; });

    		/* harmony import */ var _drawLinkedTextBox_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./drawLinkedTextBox.js */ "./drawing/drawLinkedTextBox.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "drawLinkedTextBox", function() { return _drawLinkedTextBox_js__WEBPACK_IMPORTED_MODULE_9__["default"]; });

    		/* harmony import */ var _drawRect_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./drawRect.js */ "./drawing/drawRect.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "drawRect", function() { return _drawRect_js__WEBPACK_IMPORTED_MODULE_10__["default"]; });

    		/* harmony import */ var _drawTextBox_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./drawTextBox.js */ "./drawing/drawTextBox.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "drawTextBox", function() { return _drawTextBox_js__WEBPACK_IMPORTED_MODULE_11__["default"]; });

    		/* harmony import */ var _fillBox_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./fillBox.js */ "./drawing/fillBox.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fillBox", function() { return _fillBox_js__WEBPACK_IMPORTED_MODULE_12__["default"]; });

    		/* harmony import */ var _fillOutsideRect_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./fillOutsideRect.js */ "./drawing/fillOutsideRect.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fillOutsideRect", function() { return _fillOutsideRect_js__WEBPACK_IMPORTED_MODULE_13__["default"]; });

    		/* harmony import */ var _fillTextLines_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./fillTextLines.js */ "./drawing/fillTextLines.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fillTextLines", function() { return _fillTextLines_js__WEBPACK_IMPORTED_MODULE_14__["default"]; });

    		/* harmony import */ var _getNewContext_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./getNewContext.js */ "./drawing/getNewContext.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getNewContext", function() { return _getNewContext_js__WEBPACK_IMPORTED_MODULE_15__["default"]; });

    		/* harmony import */ var _path_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./path.js */ "./drawing/path.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "path", function() { return _path_js__WEBPACK_IMPORTED_MODULE_16__["default"]; });

    		/* harmony import */ var _setShadow_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./setShadow.js */ "./drawing/setShadow.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setShadow", function() { return _setShadow_js__WEBPACK_IMPORTED_MODULE_17__["default"]; });

    		/* harmony import */ var _transformCanvasContext_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./transformCanvasContext.js */ "./drawing/transformCanvasContext.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "transformCanvasContext", function() { return _transformCanvasContext_js__WEBPACK_IMPORTED_MODULE_18__["default"]; });

    		/* harmony import */ var _resetCanvasContextTransform_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./resetCanvasContextTransform.js */ "./drawing/resetCanvasContextTransform.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "resetCanvasContextTransform", function() { return _resetCanvasContextTransform_js__WEBPACK_IMPORTED_MODULE_19__["default"]; });

    		/**
    		 * A {@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/fillStyle|color, gradient or pattern} to use inside shapes.
    		 * @typedef {(String|CanvasGradient|CanvasPattern)} FillStyle
    		 */

    		/**
    		 * A {@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/strokeStyle|color, gradient or pattern} to use for the lines around shapes.
    		 * @typedef {(String|CanvasGradient|CanvasPattern)} StrokeStyle
    		 */

    		/**
    		 * @callback ContextFn
    		 * @param {CanvasRenderingContext2D} context
    		 */



















    		 // Named exports



    		/***/ }),

    		/***/ "./drawing/path.js":
    		/*!*************************!*\
    		  !*** ./drawing/path.js ***!
    		  \*************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _stateManagement_toolStyle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../stateManagement/toolStyle.js */ "./stateManagement/toolStyle.js");

    		/**
    		 * This function manages the beginPath/stroke pattern for working with
    		 * {@link https://www.w3.org/TR/2dcontext/#drawing-paths-to-the-canvas|path objects}.
    		 *
    		 * @public
    		 * @function path
    		 * @memberof Drawing
    		 *
    		 * @param {CanvasRenderingContext2D} context - Context to add path to
    		 * @param {Object} [options={}] - Drawing Options
    		 * @param {StrokeStyle} [options.color] - The stroke style of the path.
    		 * @param {Number} [options.lineWidth] - The width of lines in the path. If null, no line width is set.
    		 *     If undefined then toolStyle.getToolWidth() is set.
    		 * @param {FillStyle} [options.fillStyle] - The style to fill the path with. If undefined then no filling is done.
    		 * @param {Number[]} [options.lineDash] - The {@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash|dash pattern}
    		 *     to use on the lines.
    		 * @param {ContextFn} fn - A drawing function to execute with the provided stroke pattern.
    		 * @returns {undefined}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (context) {
    		  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    		  var fn = arguments.length > 2 ? arguments[2] : undefined;
    		  var color = options.color,
    		      lineWidth = options.lineWidth,
    		      fillStyle = options.fillStyle,
    		      lineDash = options.lineDash;
    		  context.beginPath();
    		  context.strokeStyle = color || context.strokeStyle;
    		  context.lineWidth = lineWidth || lineWidth === undefined && _stateManagement_toolStyle_js__WEBPACK_IMPORTED_MODULE_0__["default"].getToolWidth() || context.lineWidth;

    		  if (lineDash) {
    		    context.setLineDash(lineDash);
    		  }

    		  fn(context);

    		  if (fillStyle) {
    		    context.fillStyle = fillStyle;
    		    context.fill();
    		  }

    		  context.stroke();

    		  if (lineDash) {
    		    context.setLineDash([]);
    		  }
    		});

    		/***/ }),

    		/***/ "./drawing/resetCanvasContextTransform.js":
    		/*!************************************************!*\
    		  !*** ./drawing/resetCanvasContextTransform.js ***!
    		  \************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/**
    		 * Resets the canvas {@link CanvasRenderingContext2D|context} transform to the
    		 * {@link https://www.w3.org/TR/2dcontext/#transformations|identity transform}.
    		 *
    		 * @public
    		 * @function resetCanvasContextTransform
    		 * @memberof Drawing
    		 *
    		 * @param {CanvasRenderingContext2D} context - context you wish to transform
    		 * @returns {void}
    		 */
    		/* harmony default export */ __webpack_exports__["default"] = (function (context) {
    		  context.setTransform(1, 0, 0, 1, 0, 0);
    		});

    		/***/ }),

    		/***/ "./drawing/setShadow.js":
    		/*!******************************!*\
    		  !*** ./drawing/setShadow.js ***!
    		  \******************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _util_getDefault_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../util/getDefault.js */ "./util/getDefault.js");

    		/**
    		 * Set the {@link https://www.w3.org/TR/2dcontext/#shadows|shadow} properties of the context.
    		 * Each property is set on the context object if defined, otherwise a default value is set.
    		 *
    		 * @public
    		 * @method setShadow
    		 * @memberof Drawing
    		 *
    		 * @param {CanvasRenderingContext2D} context - Context to apply shadow options on
    		 * @param {Object}  [options={}] - Options object
    		 * @param {Boolean} [options.shadow=undefined] - Whether to set any shadow options
    		 * @param {String}  [options.shadowColor=#000000] - Default value: #000000
    		 * @param {Number}  [options.shadowBlur=0] - Default Value: 0
    		 * @param {Number}  [options.shadowOffsetX=1] - Default value: 1
    		 * @param {Number}  [options.shadowOffsetY=1] - Default value: 1
    		 * @returns {undefined}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (context) {
    		  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    		  if (options.shadow) {
    		    context.shadowColor = Object(_util_getDefault_js__WEBPACK_IMPORTED_MODULE_0__["default"])(options.shadowColor, '#000000');
    		    context.shadowBlur = Object(_util_getDefault_js__WEBPACK_IMPORTED_MODULE_0__["default"])(options.shadowBlur, 0);
    		    context.shadowOffsetX = Object(_util_getDefault_js__WEBPACK_IMPORTED_MODULE_0__["default"])(options.shadowOffsetX, 1);
    		    context.shadowOffsetY = Object(_util_getDefault_js__WEBPACK_IMPORTED_MODULE_0__["default"])(options.shadowOffsetY, 1);
    		  }
    		});

    		/***/ }),

    		/***/ "./drawing/transformCanvasContext.js":
    		/*!*******************************************!*\
    		  !*** ./drawing/transformCanvasContext.js ***!
    		  \*******************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/**
    		 * Transform the canvas {@link CanvasRenderingContext2D|context} such that it
    		 * coincides with the orientation of the viewport.
    		 *
    		 * @public
    		 * @function transformCanvasContext
    		 * @memberof Drawing
    		 *
    		 * @param {CanvasRenderingContext2D} context - Context you wish to transform.
    		 * @param {HTMLCanvasElement} canvas - Canvas the context relates to.
    		 * @param {*} viewport - The viewport you wish to map on to.
    		 * @returns {void}
    		 */
    		/* harmony default export */ __webpack_exports__["default"] = (function (context, canvas, viewport) {
    		  if (!(viewport.vflip || viewport.vflip || viewport.rotation)) {
    		    return;
    		  }

    		  var translation = {
    		    x: canvas.width / 2 + viewport.translation.x * viewport.scale,
    		    y: canvas.height / 2 + viewport.translation.y * viewport.scale
    		  };
    		  context.translate(translation.x, translation.y);

    		  if (viewport.rotation) {
    		    context.rotate(viewport.rotation * Math.PI / 180);
    		  }

    		  if (viewport.vflip) {
    		    context.scale(1, -1);
    		  }

    		  if (viewport.hflip) {
    		    context.scale(-1, 1);
    		  }

    		  context.translate(-translation.x, -translation.y);
    		});

    		/***/ }),

    		/***/ "./eventDispatchers/imageRenderedEventDispatcher.js":
    		/*!**********************************************************!*\
    		  !*** ./eventDispatchers/imageRenderedEventDispatcher.js ***!
    		  \**********************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _store_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../store/index.js */ "./store/index.js");
    		/* harmony import */ var _tools_base_BaseBrushTool_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../tools/base/BaseBrushTool.js */ "./tools/base/BaseBrushTool.js");
    		/* harmony import */ var _eventListeners_onImageRenderedBrushEventHandler_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../eventListeners/onImageRenderedBrushEventHandler.js */ "./eventListeners/onImageRenderedBrushEventHandler.js");
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../externalModules.js */ "./externalModules.js");





    		var onImageRendered = function onImageRendered(evt) {
    		  var eventData = evt.detail;
    		  var element = eventData.element; // Render Annotation Tools

    		  var toolsToRender = _store_index_js__WEBPACK_IMPORTED_MODULE_0__["state"].tools.filter(function (tool) {
    		    return tool.element === element && (tool.mode === 'active' || tool.mode === 'passive' || tool.mode === 'enabled');
    		  });
    		  var brushTools = toolsToRender.filter(function (tool) {
    		    return tool instanceof _tools_base_BaseBrushTool_js__WEBPACK_IMPORTED_MODULE_1__["default"];
    		  });

    		  if (brushTools.length > 0) {
    		    Object(_eventListeners_onImageRenderedBrushEventHandler_js__WEBPACK_IMPORTED_MODULE_2__["default"])(evt);
    		  }

    		  toolsToRender.forEach(function (tool) {
    		    if (tool.renderToolData) {
    		      tool.renderToolData(evt);
    		    }
    		  });
    		};

    		var enable = function enable(element) {
    		  element.addEventListener(_externalModules_js__WEBPACK_IMPORTED_MODULE_3__["default"].cornerstone.EVENTS.IMAGE_RENDERED, onImageRendered);
    		};

    		var disable = function disable(element) {
    		  element.removeEventListener(_externalModules_js__WEBPACK_IMPORTED_MODULE_3__["default"].cornerstone.EVENTS.IMAGE_RENDERED, onImageRendered);
    		};

    		/* harmony default export */ __webpack_exports__["default"] = ({
    		  enable: enable,
    		  disable: disable
    		});

    		/***/ }),

    		/***/ "./eventDispatchers/index.js":
    		/*!***********************************!*\
    		  !*** ./eventDispatchers/index.js ***!
    		  \***********************************/
    		/*! exports provided: imageRenderedEventDispatcher, mouseToolEventDispatcher, newImageEventDispatcher, touchToolEventDispatcher */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _imageRenderedEventDispatcher_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./imageRenderedEventDispatcher.js */ "./eventDispatchers/imageRenderedEventDispatcher.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "imageRenderedEventDispatcher", function() { return _imageRenderedEventDispatcher_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

    		/* harmony import */ var _mouseToolEventDispatcher_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mouseToolEventDispatcher.js */ "./eventDispatchers/mouseToolEventDispatcher.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mouseToolEventDispatcher", function() { return _mouseToolEventDispatcher_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });

    		/* harmony import */ var _newImageEventDispatcher_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./newImageEventDispatcher.js */ "./eventDispatchers/newImageEventDispatcher.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "newImageEventDispatcher", function() { return _newImageEventDispatcher_js__WEBPACK_IMPORTED_MODULE_2__["default"]; });

    		/* harmony import */ var _touchToolEventDispatcher_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./touchToolEventDispatcher.js */ "./eventDispatchers/touchToolEventDispatcher.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "touchToolEventDispatcher", function() { return _touchToolEventDispatcher_js__WEBPACK_IMPORTED_MODULE_3__["default"]; });







    		/***/ }),

    		/***/ "./eventDispatchers/mouseEventHandlers/addNewMeasurement.js":
    		/*!******************************************************************!*\
    		  !*** ./eventDispatchers/mouseEventHandlers/addNewMeasurement.js ***!
    		  \******************************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../events.js */ "./events.js");
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _manipulators_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../manipulators/index.js */ "./manipulators/index.js");
    		/* harmony import */ var _util_logger_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../util/logger.js */ "./util/logger.js");
    		/* harmony import */ var _util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../util/triggerEvent.js */ "./util/triggerEvent.js");






    		var logger = Object(_util_logger_js__WEBPACK_IMPORTED_MODULE_4__["getLogger"])('eventDispatchers:mouseEventHandlers');
    		/* harmony default export */ __webpack_exports__["default"] = (function (evt, tool) {
    		  logger.log('addNewMeasurement');
    		  evt.preventDefault();
    		  evt.stopPropagation();
    		  var eventData = evt.detail;
    		  var element = eventData.element;
    		  var measurementData = tool.createNewMeasurement(eventData);

    		  if (!measurementData) {
    		    return;
    		  } // Associate this data with this imageId so we can render it and manipulate it


    		  Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_2__["addToolState"])(element, tool.name, measurementData);
    		  _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.updateImage(element);
    		  var options = Object.assign({
    		    doneMovingCallback: function doneMovingCallback() {
    		      var eventType = _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MEASUREMENT_COMPLETED;
    		      var eventData = {
    		        toolName: tool.name,
    		        element: element,
    		        measurementData: measurementData
    		      };
    		      Object(_util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_5__["default"])(element, eventType, eventData);
    		    }
    		  }, tool.options);
    		  var handleMover = Object.keys(measurementData.handles).length === 1 ? _manipulators_index_js__WEBPACK_IMPORTED_MODULE_3__["moveHandle"] : _manipulators_index_js__WEBPACK_IMPORTED_MODULE_3__["moveNewHandle"];
    		  handleMover(eventData, tool.name, measurementData, measurementData.handles.end, options, 'mouse');
    		});

    		/***/ }),

    		/***/ "./eventDispatchers/mouseEventHandlers/index.js":
    		/*!******************************************************!*\
    		  !*** ./eventDispatchers/mouseEventHandlers/index.js ***!
    		  \******************************************************/
    		/*! exports provided: mouseClick, mouseDown, mouseDownActivate, mouseDoubleClick, mouseDrag, mouseMove, mouseUp, mouseWheel */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mouseClick", function() { return mouseClick; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mouseDoubleClick", function() { return mouseDoubleClick; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mouseUp", function() { return mouseUp; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mouseWheel", function() { return mouseWheel; });
    		/* harmony import */ var _shared_customCallbackHandler_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../shared/customCallbackHandler.js */ "./eventDispatchers/shared/customCallbackHandler.js");
    		/* harmony import */ var _mouseDown_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mouseDown.js */ "./eventDispatchers/mouseEventHandlers/mouseDown.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mouseDown", function() { return _mouseDown_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });

    		/* harmony import */ var _mouseDownActivate_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mouseDownActivate.js */ "./eventDispatchers/mouseEventHandlers/mouseDownActivate.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mouseDownActivate", function() { return _mouseDownActivate_js__WEBPACK_IMPORTED_MODULE_2__["default"]; });

    		/* harmony import */ var _mouseDrag_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mouseDrag.js */ "./eventDispatchers/mouseEventHandlers/mouseDrag.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mouseDrag", function() { return _mouseDrag_js__WEBPACK_IMPORTED_MODULE_3__["default"]; });

    		/* harmony import */ var _mouseMove_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./mouseMove.js */ "./eventDispatchers/mouseEventHandlers/mouseMove.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mouseMove", function() { return _mouseMove_js__WEBPACK_IMPORTED_MODULE_4__["default"]; });






    		var mouseClick = _shared_customCallbackHandler_js__WEBPACK_IMPORTED_MODULE_0__["default"].bind(null, 'Mouse', 'mouseClickCallback');
    		var mouseDoubleClick = _shared_customCallbackHandler_js__WEBPACK_IMPORTED_MODULE_0__["default"].bind(null, 'Mouse', 'doubleClickCallback');
    		var mouseUp = _shared_customCallbackHandler_js__WEBPACK_IMPORTED_MODULE_0__["default"].bind(null, 'Mouse', 'mouseUpCallback');
    		var mouseWheel = _shared_customCallbackHandler_js__WEBPACK_IMPORTED_MODULE_0__["default"].bind(null, 'MouseWheel', 'mouseWheelCallback');


    		/***/ }),

    		/***/ "./eventDispatchers/mouseEventHandlers/mouseDown.js":
    		/*!**********************************************************!*\
    		  !*** ./eventDispatchers/mouseEventHandlers/mouseDown.js ***!
    		  \**********************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _store_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../store/index.js */ "./store/index.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _store_getToolsWithMoveableHandles_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../store/getToolsWithMoveableHandles.js */ "./store/getToolsWithMoveableHandles.js");
    		/* harmony import */ var _util_findAndMoveHelpers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../util/findAndMoveHelpers.js */ "./util/findAndMoveHelpers.js");
    		/* harmony import */ var _store_getInteractiveToolsForElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../../store/getInteractiveToolsForElement.js */ "./store/getInteractiveToolsForElement.js");
    		/* harmony import */ var _store_getToolsWithDataForElement_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../../store/getToolsWithDataForElement.js */ "./store/getToolsWithDataForElement.js");
    		/* harmony import */ var _store_filterToolsUsableWithMultiPartTools_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../../store/filterToolsUsableWithMultiPartTools.js */ "./store/filterToolsUsableWithMultiPartTools.js");
    		// State

    		 // Util






    		/**
    		 * MouseDown is called before MouseDownActivate. If MouseDown
    		 * finds an existing tool to interact with, it can prevent the
    		 * event from bubbling to MouseDownActivate.
    		 *
    		 * @private
    		 * @param {mousedown} evt
    		 * @listens {CornerstoneTools.event:cornerstonetoolsmousedown}
    		 * @returns {undefined}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (evt) {
    		  if (_store_index_js__WEBPACK_IMPORTED_MODULE_0__["state"].isToolLocked) {
    		    return;
    		  }

    		  var eventData = evt.detail;
    		  var element = evt.detail.element;
    		  var coords = evt.detail.currentPoints.canvas; // High level filtering

    		  var activeAndPassiveTools = Object(_store_getInteractiveToolsForElement_js__WEBPACK_IMPORTED_MODULE_4__["default"])(element, _store_index_js__WEBPACK_IMPORTED_MODULE_0__["getters"].mouseTools()); // ACTIVE TOOL W/ PRE CALLBACK?
    		  // Note: In theory, this should only ever be a single tool.

    		  var activeTools = activeAndPassiveTools.filter(function (tool) {
    		    return tool.mode === 'active' && Array.isArray(tool.options.mouseButtonMask) && tool.options.mouseButtonMask.includes(eventData.buttons) && tool.options.isMouseActive;
    		  });

    		  if (_store_index_js__WEBPACK_IMPORTED_MODULE_0__["state"].isMultiPartToolActive) {
    		    activeTools = Object(_store_filterToolsUsableWithMultiPartTools_js__WEBPACK_IMPORTED_MODULE_6__["default"])(activeTools);
    		  } // If any tools are active, check if they have a special reason for dealing with the event.


    		  if (activeTools.length > 0) {
    		    // TODO: If length > 1, you could assess fitness and select the ideal tool
    		    // TODO: But because we're locking this to 'active' tools, that should rarely be an issue
    		    // Super-Meta-TODO: ^ I think we should just take the approach of one active tool per mouse button?
    		    var firstActiveToolWithCallback = activeTools.find(function (tool) {
    		      return typeof tool.preMouseDownCallback === 'function';
    		    });

    		    if (firstActiveToolWithCallback) {
    		      var consumedEvent = firstActiveToolWithCallback.preMouseDownCallback(evt);

    		      if (consumedEvent) {
    		        return;
    		      }
    		    }
    		  }

    		  if (_store_index_js__WEBPACK_IMPORTED_MODULE_0__["state"].isMultiPartToolActive) {
    		    // Don't fire events to Annotation Tools during a multi part loop.
    		    return;
    		  } // Annotation tool specific


    		  var annotationTools = Object(_store_getToolsWithDataForElement_js__WEBPACK_IMPORTED_MODULE_5__["default"])(element, activeAndPassiveTools); // NEAR HANDLES?

    		  var annotationToolsWithMoveableHandles = Object(_store_getToolsWithMoveableHandles_js__WEBPACK_IMPORTED_MODULE_2__["default"])(element, annotationTools, coords, 'mouse');

    		  if (annotationToolsWithMoveableHandles.length > 0) {
    		    var firstToolWithMoveableHandles = annotationToolsWithMoveableHandles[0];
    		    var toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_1__["getToolState"])(element, firstToolWithMoveableHandles.name);

    		    var _findHandleDataNearIm = Object(_util_findAndMoveHelpers_js__WEBPACK_IMPORTED_MODULE_3__["findHandleDataNearImagePoint"])(element, toolState, firstToolWithMoveableHandles.name, coords),
    		        handle = _findHandleDataNearIm.handle,
    		        data = _findHandleDataNearIm.data;

    		    firstToolWithMoveableHandles.handleSelectedCallback(evt, data, handle, 'mouse');
    		    return;
    		  } // NEAR TOOL?


    		  var annotationToolsWithPointNearClick = activeAndPassiveTools.filter(function (tool) {
    		    var toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_1__["getToolState"])(element, tool.name);
    		    var isNearPoint = toolState && toolState.data && tool.pointNearTool && toolState.data.some(function (data) {
    		      return tool.pointNearTool(element, data, coords, 'mouse');
    		    });
    		    return isNearPoint;
    		  });

    		  if (annotationToolsWithPointNearClick.length > 0) {
    		    var firstToolNearPoint = annotationToolsWithPointNearClick[0];

    		    var _toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_1__["getToolState"])(element, firstToolNearPoint.name);

    		    var firstAnnotationNearPoint = _toolState.data.find(function (data) {
    		      return firstToolNearPoint.pointNearTool(element, data, coords);
    		    });

    		    firstToolNearPoint.toolSelectedCallback(evt, firstAnnotationNearPoint, 'mouse');
    		    return;
    		  } // ACTIVE TOOL W/ POST CALLBACK?
    		  // If any tools are active, check if they have a special reason for dealing with the event.


    		  if (activeTools.length > 0) {
    		    // TODO: If length > 1, you could assess fitness and select the ideal tool
    		    // TODO: But because we're locking this to 'active' tools, that should rarely be an issue
    		    // Super-Meta-TODO: ^ I think we should just take the approach of one active tool per mouse button?
    		    var _firstActiveToolWithCallback = activeTools.find(function (tool) {
    		      return typeof tool.postMouseDownCallback === 'function';
    		    });

    		    if (_firstActiveToolWithCallback) {
    		      var _consumedEvent = _firstActiveToolWithCallback.postMouseDownCallback(evt);

    		      if (_consumedEvent) {
    		        return;
    		      }
    		    }
    		  }
    		});

    		/***/ }),

    		/***/ "./eventDispatchers/mouseEventHandlers/mouseDownActivate.js":
    		/*!******************************************************************!*\
    		  !*** ./eventDispatchers/mouseEventHandlers/mouseDownActivate.js ***!
    		  \******************************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _addNewMeasurement_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./addNewMeasurement.js */ "./eventDispatchers/mouseEventHandlers/addNewMeasurement.js");
    		/* harmony import */ var _store_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../store/index.js */ "./store/index.js");
    		/* harmony import */ var _tools_base_BaseAnnotationTool_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../tools/base/BaseAnnotationTool.js */ "./tools/base/BaseAnnotationTool.js");
    		/* harmony import */ var _util_getActiveTool__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../util/getActiveTool */ "./util/getActiveTool.js");




    		/* harmony default export */ __webpack_exports__["default"] = (function (evt) {
    		  if (_store_index_js__WEBPACK_IMPORTED_MODULE_1__["state"].isToolLocked) {
    		    return;
    		  }

    		  var _evt$detail = evt.detail,
    		      element = _evt$detail.element,
    		      buttons = _evt$detail.buttons;
    		  var activeTool = Object(_util_getActiveTool__WEBPACK_IMPORTED_MODULE_3__["default"])(element, buttons, 'mouse');

    		  if (!activeTool) {
    		    return;
    		  }

    		  if (typeof activeTool.preMouseDownActivateCallback === 'function') {
    		    var consumedEvent = activeTool.preMouseDownActivateCallback(evt);

    		    if (consumedEvent) {
    		      return;
    		    }
    		  }

    		  if (_store_index_js__WEBPACK_IMPORTED_MODULE_1__["state"].isMultiPartToolActive) {
    		    return;
    		  } // Note: custom `addNewMeasurement` will need to prevent event bubbling


    		  if (activeTool.addNewMeasurement) {
    		    activeTool.addNewMeasurement(evt, 'mouse');
    		  } else if (activeTool instanceof _tools_base_BaseAnnotationTool_js__WEBPACK_IMPORTED_MODULE_2__["default"]) {
    		    Object(_addNewMeasurement_js__WEBPACK_IMPORTED_MODULE_0__["default"])(evt, activeTool);
    		  }
    		});

    		/***/ }),

    		/***/ "./eventDispatchers/mouseEventHandlers/mouseDrag.js":
    		/*!**********************************************************!*\
    		  !*** ./eventDispatchers/mouseEventHandlers/mouseDrag.js ***!
    		  \**********************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _store_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../store/index.js */ "./store/index.js");
    		/* harmony import */ var _store_getActiveToolsForElement_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../store/getActiveToolsForElement.js */ "./store/getActiveToolsForElement.js");
    		/* harmony import */ var _store_filterToolsUsableWithMultiPartTools_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../store/filterToolsUsableWithMultiPartTools.js */ "./store/filterToolsUsableWithMultiPartTools.js");


    		 // Tools like wwwc. Non-annotation tools w/ specific
    		// Down + mouse behavior
    		// TODO: I don't like filtering in drag because it's such
    		// A high frequency event. Anything we can do to reduce
    		// Repeat math here would be a big help

    		/* harmony default export */ __webpack_exports__["default"] = (function (evt) {
    		  if (_store_index_js__WEBPACK_IMPORTED_MODULE_0__["state"].isToolLocked) {
    		    return;
    		  }

    		  var tools;
    		  var eventData = evt.detail;
    		  var element = eventData.element; // Filter out disabled, enabled, and passive

    		  tools = Object(_store_getActiveToolsForElement_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element, _store_index_js__WEBPACK_IMPORTED_MODULE_0__["getters"].mouseTools());
    		  tools = tools.filter(function (tool) {
    		    return Array.isArray(tool.options.mouseButtonMask) && tool.options.mouseButtonMask.includes(eventData.buttons) && tool.options.isMouseActive;
    		  });
    		  tools = tools.filter(function (tool) {
    		    return typeof tool.mouseDragCallback === 'function';
    		  });

    		  if (_store_index_js__WEBPACK_IMPORTED_MODULE_0__["state"].isMultiPartToolActive) {
    		    tools = Object(_store_filterToolsUsableWithMultiPartTools_js__WEBPACK_IMPORTED_MODULE_2__["default"])(tools);
    		  }

    		  if (tools.length === 0) {
    		    return;
    		  }

    		  var activeTool = tools[0];
    		  activeTool.mouseDragCallback(evt);
    		});

    		/***/ }),

    		/***/ "./eventDispatchers/mouseEventHandlers/mouseMove.js":
    		/*!**********************************************************!*\
    		  !*** ./eventDispatchers/mouseEventHandlers/mouseMove.js ***!
    		  \**********************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _store_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../store/index.js */ "./store/index.js");
    		/* harmony import */ var _store_getInteractiveToolsForElement_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../store/getInteractiveToolsForElement.js */ "./store/getInteractiveToolsForElement.js");
    		/* harmony import */ var _store_getToolsWithDataForElement_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../store/getToolsWithDataForElement.js */ "./store/getToolsWithDataForElement.js");
    		 // State




    		/**
    		 * This is mostly used to update the [un]hover state
    		 * of a tool.
    		 *
    		 * @private
    		 * @param {*} evt
    		 * @returns {void}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (evt) {
    		  if (_store_index_js__WEBPACK_IMPORTED_MODULE_1__["state"].isToolLocked || _store_index_js__WEBPACK_IMPORTED_MODULE_1__["state"].isMultiPartToolActive) {
    		    return;
    		  }

    		  var tools;
    		  var _evt$detail = evt.detail,
    		      element = _evt$detail.element,
    		      currentPoints = _evt$detail.currentPoints; // Set the mouse position incase any tool needs it.

    		  _store_index_js__WEBPACK_IMPORTED_MODULE_1__["state"].mousePositionImage = currentPoints.image; // TODO: instead of filtering these for every interaction, we can change our
    		  // TODO: State's structure to always know these values.
    		  // Filter out disabled and enabled

    		  tools = Object(_store_getInteractiveToolsForElement_js__WEBPACK_IMPORTED_MODULE_2__["default"])(element, _store_index_js__WEBPACK_IMPORTED_MODULE_1__["getters"].mouseTools());
    		  var activeTools = tools.filter(function (tool) {
    		    return tool.mode === 'active' && tool.options.isMouseActive;
    		  });
    		  var imageNeedsUpdate = false; // If any tools are active, check if they have a canvas cursor, and if so update image.

    		  if (activeTools.length > 0) {
    		    imageNeedsUpdate = activeTools.some(function (tool) {
    		      return tool.updateOnMouseMove;
    		    });
    		  }

    		  tools = Object(_store_getToolsWithDataForElement_js__WEBPACK_IMPORTED_MODULE_3__["default"])(element, tools); // Iterate over each tool, and each tool's data
    		  // Activate any handles we're hovering over, or whole tools if we're near the tool
    		  // If we've changed the state of anything, redrawn the image

    		  for (var t = 0; t < tools.length; t++) {
    		    var tool = tools[t];

    		    if (typeof tool.mouseMoveCallback === 'function') {
    		      imageNeedsUpdate = tool.mouseMoveCallback(evt) || imageNeedsUpdate;
    		    }
    		  } // Tool data activation status changed, redraw the image


    		  if (imageNeedsUpdate === true) {
    		    _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.updateImage(element);
    		  }
    		});

    		/***/ }),

    		/***/ "./eventDispatchers/mouseToolEventDispatcher.js":
    		/*!******************************************************!*\
    		  !*** ./eventDispatchers/mouseToolEventDispatcher.js ***!
    		  \******************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../events.js */ "./events.js");
    		/* harmony import */ var _mouseEventHandlers_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mouseEventHandlers/index.js */ "./eventDispatchers/mouseEventHandlers/index.js");


    		/**
    		 * These listeners are emitted in order, and can be cancelled/prevented from bubbling
    		 * by any previous event.
    		 * - mouseMove: used to update the [un]hover state of a tool (highlighting)
    		 * - mouseDown: check to see if we are close to an existing annotation, grab it
    		 * - mouseDownActivate: createNewMeasurement (usually)
    		 * - mouseDrag: update measurement or apply strategy (wwwc)
    		 * - mouseDoubleClick: usually a one-time apply specialty action
    		 * - onImageRendered: redraw visible tool data
    		 * @private
    		 * @param {*} element
    		 * @returns {undefined}
    		 */

    		var enable = function enable(element) {
    		  element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MOUSE_CLICK, _mouseEventHandlers_index_js__WEBPACK_IMPORTED_MODULE_1__["mouseClick"]);
    		  element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MOUSE_DOWN, _mouseEventHandlers_index_js__WEBPACK_IMPORTED_MODULE_1__["mouseDown"]);
    		  element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MOUSE_DOWN_ACTIVATE, _mouseEventHandlers_index_js__WEBPACK_IMPORTED_MODULE_1__["mouseDownActivate"]);
    		  element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MOUSE_DOUBLE_CLICK, _mouseEventHandlers_index_js__WEBPACK_IMPORTED_MODULE_1__["mouseDoubleClick"]);
    		  element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MOUSE_DRAG, _mouseEventHandlers_index_js__WEBPACK_IMPORTED_MODULE_1__["mouseDrag"]);
    		  element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MOUSE_MOVE, _mouseEventHandlers_index_js__WEBPACK_IMPORTED_MODULE_1__["mouseMove"]);
    		  element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MOUSE_UP, _mouseEventHandlers_index_js__WEBPACK_IMPORTED_MODULE_1__["mouseUp"]);
    		  element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MOUSE_WHEEL, _mouseEventHandlers_index_js__WEBPACK_IMPORTED_MODULE_1__["mouseWheel"]);
    		};

    		var disable = function disable(element) {
    		  element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MOUSE_CLICK, _mouseEventHandlers_index_js__WEBPACK_IMPORTED_MODULE_1__["mouseClick"]);
    		  element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MOUSE_DOWN, _mouseEventHandlers_index_js__WEBPACK_IMPORTED_MODULE_1__["mouseDown"]);
    		  element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MOUSE_DOWN_ACTIVATE, _mouseEventHandlers_index_js__WEBPACK_IMPORTED_MODULE_1__["mouseDownActivate"]);
    		  element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MOUSE_DOUBLE_CLICK, _mouseEventHandlers_index_js__WEBPACK_IMPORTED_MODULE_1__["mouseDoubleClick"]);
    		  element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MOUSE_DRAG, _mouseEventHandlers_index_js__WEBPACK_IMPORTED_MODULE_1__["mouseDrag"]);
    		  element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MOUSE_MOVE, _mouseEventHandlers_index_js__WEBPACK_IMPORTED_MODULE_1__["mouseMove"]);
    		  element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MOUSE_UP, _mouseEventHandlers_index_js__WEBPACK_IMPORTED_MODULE_1__["mouseUp"]);
    		  element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MOUSE_WHEEL, _mouseEventHandlers_index_js__WEBPACK_IMPORTED_MODULE_1__["mouseWheel"]);
    		};

    		/* harmony default export */ __webpack_exports__["default"] = ({
    		  enable: enable,
    		  disable: disable
    		});

    		/***/ }),

    		/***/ "./eventDispatchers/newImageEventDispatcher.js":
    		/*!*****************************************************!*\
    		  !*** ./eventDispatchers/newImageEventDispatcher.js ***!
    		  \*****************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _store_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../store/index.js */ "./store/index.js");
    		/* harmony import */ var _tools_base_BaseBrushTool_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../tools/base/BaseBrushTool.js */ "./tools/base/BaseBrushTool.js");
    		/* harmony import */ var _eventListeners_onNewImageBrushEventHandler_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../eventListeners/onNewImageBrushEventHandler.js */ "./eventListeners/onNewImageBrushEventHandler.js");
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../externalModules.js */ "./externalModules.js");





    		var onNewImage = function onNewImage(evt) {
    		  if (_store_index_js__WEBPACK_IMPORTED_MODULE_0__["state"].isToolLocked) {
    		    return false;
    		  }

    		  var element = evt.detail.element;
    		  var tools = _store_index_js__WEBPACK_IMPORTED_MODULE_0__["state"].tools.filter(function (tool) {
    		    return tool.element === element && (tool.mode === 'active' || tool.mode === 'passive' || tool.mode === 'enabled');
    		  });

    		  if (tools.length === 0) {
    		    return false;
    		  }

    		  tools.forEach(function (tool) {
    		    if (tool.newImageCallback) {
    		      tool.newImageCallback(evt);
    		    }
    		  }); // Check if any brush tools are present.

    		  var brushTools = tools.filter(function (tool) {
    		    return tool instanceof _tools_base_BaseBrushTool_js__WEBPACK_IMPORTED_MODULE_1__["default"];
    		  });

    		  if (brushTools.length > 0) {
    		    Object(_eventListeners_onNewImageBrushEventHandler_js__WEBPACK_IMPORTED_MODULE_2__["default"])(evt);
    		  }
    		};

    		var enable = function enable(element) {
    		  element.addEventListener(_externalModules_js__WEBPACK_IMPORTED_MODULE_3__["default"].cornerstone.EVENTS.NEW_IMAGE, onNewImage);
    		};

    		var disable = function disable(element) {
    		  element.removeEventListener(_externalModules_js__WEBPACK_IMPORTED_MODULE_3__["default"].cornerstone.EVENTS.NEW_IMAGE, onNewImage);
    		};

    		/* harmony default export */ __webpack_exports__["default"] = ({
    		  enable: enable,
    		  disable: disable
    		});

    		/***/ }),

    		/***/ "./eventDispatchers/shared/customCallbackHandler.js":
    		/*!**********************************************************!*\
    		  !*** ./eventDispatchers/shared/customCallbackHandler.js ***!
    		  \**********************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _store_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../store/index.js */ "./store/index.js");
    		/* harmony import */ var _store_getActiveToolsForElement_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../store/getActiveToolsForElement.js */ "./store/getActiveToolsForElement.js");
    		/* harmony import */ var _store_filterToolsUsableWithMultiPartTools_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../store/filterToolsUsableWithMultiPartTools.js */ "./store/filterToolsUsableWithMultiPartTools.js");



    		/* harmony default export */ __webpack_exports__["default"] = (function (handlerType, customFunction, evt) {
    		  if (_store_index_js__WEBPACK_IMPORTED_MODULE_0__["state"].isToolLocked) {
    		    return false;
    		  } // TODO: We sometimes see a null detail for TOUCH_PRESS


    		  var element = evt.detail.element;
    		  var tools = _store_index_js__WEBPACK_IMPORTED_MODULE_0__["state"].tools.filter(function (tool) {
    		    return tool.supportedInteractionTypes.includes(handlerType);
    		  }); // Tool is active, and specific callback is active

    		  tools = Object(_store_getActiveToolsForElement_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element, tools, handlerType); // Tool has expected callback custom function

    		  tools = tools.filter(function (tool) {
    		    return typeof tool[customFunction] === 'function';
    		  });

    		  if (_store_index_js__WEBPACK_IMPORTED_MODULE_0__["state"].isMultiPartToolActive) {
    		    tools = Object(_store_filterToolsUsableWithMultiPartTools_js__WEBPACK_IMPORTED_MODULE_2__["default"])(tools);
    		  }

    		  if (tools.length === 0) {
    		    return false;
    		  }

    		  tools[0][customFunction](evt);
    		});

    		/***/ }),

    		/***/ "./eventDispatchers/touchEventHandlers/addNewMeasurement.js":
    		/*!******************************************************************!*\
    		  !*** ./eventDispatchers/touchEventHandlers/addNewMeasurement.js ***!
    		  \******************************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../events.js */ "./events.js");
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _store_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../store/index.js */ "./store/index.js");
    		/* harmony import */ var _manipulators_anyHandlesOutsideImage_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../manipulators/anyHandlesOutsideImage.js */ "./manipulators/anyHandlesOutsideImage.js");
    		/* harmony import */ var _manipulators_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../manipulators/index.js */ "./manipulators/index.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../util/triggerEvent.js */ "./util/triggerEvent.js");
    		/* harmony import */ var _util_logger_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../util/logger.js */ "./util/logger.js");








    		var logger = Object(_util_logger_js__WEBPACK_IMPORTED_MODULE_7__["getLogger"])('eventDispatchers:touchEventHandlers');
    		/* harmony default export */ __webpack_exports__["default"] = (function (evt, tool) {
    		  logger.log('addNewMeasurement');
    		  evt.preventDefault();
    		  evt.stopPropagation();
    		  var touchEventData = evt.detail;
    		  var element = touchEventData.element;
    		  var measurementData = tool.createNewMeasurement(touchEventData);

    		  if (!measurementData) {
    		    return;
    		  }

    		  Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_5__["addToolState"])(element, tool.name, measurementData); // Todo: Looks like we're handling the "up" of the tap?

    		  if (Object.keys(measurementData.handles).length === 1 && touchEventData.type === _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TAP) {
    		    // Todo: bold assumptions about measurement data for all tools?
    		    measurementData.active = false;
    		    measurementData.handles.end.active = false;
    		    measurementData.handles.end.highlight = false;
    		    measurementData.invalidated = true;
    		    var deleteIfHandleOutsideImage = _store_index_js__WEBPACK_IMPORTED_MODULE_2__["state"].deleteIfHandleOutsideImage || tool.options.deleteIfHandleOutsideImage;

    		    if (deleteIfHandleOutsideImage && Object(_manipulators_anyHandlesOutsideImage_js__WEBPACK_IMPORTED_MODULE_3__["default"])(touchEventData, measurementData.handles)) {
    		      // Delete the measurement
    		      Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_5__["removeToolState"])(element, tool.name, measurementData);
    		    }

    		    _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.updateImage(element);
    		    return;
    		  }

    		  _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.updateImage(element);
    		  var options = Object.assign({
    		    doneMovingCallback: function doneMovingCallback() {
    		      var eventType = _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MEASUREMENT_COMPLETED;
    		      var eventData = {
    		        toolName: tool.name,
    		        element: element,
    		        measurementData: measurementData
    		      };
    		      Object(_util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_6__["default"])(element, eventType, eventData);
    		    }
    		  }, tool.options);
    		  Object(_manipulators_index_js__WEBPACK_IMPORTED_MODULE_4__["moveNewHandle"])(touchEventData, tool.name, measurementData, measurementData.handles.end, options, 'touch');
    		});

    		/***/ }),

    		/***/ "./eventDispatchers/touchEventHandlers/index.js":
    		/*!******************************************************!*\
    		  !*** ./eventDispatchers/touchEventHandlers/index.js ***!
    		  \******************************************************/
    		/*! exports provided: doubleTap, multiTouchDrag, tap, touchDrag, touchEnd, touchPinch, touchPress, touchRotate, touchStart, touchStartActive */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "doubleTap", function() { return doubleTap; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "touchDrag", function() { return touchDrag; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "touchEnd", function() { return touchEnd; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "touchPinch", function() { return touchPinch; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "touchPress", function() { return touchPress; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "touchRotate", function() { return touchRotate; });
    		/* harmony import */ var _shared_customCallbackHandler_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../shared/customCallbackHandler.js */ "./eventDispatchers/shared/customCallbackHandler.js");
    		/* harmony import */ var _multiTouchDrag_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./multiTouchDrag.js */ "./eventDispatchers/touchEventHandlers/multiTouchDrag.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "multiTouchDrag", function() { return _multiTouchDrag_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });

    		/* harmony import */ var _tap_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tap.js */ "./eventDispatchers/touchEventHandlers/tap.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tap", function() { return _tap_js__WEBPACK_IMPORTED_MODULE_2__["default"]; });

    		/* harmony import */ var _touchStart_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./touchStart.js */ "./eventDispatchers/touchEventHandlers/touchStart.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "touchStart", function() { return _touchStart_js__WEBPACK_IMPORTED_MODULE_3__["default"]; });

    		/* harmony import */ var _touchStartActive_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./touchStartActive.js */ "./eventDispatchers/touchEventHandlers/touchStartActive.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "touchStartActive", function() { return _touchStartActive_js__WEBPACK_IMPORTED_MODULE_4__["default"]; });






    		var doubleTap = _shared_customCallbackHandler_js__WEBPACK_IMPORTED_MODULE_0__["default"].bind(null, 'DoubleTap', 'doubleTapCallback'); // TODO: some touchDrag tools don't want to fire on touchStart
    		// TODO: Drag tools have an option `fireOnTouchStart` used to filter
    		// TODO: Them out of TOUCH_START handler

    		var touchDrag = _shared_customCallbackHandler_js__WEBPACK_IMPORTED_MODULE_0__["default"].bind(null, 'Touch', 'touchDragCallback');
    		var touchEnd = _shared_customCallbackHandler_js__WEBPACK_IMPORTED_MODULE_0__["default"].bind(null, 'Touch', 'touchEndCallback');
    		var touchPinch = _shared_customCallbackHandler_js__WEBPACK_IMPORTED_MODULE_0__["default"].bind(null, 'TouchPinch', 'touchPinchCallback');
    		var touchPress = _shared_customCallbackHandler_js__WEBPACK_IMPORTED_MODULE_0__["default"].bind(null, 'Touch', 'touchPressCallback');
    		var touchRotate = _shared_customCallbackHandler_js__WEBPACK_IMPORTED_MODULE_0__["default"].bind(null, 'TouchRotate', 'touchRotateCallback');


    		/***/ }),

    		/***/ "./eventDispatchers/touchEventHandlers/multiTouchDrag.js":
    		/*!***************************************************************!*\
    		  !*** ./eventDispatchers/touchEventHandlers/multiTouchDrag.js ***!
    		  \***************************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _store_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../store/index.js */ "./store/index.js");
    		/* harmony import */ var _store_getActiveToolsForElement_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../store/getActiveToolsForElement.js */ "./store/getActiveToolsForElement.js");
    		/* harmony import */ var _store_filterToolsUsableWithMultiPartTools_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../store/filterToolsUsableWithMultiPartTools.js */ "./store/filterToolsUsableWithMultiPartTools.js");



    		/* harmony default export */ __webpack_exports__["default"] = (function (evt) {
    		  if (_store_index_js__WEBPACK_IMPORTED_MODULE_0__["state"].isToolLocked) {
    		    return false;
    		  } // TODO: We sometimes see a null detail for TOUCH_PRESS


    		  var _evt$detail = evt.detail,
    		      element = _evt$detail.element,
    		      numPointers = _evt$detail.numPointers;
    		  var tools = _store_index_js__WEBPACK_IMPORTED_MODULE_0__["state"].tools.filter(function (tool) {
    		    return tool.supportedInteractionTypes.includes('MultiTouch');
    		  }); // Tool is active, and specific callback is active

    		  tools = Object(_store_getActiveToolsForElement_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element, tools, 'MultiTouch'); // Tool has expected callback custom function

    		  tools = tools.filter(function (tool) {
    		    return typeof tool.multiTouchDragCallback === 'function' && numPointers === tool.configuration.touchPointers;
    		  });

    		  if (_store_index_js__WEBPACK_IMPORTED_MODULE_0__["state"].isMultiPartToolActive) {
    		    tools = Object(_store_filterToolsUsableWithMultiPartTools_js__WEBPACK_IMPORTED_MODULE_2__["default"])(tools);
    		  }

    		  if (tools.length === 0) {
    		    return false;
    		  }

    		  var activeTool = tools[0];
    		  activeTool.multiTouchDragCallback(evt);
    		});

    		/***/ }),

    		/***/ "./eventDispatchers/touchEventHandlers/shared/deactivateAllToolInstances.js":
    		/*!**********************************************************************************!*\
    		  !*** ./eventDispatchers/touchEventHandlers/shared/deactivateAllToolInstances.js ***!
    		  \**********************************************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony default export */ __webpack_exports__["default"] = (function (toolData) {
    		  if (!toolData) {
    		    return;
    		  }

    		  for (var i = 0; i < toolData.data.length; i++) {
    		    var data = toolData.data[i];
    		    data.active = false;

    		    if (!data.handles) {
    		      continue;
    		    }

    		    deactivateAllHandles(data.handles);
    		  }
    		});

    		function deactivateAllHandles(handles) {
    		  Object.keys(handles).forEach(function (name) {
    		    var handle = handles[name];
    		    handle.active = false;
    		  });
    		}

    		/***/ }),

    		/***/ "./eventDispatchers/touchEventHandlers/tap.js":
    		/*!****************************************************!*\
    		  !*** ./eventDispatchers/touchEventHandlers/tap.js ***!
    		  \****************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _touchStartActive_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./touchStartActive.js */ "./eventDispatchers/touchEventHandlers/touchStartActive.js");
    		/* harmony import */ var _store_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../store/index.js */ "./store/index.js");
    		/* harmony import */ var _store_getActiveToolsForElement_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../store/getActiveToolsForElement.js */ "./store/getActiveToolsForElement.js");
    		/* harmony import */ var _store_getToolsWithDataForElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../store/getToolsWithDataForElement.js */ "./store/getToolsWithDataForElement.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _manipulators_getHandleNearImagePoint_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../manipulators/getHandleNearImagePoint.js */ "./manipulators/getHandleNearImagePoint.js");
    		/* harmony import */ var _manipulators_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../manipulators/index.js */ "./manipulators/index.js");
    		/* harmony import */ var _shared_deactivateAllToolInstances_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./shared/deactivateAllToolInstances.js */ "./eventDispatchers/touchEventHandlers/shared/deactivateAllToolInstances.js");

    		 // State




    		 //


    		 //


    		/* harmony default export */ __webpack_exports__["default"] = (function (evt) {
    		  if (_store_index_js__WEBPACK_IMPORTED_MODULE_2__["state"].isToolLocked || _store_index_js__WEBPACK_IMPORTED_MODULE_2__["state"].isMultiPartToolActive) {
    		    return;
    		  }

    		  var tools;
    		  var distanceFromHandle = 28;
    		  var element = evt.detail.element;
    		  var coords = evt.detail.currentPoints.canvas;
    		  tools = Object(_store_getActiveToolsForElement_js__WEBPACK_IMPORTED_MODULE_3__["default"])(element, _store_index_js__WEBPACK_IMPORTED_MODULE_2__["getters"].touchTools());
    		  tools = Object(_store_getToolsWithDataForElement_js__WEBPACK_IMPORTED_MODULE_4__["default"])(element, tools); // Deactivate everything
    		  // DeactivateAllToolInstances(toolData);
    		  // Find all tools w/ handles that we are near

    		  var toolsWithMoveableHandles = tools.filter(function (tool) {
    		    var toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_5__["getToolState"])(element, tool.name);

    		    for (var i = 0; i < toolState.data.length; i++) {
    		      if (Object(_manipulators_getHandleNearImagePoint_js__WEBPACK_IMPORTED_MODULE_6__["default"])(element, toolState.data[i].handles, coords, distanceFromHandle) !== undefined) {
    		        return true;
    		      }
    		    }

    		    return false;
    		  }); // TODO: More than one? Which one was moved most recently?
    		  // We'll just grab the first one we encounter for now

    		  if (toolsWithMoveableHandles.length > 0) {
    		    // Todo: ignore: touch_start, tap
    		    var firstToolWithMoveableHandles = toolsWithMoveableHandles[0];
    		    var toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_5__["getToolState"])(element, firstToolWithMoveableHandles.name);
    		    var moveableHandle = toolState.data.find(function (d) {
    		      return Object(_manipulators_getHandleNearImagePoint_js__WEBPACK_IMPORTED_MODULE_6__["default"])(element, d.handles, coords, distanceFromHandle) !== undefined;
    		    });
    		    toolState.data.active = true;
    		    moveableHandle.active = true; // Why here, but not touchStart?

    		    _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.updateImage(element);
    		    var toolOptions = Object.assign({}, {
    		      doneMovingCallback: function doneMovingCallback() {
    		        Object(_shared_deactivateAllToolInstances_js__WEBPACK_IMPORTED_MODULE_8__["default"])(toolState);
    		      }
    		    }, firstToolWithMoveableHandles.options);
    		    Object(_manipulators_index_js__WEBPACK_IMPORTED_MODULE_7__["moveHandle"])(evt.detail, firstToolWithMoveableHandles.name, toolState.data, moveableHandle, toolOptions, 'touch');
    		    evt.stopImmediatePropagation();
    		    evt.preventDefault(); // Why no stopPropagation?

    		    return;
    		  } // Find all tools near our point


    		  var toolsNearPoint = tools.filter(function (tool) {
    		    var toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_5__["getToolState"])(element, tool.name);
    		    var isNearPoint = toolState && toolState.data && tool.pointNearTool && toolState.data.some(function (data) {
    		      return tool.pointNearTool(element, data, coords);
    		    });
    		    return isNearPoint;
    		  }); // TODO: More than one? Which one was moved most recently?
    		  // We'll just grab the first one we encounter for now

    		  if (toolsNearPoint.length > 0) {
    		    // Todo: Ignore: TAP, START, PRESS
    		    var firstToolNearPoint = toolsNearPoint[0];

    		    var _toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_5__["getToolState"])(element, firstToolNearPoint.name);

    		    var firstAnnotationNearPoint = _toolState.data.find(function (data) {
    		      return firstToolNearPoint.pointNearTool(element, data, coords);
    		    }); // Todo: ignore: touch_start, tap


    		    firstAnnotationNearPoint.active = true;
    		    _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.updateImage(element);

    		    var _toolOptions = Object.assign({}, {
    		      doneMovingCallback: function doneMovingCallback() {
    		        Object(_shared_deactivateAllToolInstances_js__WEBPACK_IMPORTED_MODULE_8__["default"])(_toolState);
    		      }
    		    }, firstToolNearPoint.options);

    		    Object(_manipulators_index_js__WEBPACK_IMPORTED_MODULE_7__["moveAllHandles"])(evt.detail, firstToolNearPoint.name, firstAnnotationNearPoint, null, _toolOptions, 'touch');
    		    evt.stopImmediatePropagation();
    		    evt.preventDefault(); // TODO: Why no stop propagation?

    		    return;
    		  } // If there is nothing to move, add a new instance of the tool
    		  // Need to check here to see if activation is allowed!
    		  // TODO: What would this be? First active tool?
    		  // Or should _always_ pass through to our larger event handler that checks
    		  // All tools anyway?


    		  var allActiveTools = Object(_store_getActiveToolsForElement_js__WEBPACK_IMPORTED_MODULE_3__["default"])(element, _store_index_js__WEBPACK_IMPORTED_MODULE_2__["getters"].touchTools());

    		  if (allActiveTools.length > 0 && allActiveTools[0].touchStartActiveCallback) {
    		    allActiveTools[0].touchStartActiveCallback(evt);
    		  } else {
    		    Object(_touchStartActive_js__WEBPACK_IMPORTED_MODULE_1__["default"])(evt);
    		  }

    		  return false;
    		});

    		/***/ }),

    		/***/ "./eventDispatchers/touchEventHandlers/touchStart.js":
    		/*!***********************************************************!*\
    		  !*** ./eventDispatchers/touchEventHandlers/touchStart.js ***!
    		  \***********************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _store_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../store/index.js */ "./store/index.js");
    		/* harmony import */ var _util_findAndMoveHelpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util/findAndMoveHelpers.js */ "./util/findAndMoveHelpers.js");
    		/* harmony import */ var _store_getToolsWithMoveableHandles_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../store/getToolsWithMoveableHandles.js */ "./store/getToolsWithMoveableHandles.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _store_getInteractiveToolsForElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../../store/getInteractiveToolsForElement.js */ "./store/getInteractiveToolsForElement.js");
    		/* harmony import */ var _store_getToolsWithDataForElement_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../../store/getToolsWithDataForElement.js */ "./store/getToolsWithDataForElement.js");
    		/* harmony import */ var _store_filterToolsUsableWithMultiPartTools_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../../store/filterToolsUsableWithMultiPartTools.js */ "./store/filterToolsUsableWithMultiPartTools.js");
    		// State







    		/* harmony default export */ __webpack_exports__["default"] = (function (evt) {
    		  if (_store_index_js__WEBPACK_IMPORTED_MODULE_0__["state"].isToolLocked) {
    		    return;
    		  }

    		  var eventData = evt.detail;
    		  var element = eventData.element;
    		  var coords = eventData.startPoints.canvas;
    		  var activeAndPassiveTools = Object(_store_getInteractiveToolsForElement_js__WEBPACK_IMPORTED_MODULE_4__["default"])(element, _store_index_js__WEBPACK_IMPORTED_MODULE_0__["getters"].touchTools());
    		  var activeTools = activeAndPassiveTools.filter(function (tool) {
    		    return tool.mode === 'active' && tool.options.isTouchActive;
    		  });

    		  if (_store_index_js__WEBPACK_IMPORTED_MODULE_0__["state"].isMultiPartToolActive) {
    		    activeTools = Object(_store_filterToolsUsableWithMultiPartTools_js__WEBPACK_IMPORTED_MODULE_6__["default"])(activeTools);
    		  } // If any tools are active, check if they have a special reason for dealing with the event.


    		  if (activeTools.length > 0) {
    		    // TODO: If length > 1, you could assess fitness and select the ideal tool
    		    // TODO: But because we're locking this to 'active' tools, that should rarely be an issue
    		    // Super-Meta-TODO: ^ I think we should just take the approach of one active tool per mouse button?
    		    var firstActiveToolWithCallback = activeTools.find(function (tool) {
    		      return typeof tool.preTouchStartCallback === 'function';
    		    });

    		    if (firstActiveToolWithCallback) {
    		      var consumedEvent = firstActiveToolWithCallback.preTouchStartCallback(evt);

    		      if (consumedEvent) {
    		        return;
    		      }
    		    }
    		  }

    		  if (_store_index_js__WEBPACK_IMPORTED_MODULE_0__["state"].isMultiPartToolActive) {
    		    return;
    		  }

    		  var annotationTools = Object(_store_getToolsWithDataForElement_js__WEBPACK_IMPORTED_MODULE_5__["default"])(element, activeAndPassiveTools); // NEAR HANDLES?

    		  var annotationToolsWithMoveableHandles = Object(_store_getToolsWithMoveableHandles_js__WEBPACK_IMPORTED_MODULE_2__["default"])(element, annotationTools, coords, 'touch'); // TODO: More than one? Which one was moved most recently?
    		  // We'll just grab the first one we encounter for now

    		  if (annotationToolsWithMoveableHandles.length > 0) {
    		    // Todo: Ignore TAP, START, PRESS
    		    var firstToolWithMoveableHandles = annotationToolsWithMoveableHandles[0];
    		    var toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_3__["getToolState"])(element, firstToolWithMoveableHandles.name);

    		    var _findHandleDataNearIm = Object(_util_findAndMoveHelpers_js__WEBPACK_IMPORTED_MODULE_1__["findHandleDataNearImagePoint"])(element, toolState, firstToolWithMoveableHandles.name, coords, 'touch'),
    		        handle = _findHandleDataNearIm.handle,
    		        data = _findHandleDataNearIm.data;

    		    firstToolWithMoveableHandles.handleSelectedCallback(evt, data, handle, 'touch');
    		    return;
    		  } // NEAR POINT?


    		  var annotationToolsWithPointNearTouch = annotationTools.filter(function (tool) {
    		    var toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_3__["getToolState"])(element, tool.name);
    		    var isNearPoint = toolState && toolState.data && tool.pointNearTool && toolState.data.some(function (data) {
    		      return tool.pointNearTool(element, data, coords, 'touch');
    		    });
    		    return isNearPoint;
    		  }); // TODO: More than one? Which one was moved most recently?
    		  // We'll just grab the first one we encounter for now

    		  if (annotationToolsWithPointNearTouch.length > 0) {
    		    // Todo: Ignore: TAP, START, PRESS
    		    var firstToolNearPoint = annotationToolsWithPointNearTouch[0];

    		    var _toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_3__["getToolState"])(element, firstToolNearPoint.name);

    		    var firstAnnotationNearPoint = _toolState.data.find(function (data) {
    		      return firstToolNearPoint.pointNearTool(element, data, coords);
    		    });

    		    firstToolNearPoint.toolSelectedCallback(evt, firstAnnotationNearPoint, 'touch');
    		    return;
    		  } // If any tools are active, check if they have a special reason for dealing with the event.


    		  if (activeTools.length > 0) {
    		    // TODO: If length > 1, you could assess fitness and select the ideal tool
    		    // TODO: But because we're locking this to 'active' tools, that should rarely be an issue
    		    // Super-Meta-TODO: ^ I think we should just take the approach of one active tool per mouse button?
    		    var _firstActiveToolWithCallback = activeTools.find(function (tool) {
    		      return typeof tool.postTouchStartCallback === 'function';
    		    });

    		    if (_firstActiveToolWithCallback) {
    		      var _consumedEvent = _firstActiveToolWithCallback.postTouchStartCallback(evt);

    		      if (_consumedEvent) {
    		        return;
    		      }
    		    }
    		  }
    		});

    		/***/ }),

    		/***/ "./eventDispatchers/touchEventHandlers/touchStartActive.js":
    		/*!*****************************************************************!*\
    		  !*** ./eventDispatchers/touchEventHandlers/touchStartActive.js ***!
    		  \*****************************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _store_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../store/index.js */ "./store/index.js");
    		/* harmony import */ var _addNewMeasurement_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./addNewMeasurement.js */ "./eventDispatchers/touchEventHandlers/addNewMeasurement.js");
    		/* harmony import */ var _tools_base_BaseAnnotationTool_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../tools/base/BaseAnnotationTool.js */ "./tools/base/BaseAnnotationTool.js");
    		/* harmony import */ var _util_getActiveTool__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../util/getActiveTool */ "./util/getActiveTool.js");
    		// State




    		/* harmony default export */ __webpack_exports__["default"] = (function (evt) {
    		  if (_store_index_js__WEBPACK_IMPORTED_MODULE_0__["state"].isToolLocked || _store_index_js__WEBPACK_IMPORTED_MODULE_0__["state"].isMultiPartToolActive) {
    		    return;
    		  }

    		  var element = evt.detail.element;
    		  var activeTool = Object(_util_getActiveTool__WEBPACK_IMPORTED_MODULE_3__["default"])(element, null, 'touch'); // Note: custom `addNewMeasurement` will need to prevent event bubbling

    		  if (activeTool && activeTool.addNewMeasurement) {
    		    activeTool.addNewMeasurement(evt, 'touch');
    		  } else if (activeTool instanceof _tools_base_BaseAnnotationTool_js__WEBPACK_IMPORTED_MODULE_2__["default"]) {
    		    Object(_addNewMeasurement_js__WEBPACK_IMPORTED_MODULE_1__["default"])(evt, activeTool);
    		  }
    		});

    		/***/ }),

    		/***/ "./eventDispatchers/touchToolEventDispatcher.js":
    		/*!******************************************************!*\
    		  !*** ./eventDispatchers/touchToolEventDispatcher.js ***!
    		  \******************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../events.js */ "./events.js");
    		/* harmony import */ var _touchEventHandlers_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./touchEventHandlers/index.js */ "./eventDispatchers/touchEventHandlers/index.js");


    		/**
    		 * These listeners are emitted in order, and can be cancelled/prevented from bubbling
    		 * by any previous event.
    		 * - tap:
    		 * - touchStart: check to see if we are close to an existing annotation, grab it
    		 * - touchDrag:
    		 * - touchStartActive: createNewMeasurement (usually)
    		 * - touchPress:
    		 * - touchRotate:
    		 * - doubleTap: usually a one-time apply specialty action
    		 * - touchPinch:
    		 * - onImageRendered: redraw visible tool data
    		 * @private
    		 * @param {*} element
    		 * @returns {void}
    		 */

    		var enable = function enable(element) {
    		  element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TAP, _touchEventHandlers_index_js__WEBPACK_IMPORTED_MODULE_1__["tap"]);
    		  element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_START, _touchEventHandlers_index_js__WEBPACK_IMPORTED_MODULE_1__["touchStart"], {
    		    passive: false
    		  });
    		  element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_DRAG, _touchEventHandlers_index_js__WEBPACK_IMPORTED_MODULE_1__["touchDrag"], {
    		    passive: false
    		  });
    		  element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_END, _touchEventHandlers_index_js__WEBPACK_IMPORTED_MODULE_1__["touchEnd"]); // Mouse equivelant is `mouse_down_activate`
    		  // Should the naming pattern here match?

    		  element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_START_ACTIVE, _touchEventHandlers_index_js__WEBPACK_IMPORTED_MODULE_1__["touchStartActive"]);
    		  element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_PRESS, _touchEventHandlers_index_js__WEBPACK_IMPORTED_MODULE_1__["touchPress"]);
    		  element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].DOUBLE_TAP, _touchEventHandlers_index_js__WEBPACK_IMPORTED_MODULE_1__["doubleTap"]);
    		  element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_PINCH, _touchEventHandlers_index_js__WEBPACK_IMPORTED_MODULE_1__["touchPinch"]);
    		  element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_ROTATE, _touchEventHandlers_index_js__WEBPACK_IMPORTED_MODULE_1__["touchRotate"]);
    		  element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MULTI_TOUCH_DRAG, _touchEventHandlers_index_js__WEBPACK_IMPORTED_MODULE_1__["multiTouchDrag"]);
    		};

    		var disable = function disable(element) {
    		  element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TAP, _touchEventHandlers_index_js__WEBPACK_IMPORTED_MODULE_1__["tap"]);
    		  element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_START, _touchEventHandlers_index_js__WEBPACK_IMPORTED_MODULE_1__["touchStart"]);
    		  element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_DRAG, _touchEventHandlers_index_js__WEBPACK_IMPORTED_MODULE_1__["touchDrag"]);
    		  element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_END, _touchEventHandlers_index_js__WEBPACK_IMPORTED_MODULE_1__["touchEnd"]); // Mouse equivelant is `mouse_down_activate`
    		  // Should the naming pattern here match?

    		  element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_START_ACTIVE, _touchEventHandlers_index_js__WEBPACK_IMPORTED_MODULE_1__["touchStartActive"]);
    		  element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_PRESS, _touchEventHandlers_index_js__WEBPACK_IMPORTED_MODULE_1__["touchPress"]);
    		  element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].DOUBLE_TAP, _touchEventHandlers_index_js__WEBPACK_IMPORTED_MODULE_1__["doubleTap"]);
    		  element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_PINCH, _touchEventHandlers_index_js__WEBPACK_IMPORTED_MODULE_1__["touchPinch"]);
    		  element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_ROTATE, _touchEventHandlers_index_js__WEBPACK_IMPORTED_MODULE_1__["touchRotate"]);
    		  element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MULTI_TOUCH_DRAG, _touchEventHandlers_index_js__WEBPACK_IMPORTED_MODULE_1__["multiTouchDrag"]);
    		};

    		/* harmony default export */ __webpack_exports__["default"] = ({
    		  enable: enable,
    		  disable: disable
    		});

    		/***/ }),

    		/***/ "./eventListeners/index.js":
    		/*!*********************************!*\
    		  !*** ./eventListeners/index.js ***!
    		  \*********************************/
    		/*! exports provided: mouseEventListeners, wheelEventListener, touchEventListeners */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _mouseEventListeners_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mouseEventListeners.js */ "./eventListeners/mouseEventListeners.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mouseEventListeners", function() { return _mouseEventListeners_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

    		/* harmony import */ var _wheelEventListener_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./wheelEventListener.js */ "./eventListeners/wheelEventListener.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "wheelEventListener", function() { return _wheelEventListener_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });

    		/* harmony import */ var _touchEventListeners_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./touchEventListeners.js */ "./eventListeners/touchEventListeners.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "touchEventListeners", function() { return _touchEventListeners_js__WEBPACK_IMPORTED_MODULE_2__["default"]; });






    		/***/ }),

    		/***/ "./eventListeners/internals/normalizeWheel.js":
    		/*!****************************************************!*\
    		  !*** ./eventListeners/internals/normalizeWheel.js ***!
    		  \****************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		// Reasonable defaults
    		var PIXEL_STEP = 10;
    		var LINE_HEIGHT = 40;
    		var PAGE_HEIGHT = 800;
    		/**
    		 * Normalizes wheel events and provides properties that are more
    		 * consistent and helpful across different browsers
    		 *
    		 * @private
    		 * @function normalizeWheel
    		 * @param {WheelEvent} event
    		 * @returns {Object} { spinX, spinY, pixlX, pixelY }
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (event) {
    		  var spinX = 0,
    		      spinY = 0,
    		      pixelX = 0,
    		      pixelY = 0; // Legacy

    		  if ('detail' in event) {
    		    spinY = event.detail;
    		  }

    		  if ('wheelDelta' in event) {
    		    spinY = -event.wheelDelta / 120;
    		  }

    		  if ('wheelDeltaY' in event) {
    		    spinY = -event.wheelDeltaY / 120;
    		  }

    		  if ('wheelDeltaX' in event) {
    		    spinX = -event.wheelDeltaX / 120;
    		  }

    		  pixelX = spinX * PIXEL_STEP;
    		  pixelY = spinY * PIXEL_STEP;

    		  if ('deltaY' in event) {
    		    pixelY = event.deltaY;
    		  }

    		  if ('deltaX' in event) {
    		    pixelX = event.deltaX;
    		  }

    		  if ((pixelX || pixelY) && event.deltaMode) {
    		    if (event.deltaMode === 1) {
    		      // Delta in LINE units
    		      pixelX *= LINE_HEIGHT;
    		      pixelY *= LINE_HEIGHT;
    		    } else {
    		      // Delta in PAGE units
    		      pixelX *= PAGE_HEIGHT;
    		      pixelY *= PAGE_HEIGHT;
    		    }
    		  } // Fall-back if spin cannot be determined


    		  if (pixelX && !spinX) {
    		    spinX = pixelX < 1 ? -1 : 1;
    		  }

    		  if (pixelY && !spinY) {
    		    spinY = pixelY < 1 ? -1 : 1;
    		  }

    		  return {
    		    spinX: spinX,
    		    spinY: spinY,
    		    pixelX: pixelX,
    		    pixelY: pixelY
    		  };
    		});

    		/***/ }),

    		/***/ "./eventListeners/mouseEventListeners.js":
    		/*!***********************************************!*\
    		  !*** ./eventListeners/mouseEventListeners.js ***!
    		  \***********************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../events.js */ "./events.js");
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _util_copyPoints_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/copyPoints.js */ "./util/copyPoints.js");
    		/* harmony import */ var _util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/triggerEvent.js */ "./util/triggerEvent.js");
    		/* harmony import */ var _util_logger_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/logger.js */ "./util/logger.js");





    		var logger = Object(_util_logger_js__WEBPACK_IMPORTED_MODULE_4__["getLogger"])('eventListeners:mouseEventListeners');
    		var isClickEvent = true;
    		var preventClickTimeout;
    		var clickDelay = 200;

    		function getEventButtons(event) {
    		  if (typeof event.buttons === 'number') {
    		    return event.buttons;
    		  }

    		  switch (event.which) {
    		    // No button
    		    case 0:
    		      return 0;
    		    // Left

    		    case 1:
    		      return 1;
    		    // Middle

    		    case 2:
    		      return 4;
    		    // Right

    		    case 3:
    		      return 2;
    		  }

    		  return 0;
    		}

    		function preventClickHandler() {
    		  isClickEvent = false;
    		}

    		function mouseDoubleClick(e) {
    		  var element = e.currentTarget;
    		  var enabledElement = _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.getEnabledElement(element);

    		  if (!enabledElement.image) {
    		    return;
    		  }

    		  var eventType = _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MOUSE_DOUBLE_CLICK;
    		  var startPoints = {
    		    page: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstoneMath.point.pageToPoint(e),
    		    image: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.pageToPixel(element, e.pageX, e.pageY),
    		    client: {
    		      x: e.clientX,
    		      y: e.clientY
    		    }
    		  };
    		  startPoints.canvas = _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.pixelToCanvas(element, startPoints.image);
    		  var lastPoints = Object(_util_copyPoints_js__WEBPACK_IMPORTED_MODULE_2__["default"])(startPoints);
    		  logger.log('double-click: %o', getEventButtons(e));
    		  var eventData = {
    		    event: e,
    		    buttons: getEventButtons(e),
    		    viewport: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.getViewport(element),
    		    image: enabledElement.image,
    		    element: element,
    		    startPoints: startPoints,
    		    lastPoints: lastPoints,
    		    currentPoints: startPoints,
    		    deltaPoints: {
    		      x: 0,
    		      y: 0
    		    },
    		    type: eventType
    		  };
    		  Object(_util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_3__["default"])(element, eventType, eventData);
    		}

    		function mouseDown(e) {
    		  var element = e.currentTarget;
    		  var enabledElement = _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.getEnabledElement(element);

    		  if (!enabledElement.image) {
    		    return;
    		  }

    		  preventClickTimeout = setTimeout(preventClickHandler, clickDelay); // Prevent CornerstoneToolsMouseMove while mouse is down

    		  element.removeEventListener('mousemove', mouseMove);
    		  var startPoints = {
    		    page: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstoneMath.point.pageToPoint(e),
    		    image: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.pageToPixel(element, e.pageX, e.pageY),
    		    client: {
    		      x: e.clientX,
    		      y: e.clientY
    		    }
    		  };
    		  startPoints.canvas = _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.pixelToCanvas(element, startPoints.image);
    		  var lastPoints = Object(_util_copyPoints_js__WEBPACK_IMPORTED_MODULE_2__["default"])(startPoints);
    		  var eventData = {
    		    event: e,
    		    buttons: getEventButtons(e),
    		    viewport: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.getViewport(element),
    		    image: enabledElement.image,
    		    element: element,
    		    startPoints: startPoints,
    		    lastPoints: lastPoints,
    		    currentPoints: startPoints,
    		    deltaPoints: {
    		      x: 0,
    		      y: 0
    		    },
    		    type: _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MOUSE_DOWN
    		  };
    		  var eventPropagated = Object(_util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_3__["default"])(eventData.element, _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MOUSE_DOWN, eventData);

    		  if (eventPropagated) {
    		    // No tools responded to this event, create a new tool
    		    eventData.type = _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MOUSE_DOWN_ACTIVATE;
    		    Object(_util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_3__["default"])(eventData.element, _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MOUSE_DOWN_ACTIVATE, eventData);
    		  }

    		  function onMouseMove(e) {
    		    // Calculate our current points in page and image coordinates
    		    var eventType = _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MOUSE_DRAG;
    		    var currentPoints = {
    		      page: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstoneMath.point.pageToPoint(e),
    		      image: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.pageToPixel(element, e.pageX, e.pageY),
    		      client: {
    		        x: e.clientX,
    		        y: e.clientY
    		      }
    		    };
    		    currentPoints.canvas = _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.pixelToCanvas(element, currentPoints.image); // Calculate delta values in page and image coordinates

    		    var deltaPoints = {
    		      page: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstoneMath.point.subtract(currentPoints.page, lastPoints.page),
    		      image: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstoneMath.point.subtract(currentPoints.image, lastPoints.image),
    		      client: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstoneMath.point.subtract(currentPoints.client, lastPoints.client),
    		      canvas: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstoneMath.point.subtract(currentPoints.canvas, lastPoints.canvas)
    		    };
    		    logger.log('mousemove: %o', getEventButtons(e));
    		    var eventData = {
    		      buttons: getEventButtons(e),
    		      viewport: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.getViewport(element),
    		      image: enabledElement.image,
    		      element: element,
    		      startPoints: startPoints,
    		      lastPoints: lastPoints,
    		      currentPoints: currentPoints,
    		      deltaPoints: deltaPoints,
    		      type: eventType,
    		      ctrlKey: e.ctrlKey,
    		      metaKey: e.metaKey,
    		      shiftKey: e.shiftKey
    		    };
    		    Object(_util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_3__["default"])(eventData.element, eventType, eventData); // Update the last points

    		    lastPoints = Object(_util_copyPoints_js__WEBPACK_IMPORTED_MODULE_2__["default"])(currentPoints);
    		  } // Hook mouseup so we can unbind our event listeners
    		  // When they stop dragging


    		  function onMouseUp(e) {
    		    // Cancel the timeout preventing the click event from triggering
    		    clearTimeout(preventClickTimeout);
    		    var eventType = _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MOUSE_UP;

    		    if (isClickEvent) {
    		      eventType = _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MOUSE_CLICK;
    		    } // Calculate our current points in page and image coordinates


    		    var currentPoints = {
    		      page: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstoneMath.point.pageToPoint(e),
    		      image: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.pageToPixel(element, e.pageX, e.pageY),
    		      client: {
    		        x: e.clientX,
    		        y: e.clientY
    		      }
    		    };
    		    currentPoints.canvas = _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.pixelToCanvas(element, currentPoints.image); // Calculate delta values in page and image coordinates

    		    var deltaPoints = {
    		      page: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstoneMath.point.subtract(currentPoints.page, lastPoints.page),
    		      image: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstoneMath.point.subtract(currentPoints.image, lastPoints.image),
    		      client: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstoneMath.point.subtract(currentPoints.client, lastPoints.client),
    		      canvas: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstoneMath.point.subtract(currentPoints.canvas, lastPoints.canvas)
    		    };
    		    logger.log('mouseup: %o', getEventButtons(e));
    		    var eventData = {
    		      event: e,
    		      buttons: getEventButtons(e),
    		      viewport: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.getViewport(element),
    		      image: enabledElement.image,
    		      element: element,
    		      startPoints: startPoints,
    		      lastPoints: lastPoints,
    		      currentPoints: currentPoints,
    		      deltaPoints: deltaPoints,
    		      type: eventType
    		    };
    		    Object(_util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_3__["default"])(eventData.element, eventType, eventData);
    		    document.removeEventListener('mousemove', onMouseMove);
    		    document.removeEventListener('mouseup', onMouseUp);
    		    element.addEventListener('mousemove', mouseMove);
    		    isClickEvent = true;
    		  }

    		  document.addEventListener('mousemove', onMouseMove);
    		  document.addEventListener('mouseup', onMouseUp);
    		}

    		function mouseMove(e) {
    		  var element = e.currentTarget;
    		  var enabledElement = _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.getEnabledElement(element);

    		  if (!enabledElement.image) {
    		    return;
    		  }

    		  var eventType = _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MOUSE_MOVE;
    		  var startPoints = {
    		    page: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstoneMath.point.pageToPoint(e),
    		    image: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.pageToPixel(element, e.pageX, e.pageY),
    		    client: {
    		      x: e.clientX,
    		      y: e.clientY
    		    }
    		  };
    		  startPoints.canvas = _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.pixelToCanvas(element, startPoints.image);
    		  var lastPoints = Object(_util_copyPoints_js__WEBPACK_IMPORTED_MODULE_2__["default"])(startPoints); // Calculate our current points in page and image coordinates

    		  var currentPoints = {
    		    page: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstoneMath.point.pageToPoint(e),
    		    image: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.pageToPixel(element, e.pageX, e.pageY),
    		    client: {
    		      x: e.clientX,
    		      y: e.clientY
    		    }
    		  };
    		  currentPoints.canvas = _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.pixelToCanvas(element, currentPoints.image); // Calculate delta values in page and image coordinates

    		  var deltaPoints = {
    		    page: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstoneMath.point.subtract(currentPoints.page, lastPoints.page),
    		    image: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstoneMath.point.subtract(currentPoints.image, lastPoints.image),
    		    client: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstoneMath.point.subtract(currentPoints.client, lastPoints.client),
    		    canvas: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstoneMath.point.subtract(currentPoints.canvas, lastPoints.canvas)
    		  };
    		  var eventData = {
    		    viewport: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.getViewport(element),
    		    image: enabledElement.image,
    		    element: element,
    		    startPoints: startPoints,
    		    lastPoints: lastPoints,
    		    currentPoints: currentPoints,
    		    deltaPoints: deltaPoints,
    		    type: eventType
    		  };
    		  Object(_util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_3__["default"])(element, eventType, eventData); // Update the last points

    		  lastPoints = Object(_util_copyPoints_js__WEBPACK_IMPORTED_MODULE_2__["default"])(currentPoints);
    		}

    		function disable(element) {
    		  element.removeEventListener('mousedown', mouseDown);
    		  element.removeEventListener('mousemove', mouseMove);
    		  element.removeEventListener('dblclick', mouseDoubleClick);
    		}

    		function enable(element) {
    		  // Prevent handlers from being attached multiple times
    		  disable(element);
    		  element.addEventListener('mousedown', mouseDown);
    		  element.addEventListener('mousemove', mouseMove);
    		  element.addEventListener('dblclick', mouseDoubleClick);
    		}

    		/* harmony default export */ __webpack_exports__["default"] = ({
    		  enable: enable,
    		  disable: disable
    		});

    		/***/ }),

    		/***/ "./eventListeners/onImageRenderedBrushEventHandler.js":
    		/*!************************************************************!*\
    		  !*** ./eventListeners/onImageRenderedBrushEventHandler.js ***!
    		  \************************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _drawing_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../drawing/index.js */ "./drawing/index.js");
    		/* harmony import */ var _tools_base_BaseBrushTool_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../tools/base/BaseBrushTool.js */ "./tools/base/BaseBrushTool.js");
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _store_getActiveToolsForElement_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../store/getActiveToolsForElement.js */ "./store/getActiveToolsForElement.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _store_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../store/index.js */ "./store/index.js");






    		/* Safari and Edge polyfill for createImageBitmap
    		 * https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/createImageBitmap
    		 */
    		// TODO: Do we still need this? I've yanked the package for now
    		// It should be covered by @babel/runtime and plugin-transform-runtime:
    		// https://babeljs.io/docs/en/babel-plugin-transform-runtime
    		// @James, I think Babel should take care of this for us
    		// Import regeneratorRuntime from "regenerator-runtime";

    		if (!('createImageBitmap' in window)) {
    		  window.createImageBitmap = function (imageData) {
    		    return new Promise(function (resolve) {
    		      var img = document.createElement('img');
    		      img.addEventListener('load', function () {
    		        resolve(this);
    		      });
    		      var conversionCanvas = document.createElement('canvas');
    		      conversionCanvas.width = imageData.width;
    		      conversionCanvas.height = imageData.height;
    		      var conversionCanvasContext = conversionCanvas.getContext('2d');
    		      conversionCanvasContext.putImageData(imageData, 0, 0, 0, 0, conversionCanvas.width, conversionCanvas.height);
    		      img.src = conversionCanvas.toDataURL();
    		    });
    		  };
    		}

    		var _store$modules$brush = _store_index_js__WEBPACK_IMPORTED_MODULE_5__["default"].modules.brush,
    		    state = _store$modules$brush.state,
    		    getters = _store$modules$brush.getters,
    		    setters = _store$modules$brush.setters;
    		/**
    		 * Used to redraw the brush label map data per render.
    		 *
    		 * @private
    		 * @param {Object} evt - The event.
    		 * @returns {void}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (evt) {
    		  var eventData = evt.detail;
    		  var element = eventData.element;
    		  var maxSegmentations = _tools_base_BaseBrushTool_js__WEBPACK_IMPORTED_MODULE_1__["default"].getNumberOfColors();
    		  var toolData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_4__["getToolState"])(element, _tools_base_BaseBrushTool_js__WEBPACK_IMPORTED_MODULE_1__["default"].getReferencedToolDataName());

    		  if (!toolData) {
    		    return;
    		  }

    		  var enabledElement = _externalModules_js__WEBPACK_IMPORTED_MODULE_2__["default"].cornerstone.getEnabledElement(element);
    		  var enabledElementUID = enabledElement.uuid;
    		  var segData = {
    		    visibleSegmentations: getters.visibleSegmentationsForElement(enabledElementUID),
    		    imageBitmapCache: getters.imageBitmapCacheForElement(enabledElementUID),
    		    toolData: toolData
    		  };

    		  for (var segIndex = 0; segIndex < maxSegmentations; segIndex++) {
    		    if (shouldRenderSegmentation(evt, segIndex, segData)) {
    		      renderSegmentation(evt, segIndex, segData);
    		    }
    		  }
    		});

    		function shouldRenderSegmentation(evt, segIndex, segData) {
    		  var element = evt.detail.element;
    		  var toolData = segData.toolData;
    		  var visibleSegmentations = segData.visibleSegmentations;

    		  if (!toolData.data[segIndex] || !toolData.data[segIndex].pixelData) {
    		    // No data, no render.
    		    return false;
    		  }

    		  if (visibleSegmentations[segIndex]) {
    		    // Has data and marked as visible, render!
    		    return true;
    		  }

    		  var currentColor = state.drawColorId;

    		  if (currentColor !== segIndex) {
    		    // Hidden and not current color, don't render.
    		    return false;
    		  } // Check that a brush tool is active.


    		  var activeTools = Object(_store_getActiveToolsForElement_js__WEBPACK_IMPORTED_MODULE_3__["default"])(element, _store_index_js__WEBPACK_IMPORTED_MODULE_5__["default"].state.tools);
    		  var brushTools = activeTools.filter(function (tool) {
    		    return tool instanceof _tools_base_BaseBrushTool_js__WEBPACK_IMPORTED_MODULE_1__["default"];
    		  });

    		  if (brushTools.length > 0) {
    		    // Active brush tool with same color, render!
    		    return true;
    		  }

    		  return false;
    		}

    		function renderSegmentation(evt, segIndex, segData) {
    		  var toolData = segData.toolData;
    		  var imageBitmapCache = segData.imageBitmapCache;
    		  var visibleSegmentations = segData.visibleSegmentations; // Draw previous image if cached.

    		  if (imageBitmapCache && imageBitmapCache[segIndex]) {
    		    _drawImageBitmap(evt, imageBitmapCache[segIndex], visibleSegmentations[segIndex]);
    		  }

    		  var eventData = evt.detail;
    		  var element = eventData.element;
    		  var enabledElement = _externalModules_js__WEBPACK_IMPORTED_MODULE_2__["default"].cornerstone.getEnabledElement(element);

    		  if (toolData.data[segIndex].invalidated || state.invalidatedEnabledElements.includes(enabledElement.uuid)) {
    		    createNewBitmapAndQueueRenderOfSegmentation(eventData, enabledElement.uuid, toolData, segIndex);
    		  }
    		}

    		function createNewBitmapAndQueueRenderOfSegmentation(_ref, enabledElementUID, toolData, segIndex) {
    		  var eventImage = _ref.image,
    		      element = _ref.element;
    		  var pixelData = toolData.data[segIndex].pixelData;
    		  var imageSpecificSegmentationAlpha = toolData.data[segIndex].alpha;

    		  if (!pixelData) {
    		    return;
    		  }

    		  var colormapId = state.colorMapId;
    		  var colormap = _externalModules_js__WEBPACK_IMPORTED_MODULE_2__["default"].cornerstone.colors.getColormap(colormapId);
    		  var colorLutTable = [[0, 0, 0, 0], colormap.getColor(segIndex)];
    		  var imageData = new ImageData(eventImage.width, eventImage.height);
    		  var image = {
    		    stats: {},
    		    minPixelValue: 0,
    		    getPixelData: function getPixelData() {
    		      return pixelData;
    		    }
    		  };
    		  var hasImageSpecificSegmentationAlpha = imageSpecificSegmentationAlpha !== undefined;

    		  if (hasImageSpecificSegmentationAlpha) {
    		    colorLutTable[1][3] = imageSpecificSegmentationAlpha;
    		  }

    		  _externalModules_js__WEBPACK_IMPORTED_MODULE_2__["default"].cornerstone.storedPixelDataToCanvasImageDataColorLUT(image, colorLutTable, imageData.data);
    		  window.createImageBitmap(imageData).then(function (newImageBitmap) {
    		    setters.imageBitmapCacheForElement(enabledElementUID, segIndex, newImageBitmap);
    		    toolData.data[segIndex].invalidated = false;
    		    state.invalidatedEnabledElements = state.invalidatedEnabledElements.filter(function (iee) {
    		      return iee !== enabledElementUID;
    		    });
    		    _externalModules_js__WEBPACK_IMPORTED_MODULE_2__["default"].cornerstone.updateImage(element);
    		  });
    		}
    		/**
    		 * Draws the ImageBitmap the canvas.
    		 *
    		 * @private
    		 * @param  {Object} evt description
    		 * @param {ImageBitmap} imageBitmap
    		 * @param {Boolean} alwaysVisible
    		 * @returns {void}
    		 */


    		function _drawImageBitmap(evt, imageBitmap, alwaysVisible) {
    		  var eventData = evt.detail;
    		  var context = Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_0__["getNewContext"])(eventData.canvasContext.canvas);
    		  var canvasTopLeft = _externalModules_js__WEBPACK_IMPORTED_MODULE_2__["default"].cornerstone.pixelToCanvas(eventData.element, {
    		    x: 0,
    		    y: 0
    		  });
    		  var canvasTopRight = _externalModules_js__WEBPACK_IMPORTED_MODULE_2__["default"].cornerstone.pixelToCanvas(eventData.element, {
    		    x: eventData.image.width,
    		    y: 0
    		  });
    		  var canvasBottomRight = _externalModules_js__WEBPACK_IMPORTED_MODULE_2__["default"].cornerstone.pixelToCanvas(eventData.element, {
    		    x: eventData.image.width,
    		    y: eventData.image.height
    		  });
    		  var cornerstoneCanvasWidth = _externalModules_js__WEBPACK_IMPORTED_MODULE_2__["default"].cornerstoneMath.point.distance(canvasTopLeft, canvasTopRight);
    		  var cornerstoneCanvasHeight = _externalModules_js__WEBPACK_IMPORTED_MODULE_2__["default"].cornerstoneMath.point.distance(canvasTopRight, canvasBottomRight);
    		  var canvas = eventData.canvasContext.canvas;
    		  var viewport = eventData.viewport;
    		  context.imageSmoothingEnabled = false;
    		  context.globalAlpha = getLayerAlpha(alwaysVisible);
    		  Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_0__["transformCanvasContext"])(context, canvas, viewport);
    		  var canvasViewportTranslation = {
    		    x: viewport.translation.x * viewport.scale,
    		    y: viewport.translation.y * viewport.scale
    		  };
    		  context.drawImage(imageBitmap, canvas.width / 2 - cornerstoneCanvasWidth / 2 + canvasViewportTranslation.x, canvas.height / 2 - cornerstoneCanvasHeight / 2 + canvasViewportTranslation.y, cornerstoneCanvasWidth, cornerstoneCanvasHeight);
    		  context.globalAlpha = 1.0;
    		  Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_0__["resetCanvasContextTransform"])(context);
    		}

    		function getLayerAlpha(alwaysVisible) {
    		  if (alwaysVisible) {
    		    return state.alpha;
    		  }

    		  return state.hiddenButActiveAlpha;
    		}

    		/***/ }),

    		/***/ "./eventListeners/onNewImageBrushEventHandler.js":
    		/*!*******************************************************!*\
    		  !*** ./eventListeners/onNewImageBrushEventHandler.js ***!
    		  \*******************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _tools_base_BaseBrushTool_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../tools/base/BaseBrushTool.js */ "./tools/base/BaseBrushTool.js");
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");



    		/**
    		 * Clears the brush imageBitmapCache,
    		 * invaldates the data and calls for a re-render.
    		 * @private
    		 * @param {Object} evt - The event.
    		 * @returns {void}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (evt) {
    		  var eventData = evt.detail;
    		  var element = eventData.element;
    		  var toolData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_0__["getToolState"])(element, _tools_base_BaseBrushTool_js__WEBPACK_IMPORTED_MODULE_1__["default"].getReferencedToolDataName());

    		  if (!toolData) {
    		    Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_0__["addToolState"])(element, _tools_base_BaseBrushTool_js__WEBPACK_IMPORTED_MODULE_1__["default"].getReferencedToolDataName(), {});
    		    toolData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_0__["getToolState"])(element, _tools_base_BaseBrushTool_js__WEBPACK_IMPORTED_MODULE_1__["default"].getReferencedToolDataName());
    		  }

    		  var maxSegmentations = _tools_base_BaseBrushTool_js__WEBPACK_IMPORTED_MODULE_1__["default"].getNumberOfColors(); // Invalidate the segmentation bitmap such that it gets redrawn.

    		  for (var i = 0; i < maxSegmentations; i++) {
    		    if (toolData.data[i]) {
    		      toolData.data[i].invalidated = true;
    		    }
    		  } // Refresh the canvas


    		  _externalModules_js__WEBPACK_IMPORTED_MODULE_2__["default"].cornerstone.updateImage(eventData.element);
    		});

    		/***/ }),

    		/***/ "./eventListeners/preventGhostClick.js":
    		/*!*********************************************!*\
    		  !*** ./eventListeners/preventGhostClick.js ***!
    		  \*********************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		// Functions to prevent ghost clicks following a touch
    		// All credit to @kosich
    		// https://gist.github.com/kosich/23188dd86633b6c2efb7
    		var antiGhostDelay = 2000,
    		    pointerType = {
    		  mouse: 0,
    		  touch: 1
    		};
    		var lastInteractionType, lastInteractionTime;

    		function handleTap(type, e) {
    		  var now = Date.now();

    		  if (type !== lastInteractionType) {
    		    if (now - lastInteractionTime <= antiGhostDelay) {
    		      e.preventDefault();
    		      e.stopPropagation();
    		      e.stopImmediatePropagation();
    		      return false;
    		    }

    		    lastInteractionType = type;
    		  }

    		  lastInteractionTime = now;
    		} // Cacheing the function references
    		// Necessary because a new function reference is created after .bind() is called
    		// http://stackoverflow.com/questions/11565471/removing-event-listener-which-was-added-with-bind


    		var handleTapMouse = handleTap.bind(null, pointerType.mouse);
    		var handleTapTouch = handleTap.bind(null, pointerType.touch);

    		function attachEvents(element, eventList, interactionType) {
    		  var tapHandler = interactionType ? handleTapMouse : handleTapTouch;
    		  eventList.forEach(function (eventName) {
    		    element.addEventListener(eventName, tapHandler, {
    		      passive: false
    		    });
    		  });
    		}

    		function removeEvents(element, eventList, interactionType) {
    		  var tapHandler = interactionType ? handleTapMouse : handleTapTouch;
    		  eventList.forEach(function (eventName) {
    		    element.removeEventListener(eventName, tapHandler);
    		  });
    		}

    		var mouseEvents = ['mousedown', 'mouseup'];
    		var touchEvents = ['touchstart', 'touchend'];

    		function disable(element) {
    		  removeEvents(element, mouseEvents, pointerType.mouse);
    		  removeEvents(element, touchEvents, pointerType.touch);
    		}

    		function enable(element) {
    		  disable(element);
    		  attachEvents(element, mouseEvents, pointerType.mouse);
    		  attachEvents(element, touchEvents, pointerType.touch);
    		}

    		/* harmony default export */ __webpack_exports__["default"] = ({
    		  enable: enable,
    		  disable: disable
    		});

    		/***/ }),

    		/***/ "./eventListeners/touchEventListeners.js":
    		/*!***********************************************!*\
    		  !*** ./eventListeners/touchEventListeners.js ***!
    		  \***********************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../events.js */ "./events.js");
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _util_copyPoints_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/copyPoints.js */ "./util/copyPoints.js");
    		/* harmony import */ var _preventGhostClick_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./preventGhostClick.js */ "./eventListeners/preventGhostClick.js");
    		/* harmony import */ var _util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/triggerEvent.js */ "./util/triggerEvent.js");
    		/* harmony import */ var _toolOptions_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../toolOptions.js */ "./toolOptions.js");






    		var startPoints, currentPoints, lastPoints, deltaPoints, eventData, touchStartDelay, pressTimeout, pageDistanceMoved;
    		var lastScale = 1.0,
    		    lastRotation = 0.0,
    		    preventNextPinch = false,
    		    isPress = false,
    		    lastDelta;
    		var pressDelay = 700,
    		    pressMaxDistance = 5;
    		var toolType = 'touchInput';

    		function onTouch(e) {
    		  var element = e.currentTarget || e.srcEvent.currentTarget;
    		  var enabledElement = _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.getEnabledElement(element);

    		  if (!enabledElement.image) {
    		    return;
    		  }

    		  var eventType, scaleChange, delta, remainingPointers, rotation; // Prevent mouse events from occurring alongside touch events

    		  e.preventDefault(); // If more than one finger is placed on the element, stop the press timeout

    		  if (e.pointers && e.pointers.length > 1 || e.touches && e.touches.length > 1) {
    		    isPress = false;
    		    clearTimeout(pressTimeout);
    		  }

    		  switch (e.type) {
    		    case 'tap':
    		      isPress = false;
    		      clearTimeout(pressTimeout); // Calculate our current points in page and image coordinates

    		      currentPoints = {
    		        page: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstoneMath.point.pageToPoint(e.pointers[0]),
    		        image: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.pageToPixel(element, e.pointers[0].pageX, e.pointers[0].pageY),
    		        client: {
    		          x: e.pointers[0].clientX,
    		          y: e.pointers[0].clientY
    		        }
    		      };
    		      currentPoints.canvas = _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.pixelToCanvas(element, currentPoints.image);
    		      eventType = _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TAP;
    		      eventData = {
    		        event: e,
    		        viewport: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.getViewport(element),
    		        image: enabledElement.image,
    		        element: element,
    		        currentPoints: currentPoints,
    		        type: eventType,
    		        isTouchEvent: true
    		      };
    		      Object(_util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_4__["default"])(element, eventType, eventData);
    		      break;

    		    case 'doubletap':
    		      isPress = false;
    		      clearTimeout(pressTimeout); // Calculate our current points in page and image coordinates

    		      currentPoints = {
    		        page: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstoneMath.point.pageToPoint(e.pointers[0]),
    		        image: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.pageToPixel(element, e.pointers[0].pageX, e.pointers[0].pageY),
    		        client: {
    		          x: e.pointers[0].clientX,
    		          y: e.pointers[0].clientY
    		        }
    		      };
    		      currentPoints.canvas = _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.pixelToCanvas(element, currentPoints.image);
    		      eventType = _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].DOUBLE_TAP;
    		      eventData = {
    		        event: e,
    		        viewport: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.getViewport(element),
    		        image: enabledElement.image,
    		        element: element,
    		        currentPoints: currentPoints,
    		        type: eventType,
    		        isTouchEvent: true
    		      };
    		      Object(_util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_4__["default"])(element, eventType, eventData);
    		      break;

    		    case 'pinchstart':
    		      isPress = false;
    		      clearTimeout(pressTimeout);
    		      lastScale = 1.0;
    		      break;

    		    case 'pinchmove':
    		      isPress = false;
    		      clearTimeout(pressTimeout);

    		      if (preventNextPinch === true) {
    		        lastScale = e.scale;
    		        preventNextPinch = false;
    		        break;
    		      }

    		      scaleChange = (e.scale - lastScale) / lastScale;
    		      startPoints = {
    		        page: e.center,
    		        image: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.pageToPixel(element, e.center.x, e.center.y)
    		      };
    		      startPoints.canvas = _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.pixelToCanvas(element, startPoints.image);
    		      eventType = _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_PINCH;
    		      eventData = {
    		        event: e,
    		        startPoints: startPoints,
    		        viewport: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.getViewport(element),
    		        image: enabledElement.image,
    		        element: element,
    		        direction: e.scale < 1 ? 1 : -1,
    		        scaleChange: scaleChange,
    		        type: eventType,
    		        isTouchEvent: true
    		      };
    		      Object(_util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_4__["default"])(element, eventType, eventData);
    		      lastScale = e.scale;
    		      break;

    		    case 'touchstart':
    		      lastScale = 1.0;
    		      clearTimeout(pressTimeout);
    		      clearTimeout(touchStartDelay);
    		      touchStartDelay = setTimeout(function () {
    		        startPoints = {
    		          page: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstoneMath.point.pageToPoint(e.touches[0]),
    		          image: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.pageToPixel(element, e.touches[0].pageX, e.touches[0].pageY),
    		          client: {
    		            x: e.touches[0].clientX,
    		            y: e.touches[0].clientY
    		          }
    		        };
    		        startPoints.canvas = _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.pixelToCanvas(element, startPoints.image);
    		        eventType = _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_START;

    		        if (e.touches.length > 1) {
    		          eventType = _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MULTI_TOUCH_START;
    		        }

    		        eventData = {
    		          event: e,
    		          viewport: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.getViewport(element),
    		          image: enabledElement.image,
    		          element: element,
    		          startPoints: startPoints,
    		          currentPoints: startPoints,
    		          type: eventType,
    		          isTouchEvent: true
    		        };
    		        var eventPropagated = Object(_util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_4__["default"])(element, eventType, eventData);

    		        if (eventPropagated === true) {
    		          // IsPress = false;
    		          // ClearTimeout(pressTimeout);
    		          // No current tools responded to the drag action.
    		          // Create new tool measurement
    		          eventType = _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_START_ACTIVE;

    		          if (e.touches.length > 1) {
    		            eventType = _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MULTI_TOUCH_START_ACTIVE;
    		          }

    		          eventData.type = eventType;
    		          Object(_util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_4__["default"])(element, eventType, eventData);
    		        } // Console.log(eventType);


    		        lastPoints = Object(_util_copyPoints_js__WEBPACK_IMPORTED_MODULE_2__["default"])(startPoints);
    		      }, 50);
    		      isPress = true;
    		      pageDistanceMoved = 0;
    		      pressTimeout = setTimeout(function () {
    		        if (!isPress) {
    		          return;
    		        }

    		        currentPoints = {
    		          page: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstoneMath.point.pageToPoint(e.touches[0]),
    		          image: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.pageToPixel(element, e.touches[0].pageX, e.touches[0].pageY),
    		          client: {
    		            x: e.touches[0].clientX,
    		            y: e.touches[0].clientY
    		          }
    		        };
    		        currentPoints.canvas = _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.pixelToCanvas(element, startPoints.image);
    		        eventType = _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_PRESS;
    		        eventData = {
    		          event: e,
    		          viewport: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.getViewport(element),
    		          image: enabledElement.image,
    		          element: element,
    		          currentPoints: currentPoints,
    		          type: eventType,
    		          isTouchEvent: true
    		        };
    		        Object(_util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_4__["default"])(element, eventType, eventData); // Console.log(eventType);
    		      }, pressDelay);
    		      break;

    		    case 'touchend':
    		      lastScale = 1.0;
    		      isPress = false;
    		      clearTimeout(pressTimeout);
    		      setTimeout(function () {
    		        startPoints = {
    		          page: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstoneMath.point.pageToPoint(e.changedTouches[0]),
    		          image: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.pageToPixel(element, e.changedTouches[0].pageX, e.changedTouches[0].pageY),
    		          client: {
    		            x: e.changedTouches[0].clientX,
    		            y: e.changedTouches[0].clientY
    		          }
    		        };
    		        startPoints.canvas = _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.pixelToCanvas(element, startPoints.image);
    		        eventType = _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_END;
    		        eventData = {
    		          event: e,
    		          viewport: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.getViewport(element),
    		          image: enabledElement.image,
    		          element: element,
    		          startPoints: startPoints,
    		          currentPoints: startPoints,
    		          type: eventType,
    		          isTouchEvent: true
    		        };
    		        Object(_util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_4__["default"])(element, eventType, eventData);
    		      }, 50);
    		      break;

    		    case 'panmove':
    		      // Using the delta-value of HammerJS, because it takes all pointers into account
    		      // This is very important when using panning in combination with pinch-zooming
    		      // But HammerJS' delta is relative to the start of the pan event
    		      // So it needs to be converted to a per-event-delta for CornerstoneTools
    		      delta = {
    		        x: e.deltaX - lastDelta.x,
    		        y: e.deltaY - lastDelta.y
    		      };
    		      lastDelta = {
    		        x: e.deltaX,
    		        y: e.deltaY
    		      }; // Calculate our current points in page and image coordinates

    		      currentPoints = {
    		        page: {
    		          x: lastPoints.page.x + delta.x,
    		          y: lastPoints.page.y + delta.y
    		        },
    		        image: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.pageToPixel(element, lastPoints.page.x + delta.x, lastPoints.page.y + delta.y),
    		        client: {
    		          x: lastPoints.client.x + delta.x,
    		          y: lastPoints.client.y + delta.y
    		        }
    		      };
    		      currentPoints.canvas = _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.pixelToCanvas(element, currentPoints.image); // Calculate delta values in page and image coordinates

    		      deltaPoints = {
    		        page: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstoneMath.point.subtract(currentPoints.page, lastPoints.page),
    		        image: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstoneMath.point.subtract(currentPoints.image, lastPoints.image),
    		        client: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstoneMath.point.subtract(currentPoints.client, lastPoints.client),
    		        canvas: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstoneMath.point.subtract(currentPoints.canvas, lastPoints.canvas)
    		      };
    		      pageDistanceMoved += Math.sqrt(deltaPoints.page.x * deltaPoints.page.x + deltaPoints.page.y * deltaPoints.page.y); // Console.log("pageDistanceMoved: " + pageDistanceMoved);

    		      if (pageDistanceMoved > pressMaxDistance) {
    		        // Console.log('Press event aborted due to movement');
    		        isPress = false;
    		        clearTimeout(pressTimeout);
    		      }

    		      eventType = _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_DRAG;

    		      if (e.pointers.length > 1) {
    		        eventType = _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MULTI_TOUCH_DRAG;
    		      }

    		      eventData = {
    		        viewport: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.getViewport(element),
    		        image: enabledElement.image,
    		        element: element,
    		        startPoints: startPoints,
    		        lastPoints: lastPoints,
    		        currentPoints: currentPoints,
    		        deltaPoints: deltaPoints,
    		        numPointers: e.pointers.length,
    		        type: eventType,
    		        isTouchEvent: true
    		      };
    		      Object(_util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_4__["default"])(element, eventType, eventData);
    		      lastPoints = Object(_util_copyPoints_js__WEBPACK_IMPORTED_MODULE_2__["default"])(currentPoints);
    		      break;

    		    case 'panstart':
    		      lastDelta = {
    		        x: e.deltaX,
    		        y: e.deltaY
    		      };
    		      currentPoints = {
    		        page: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstoneMath.point.pageToPoint(e.pointers[0]),
    		        image: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.pageToPixel(element, e.pointers[0].pageX, e.pointers[0].pageY),
    		        client: {
    		          x: e.pointers[0].clientX,
    		          y: e.pointers[0].clientY
    		        }
    		      };
    		      currentPoints.canvas = _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.pixelToCanvas(element, currentPoints.image);
    		      lastPoints = Object(_util_copyPoints_js__WEBPACK_IMPORTED_MODULE_2__["default"])(currentPoints);
    		      break;

    		    case 'panend':
    		      isPress = false;
    		      clearTimeout(pressTimeout); // If lastPoints is not yet set, it means panend fired without panstart or pan,
    		      // So we can ignore this event

    		      if (!lastPoints) {
    		        return false;
    		      }

    		      currentPoints = {
    		        page: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstoneMath.point.pageToPoint(e.pointers[0]),
    		        image: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.pageToPixel(element, e.pointers[0].pageX, e.pointers[0].pageY),
    		        client: {
    		          x: e.pointers[0].clientX,
    		          y: e.pointers[0].clientY
    		        }
    		      };
    		      currentPoints.canvas = _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.pixelToCanvas(element, currentPoints.image); // Calculate delta values in page and image coordinates

    		      deltaPoints = {
    		        page: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstoneMath.point.subtract(currentPoints.page, lastPoints.page),
    		        image: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstoneMath.point.subtract(currentPoints.image, lastPoints.image),
    		        client: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstoneMath.point.subtract(currentPoints.client, lastPoints.client),
    		        canvas: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstoneMath.point.subtract(currentPoints.canvas, lastPoints.canvas)
    		      };
    		      eventType = _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_DRAG_END;
    		      eventData = {
    		        event: e.srcEvent,
    		        viewport: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.getViewport(element),
    		        image: enabledElement.image,
    		        element: element,
    		        startPoints: startPoints,
    		        lastPoints: lastPoints,
    		        currentPoints: currentPoints,
    		        deltaPoints: deltaPoints,
    		        type: eventType,
    		        isTouchEvent: true
    		      };
    		      Object(_util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_4__["default"])(element, eventType, eventData);
    		      remainingPointers = e.pointers.length - e.changedPointers.length;

    		      if (remainingPointers === 2) {
    		        preventNextPinch = true;
    		      }

    		      break;

    		    case 'rotatemove':
    		      isPress = false;
    		      clearTimeout(pressTimeout);
    		      rotation = e.rotation - lastRotation;
    		      lastRotation = e.rotation;
    		      eventType = _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_ROTATE;
    		      eventData = {
    		        event: e.srcEvent,
    		        viewport: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.getViewport(element),
    		        image: enabledElement.image,
    		        element: element,
    		        rotation: rotation,
    		        type: eventType
    		      };
    		      Object(_util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_4__["default"])(element, eventType, eventData);
    		      break;
    		  }

    		  return false;
    		}

    		function enable(element) {
    		  disable(element);
    		  var Hammer = _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].Hammer;
    		  var hammerOptions = {
    		    inputClass: Hammer.SUPPORT_POINTER_EVENTS ? Hammer.PointerEventInput : Hammer.TouchInput
    		  };
    		  var mc = new Hammer.Manager(element, hammerOptions);
    		  var panOptions = {
    		    pointers: 0,
    		    direction: Hammer.DIRECTION_ALL,
    		    threshold: 0
    		  };
    		  var pan = new Hammer.Pan(panOptions);
    		  var pinch = new Hammer.Pinch({
    		    threshold: 0
    		  });
    		  var rotate = new Hammer.Rotate({
    		    threshold: 0
    		  });
    		  pinch.recognizeWith(pan);
    		  pinch.recognizeWith(rotate);
    		  rotate.recognizeWith(pan);
    		  var doubleTap = new Hammer.Tap({
    		    event: 'doubletap',
    		    taps: 2,
    		    interval: 1500,
    		    threshold: 50,
    		    posThreshold: 50
    		  });
    		  doubleTap.recognizeWith(pan); // Add to the Manager

    		  mc.add([doubleTap, pan, rotate, pinch]);
    		  mc.on('tap doubletap panstart panmove panend pinchstart pinchmove rotatemove', onTouch);
    		  _preventGhostClick_js__WEBPACK_IMPORTED_MODULE_3__["default"].enable(element);
    		  var touchEvents = ['touchstart', 'touchend'];
    		  touchEvents.forEach(function (eventType) {
    		    element.addEventListener(eventType, onTouch, {
    		      passive: false
    		    });
    		  });
    		  var options = Object(_toolOptions_js__WEBPACK_IMPORTED_MODULE_5__["getToolOptions"])(toolType, element);
    		  options.hammer = mc;
    		  Object(_toolOptions_js__WEBPACK_IMPORTED_MODULE_5__["setToolOptions"])(toolType, element, options);
    		}

    		function disable(element) {
    		  _preventGhostClick_js__WEBPACK_IMPORTED_MODULE_3__["default"].disable(element);
    		  var touchEvents = ['touchstart', 'touchend'];
    		  touchEvents.forEach(function (eventType) {
    		    element.removeEventListener(eventType, onTouch);
    		  });
    		  var options = Object(_toolOptions_js__WEBPACK_IMPORTED_MODULE_5__["getToolOptions"])(toolType, element);
    		  var mc = options.hammer;

    		  if (mc) {
    		    mc.off('tap doubletap panstart panmove panend pinchstart pinchmove rotatemove', onTouch);
    		  }
    		} // Module exports


    		var touchInput = {
    		  enable: enable,
    		  disable: disable
    		};
    		/* harmony default export */ __webpack_exports__["default"] = (touchInput);

    		/***/ }),

    		/***/ "./eventListeners/wheelEventListener.js":
    		/*!**********************************************!*\
    		  !*** ./eventListeners/wheelEventListener.js ***!
    		  \**********************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../events.js */ "./events.js");
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/triggerEvent.js */ "./util/triggerEvent.js");
    		/* harmony import */ var _internals_normalizeWheel_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./internals/normalizeWheel.js */ "./eventListeners/internals/normalizeWheel.js");
    		/**
    		 * Internal module used to turn on listening, handling, and normalizing of the
    		 * native `wheel` event
    		 */




    		/**
    		 *
    		 * @private
    		 * @function wheelEventHandler
    		 * @param {WheelEvent} evt
    		 * @returns {undefined}
    		 */

    		function wheelEventHandler(evt) {
    		  var element = evt.currentTarget;
    		  var enabledElement = _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.getEnabledElement(element);

    		  if (!enabledElement.image) {
    		    return;
    		  } // Prevent triggering MouseWheel events that are not real scroll events:
    		  // E.g. when clicking the MiddleMouseWheelButton, a deltaY of 0 is emitted.
    		  // See https://github.com/cornerstonejs/cornerstoneTools/issues/935


    		  if (evt.deltaY > -1 && evt.deltaY < 1) {
    		    return;
    		  }

    		  evt.preventDefault();
    		  var pageX = evt.pageX,
    		      pageY = evt.pageY;
    		  var startingCoords = _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.pageToPixel(element, pageX, pageY);

    		  var _normalizeWheel = Object(_internals_normalizeWheel_js__WEBPACK_IMPORTED_MODULE_3__["default"])(evt),
    		      spinX = _normalizeWheel.spinX,
    		      spinY = _normalizeWheel.spinY,
    		      pixelX = _normalizeWheel.pixelX,
    		      pixelY = _normalizeWheel.pixelY;

    		  var direction = spinY < 0 ? -1 : 1;
    		  var mouseWheelData = {
    		    element: element,
    		    viewport: _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.getViewport(element),
    		    detail: evt,
    		    image: enabledElement.image,
    		    direction: direction,
    		    spinX: spinX,
    		    spinY: spinY,
    		    pixelX: pixelX,
    		    pixelY: pixelY,
    		    pageX: pageX,
    		    pageY: pageY,
    		    imageX: startingCoords.x,
    		    imageY: startingCoords.y
    		  };
    		  Object(_util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_2__["default"])(element, _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MOUSE_WHEEL, mouseWheelData);
    		}
    		/**
    		 * Listens for the wheel event, and handles it. Handled event
    		 * will be "normalized" and re-emitted as `EVENTS.MOUSE_WHEEL`
    		 *
    		 * @private
    		 * @param {HTMLElement} element
    		 * @returns {undefined}
    		 */


    		function enable(element) {
    		  disable(element);
    		  element.addEventListener('wheel', wheelEventHandler, {
    		    passive: false
    		  });
    		}
    		/**
    		 * Removes listener and handler for wheel event. `EVENTS.MOUSE_WHEEL`
    		 * will no longer be emitted.
    		 *
    		 * @private
    		 * @param {HTMLElement} element
    		 * @returns {undefined}
    		 */


    		function disable(element) {
    		  element.removeEventListener('wheel', wheelEventHandler, {
    		    passive: false
    		  });
    		}

    		/* harmony default export */ __webpack_exports__["default"] = ({
    		  enable: enable,
    		  disable: disable
    		});

    		/***/ }),

    		/***/ "./eventListeners/windowResizeHandler.js":
    		/*!***********************************************!*\
    		  !*** ./eventListeners/windowResizeHandler.js ***!
    		  \***********************************************/
    		/*! exports provided: forceEnabledElementResize, default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "forceEnabledElementResize", function() { return forceEnabledElementResize; });
    		/* harmony import */ var _store_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../store/index.js */ "./store/index.js");
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../externalModules.js */ "./externalModules.js");



    		var enable = function enable() {
    		  disable(); // Clean up any lingering listeners

    		  window.addEventListener('resize', resizeThrottler, false);
    		};

    		var disable = function disable() {
    		  window.removeEventListener('resize', resizeThrottler, false);
    		};

    		var resizeTimeout;

    		function resizeThrottler() {
    		  // Ignore resize events as long as an actualResizeHandler execution is in the queue
    		  if (!resizeTimeout) {
    		    resizeTimeout = setTimeout(function () {
    		      resizeTimeout = null;
    		      forceEnabledElementResize(); // The actualResizeHandler will execute at a rate of 15fps
    		    }, 66);
    		  }
    		}

    		var forceEnabledElementResize = function forceEnabledElementResize() {
    		  _store_index_js__WEBPACK_IMPORTED_MODULE_0__["state"].enabledElements.forEach(function (element) {
    		    _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.resize(element);
    		  });
    		};
    		/* harmony default export */ __webpack_exports__["default"] = ({
    		  enable: enable,
    		  disable: disable
    		});

    		/***/ }),

    		/***/ "./events.js":
    		/*!*******************!*\
    		  !*** ./events.js ***!
    		  \*******************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/**
    		 *  Enumerates the events for CornestoneTools. Native events are captured,
    		 *  normalized, and re-triggered with a `cornerstonetools` prefix. This allows
    		 *  us to handle events consistently across different browsers.
    		 *
    		 *  @enum {String}
    		 *  @memberof CornerstoneTools
    		 *  @readonly
    		 */
    		var EVENTS = {
    		  //
    		  // MOUSE
    		  //

    		  /**
    		   * https://developer.mozilla.org/en-US/docs/Web/Events/mousedown
    		   *  @type {String}
    		   */
    		  MOUSE_DOWN: 'cornerstonetoolsmousedown',

    		  /**
    		   * https://developer.mozilla.org/en-US/docs/Web/Events/mouseup
    		   *  @type {String}
    		   */
    		  MOUSE_UP: 'cornerstonetoolsmouseup',

    		  /**
    		   * Is fired if a handled `MOUSE_DOWN` event does not `stopPropagation`. The hook
    		   * we use to create new measurement data for mouse events.
    		   *  @type {String}
    		   */
    		  MOUSE_DOWN_ACTIVATE: 'cornerstonetoolsmousedownactivate',

    		  /**
    		   * https://developer.mozilla.org/en-US/docs/Web/Events/drag
    		   *  @type {String}
    		   */
    		  MOUSE_DRAG: 'cornerstonetoolsmousedrag',

    		  /**
    		   * https://developer.mozilla.org/en-US/docs/Web/Events/mousemove
    		   *  @type {String}
    		   */
    		  MOUSE_MOVE: 'cornerstonetoolsmousemove',

    		  /**
    		   * https://developer.mozilla.org/en-US/docs/Web/Events/click
    		   *  @type {String}
    		   */
    		  MOUSE_CLICK: 'cornerstonetoolsmouseclick',

    		  /**
    		   * https://developer.mozilla.org/en-US/docs/Web/Events/dblclick
    		   *  @type {String}
    		   */
    		  MOUSE_DOUBLE_CLICK: 'cornerstonetoolsmousedoubleclick',

    		  /**
    		   * https://developer.mozilla.org/en-US/docs/Web/Events/wheel
    		   *  @type {String}
    		   */
    		  MOUSE_WHEEL: 'cornerstonetoolsmousewheel',
    		  //
    		  // TOUCH
    		  //

    		  /**
    		   * https://developer.mozilla.org/en-US/docs/Web/Events/touchstart
    		   *  @type {String}
    		   */
    		  TOUCH_START: 'cornerstonetoolstouchstart',

    		  /**
    		   * Is fired if a handled `TOUCH_START` event does not `stopPropagation`. The hook
    		   * we use to create new measurement data for touch events.
    		   *  @type {String}
    		   */
    		  TOUCH_START_ACTIVE: 'cornerstonetoolstouchstartactive',

    		  /**
    		   *  @type {String}
    		   */
    		  TOUCH_END: 'cornerstonetoolstouchend',

    		  /**
    		   *  @type {String}
    		   */
    		  TOUCH_DRAG: 'cornerstonetoolstouchdrag',

    		  /**
    		   *  @type {String}
    		   */
    		  TOUCH_DRAG_END: 'cornerstonetoolstouchdragend',

    		  /**
    		   * http://hammerjs.github.io/recognizer-pinch/
    		   *  @type {String}
    		   */
    		  TOUCH_PINCH: 'cornerstonetoolstouchpinch',

    		  /**
    		   * http://hammerjs.github.io/recognizer-rotate/
    		   *  @type {String}
    		   */
    		  TOUCH_ROTATE: 'cornerstonetoolstouchrotate',

    		  /**
    		   * http://hammerjs.github.io/recognizer-press/
    		   *  @type {String}
    		   */
    		  TOUCH_PRESS: 'cornerstonetoolstouchpress',

    		  /**
    		   * http://hammerjs.github.io/recognizer-tap/
    		   *  @type {String}
    		   */
    		  TAP: 'cornerstonetoolstap',

    		  /**
    		   *  @type {String}
    		   */
    		  DOUBLE_TAP: 'cornerstonetoolsdoubletap',

    		  /**
    		   *  @type {String}
    		   */
    		  MULTI_TOUCH_START: 'cornerstonetoolsmultitouchstart',

    		  /**
    		   *  @type {String}
    		   */
    		  MULTI_TOUCH_START_ACTIVE: 'cornerstonetoolsmultitouchstartactive',

    		  /**
    		   *  @type {String}
    		   */
    		  MULTI_TOUCH_DRAG: 'cornerstonetoolsmultitouchdrag',
    		  //
    		  // KEYBOARD
    		  //

    		  /**
    		   * https://developer.mozilla.org/en-US/docs/Web/Events/keydown
    		   *  @type {String}
    		   */
    		  KEY_DOWN: 'cornerstonetoolskeydown',

    		  /**
    		   * https://developer.mozilla.org/en-US/docs/Web/Events/keyup
    		   *  @type {String}
    		   */
    		  KEY_UP: 'cornerstonetoolskeyup',

    		  /**
    		   * https://developer.mozilla.org/en-US/docs/Web/Events/keypress
    		   *  @type {String}
    		   */
    		  KEY_PRESS: 'cornerstonetoolskeypress',
    		  //
    		  // CUSTOM
    		  //

    		  /**
    		   *  @type {String}
    		   */
    		  MEASUREMENT_ADDED: 'cornerstonetoolsmeasurementadded',

    		  /**
    		   *  @type {String}
    		   */
    		  MEASUREMENT_MODIFIED: 'cornerstonetoolsmeasurementmodified',

    		  /**
    		   *  @type {String}
    		   */
    		  MEASUREMENT_COMPLETED: 'cornerstonetoolsmeasurementcompleted',

    		  /**
    		   *  @type {String}
    		   */
    		  MEASUREMENT_REMOVED: 'cornerstonetoolsmeasurementremoved',

    		  /**
    		   *  @type {String}
    		   */
    		  TOOL_DEACTIVATED: 'cornerstonetoolstooldeactivated',

    		  /**
    		   *  @type {String}
    		   */
    		  CLIP_STOPPED: 'cornerstonetoolsclipstopped',

    		  /**
    		   *  @type {String}
    		   */
    		  STACK_SCROLL: 'cornerstonetoolsstackscroll',

    		  /**
    		   *  @type {String}
    		   */
    		  STACK_PREFETCH_IMAGE_LOADED: 'cornerstonetoolsstackprefetchimageloaded',

    		  /**
    		   *  @type {String}
    		   */
    		  STACK_PREFETCH_DONE: 'cornerstonetoolsstackprefetchdone'
    		};
    		/* harmony default export */ __webpack_exports__["default"] = (EVENTS);

    		/***/ }),

    		/***/ "./externalModules.js":
    		/*!****************************!*\
    		  !*** ./externalModules.js ***!
    		  \****************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		var cornerstone = window.cornerstone;
    		var cornerstoneMath = window.cornerstoneMath;
    		var Hammer = window.Hammer;
    		/* harmony default export */ __webpack_exports__["default"] = ({
    		  set cornerstone(cs) {
    		    cornerstone = cs;
    		  },

    		  get cornerstone() {
    		    return cornerstone;
    		  },

    		  set cornerstoneMath(cm) {
    		    cornerstoneMath = cm;
    		  },

    		  get cornerstoneMath() {
    		    return cornerstoneMath;
    		  },

    		  set Hammer(module) {
    		    Hammer = module;
    		  },

    		  get Hammer() {
    		    return Hammer;
    		  }

    		});

    		/***/ }),

    		/***/ "./import.js":
    		/*!*******************!*\
    		  !*** ./import.js ***!
    		  \*******************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _lib_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib.js */ "./lib.js");

    		/**
    		 * Imports functionality from cornerstoneTools for use in external packages/plugins.
    		 * @export
    		 * @public
    		 * @method
    		 * @name import
    		 *
    		 * @param  {string} uri the import path for the entity to import.
    		 * @returns {Class|Object|Function} The entity requested.
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (uri) {
    		  return _lib_js__WEBPACK_IMPORTED_MODULE_0__["lib"][uri];
    		});

    		/***/ }),

    		/***/ "./index.js":
    		/*!******************!*\
    		  !*** ./index.js ***!
    		  \******************/
    		/*! exports provided: AngleTool, ArrowAnnotateTool, BidirectionalTool, CircleRoiTool, CobbAngleTool, EllipticalRoiTool, FreehandMouseTool, LengthTool, ProbeTool, RectangleRoiTool, TextMarkerTool, BrushTool, CrosshairsTool, DoubleTapFitToWindowTool, DragProbeTool, EraserTool, FreehandSculpterMouseTool, MagnifyTool, PanMultiTouchTool, PanTool, ReferenceLinesTool, RotateTool, RotateTouchTool, ScaleOverlayTool, StackScrollMouseWheelTool, StackScrollMultiTouchTool, StackScrollTool, WwwcRegionTool, WwwcTool, ZoomMouseWheelTool, ZoomTool, ZoomTouchPinchTool, init, stackPrefetch, stackRenderers, playClip, stopClip, store, getToolForElement, addTool, addToolForElement, removeTool, removeToolForElement, setToolOptions, setToolOptionsForElement, setToolActive, setToolActiveForElement, setToolEnabled, setToolEnabledForElement, setToolDisabled, setToolDisabledForElement, setToolPassive, setToolPassiveForElement, addToolState, getToolState, removeToolState, clearToolState, setElementToolStateManager, getElementToolStateManager, textStyle, toolStyle, toolColors, toolCoordinates, stackSpecificStateManager, newStackSpecificToolStateManager, addStackStateManager, loadHandlerManager, newImageIdSpecificToolStateManager, globalImageIdSpecificToolStateManager, newFrameOfReferenceSpecificToolStateManager, globalFrameOfReferenceSpecificToolStateManager, forceEnabledElementResize, orientation, SaveAs, enableLogger, disableLogger, register, registerSome, wwwcSynchronizer, updateImageSynchronizer, Synchronizer, stackScrollSynchronizer, stackImagePositionSynchronizer, stackImagePositionOffsetSynchronizer, stackImageIndexSynchronizer, panZoomSynchronizer, requestPoolManager, external, EVENTS, version, import, default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _tools_annotation_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tools/annotation/index.js */ "./tools/annotation/index.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AngleTool", function() { return _tools_annotation_index_js__WEBPACK_IMPORTED_MODULE_0__["AngleTool"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ArrowAnnotateTool", function() { return _tools_annotation_index_js__WEBPACK_IMPORTED_MODULE_0__["ArrowAnnotateTool"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BidirectionalTool", function() { return _tools_annotation_index_js__WEBPACK_IMPORTED_MODULE_0__["BidirectionalTool"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CircleRoiTool", function() { return _tools_annotation_index_js__WEBPACK_IMPORTED_MODULE_0__["CircleRoiTool"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CobbAngleTool", function() { return _tools_annotation_index_js__WEBPACK_IMPORTED_MODULE_0__["CobbAngleTool"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EllipticalRoiTool", function() { return _tools_annotation_index_js__WEBPACK_IMPORTED_MODULE_0__["EllipticalRoiTool"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FreehandMouseTool", function() { return _tools_annotation_index_js__WEBPACK_IMPORTED_MODULE_0__["FreehandMouseTool"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LengthTool", function() { return _tools_annotation_index_js__WEBPACK_IMPORTED_MODULE_0__["LengthTool"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ProbeTool", function() { return _tools_annotation_index_js__WEBPACK_IMPORTED_MODULE_0__["ProbeTool"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RectangleRoiTool", function() { return _tools_annotation_index_js__WEBPACK_IMPORTED_MODULE_0__["RectangleRoiTool"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TextMarkerTool", function() { return _tools_annotation_index_js__WEBPACK_IMPORTED_MODULE_0__["TextMarkerTool"]; });

    		/* harmony import */ var _tools_brush_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tools/brush/index.js */ "./tools/brush/index.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BrushTool", function() { return _tools_brush_index_js__WEBPACK_IMPORTED_MODULE_1__["BrushTool"]; });

    		/* harmony import */ var _tools_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tools/index.js */ "./tools/index.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CrosshairsTool", function() { return _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["CrosshairsTool"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DoubleTapFitToWindowTool", function() { return _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["DoubleTapFitToWindowTool"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DragProbeTool", function() { return _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["DragProbeTool"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EraserTool", function() { return _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["EraserTool"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FreehandSculpterMouseTool", function() { return _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["FreehandSculpterMouseTool"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MagnifyTool", function() { return _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["MagnifyTool"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PanMultiTouchTool", function() { return _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["PanMultiTouchTool"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PanTool", function() { return _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["PanTool"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ReferenceLinesTool", function() { return _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["ReferenceLinesTool"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RotateTool", function() { return _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["RotateTool"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RotateTouchTool", function() { return _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["RotateTouchTool"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ScaleOverlayTool", function() { return _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["ScaleOverlayTool"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StackScrollMouseWheelTool", function() { return _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["StackScrollMouseWheelTool"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StackScrollMultiTouchTool", function() { return _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["StackScrollMultiTouchTool"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StackScrollTool", function() { return _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["StackScrollTool"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WwwcRegionTool", function() { return _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["WwwcRegionTool"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WwwcTool", function() { return _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["WwwcTool"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ZoomMouseWheelTool", function() { return _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["ZoomMouseWheelTool"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ZoomTool", function() { return _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["ZoomTool"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ZoomTouchPinchTool", function() { return _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["ZoomTouchPinchTool"]; });

    		/* harmony import */ var _import_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./import.js */ "./import.js");
    		/* harmony import */ var _init_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./init.js */ "./init.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "init", function() { return _init_js__WEBPACK_IMPORTED_MODULE_4__["default"]; });

    		/* harmony import */ var _stackTools_stackPrefetch_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./stackTools/stackPrefetch.js */ "./stackTools/stackPrefetch.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackPrefetch", function() { return _stackTools_stackPrefetch_js__WEBPACK_IMPORTED_MODULE_5__["default"]; });

    		/* harmony import */ var _stackTools_stackRenderers_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./stackTools/stackRenderers.js */ "./stackTools/stackRenderers.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackRenderers", function() { return _stackTools_stackRenderers_js__WEBPACK_IMPORTED_MODULE_6__["default"]; });

    		/* harmony import */ var _stackTools_playClip_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./stackTools/playClip.js */ "./stackTools/playClip.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "playClip", function() { return _stackTools_playClip_js__WEBPACK_IMPORTED_MODULE_7__["playClip"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stopClip", function() { return _stackTools_playClip_js__WEBPACK_IMPORTED_MODULE_7__["stopClip"]; });

    		/* harmony import */ var _store_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./store/index.js */ "./store/index.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "store", function() { return _store_index_js__WEBPACK_IMPORTED_MODULE_8__["default"]; });

    		/* harmony import */ var _store_getToolForElement_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./store/getToolForElement.js */ "./store/getToolForElement.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getToolForElement", function() { return _store_getToolForElement_js__WEBPACK_IMPORTED_MODULE_9__["default"]; });

    		/* harmony import */ var _store_addTool_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./store/addTool.js */ "./store/addTool.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "addTool", function() { return _store_addTool_js__WEBPACK_IMPORTED_MODULE_10__["addTool"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "addToolForElement", function() { return _store_addTool_js__WEBPACK_IMPORTED_MODULE_10__["addToolForElement"]; });

    		/* harmony import */ var _store_removeTool_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./store/removeTool.js */ "./store/removeTool.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "removeTool", function() { return _store_removeTool_js__WEBPACK_IMPORTED_MODULE_11__["removeTool"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "removeToolForElement", function() { return _store_removeTool_js__WEBPACK_IMPORTED_MODULE_11__["removeToolForElement"]; });

    		/* harmony import */ var _store_setToolOptions_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./store/setToolOptions.js */ "./store/setToolOptions.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setToolOptions", function() { return _store_setToolOptions_js__WEBPACK_IMPORTED_MODULE_12__["setToolOptions"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setToolOptionsForElement", function() { return _store_setToolOptions_js__WEBPACK_IMPORTED_MODULE_12__["setToolOptionsForElement"]; });

    		/* harmony import */ var _store_setToolMode_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./store/setToolMode.js */ "./store/setToolMode.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setToolActive", function() { return _store_setToolMode_js__WEBPACK_IMPORTED_MODULE_13__["setToolActive"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setToolActiveForElement", function() { return _store_setToolMode_js__WEBPACK_IMPORTED_MODULE_13__["setToolActiveForElement"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setToolEnabled", function() { return _store_setToolMode_js__WEBPACK_IMPORTED_MODULE_13__["setToolEnabled"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setToolEnabledForElement", function() { return _store_setToolMode_js__WEBPACK_IMPORTED_MODULE_13__["setToolEnabledForElement"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setToolDisabled", function() { return _store_setToolMode_js__WEBPACK_IMPORTED_MODULE_13__["setToolDisabled"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setToolDisabledForElement", function() { return _store_setToolMode_js__WEBPACK_IMPORTED_MODULE_13__["setToolDisabledForElement"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setToolPassive", function() { return _store_setToolMode_js__WEBPACK_IMPORTED_MODULE_13__["setToolPassive"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setToolPassiveForElement", function() { return _store_setToolMode_js__WEBPACK_IMPORTED_MODULE_13__["setToolPassiveForElement"]; });

    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "addToolState", function() { return _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_14__["addToolState"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getToolState", function() { return _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_14__["getToolState"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "removeToolState", function() { return _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_14__["removeToolState"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "clearToolState", function() { return _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_14__["clearToolState"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setElementToolStateManager", function() { return _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_14__["setElementToolStateManager"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getElementToolStateManager", function() { return _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_14__["getElementToolStateManager"]; });

    		/* harmony import */ var _stateManagement_textStyle_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./stateManagement/textStyle.js */ "./stateManagement/textStyle.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "textStyle", function() { return _stateManagement_textStyle_js__WEBPACK_IMPORTED_MODULE_15__["default"]; });

    		/* harmony import */ var _stateManagement_toolStyle_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./stateManagement/toolStyle.js */ "./stateManagement/toolStyle.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toolStyle", function() { return _stateManagement_toolStyle_js__WEBPACK_IMPORTED_MODULE_16__["default"]; });

    		/* harmony import */ var _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./stateManagement/toolColors.js */ "./stateManagement/toolColors.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toolColors", function() { return _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_17__["default"]; });

    		/* harmony import */ var _stateManagement_toolCoordinates_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./stateManagement/toolCoordinates.js */ "./stateManagement/toolCoordinates.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toolCoordinates", function() { return _stateManagement_toolCoordinates_js__WEBPACK_IMPORTED_MODULE_18__["default"]; });

    		/* harmony import */ var _stateManagement_stackSpecificStateManager_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./stateManagement/stackSpecificStateManager.js */ "./stateManagement/stackSpecificStateManager.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackSpecificStateManager", function() { return _stateManagement_stackSpecificStateManager_js__WEBPACK_IMPORTED_MODULE_19__["stackSpecificStateManager"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "newStackSpecificToolStateManager", function() { return _stateManagement_stackSpecificStateManager_js__WEBPACK_IMPORTED_MODULE_19__["newStackSpecificToolStateManager"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "addStackStateManager", function() { return _stateManagement_stackSpecificStateManager_js__WEBPACK_IMPORTED_MODULE_19__["addStackStateManager"]; });

    		/* harmony import */ var _stateManagement_loadHandlerManager_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./stateManagement/loadHandlerManager.js */ "./stateManagement/loadHandlerManager.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "loadHandlerManager", function() { return _stateManagement_loadHandlerManager_js__WEBPACK_IMPORTED_MODULE_20__["default"]; });

    		/* harmony import */ var _stateManagement_imageIdSpecificStateManager_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./stateManagement/imageIdSpecificStateManager.js */ "./stateManagement/imageIdSpecificStateManager.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "newImageIdSpecificToolStateManager", function() { return _stateManagement_imageIdSpecificStateManager_js__WEBPACK_IMPORTED_MODULE_21__["newImageIdSpecificToolStateManager"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "globalImageIdSpecificToolStateManager", function() { return _stateManagement_imageIdSpecificStateManager_js__WEBPACK_IMPORTED_MODULE_21__["globalImageIdSpecificToolStateManager"]; });

    		/* harmony import */ var _stateManagement_frameOfReferenceStateManager_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./stateManagement/frameOfReferenceStateManager.js */ "./stateManagement/frameOfReferenceStateManager.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "newFrameOfReferenceSpecificToolStateManager", function() { return _stateManagement_frameOfReferenceStateManager_js__WEBPACK_IMPORTED_MODULE_22__["newFrameOfReferenceSpecificToolStateManager"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "globalFrameOfReferenceSpecificToolStateManager", function() { return _stateManagement_frameOfReferenceStateManager_js__WEBPACK_IMPORTED_MODULE_22__["globalFrameOfReferenceSpecificToolStateManager"]; });

    		/* harmony import */ var _eventListeners_windowResizeHandler_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./eventListeners/windowResizeHandler.js */ "./eventListeners/windowResizeHandler.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceEnabledElementResize", function() { return _eventListeners_windowResizeHandler_js__WEBPACK_IMPORTED_MODULE_23__["forceEnabledElementResize"]; });

    		/* harmony import */ var _orientation_index_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./orientation/index.js */ "./orientation/index.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "orientation", function() { return _orientation_index_js__WEBPACK_IMPORTED_MODULE_24__["default"]; });

    		/* harmony import */ var _util_SaveAs_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./util/SaveAs.js */ "./util/SaveAs.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SaveAs", function() { return _util_SaveAs_js__WEBPACK_IMPORTED_MODULE_25__["default"]; });

    		/* harmony import */ var _util_logger_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./util/logger.js */ "./util/logger.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "enableLogger", function() { return _util_logger_js__WEBPACK_IMPORTED_MODULE_26__["enable"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "disableLogger", function() { return _util_logger_js__WEBPACK_IMPORTED_MODULE_26__["disable"]; });

    		/* harmony import */ var _thirdParty_register_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./thirdParty/register.js */ "./thirdParty/register.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "register", function() { return _thirdParty_register_js__WEBPACK_IMPORTED_MODULE_27__["default"]; });

    		/* harmony import */ var _thirdParty_registerSome_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./thirdParty/registerSome.js */ "./thirdParty/registerSome.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "registerSome", function() { return _thirdParty_registerSome_js__WEBPACK_IMPORTED_MODULE_28__["default"]; });

    		/* harmony import */ var _synchronization_wwwcSynchronizer_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./synchronization/wwwcSynchronizer.js */ "./synchronization/wwwcSynchronizer.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "wwwcSynchronizer", function() { return _synchronization_wwwcSynchronizer_js__WEBPACK_IMPORTED_MODULE_29__["default"]; });

    		/* harmony import */ var _synchronization_updateImageSynchronizer_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./synchronization/updateImageSynchronizer.js */ "./synchronization/updateImageSynchronizer.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "updateImageSynchronizer", function() { return _synchronization_updateImageSynchronizer_js__WEBPACK_IMPORTED_MODULE_30__["default"]; });

    		/* harmony import */ var _synchronization_Synchronizer_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./synchronization/Synchronizer.js */ "./synchronization/Synchronizer.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Synchronizer", function() { return _synchronization_Synchronizer_js__WEBPACK_IMPORTED_MODULE_31__["default"]; });

    		/* harmony import */ var _synchronization_stackScrollSynchronizer_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./synchronization/stackScrollSynchronizer.js */ "./synchronization/stackScrollSynchronizer.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackScrollSynchronizer", function() { return _synchronization_stackScrollSynchronizer_js__WEBPACK_IMPORTED_MODULE_32__["default"]; });

    		/* harmony import */ var _synchronization_stackImagePositionSynchronizer_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./synchronization/stackImagePositionSynchronizer.js */ "./synchronization/stackImagePositionSynchronizer.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackImagePositionSynchronizer", function() { return _synchronization_stackImagePositionSynchronizer_js__WEBPACK_IMPORTED_MODULE_33__["default"]; });

    		/* harmony import */ var _synchronization_stackImagePositionOffsetSynchronizer_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./synchronization/stackImagePositionOffsetSynchronizer.js */ "./synchronization/stackImagePositionOffsetSynchronizer.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackImagePositionOffsetSynchronizer", function() { return _synchronization_stackImagePositionOffsetSynchronizer_js__WEBPACK_IMPORTED_MODULE_34__["default"]; });

    		/* harmony import */ var _synchronization_stackImageIndexSynchronizer_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./synchronization/stackImageIndexSynchronizer.js */ "./synchronization/stackImageIndexSynchronizer.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackImageIndexSynchronizer", function() { return _synchronization_stackImageIndexSynchronizer_js__WEBPACK_IMPORTED_MODULE_35__["default"]; });

    		/* harmony import */ var _synchronization_panZoomSynchronizer_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./synchronization/panZoomSynchronizer.js */ "./synchronization/panZoomSynchronizer.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "panZoomSynchronizer", function() { return _synchronization_panZoomSynchronizer_js__WEBPACK_IMPORTED_MODULE_36__["default"]; });

    		/* harmony import */ var _requestPool_requestPoolManager_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./requestPool/requestPoolManager.js */ "./requestPool/requestPoolManager.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "requestPoolManager", function() { return _requestPool_requestPoolManager_js__WEBPACK_IMPORTED_MODULE_37__["default"]; });

    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./externalModules.js */ "./externalModules.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "external", function() { return _externalModules_js__WEBPACK_IMPORTED_MODULE_38__["default"]; });

    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./events.js */ "./events.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EVENTS", function() { return _events_js__WEBPACK_IMPORTED_MODULE_39__["default"]; });

    		/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./version.js */ "./version.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "version", function() { return _version_js__WEBPACK_IMPORTED_MODULE_40__["default"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "import", function() { return _import_js__WEBPACK_IMPORTED_MODULE_3__["default"]; });

    		/**
    		 * Root
    		 * @namespace CornerstoneTools
    		 */

    		/**
    		 * Drawing API to assist in consistent annotation creation
    		 * @namespace Drawing
    		 */

    		/**
    		 * Event dispatchers listen for events from `cornerstone` and `enabledElements`. Dispatchers
    		 * choose which tool(s) get to handle the event by looking at callbacks, priority, and other factors.
    		 * @private
    		 * @namespace EventDispatchers
    		 */

    		/**
    		 * Event listeners normalize events emitted by `cornerstone` and `enabledElements`. The listeners
    		 * then re-emit events prefixed with `cornerstonetools`. For example, `mousemove` becomes `cornerstonetoolsmousemove`.
    		 * Most of these events are caught by an `eventDispatcher`, and used to shape tool behavior.
    		 * @private
    		 * @namespace EventListeners
    		 */

    		/**
    		 * Manipulators describe a tool's `handle` behavior. Leveraging a small set of manipulators
    		 * allows us to create a consistent experience when interacting with tools via their handles.
    		 * @namespace Manipulators
    		 */

    		/**
    		 * Mixins are "tool beahviors" that can be added to a tool via its mixin
    		 * array configuration property
    		 * @namespace Mixins
    		 */

    		/**
    		 * StateManagement
    		 * @namespace StateManagement
    		 */

    		/**
    		 * Sync
    		 * @namespace Synchronization
    		 */

    		/**
    		 * Third party
    		 * @namespace ThirdParty
    		 */

    		/**
    		 * Tools
    		 * @namespace Tools
    		 */

    		/**
    		 * Tools that extend the {@link #Tools.Base.BaseAnnotationTool|`BaseAnnotationTool`}
    		 * @namespace Tools.Annotation
    		 */

    		/**
    		 * The parent (abstract) classes that all tools derive from.
    		 * @namespace Tools.Base
    		 */

    		/**
    		 * Tools that extend the {@link #Tools.Base.BaseBrushTool|`BaseBrushTool`}
    		 * @namespace Tools.Brush
    		 */

    		/**
    		 * Util
    		 * @namespace Util
    		 */




    		 // ~~~~~~ STACK TOOLS ~~~~~ //



    		 // ~~~~~~ STATE MANAGEMENT ~~~~~ //
















    		 // ~~~~~~ ORIENTATION  ~~~~~ //

    		 // ~~~~~~ CANVAS EXPORT  ~~~~~ //


    		 // ~~~~~~ THIRD PARTY SUPPORT  ~~~~~ //


    		 // ~~~~~~ SYNCHRONIZERS ~~~~~ //








    		 // ~~~~~~ REQUEST POOL MANAGER  ~~~~~ //





    		var cornerstoneTools = {
    		  // ~~~ TOOLS
    		  // ~ Annotation Tools
    		  AngleTool: _tools_annotation_index_js__WEBPACK_IMPORTED_MODULE_0__["AngleTool"],
    		  ArrowAnnotateTool: _tools_annotation_index_js__WEBPACK_IMPORTED_MODULE_0__["ArrowAnnotateTool"],
    		  BidirectionalTool: _tools_annotation_index_js__WEBPACK_IMPORTED_MODULE_0__["BidirectionalTool"],
    		  CircleRoiTool: _tools_annotation_index_js__WEBPACK_IMPORTED_MODULE_0__["CircleRoiTool"],
    		  CobbAngleTool: _tools_annotation_index_js__WEBPACK_IMPORTED_MODULE_0__["CobbAngleTool"],
    		  EllipticalRoiTool: _tools_annotation_index_js__WEBPACK_IMPORTED_MODULE_0__["EllipticalRoiTool"],
    		  FreehandMouseTool: _tools_annotation_index_js__WEBPACK_IMPORTED_MODULE_0__["FreehandMouseTool"],
    		  LengthTool: _tools_annotation_index_js__WEBPACK_IMPORTED_MODULE_0__["LengthTool"],
    		  ProbeTool: _tools_annotation_index_js__WEBPACK_IMPORTED_MODULE_0__["ProbeTool"],
    		  RectangleRoiTool: _tools_annotation_index_js__WEBPACK_IMPORTED_MODULE_0__["RectangleRoiTool"],
    		  TextMarkerTool: _tools_annotation_index_js__WEBPACK_IMPORTED_MODULE_0__["TextMarkerTool"],
    		  // ~ Brush Tools
    		  BrushTool: _tools_brush_index_js__WEBPACK_IMPORTED_MODULE_1__["BrushTool"],
    		  // ~ Tools
    		  CrosshairsTool: _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["CrosshairsTool"],
    		  DoubleTapFitToWindowTool: _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["DoubleTapFitToWindowTool"],
    		  DragProbeTool: _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["DragProbeTool"],
    		  EraserTool: _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["EraserTool"],
    		  FreehandSculpterMouseTool: _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["FreehandSculpterMouseTool"],
    		  MagnifyTool: _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["MagnifyTool"],
    		  PanMultiTouchTool: _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["PanMultiTouchTool"],
    		  PanTool: _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["PanTool"],
    		  ReferenceLinesTool: _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["ReferenceLinesTool"],
    		  RotateTool: _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["RotateTool"],
    		  RotateTouchTool: _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["RotateTouchTool"],
    		  ScaleOverlayTool: _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["ScaleOverlayTool"],
    		  StackScrollMouseWheelTool: _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["StackScrollMouseWheelTool"],
    		  StackScrollMultiTouchTool: _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["StackScrollMultiTouchTool"],
    		  StackScrollTool: _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["StackScrollTool"],
    		  WwwcRegionTool: _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["WwwcRegionTool"],
    		  WwwcTool: _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["WwwcTool"],
    		  ZoomMouseWheelTool: _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["ZoomMouseWheelTool"],
    		  ZoomTool: _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["ZoomTool"],
    		  ZoomTouchPinchTool: _tools_index_js__WEBPACK_IMPORTED_MODULE_2__["ZoomTouchPinchTool"],
    		  init: _init_js__WEBPACK_IMPORTED_MODULE_4__["default"],
    		  stackPrefetch: _stackTools_stackPrefetch_js__WEBPACK_IMPORTED_MODULE_5__["default"],
    		  stackRenderers: _stackTools_stackRenderers_js__WEBPACK_IMPORTED_MODULE_6__["default"],
    		  playClip: _stackTools_playClip_js__WEBPACK_IMPORTED_MODULE_7__["playClip"],
    		  stopClip: _stackTools_playClip_js__WEBPACK_IMPORTED_MODULE_7__["stopClip"],
    		  store: _store_index_js__WEBPACK_IMPORTED_MODULE_8__["default"],
    		  getToolForElement: _store_getToolForElement_js__WEBPACK_IMPORTED_MODULE_9__["default"],
    		  addTool: _store_addTool_js__WEBPACK_IMPORTED_MODULE_10__["addTool"],
    		  addToolForElement: _store_addTool_js__WEBPACK_IMPORTED_MODULE_10__["addToolForElement"],
    		  removeTool: _store_removeTool_js__WEBPACK_IMPORTED_MODULE_11__["removeTool"],
    		  removeToolForElement: _store_removeTool_js__WEBPACK_IMPORTED_MODULE_11__["removeToolForElement"],
    		  setToolOptions: _store_setToolOptions_js__WEBPACK_IMPORTED_MODULE_12__["setToolOptions"],
    		  setToolOptionsForElement: _store_setToolOptions_js__WEBPACK_IMPORTED_MODULE_12__["setToolOptionsForElement"],
    		  setToolActive: _store_setToolMode_js__WEBPACK_IMPORTED_MODULE_13__["setToolActive"],
    		  setToolActiveForElement: _store_setToolMode_js__WEBPACK_IMPORTED_MODULE_13__["setToolActiveForElement"],
    		  setToolEnabled: _store_setToolMode_js__WEBPACK_IMPORTED_MODULE_13__["setToolEnabled"],
    		  setToolEnabledForElement: _store_setToolMode_js__WEBPACK_IMPORTED_MODULE_13__["setToolEnabledForElement"],
    		  setToolDisabled: _store_setToolMode_js__WEBPACK_IMPORTED_MODULE_13__["setToolDisabled"],
    		  setToolDisabledForElement: _store_setToolMode_js__WEBPACK_IMPORTED_MODULE_13__["setToolDisabledForElement"],
    		  setToolPassive: _store_setToolMode_js__WEBPACK_IMPORTED_MODULE_13__["setToolPassive"],
    		  setToolPassiveForElement: _store_setToolMode_js__WEBPACK_IMPORTED_MODULE_13__["setToolPassiveForElement"],
    		  addToolState: _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_14__["addToolState"],
    		  getToolState: _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_14__["getToolState"],
    		  removeToolState: _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_14__["removeToolState"],
    		  clearToolState: _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_14__["clearToolState"],
    		  setElementToolStateManager: _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_14__["setElementToolStateManager"],
    		  getElementToolStateManager: _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_14__["getElementToolStateManager"],
    		  textStyle: _stateManagement_textStyle_js__WEBPACK_IMPORTED_MODULE_15__["default"],
    		  toolStyle: _stateManagement_toolStyle_js__WEBPACK_IMPORTED_MODULE_16__["default"],
    		  toolColors: _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_17__["default"],
    		  toolCoordinates: _stateManagement_toolCoordinates_js__WEBPACK_IMPORTED_MODULE_18__["default"],
    		  stackSpecificStateManager: _stateManagement_stackSpecificStateManager_js__WEBPACK_IMPORTED_MODULE_19__["stackSpecificStateManager"],
    		  newStackSpecificToolStateManager: _stateManagement_stackSpecificStateManager_js__WEBPACK_IMPORTED_MODULE_19__["newStackSpecificToolStateManager"],
    		  addStackStateManager: _stateManagement_stackSpecificStateManager_js__WEBPACK_IMPORTED_MODULE_19__["addStackStateManager"],
    		  loadHandlerManager: _stateManagement_loadHandlerManager_js__WEBPACK_IMPORTED_MODULE_20__["default"],
    		  newImageIdSpecificToolStateManager: _stateManagement_imageIdSpecificStateManager_js__WEBPACK_IMPORTED_MODULE_21__["newImageIdSpecificToolStateManager"],
    		  globalImageIdSpecificToolStateManager: _stateManagement_imageIdSpecificStateManager_js__WEBPACK_IMPORTED_MODULE_21__["globalImageIdSpecificToolStateManager"],
    		  newFrameOfReferenceSpecificToolStateManager: _stateManagement_frameOfReferenceStateManager_js__WEBPACK_IMPORTED_MODULE_22__["newFrameOfReferenceSpecificToolStateManager"],
    		  globalFrameOfReferenceSpecificToolStateManager: _stateManagement_frameOfReferenceStateManager_js__WEBPACK_IMPORTED_MODULE_22__["globalFrameOfReferenceSpecificToolStateManager"],
    		  forceEnabledElementResize: _eventListeners_windowResizeHandler_js__WEBPACK_IMPORTED_MODULE_23__["forceEnabledElementResize"],
    		  orientation: _orientation_index_js__WEBPACK_IMPORTED_MODULE_24__["default"],
    		  SaveAs: _util_SaveAs_js__WEBPACK_IMPORTED_MODULE_25__["default"],
    		  enableLogger: _util_logger_js__WEBPACK_IMPORTED_MODULE_26__["enable"],
    		  disableLogger: _util_logger_js__WEBPACK_IMPORTED_MODULE_26__["disable"],
    		  import: _import_js__WEBPACK_IMPORTED_MODULE_3__["default"],
    		  register: _thirdParty_register_js__WEBPACK_IMPORTED_MODULE_27__["default"],
    		  registerSome: _thirdParty_registerSome_js__WEBPACK_IMPORTED_MODULE_28__["default"],
    		  wwwcSynchronizer: _synchronization_wwwcSynchronizer_js__WEBPACK_IMPORTED_MODULE_29__["default"],
    		  updateImageSynchronizer: _synchronization_updateImageSynchronizer_js__WEBPACK_IMPORTED_MODULE_30__["default"],
    		  Synchronizer: _synchronization_Synchronizer_js__WEBPACK_IMPORTED_MODULE_31__["default"],
    		  stackScrollSynchronizer: _synchronization_stackScrollSynchronizer_js__WEBPACK_IMPORTED_MODULE_32__["default"],
    		  stackImagePositionSynchronizer: _synchronization_stackImagePositionSynchronizer_js__WEBPACK_IMPORTED_MODULE_33__["default"],
    		  stackImagePositionOffsetSynchronizer: _synchronization_stackImagePositionOffsetSynchronizer_js__WEBPACK_IMPORTED_MODULE_34__["default"],
    		  stackImageIndexSynchronizer: _synchronization_stackImageIndexSynchronizer_js__WEBPACK_IMPORTED_MODULE_35__["default"],
    		  panZoomSynchronizer: _synchronization_panZoomSynchronizer_js__WEBPACK_IMPORTED_MODULE_36__["default"],
    		  requestPoolManager: _requestPool_requestPoolManager_js__WEBPACK_IMPORTED_MODULE_37__["default"],
    		  external: _externalModules_js__WEBPACK_IMPORTED_MODULE_38__["default"],
    		  EVENTS: _events_js__WEBPACK_IMPORTED_MODULE_39__["default"],
    		  version: _version_js__WEBPACK_IMPORTED_MODULE_40__["default"]
    		}; // Named Exports

    		 // This has a weird name, so we can't just import it as 'import';


    		/* harmony default export */ __webpack_exports__["default"] = (cornerstoneTools);

    		/***/ }),

    		/***/ "./init.js":
    		/*!*****************!*\
    		  !*** ./init.js ***!
    		  \*****************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _store_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./store/index.js */ "./store/index.js");
    		/* harmony import */ var _store_internals_addEnabledElement_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./store/internals/addEnabledElement.js */ "./store/internals/addEnabledElement.js");
    		/* harmony import */ var _store_internals_removeEnabledElement_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./store/internals/removeEnabledElement.js */ "./store/internals/removeEnabledElement.js");
    		/* harmony import */ var _eventListeners_windowResizeHandler_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./eventListeners/windowResizeHandler.js */ "./eventListeners/windowResizeHandler.js");





    		/**
    		 * Merges the provided configuration with default values and returns a
    		 * configured CornerstoneTools instance.
    		 * @export
    		 * @public
    		 * @method
    		 * @name init
    		 *
    		 * @param {Object} configuration
    		 * @returns {Object} A configured CornerstoneTools instance with top level API members.
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (configuration) {
    		  _addCornerstoneEventListeners();

    		  _initModules();

    		  _eventListeners_windowResizeHandler_js__WEBPACK_IMPORTED_MODULE_4__["default"].enable(); // Apply global configuration

    		  _store_index_js__WEBPACK_IMPORTED_MODULE_1__["default"].modules.globalConfiguration.state = Object.assign({}, _store_index_js__WEBPACK_IMPORTED_MODULE_1__["default"].modules.globalConfiguration.state, configuration);
    		});
    		/**
    		 * Wires up event listeners for the Cornerstone#ElementDisabled and
    		 * Cornerstone#ElementEnabled events.
    		 * @private
    		 * @method
    		 * @returns {void}
    		 */

    		function _addCornerstoneEventListeners() {
    		  // Clear any listeners that may already be set
    		  _removeCornerstoneEventListeners();

    		  var cornerstone = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone;
    		  var elementEnabledEvent = cornerstone.EVENTS.ELEMENT_ENABLED;
    		  var elementDisabledEvent = cornerstone.EVENTS.ELEMENT_DISABLED;
    		  cornerstone.events.addEventListener(elementEnabledEvent, _store_internals_addEnabledElement_js__WEBPACK_IMPORTED_MODULE_2__["default"]);
    		  cornerstone.events.addEventListener(elementDisabledEvent, _store_internals_removeEnabledElement_js__WEBPACK_IMPORTED_MODULE_3__["default"]);
    		}
    		/**
    		 * Removes event listeners for the Cornerstone#ElementDisabled and
    		 * Cornerstone#ElementEnabled events.
    		 * @private
    		 * @method
    		 * @returns {void}
    		 */


    		function _removeCornerstoneEventListeners() {
    		  var cornerstone = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone;
    		  var elementEnabledEvent = cornerstone.EVENTS.ELEMENT_ENABLED;
    		  var elementDisabledEvent = cornerstone.EVENTS.ELEMENT_DISABLED;
    		  cornerstone.events.removeEventListener(elementEnabledEvent, _store_internals_addEnabledElement_js__WEBPACK_IMPORTED_MODULE_2__["default"]);
    		  cornerstone.events.removeEventListener(elementDisabledEvent, _store_internals_removeEnabledElement_js__WEBPACK_IMPORTED_MODULE_3__["default"]);
    		}
    		/*
    		 * TODO: This could cause issues if the module was already initialized for
    		 * the store. As there's nothing stopping implementers from calling `init`
    		 * multiple times. Modules should self-check if they have already been
    		 * registered to prevent issues.
    		 */

    		/**
    		 * Iterate over our store's modules. If the module has an `onRegisterCallback`
    		 * call it. This hook can be used to setup any global store requirements per
    		 * module.
    		 * @private
    		 * @method
    		 * @returns {void}
    		 */


    		function _initModules() {
    		  var modules = _store_index_js__WEBPACK_IMPORTED_MODULE_1__["default"].modules;
    		  Object.keys(modules).forEach(function (key) {
    		    if (typeof modules[key].onRegisterCallback === 'function') {
    		      modules[key].onRegisterCallback();
    		    }
    		  });
    		}

    		/***/ }),

    		/***/ "./lib.js":
    		/*!****************!*\
    		  !*** ./lib.js ***!
    		  \****************/
    		/*! exports provided: lib */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lib", function() { return lib; });
    		/* harmony import */ var _tools_base_BaseTool_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tools/base/BaseTool.js */ "./tools/base/BaseTool.js");
    		/* harmony import */ var _tools_base_BaseAnnotationTool_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tools/base/BaseAnnotationTool.js */ "./tools/base/BaseAnnotationTool.js");
    		/* harmony import */ var _tools_base_BaseBrushTool_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tools/base/BaseBrushTool.js */ "./tools/base/BaseBrushTool.js");
    		/* harmony import */ var _manipulators_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./manipulators/index.js */ "./manipulators/index.js");
    		/* harmony import */ var _util_findAndMoveHelpers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util/findAndMoveHelpers.js */ "./util/findAndMoveHelpers.js");
    		/* harmony import */ var _mixins_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./mixins/index.js */ "./mixins/index.js");
    		/* harmony import */ var _tools_cursors_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./tools/cursors/index.js */ "./tools/cursors/index.js");
    		/* harmony import */ var _drawing_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./drawing/index.js */ "./drawing/index.js");
    		/* harmony import */ var _drawing_drawTextBox_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./drawing/drawTextBox.js */ "./drawing/drawTextBox.js");
    		/* harmony import */ var _drawing_drawArrow_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./drawing/drawArrow.js */ "./drawing/drawArrow.js");
    		/* harmony import */ var _drawing_drawLink_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./drawing/drawLink.js */ "./drawing/drawLink.js");
    		/* harmony import */ var _drawing_drawLinkedTextBox_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./drawing/drawLinkedTextBox.js */ "./drawing/drawLinkedTextBox.js");
    		/* harmony import */ var _drawing_drawHandles_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./drawing/drawHandles.js */ "./drawing/drawHandles.js");
    		/* harmony import */ var _util_getLuminance_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./util/getLuminance.js */ "./util/getLuminance.js");
    		/* harmony import */ var _util_copyPoints_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./util/copyPoints.js */ "./util/copyPoints.js");
    		/* harmony import */ var _util_calculateSUV_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./util/calculateSUV.js */ "./util/calculateSUV.js");
    		/* harmony import */ var _util_setContextToDisplayFontSize_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./util/setContextToDisplayFontSize.js */ "./util/setContextToDisplayFontSize.js");
    		/* harmony import */ var _util_scrollToIndex_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./util/scrollToIndex.js */ "./util/scrollToIndex.js");
    		/* harmony import */ var _util_scroll_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./util/scroll.js */ "./util/scroll.js");
    		/* harmony import */ var _util_roundToDecimal_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./util/roundToDecimal.js */ "./util/roundToDecimal.js");
    		/* harmony import */ var _util_pointProjector_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./util/pointProjector.js */ "./util/pointProjector.js");
    		/* harmony import */ var _util_lineSegDistance_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./util/lineSegDistance.js */ "./util/lineSegDistance.js");
    		/* harmony import */ var _util_pointInsideBoundingBox_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./util/pointInsideBoundingBox.js */ "./util/pointInsideBoundingBox.js");
    		/* harmony import */ var _util_makeUnselectable_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./util/makeUnselectable.js */ "./util/makeUnselectable.js");
    		/* harmony import */ var _util_getRGBPixels_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./util/getRGBPixels.js */ "./util/getRGBPixels.js");
    		/* harmony import */ var _util_getMaxSimultaneousRequests_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./util/getMaxSimultaneousRequests.js */ "./util/getMaxSimultaneousRequests.js");
    		/* harmony import */ var _util_angleBetweenPoints_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./util/angleBetweenPoints.js */ "./util/angleBetweenPoints.js");
    		/* harmony import */ var _util_getKeyFromKeyCode_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./util/getKeyFromKeyCode.js */ "./util/getKeyFromKeyCode.js");
    		/* harmony import */ var _util_numbersWithCommas_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./util/numbersWithCommas.js */ "./util/numbersWithCommas.js");
    		/* harmony import */ var _tools_cursors_MouseCursor_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./tools/cursors/MouseCursor.js */ "./tools/cursors/MouseCursor.js");
    		/* harmony import */ var _util_ellipse_index_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./util/ellipse/index.js */ "./util/ellipse/index.js");
    		/* harmony import */ var _util_freehand_index_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./util/freehand/index.js */ "./util/freehand/index.js");
    		/* harmony import */ var _util_brush_index_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./util/brush/index.js */ "./util/brush/index.js");
    		/* harmony import */ var _util_zoom_index_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./util/zoom/index.js */ "./util/zoom/index.js");
    		/* harmony import */ var _util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./util/triggerEvent.js */ "./util/triggerEvent.js");
    		/* harmony import */ var _util_convertToVector3_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./util/convertToVector3.js */ "./util/convertToVector3.js");




































    		var lib = {
    		  'base/BaseTool': _tools_base_BaseTool_js__WEBPACK_IMPORTED_MODULE_0__["default"],
    		  'base/BaseAnnotationTool': _tools_base_BaseAnnotationTool_js__WEBPACK_IMPORTED_MODULE_1__["default"],
    		  'base/BaseBrushTool': _tools_base_BaseBrushTool_js__WEBPACK_IMPORTED_MODULE_2__["default"],
    		  'tools/cursors/MouseCursor': _tools_cursors_MouseCursor_js__WEBPACK_IMPORTED_MODULE_29__["default"],
    		  'tools/cursors': _tools_cursors_index_js__WEBPACK_IMPORTED_MODULE_6__,
    		  'manipulators/anyHandlesOutsideImage': _manipulators_index_js__WEBPACK_IMPORTED_MODULE_3__["anyHandlesOutsideImage"],
    		  'manipulators/getHandleNearImagePoint': _manipulators_index_js__WEBPACK_IMPORTED_MODULE_3__["getHandleNearImagePoint"],
    		  'manipulators/handleActivator': _manipulators_index_js__WEBPACK_IMPORTED_MODULE_3__["handleActivator"],
    		  'manipulators/moveAllHandles': _manipulators_index_js__WEBPACK_IMPORTED_MODULE_3__["moveAllHandles"],
    		  'manipulators/moveHandle': _manipulators_index_js__WEBPACK_IMPORTED_MODULE_3__["moveHandle"],
    		  'manipulators/moveNewHandle': _manipulators_index_js__WEBPACK_IMPORTED_MODULE_3__["moveNewHandle"],
    		  'manipulators/moveHandleNearImagePoint': _util_findAndMoveHelpers_js__WEBPACK_IMPORTED_MODULE_4__["moveHandleNearImagePoint"],
    		  'manipulators/findHandleDataNearImagePoint': _util_findAndMoveHelpers_js__WEBPACK_IMPORTED_MODULE_4__["findHandleDataNearImagePoint"],
    		  'manipulators/moveAnnotation': _util_findAndMoveHelpers_js__WEBPACK_IMPORTED_MODULE_4__["moveAnnotation"],
    		  'mixins/activeOrDisabledBinaryTool': _mixins_index_js__WEBPACK_IMPORTED_MODULE_5__["default"].activeOrDisabledBinaryTool,
    		  'mixins/enabledOrDisabledBinaryTool': _mixins_index_js__WEBPACK_IMPORTED_MODULE_5__["default"].enabledOrDisabledBinaryTool,
    		  'drawing/getNewContext': _drawing_index_js__WEBPACK_IMPORTED_MODULE_7__["getNewContext"],
    		  'drawing/draw': _drawing_index_js__WEBPACK_IMPORTED_MODULE_7__["draw"],
    		  'drawing/path': _drawing_index_js__WEBPACK_IMPORTED_MODULE_7__["path"],
    		  'drawing/setShadow': _drawing_index_js__WEBPACK_IMPORTED_MODULE_7__["setShadow"],
    		  'drawing/drawLine': _drawing_index_js__WEBPACK_IMPORTED_MODULE_7__["drawLine"],
    		  'drawing/drawLines': _drawing_index_js__WEBPACK_IMPORTED_MODULE_7__["drawLines"],
    		  'drawing/drawJoinedLines': _drawing_index_js__WEBPACK_IMPORTED_MODULE_7__["drawJoinedLines"],
    		  'drawing/drawCircle': _drawing_index_js__WEBPACK_IMPORTED_MODULE_7__["drawCircle"],
    		  'drawing/drawEllipse': _drawing_index_js__WEBPACK_IMPORTED_MODULE_7__["drawEllipse"],
    		  'drawing/drawRect': _drawing_index_js__WEBPACK_IMPORTED_MODULE_7__["drawRect"],
    		  'drawing/fillOutsideRect': _drawing_index_js__WEBPACK_IMPORTED_MODULE_7__["fillOutsideRect"],
    		  'drawing/drawTextBox': _drawing_drawTextBox_js__WEBPACK_IMPORTED_MODULE_8__["default"],
    		  'drawing/drawArrow': _drawing_drawArrow_js__WEBPACK_IMPORTED_MODULE_9__["default"],
    		  'drawing/fillBox': _drawing_index_js__WEBPACK_IMPORTED_MODULE_7__["fillBox"],
    		  'drawing/fillTextLines': _drawing_index_js__WEBPACK_IMPORTED_MODULE_7__["fillTextLines"],
    		  'drawing/drawLink': _drawing_drawLink_js__WEBPACK_IMPORTED_MODULE_10__["default"],
    		  'drawing/drawLinkedTextBox': _drawing_drawLinkedTextBox_js__WEBPACK_IMPORTED_MODULE_11__["default"],
    		  'drawing/drawHandles': _drawing_drawHandles_js__WEBPACK_IMPORTED_MODULE_12__["default"],
    		  'drawing/textBoxWidth': _drawing_drawTextBox_js__WEBPACK_IMPORTED_MODULE_8__["textBoxWidth"],
    		  'util/getLuminance': _util_getLuminance_js__WEBPACK_IMPORTED_MODULE_13__["default"],
    		  'util/copyPoints': _util_copyPoints_js__WEBPACK_IMPORTED_MODULE_14__["default"],
    		  'util/calculateSUV': _util_calculateSUV_js__WEBPACK_IMPORTED_MODULE_15__["default"],
    		  'util/setContextToDisplayFontSize': _util_setContextToDisplayFontSize_js__WEBPACK_IMPORTED_MODULE_16__["default"],
    		  'util/scrollToIndex': _util_scrollToIndex_js__WEBPACK_IMPORTED_MODULE_17__["default"],
    		  'util/scroll': _util_scroll_js__WEBPACK_IMPORTED_MODULE_18__["default"],
    		  'util/roundToDecimal': _util_roundToDecimal_js__WEBPACK_IMPORTED_MODULE_19__["default"],
    		  'util/projectPatientPointToImagePlane': _util_pointProjector_js__WEBPACK_IMPORTED_MODULE_20__["projectPatientPointToImagePlane"],
    		  'util/imagePointToPatientPoint': _util_pointProjector_js__WEBPACK_IMPORTED_MODULE_20__["imagePointToPatientPoint"],
    		  'util/planePlaneIntersection': _util_pointProjector_js__WEBPACK_IMPORTED_MODULE_20__["planePlaneIntersection"],
    		  'util/pointInsideBoundingBox': _util_pointInsideBoundingBox_js__WEBPACK_IMPORTED_MODULE_22__["default"],
    		  'util/makeUnselectable': _util_makeUnselectable_js__WEBPACK_IMPORTED_MODULE_23__["default"],
    		  'util/getRGBPixels': _util_getRGBPixels_js__WEBPACK_IMPORTED_MODULE_24__["default"],
    		  'util/getDefaultSimultaneousRequests': _util_getMaxSimultaneousRequests_js__WEBPACK_IMPORTED_MODULE_25__["getDefaultSimultaneousRequests"],
    		  'util/getMaxSimultaneousRequests': _util_getMaxSimultaneousRequests_js__WEBPACK_IMPORTED_MODULE_25__["getMaxSimultaneousRequests"],
    		  'util/getBrowserInfo': _util_getMaxSimultaneousRequests_js__WEBPACK_IMPORTED_MODULE_25__["getBrowserInfo"],
    		  'util/isMobileDevice': _util_getMaxSimultaneousRequests_js__WEBPACK_IMPORTED_MODULE_25__["isMobileDevice"],
    		  'util/angleBetweenPoints': _util_angleBetweenPoints_js__WEBPACK_IMPORTED_MODULE_26__["default"],
    		  'util/getKeyFromKeyCode': _util_getKeyFromKeyCode_js__WEBPACK_IMPORTED_MODULE_27__["default"],
    		  'util/numbersWithCommas': _util_numbersWithCommas_js__WEBPACK_IMPORTED_MODULE_28__["default"],
    		  'util/lineSegDistance': _util_lineSegDistance_js__WEBPACK_IMPORTED_MODULE_21__["default"],
    		  'util/triggerEvent': _util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_34__["default"],
    		  'util/convertToVectro3': _util_convertToVector3_js__WEBPACK_IMPORTED_MODULE_35__["default"],
    		  // Whole tool specific util packages
    		  'util/ellipseUtils': _util_ellipse_index_js__WEBPACK_IMPORTED_MODULE_30__["default"],
    		  'util/freehandUtils': _util_freehand_index_js__WEBPACK_IMPORTED_MODULE_31__["default"],
    		  'util/brushUtils': _util_brush_index_js__WEBPACK_IMPORTED_MODULE_32__["default"],
    		  'util/zoomUtils': _util_zoom_index_js__WEBPACK_IMPORTED_MODULE_33__["default"]
    		};

    		/***/ }),

    		/***/ "./manipulators/anyHandlesOutsideImage.js":
    		/*!************************************************!*\
    		  !*** ./manipulators/anyHandlesOutsideImage.js ***!
    		  \************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");

    		/**
    		 * Determine if a handle is outside the bounds of the rendered image.
    		 * @public
    		 * @function anyHandlesOutsideImage
    		 * @memberof Manipulators
    		 *
    		 * @param {*} renderData - Cornerstone Tool's event detail
    		 * @param {Object} handles - An object containing named handles
    		 * @returns {Boolean} - True if the handle was placed outside the image
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (renderData, handles) {
    		  var image = renderData.image;
    		  var imageRect = {
    		    left: 0,
    		    top: 0,
    		    width: image.width,
    		    height: image.height
    		  };
    		  var handleOutsideImage = false;
    		  Object.keys(handles).forEach(function (name) {
    		    var handle = handles[name];

    		    if (handle.allowedOutsideImage === true) {
    		      return;
    		    }

    		    if (_externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstoneMath.point.insideRect(handle, imageRect) === false) {
    		      handleOutsideImage = true;
    		    }
    		  });
    		  return handleOutsideImage;
    		});

    		/***/ }),

    		/***/ "./manipulators/getHandleNearImagePoint.js":
    		/*!*************************************************!*\
    		  !*** ./manipulators/getHandleNearImagePoint.js ***!
    		  \*************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "../node_modules/@babel/runtime/helpers/typeof.js");
    		/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _util_pointInsideBoundingBox_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/pointInsideBoundingBox.js */ "./util/pointInsideBoundingBox.js");



    		/**
    		 * Returns the first handle found to be near the provided point. Handles to search can be an array of handles, an
    		 * object of named handles, or an object of named handles AND named arrays of handles.
    		 *
    		 * @public
    		 * @function getHandleNearImagePoint
    		 * @memberof Manipulators
    		 *
    		 * @param {*} element - Target enabledElement
    		 * @param {(Array|Object)} handles - An arry of handles, object with named handles, or object with named handles AND named arrays of handles
    		 * @param {Object} coords - The coordinates to measure from when determining distance from handles
    		 * @param {number} distanceThreshold - minimum distance handle needs to be from provided coords
    		 * @returns {Object} Handle
    		 */

    		var getHandleNearImagePoint = function getHandleNearImagePoint(element, handles, coords, distanceThreshold) {
    		  var nearbyHandle;

    		  if (!handles) {
    		    return;
    		  }

    		  if (Array.isArray(handles)) {
    		    var handleKeys = Object.keys(handles);

    		    for (var i = 0; i < handleKeys.length; i++) {
    		      var key = handleKeys[i];
    		      var handle = handles[key];

    		      if ( // Not a true handle
    		      !handle.hasOwnProperty('x') || !handle.hasOwnProperty('y')) {
    		        continue;
    		      }

    		      if (_isHandleNearImagePoint(handle, element, coords, distanceThreshold)) {
    		        nearbyHandle = handle;
    		        break;
    		      }
    		    }
    		  } else if (_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(handles) === 'object') {
    		    var _handleKeys = Object.keys(handles);

    		    for (var _i = 0; _i < _handleKeys.length; _i++) {
    		      var handleName = _handleKeys[_i];

    		      if (Array.isArray(handles[handleName])) {
    		        nearbyHandle = getHandleNearImagePoint(element, handles[handleName], coords, distanceThreshold);

    		        if (nearbyHandle) {
    		          break;
    		        }
    		      } else {
    		        var _handle = handles[handleName];

    		        if (_isHandleNearImagePoint(_handle, element, coords, distanceThreshold)) {
    		          nearbyHandle = _handle;
    		          break;
    		        }
    		      }
    		    }
    		  }

    		  return nearbyHandle;
    		};
    		/**
    		 * Determines if the handle is less than the provided distance from the  provided coordinates
    		 * @private
    		 * @function _isHandleNearImagePoint
    		 *
    		 * @param {*} handle
    		 * @param {*} element
    		 * @param {*} coords
    		 * @param {*} distanceThreshold
    		 * @returns {boolean} true if handles is near image point
    		 */


    		var _isHandleNearImagePoint = function _isHandleNearImagePoint(handle, element, coords, distanceThreshold) {
    		  if (handle.hasOwnProperty('pointNearHandle')) {
    		    if (handle.pointNearHandle(element, handle, coords)) {
    		      return true;
    		    }
    		  } else if (handle.hasBoundingBox === true) {
    		    if (Object(_util_pointInsideBoundingBox_js__WEBPACK_IMPORTED_MODULE_2__["default"])(handle, coords)) {
    		      return true;
    		    }
    		  } else {
    		    var handleCanvas = _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.pixelToCanvas(element, handle);
    		    var distance = _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstoneMath.point.distance(handleCanvas, coords);

    		    if (distance <= distanceThreshold) {
    		      return true;
    		    }
    		  }

    		  return false;
    		};

    		/* harmony default export */ __webpack_exports__["default"] = (getHandleNearImagePoint);

    		/***/ }),

    		/***/ "./manipulators/handleActivator.js":
    		/*!*****************************************!*\
    		  !*** ./manipulators/handleActivator.js ***!
    		  \*****************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _getHandleNearImagePoint_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getHandleNearImagePoint.js */ "./manipulators/getHandleNearImagePoint.js");

    		/**
    		 * Update the active handle
    		 * @public
    		 * @function handleActivator
    		 * @memberof Manipulators
    		 *
    		 * @param {*} element
    		 * @param {*} handles
    		 * @param {*} canvasPoint
    		 * @param {*} distanceThreshold
    		 * @returns {Boolean} - True if a handle was activated
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (element, handles, canvasPoint, distanceThreshold) {
    		  if (!distanceThreshold) {
    		    distanceThreshold = 6;
    		  }

    		  var activeHandle = _getActiveHandle(handles);

    		  var nearbyHandle = Object(_getHandleNearImagePoint_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element, handles, canvasPoint, distanceThreshold);

    		  if (activeHandle !== nearbyHandle) {
    		    if (nearbyHandle !== undefined) {
    		      nearbyHandle.active = true;
    		    }

    		    if (activeHandle !== undefined) {
    		      activeHandle.active = false;
    		    }

    		    return true;
    		  }

    		  return false;
    		});
    		/**
    		 *
    		 * @private
    		 *
    		 * @param {*} handles
    		 * @returns {Object} - Activated Handle
    		 */

    		function _getActiveHandle(handles) {
    		  var activeHandle;
    		  Object.keys(handles).forEach(function (name) {
    		    var handle = handles[name];

    		    if (handle.active === true) {
    		      activeHandle = handle;
    		      return;
    		    }
    		  });
    		  return activeHandle;
    		}

    		/***/ }),

    		/***/ "./manipulators/index.js":
    		/*!*******************************!*\
    		  !*** ./manipulators/index.js ***!
    		  \*******************************/
    		/*! exports provided: anyHandlesOutsideImage, getHandleNearImagePoint, handleActivator, moveAllHandles, moveHandle, moveNewHandle */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _anyHandlesOutsideImage_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./anyHandlesOutsideImage.js */ "./manipulators/anyHandlesOutsideImage.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "anyHandlesOutsideImage", function() { return _anyHandlesOutsideImage_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

    		/* harmony import */ var _getHandleNearImagePoint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getHandleNearImagePoint.js */ "./manipulators/getHandleNearImagePoint.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getHandleNearImagePoint", function() { return _getHandleNearImagePoint_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });

    		/* harmony import */ var _handleActivator_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./handleActivator.js */ "./manipulators/handleActivator.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "handleActivator", function() { return _handleActivator_js__WEBPACK_IMPORTED_MODULE_2__["default"]; });

    		/* harmony import */ var _moveAllHandles_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./moveAllHandles.js */ "./manipulators/moveAllHandles.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "moveAllHandles", function() { return _moveAllHandles_js__WEBPACK_IMPORTED_MODULE_3__["default"]; });

    		/* harmony import */ var _moveHandle_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./moveHandle.js */ "./manipulators/moveHandle.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "moveHandle", function() { return _moveHandle_js__WEBPACK_IMPORTED_MODULE_4__["default"]; });

    		/* harmony import */ var _moveNewHandle_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./moveNewHandle.js */ "./manipulators/moveNewHandle.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "moveNewHandle", function() { return _moveNewHandle_js__WEBPACK_IMPORTED_MODULE_5__["default"]; });









    		/***/ }),

    		/***/ "./manipulators/moveAllHandles.js":
    		/*!****************************************!*\
    		  !*** ./manipulators/moveAllHandles.js ***!
    		  \****************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../events.js */ "./events.js");
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _anyHandlesOutsideImage_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./anyHandlesOutsideImage.js */ "./manipulators/anyHandlesOutsideImage.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/triggerEvent.js */ "./util/triggerEvent.js");
    		/* harmony import */ var _util_clip_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/clip.js */ "./util/clip.js");
    		/* harmony import */ var _store_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../store/index.js */ "./store/index.js");
    		/* harmony import */ var _util_getActiveTool__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/getActiveTool */ "./util/getActiveTool.js");
    		/* harmony import */ var _tools_base_BaseAnnotationTool__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../tools/base/BaseAnnotationTool */ "./tools/base/BaseAnnotationTool.js");









    		var _dragEvents = {
    		  mouse: [_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MOUSE_DRAG],
    		  touch: [_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_DRAG]
    		};
    		var _upOrEndEvents = {
    		  mouse: [_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MOUSE_UP, _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MOUSE_CLICK],
    		  touch: [_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_END, _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_DRAG_END, _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_PINCH, _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_PRESS, _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TAP]
    		};
    		/**
    		 * Manipulator to move all provided handles at the same time
    		 * @public
    		 * @function moveAllHandles
    		 * @memberof Manipulators
    		 *
    		 * @param {*}        evtDetail
    		 * @param {*}        evtDetail.element
    		 * @param {String}   toolName
    		 * @param {*}        annotation
    		 * @param {*}        [handle=null] - not needed by moveAllHandles, but keeps call signature the same as `moveHandle`
    		 * @param {Object}   [options={}]
    		 * @param {Boolean}  [options.deleteIfHandleOutsideImage]
    		 * @param {function} [options.doneMovingCallback]
    		 * @param {Boolean}  [options.preventHandleOutsideImage]
    		 * @param {string}   [interactionType=mouse]
    		 * @returns {undefined}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (_ref, toolName, annotation, handle) {
    		  var element = _ref.element;
    		  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
    		  var interactionType = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'mouse';
    		  // Use global defaults, unless overidden by provided options
    		  options = Object.assign({
    		    deleteIfHandleOutsideImage: _store_index_js__WEBPACK_IMPORTED_MODULE_6__["state"].deleteIfHandleOutsideImage,
    		    preventHandleOutsideImage: _store_index_js__WEBPACK_IMPORTED_MODULE_6__["state"].preventHandleOutsideImage
    		  }, options);

    		  var dragHandler = _dragHandler.bind(this, toolName, annotation, options, interactionType); // So we don't need to inline the entire `upOrEndHandler` function


    		  var upOrEndHandler = function upOrEndHandler(evt) {
    		    _upOrEndHandler(toolName, annotation, options, interactionType, {
    		      dragHandler: dragHandler,
    		      upOrEndHandler: upOrEndHandler
    		    }, evt);
    		  };

    		  annotation.active = true;
    		  _store_index_js__WEBPACK_IMPORTED_MODULE_6__["state"].isToolLocked = true; // Add Event Listeners

    		  _dragEvents[interactionType].forEach(function (eventType) {
    		    element.addEventListener(eventType, dragHandler);
    		  });

    		  _upOrEndEvents[interactionType].forEach(function (eventType) {
    		    element.addEventListener(eventType, upOrEndHandler);
    		  });
    		});

    		function _dragHandler(toolName, annotation) {
    		  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    		  var interactionType = arguments.length > 3 ? arguments[3] : undefined;
    		  var evt = arguments.length > 4 ? arguments[4] : undefined;
    		  var _evt$detail = evt.detail,
    		      element = _evt$detail.element,
    		      image = _evt$detail.image,
    		      buttons = _evt$detail.buttons;
    		  var _evt$detail$deltaPoin = evt.detail.deltaPoints.image,
    		      x = _evt$detail$deltaPoin.x,
    		      y = _evt$detail$deltaPoin.y;
    		  annotation.active = true;
    		  annotation.invalidated = true;
    		  var handleKeys = Object.keys(annotation.handles);

    		  for (var i = 0; i < handleKeys.length; i++) {
    		    var key = handleKeys[i];
    		    var handle = annotation.handles[key];

    		    if ( // Don't move this part of the annotation
    		    handle.movesIndependently === true || // Not a true handle
    		    !handle.hasOwnProperty('x') || !handle.hasOwnProperty('y')) {
    		      continue;
    		    }

    		    handle.x += x;
    		    handle.y += y;

    		    if (options.preventHandleOutsideImage) {
    		      Object(_util_clip_js__WEBPACK_IMPORTED_MODULE_5__["clipToBox"])(handle, image);
    		    }
    		  }

    		  _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.updateImage(element);
    		  var activeTool = Object(_util_getActiveTool__WEBPACK_IMPORTED_MODULE_7__["default"])(element, buttons, interactionType);

    		  if (activeTool instanceof _tools_base_BaseAnnotationTool__WEBPACK_IMPORTED_MODULE_8__["default"]) {
    		    activeTool.updateCachedStats(image, element, annotation);
    		  }

    		  var eventType = _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MEASUREMENT_MODIFIED;
    		  var modifiedEventData = {
    		    toolName: toolName,
    		    element: element,
    		    measurementData: annotation
    		  };
    		  Object(_util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_4__["default"])(element, eventType, modifiedEventData);
    		  evt.preventDefault();
    		  evt.stopPropagation();
    		}

    		function _upOrEndHandler(toolName, annotation) {
    		  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    		  var interactionType = arguments.length > 3 ? arguments[3] : undefined;

    		  var _ref2 = arguments.length > 4 ? arguments[4] : undefined,
    		      dragHandler = _ref2.dragHandler,
    		      upOrEndHandler = _ref2.upOrEndHandler;

    		  var evt = arguments.length > 5 ? arguments[5] : undefined;
    		  var eventData = evt.detail;
    		  var element = evt.detail.element;
    		  annotation.active = false;
    		  annotation.invalidated = true;
    		  _store_index_js__WEBPACK_IMPORTED_MODULE_6__["state"].isToolLocked = false; // Remove Event Listeners

    		  _dragEvents[interactionType].forEach(function (eventType) {
    		    element.removeEventListener(eventType, dragHandler);
    		  });

    		  _upOrEndEvents[interactionType].forEach(function (eventType) {
    		    element.removeEventListener(eventType, upOrEndHandler);
    		  }); // If any handle is outside the image, delete the tool data


    		  if (options.deleteIfHandleOutsideImage && Object(_anyHandlesOutsideImage_js__WEBPACK_IMPORTED_MODULE_2__["default"])(eventData, annotation.handles)) {
    		    Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_3__["removeToolState"])(element, toolName, annotation);
    		  }

    		  if (typeof options.doneMovingCallback === 'function') {
    		    options.doneMovingCallback();
    		  }

    		  _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.updateImage(element);
    		}

    		/***/ }),

    		/***/ "./manipulators/moveHandle.js":
    		/*!************************************!*\
    		  !*** ./manipulators/moveHandle.js ***!
    		  \************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../events.js */ "./events.js");
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _anyHandlesOutsideImage_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./anyHandlesOutsideImage.js */ "./manipulators/anyHandlesOutsideImage.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/triggerEvent.js */ "./util/triggerEvent.js");
    		/* harmony import */ var _util_clip_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/clip.js */ "./util/clip.js");
    		/* harmony import */ var _store_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../store/index.js */ "./store/index.js");
    		/* harmony import */ var _util_getActiveTool__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/getActiveTool */ "./util/getActiveTool.js");
    		/* harmony import */ var _tools_base_BaseAnnotationTool__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../tools/base/BaseAnnotationTool */ "./tools/base/BaseAnnotationTool.js");









    		var runAnimation = {
    		  value: false
    		};
    		var _dragEvents = {
    		  mouse: [_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MOUSE_DRAG],
    		  touch: [_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_DRAG]
    		};
    		var _upOrEndEvents = {
    		  mouse: [_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MOUSE_UP, _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MOUSE_CLICK],
    		  touch: [_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_END, _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_DRAG_END, _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_PINCH, _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_PRESS, _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TAP]
    		};
    		/**
    		 * Move the provided handle
    		 *
    		 * @public
    		 * @method moveHandle
    		 * @memberof Manipulators
    		 *
    		 * @param {*} evtDetail
    		 * @param {*} toolName
    		 * @param {*} annotation
    		 * @param {*} handle
    		 * @param {*} [options={}]
    		 * @param {Boolean}  [options.deleteIfHandleOutsideImage]
    		 * @param {function} [options.doneMovingCallback]
    		 * @param {Boolean}  [options.preventHandleOutsideImage]
    		 * @param {*} [interactionType=mouse]
    		 * @returns {undefined}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (evtDetail, toolName, annotation, handle) {
    		  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
    		  var interactionType = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'mouse';
    		  // Use global defaults, unless overidden by provided options
    		  options = Object.assign({
    		    deleteIfHandleOutsideImage: _store_index_js__WEBPACK_IMPORTED_MODULE_6__["state"].deleteIfHandleOutsideImage,
    		    preventHandleOutsideImage: _store_index_js__WEBPACK_IMPORTED_MODULE_6__["state"].preventHandleOutsideImage
    		  }, options);
    		  var element = evtDetail.element;

    		  var dragHandler = _dragHandler.bind(this, toolName, annotation, handle, options, interactionType); // So we don't need to inline the entire `upOrEndHandler` function


    		  var upOrEndHandler = function upOrEndHandler(evt) {
    		    _upOrEndHandler(toolName, evtDetail, annotation, handle, options, interactionType, {
    		      dragHandler: dragHandler,
    		      upOrEndHandler: upOrEndHandler
    		    }, evt);
    		  };

    		  handle.active = true;
    		  annotation.active = true;
    		  _store_index_js__WEBPACK_IMPORTED_MODULE_6__["state"].isToolLocked = true; // Add Event Listeners

    		  _dragEvents[interactionType].forEach(function (eventType) {
    		    element.addEventListener(eventType, dragHandler);
    		  });

    		  _upOrEndEvents[interactionType].forEach(function (eventType) {
    		    element.addEventListener(eventType, upOrEndHandler);
    		  }); // ==========================
    		  // ========  TOUCH ==========
    		  // ==========================


    		  if (interactionType === 'touch') {
    		    runAnimation.value = true;
    		    var enabledElement = _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.getEnabledElement(element); // Average pixel width of index finger is 45-57 pixels
    		    // https://www.smashingmagazine.com/2012/02/finger-friendly-design-ideal-mobile-touchscreen-target-sizes/

    		    var fingerDistance = -57;
    		    var aboveFinger = {
    		      x: evtDetail.currentPoints.page.x,
    		      y: evtDetail.currentPoints.page.y + fingerDistance
    		    };
    		    var targetLocation = _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.pageToPixel(element, aboveFinger.x, aboveFinger.y);

    		    _animate(handle, runAnimation, enabledElement, targetLocation);
    		  }
    		});

    		function _dragHandler(toolName, annotation, handle, options, interactionType, evt) {
    		  var _evt$detail = evt.detail,
    		      image = _evt$detail.image,
    		      currentPoints = _evt$detail.currentPoints,
    		      element = _evt$detail.element,
    		      buttons = _evt$detail.buttons;
    		  var page = currentPoints.page;
    		  var fingerOffset = -57;
    		  var targetLocation = _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.pageToPixel(element, page.x, interactionType === 'touch' ? page.y + fingerOffset : page.y);
    		  runAnimation.value = false;
    		  handle.active = true;
    		  handle.hasMoved = true;
    		  handle.x = targetLocation.x;
    		  handle.y = targetLocation.y; // TODO: A way to not flip this for textboxes on annotations

    		  annotation.invalidated = true;

    		  if (options.preventHandleOutsideImage) {
    		    Object(_util_clip_js__WEBPACK_IMPORTED_MODULE_5__["clipToBox"])(handle, image);
    		  }

    		  _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.updateImage(element);
    		  var activeTool = Object(_util_getActiveTool__WEBPACK_IMPORTED_MODULE_7__["default"])(element, buttons, interactionType);

    		  if (activeTool instanceof _tools_base_BaseAnnotationTool__WEBPACK_IMPORTED_MODULE_8__["default"]) {
    		    activeTool.updateCachedStats(image, element, annotation);
    		  }

    		  var eventType = _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MEASUREMENT_MODIFIED;
    		  var modifiedEventData = {
    		    toolName: toolName,
    		    element: element,
    		    measurementData: annotation
    		  };
    		  Object(_util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_4__["default"])(element, eventType, modifiedEventData);
    		}

    		function _upOrEndHandler(toolName, evtDetail, annotation, handle) {
    		  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
    		  var interactionType = arguments.length > 5 ? arguments[5] : undefined;

    		  var _ref = arguments.length > 6 ? arguments[6] : undefined,
    		      dragHandler = _ref.dragHandler,
    		      upOrEndHandler = _ref.upOrEndHandler;

    		  var evt = arguments.length > 7 ? arguments[7] : undefined;
    		  var image = evtDetail.currentPoints.image;
    		  var element = evt.detail.element;
    		  handle.active = false;
    		  annotation.active = false; // TODO: A way to not flip this for textboxes on annotations

    		  annotation.invalidated = true;
    		  _store_index_js__WEBPACK_IMPORTED_MODULE_6__["state"].isToolLocked = false;
    		  runAnimation.value = false; // Remove Event Listeners

    		  _dragEvents[interactionType].forEach(function (eventType) {
    		    element.removeEventListener(eventType, dragHandler);
    		  });

    		  _upOrEndEvents[interactionType].forEach(function (eventType) {
    		    element.removeEventListener(eventType, upOrEndHandler);
    		  }); // If any handle is outside the image, delete the tool data


    		  if (options.deleteIfHandleOutsideImage && Object(_anyHandlesOutsideImage_js__WEBPACK_IMPORTED_MODULE_2__["default"])(evtDetail, annotation.handles)) {
    		    Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_3__["removeToolState"])(element, toolName, annotation);
    		  } // TODO: What dark magic makes us want to handle TOUCH_PRESS differently?


    		  if (evt.type === _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_PRESS) {
    		    evt.detail.handlePressed = annotation;
    		    handle.x = image.x; // Original Event

    		    handle.y = image.y;
    		  }

    		  if (typeof options.doneMovingCallback === 'function') {
    		    options.doneMovingCallback();
    		  }

    		  _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.updateImage(element);
    		}
    		/**
    		 * Animates the provided handle using `requestAnimationFrame`
    		 * @private
    		 * @method _animate
    		 *
    		 * @param {*} handle
    		 * @param {*} runAnimation
    		 * @param {*} enabledElement
    		 * @param {*} targetLocation
    		 * @returns {undefined}
    		 */


    		function _animate(handle, runAnimation, enabledElement, targetLocation) {
    		  if (!runAnimation.value) {
    		    return;
    		  } // Pixels / second


    		  var distanceRemaining = Math.abs(handle.y - targetLocation.y);
    		  var linearDistEachFrame = distanceRemaining / 10;

    		  if (distanceRemaining < 1) {
    		    handle.y = targetLocation.y;
    		    runAnimation.value = false;
    		    return;
    		  }

    		  if (handle.y > targetLocation.y) {
    		    handle.y -= linearDistEachFrame;
    		  } else if (handle.y < targetLocation.y) {
    		    handle.y += linearDistEachFrame;
    		  } // Update the image


    		  _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.updateImage(enabledElement.element); // Request a new frame

    		  _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.requestAnimationFrame(function () {
    		    _animate(handle, runAnimation, enabledElement, targetLocation);
    		  });
    		}

    		/***/ }),

    		/***/ "./manipulators/moveNewHandle.js":
    		/*!***************************************!*\
    		  !*** ./manipulators/moveNewHandle.js ***!
    		  \***************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../events.js */ "./events.js");
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _anyHandlesOutsideImage_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./anyHandlesOutsideImage.js */ "./manipulators/anyHandlesOutsideImage.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/triggerEvent.js */ "./util/triggerEvent.js");
    		/* harmony import */ var _util_clip_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/clip.js */ "./util/clip.js");
    		/* harmony import */ var _store_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../store/index.js */ "./store/index.js");
    		/* harmony import */ var _util_getActiveTool__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/getActiveTool */ "./util/getActiveTool.js");
    		/* harmony import */ var _tools_base_BaseAnnotationTool__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../tools/base/BaseAnnotationTool */ "./tools/base/BaseAnnotationTool.js");









    		var _moveEvents = {
    		  mouse: [_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MOUSE_MOVE, _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MOUSE_DRAG],
    		  touch: [_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_DRAG]
    		};
    		var _moveEndEvents = {
    		  mouse: [_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MOUSE_UP, _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MOUSE_CLICK],
    		  touch: [_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_END, _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_PINCH, _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TAP]
    		};
    		/**
    		 * Move a new handle
    		 * @public
    		 * @method moveNewHandle
    		 * @memberof Manipulators
    		 *
    		 * @param {*} evtDetail
    		 * @param {*} toolName
    		 * @param {*} annotation
    		 * @param {*} handle
    		 * @param {*} [options={}]
    		 * @param {Boolean}  [options.deleteIfHandleOutsideImage]
    		 * @param {function} [options.doneMovingCallback]
    		 * @param {Boolean}  [options.preventHandleOutsideImage]
    		 * @param {*} [interactionType=mouse]
    		 * @returns {undefined}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (evtDetail, toolName, annotation, handle, options) {
    		  var interactionType = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'mouse';
    		  // Use global defaults, unless overidden by provided options
    		  options = Object.assign({
    		    deleteIfHandleOutsideImage: _store_index_js__WEBPACK_IMPORTED_MODULE_6__["state"].deleteIfHandleOutsideImage,
    		    preventHandleOutsideImage: _store_index_js__WEBPACK_IMPORTED_MODULE_6__["state"].preventHandleOutsideImage
    		  }, options);
    		  var element = evtDetail.element;
    		  annotation.active = true;
    		  handle.active = true;
    		  _store_index_js__WEBPACK_IMPORTED_MODULE_6__["state"].isToolLocked = true;

    		  function moveHandler(evt) {
    		    _moveHandler(toolName, annotation, handle, options, interactionType, {
    		      moveEndHandler: moveEndHandler
    		    }, evt);
    		  } // So we don't need to inline the entire `moveEndEventHandler` function


    		  function moveEndHandler(evt) {
    		    _moveEndHandler(toolName, annotation, handle, options, interactionType, {
    		      moveHandler: moveHandler,
    		      moveEndHandler: moveEndHandler
    		    }, evt);
    		  } // Add event listeners


    		  _moveEvents[interactionType].forEach(function (eventType) {
    		    element.addEventListener(eventType, moveHandler);
    		  });

    		  element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_START, _stopImmediatePropagation);
    		});

    		function _moveHandler(toolName, annotation, handle, options, interactionType, _ref, evt) {
    		  var moveEndHandler = _ref.moveEndHandler;
    		  var _evt$detail = evt.detail,
    		      currentPoints = _evt$detail.currentPoints,
    		      image = _evt$detail.image,
    		      element = _evt$detail.element,
    		      buttons = _evt$detail.buttons; // Add moveEndEvent Handler when move trigger

    		  _moveEndEvents[interactionType].forEach(function (eventType) {
    		    element.addEventListener(eventType, moveEndHandler);
    		  });

    		  var page = currentPoints.page;
    		  var fingerOffset = -57;
    		  var targetLocation = _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.pageToPixel(element, interactionType === 'touch' ? page.x + fingerOffset : page.x, interactionType === 'touch' ? page.y + fingerOffset : page.y);
    		  annotation.invalidated = true;
    		  handle.active = true;
    		  handle.x = targetLocation.x;
    		  handle.y = targetLocation.y;

    		  if (options && options.preventHandleOutsideImage) {
    		    Object(_util_clip_js__WEBPACK_IMPORTED_MODULE_5__["clipToBox"])(handle, image);
    		  }

    		  _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.updateImage(element);
    		  var activeTool = Object(_util_getActiveTool__WEBPACK_IMPORTED_MODULE_7__["default"])(element, buttons, interactionType);

    		  if (activeTool instanceof _tools_base_BaseAnnotationTool__WEBPACK_IMPORTED_MODULE_8__["default"]) {
    		    activeTool.updateCachedStats(image, element, annotation);
    		  }

    		  var eventType = _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MEASUREMENT_MODIFIED;
    		  var modifiedEventData = {
    		    toolName: toolName,
    		    element: element,
    		    measurementData: annotation
    		  };
    		  Object(_util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_4__["default"])(element, eventType, modifiedEventData);
    		}

    		function _moveEndHandler(toolName, annotation, handle, options, interactionType, _ref2, evt) {
    		  var moveHandler = _ref2.moveHandler,
    		      moveEndHandler = _ref2.moveEndHandler;
    		  var _evt$detail2 = evt.detail,
    		      element = _evt$detail2.element,
    		      currentPoints = _evt$detail2.currentPoints;
    		  var page = currentPoints.page;
    		  var fingerOffset = -57;
    		  var targetLocation = _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.pageToPixel(element, interactionType === 'touch' ? page.x + fingerOffset : page.x, interactionType === 'touch' ? page.y + fingerOffset : page.y); // "Release" the handle

    		  annotation.active = false;
    		  annotation.invalidated = true;
    		  handle.active = false;
    		  handle.x = targetLocation.x;
    		  handle.y = targetLocation.y;
    		  _store_index_js__WEBPACK_IMPORTED_MODULE_6__["state"].isToolLocked = false; // Remove event listeners

    		  _moveEvents[interactionType].forEach(function (eventType) {
    		    element.removeEventListener(eventType, moveHandler);
    		  });

    		  _moveEndEvents[interactionType].forEach(function (eventType) {
    		    element.removeEventListener(eventType, moveEndHandler);
    		  });

    		  element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_START, _stopImmediatePropagation); // TODO: WHY?
    		  // Why would a Touch_Pinch or Touch_Press be associated with a new handle?

    		  if (evt.type === _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_PINCH || evt.type === _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOUCH_PRESS) {
    		    handle.active = false;
    		    _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.updateImage(element);

    		    if (typeof options.doneMovingCallback === 'function') {
    		      options.doneMovingCallback();
    		    }

    		    return;
    		  }

    		  if (options.preventHandleOutsideImage) {
    		    Object(_util_clip_js__WEBPACK_IMPORTED_MODULE_5__["clipToBox"])(handle, evt.detail.image);
    		  } // If any handle is outside the image, delete the tool data


    		  if (options.deleteIfHandleOutsideImage && Object(_anyHandlesOutsideImage_js__WEBPACK_IMPORTED_MODULE_2__["default"])(evt.detail, annotation.handles)) {
    		    Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_3__["removeToolState"])(element, toolName, annotation);
    		  }

    		  if (typeof options.doneMovingCallback === 'function') {
    		    options.doneMovingCallback();
    		  } // Update Image


    		  _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.updateImage(element);
    		}
    		/**
    		 * Stop the CornerstoneToolsTouchStart event from
    		 * Becoming a CornerstoneToolsTouchStartActive event when
    		 * MoveNewHandle ends
    		 *
    		 * @private
    		 * @function _stopImmediatePropagation
    		 *
    		 * @param {*} evt
    		 * @returns {Boolean} false
    		 */


    		function _stopImmediatePropagation(evt) {
    		  evt.stopImmediatePropagation();
    		  return false;
    		}

    		/***/ }),

    		/***/ "./mixins/activeOrDisabledBinaryTool.js":
    		/*!**********************************************!*\
    		  !*** ./mixins/activeOrDisabledBinaryTool.js ***!
    		  \**********************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _store_setToolMode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../store/setToolMode.js */ "./store/setToolMode.js");

    		/**
    		 * If one attempts to change mode to 'passive', redirect the tool to 'disabled'.
    		 *
    		 * @param {HTMLElement} element The element on which the tool resides.
    		 * @returns {undefined}
    		 */

    		function passiveCallback(element) {
    		  Object(_store_setToolMode_js__WEBPACK_IMPORTED_MODULE_0__["setToolDisabledForElement"])(element, this.name);
    		}
    		/**
    		 * If one attempts to turn the tool 'enabled', redirect the tool to 'active'.
    		 *
    		 * @param {HTMLElement} element The element on which the tool resides.
    		 * @returns {undefined}
    		 */


    		function enabledCallback(element) {
    		  Object(_store_setToolMode_js__WEBPACK_IMPORTED_MODULE_0__["setToolActiveForElement"])(element, this.name);
    		}
    		/**
    		 * @mixin activeOrDisabledBinaryTool - Redirect enabled/passive mode changes to active/disabled.
    		 * @memberof Mixins
    		 */


    		/* harmony default export */ __webpack_exports__["default"] = ({
    		  passiveCallback: passiveCallback,
    		  enabledCallback: enabledCallback
    		});

    		/***/ }),

    		/***/ "./mixins/enabledOrDisabledBinaryTool.js":
    		/*!***********************************************!*\
    		  !*** ./mixins/enabledOrDisabledBinaryTool.js ***!
    		  \***********************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _store_setToolMode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../store/setToolMode.js */ "./store/setToolMode.js");

    		/**
    		 * If one attempts to change mode to 'passive', redirect the tool to 'disabled'.
    		 *
    		 * @param {HTMLElement} element The element on which the tool resides.
    		 * @returns {undefined}
    		 */

    		function passiveCallback(element) {
    		  Object(_store_setToolMode_js__WEBPACK_IMPORTED_MODULE_0__["setToolDisabledForElement"])(element, this.name);
    		}
    		/**
    		 * If one attempts to change mode to 'active', redirect the tool to 'enabled'.
    		 *
    		 * @param {HTMLElement} element The element on which the tool resides.
    		 * @returns {undefined}
    		 */


    		function activeCallback(element) {
    		  Object(_store_setToolMode_js__WEBPACK_IMPORTED_MODULE_0__["setToolEnabledForElement"])(element, this.name);
    		}
    		/**
    		 *
    		 * @mixin enabledOrDisabledBinaryTool - Redirect active/passive mode changes to enabled/disabled.
    		 * @memberof Mixins
    		 */


    		/* harmony default export */ __webpack_exports__["default"] = ({
    		  passiveCallback: passiveCallback,
    		  activeCallback: activeCallback
    		});

    		/***/ }),

    		/***/ "./mixins/index.js":
    		/*!*************************!*\
    		  !*** ./mixins/index.js ***!
    		  \*************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _activeOrDisabledBinaryTool_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./activeOrDisabledBinaryTool.js */ "./mixins/activeOrDisabledBinaryTool.js");
    		/* harmony import */ var _enabledOrDisabledBinaryTool_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./enabledOrDisabledBinaryTool.js */ "./mixins/enabledOrDisabledBinaryTool.js");


    		/* harmony default export */ __webpack_exports__["default"] = ({
    		  activeOrDisabledBinaryTool: _activeOrDisabledBinaryTool_js__WEBPACK_IMPORTED_MODULE_0__["default"],
    		  enabledOrDisabledBinaryTool: _enabledOrDisabledBinaryTool_js__WEBPACK_IMPORTED_MODULE_1__["default"]
    		});

    		/***/ }),

    		/***/ "./orientation/getOrientationString.js":
    		/*!*********************************************!*\
    		  !*** ./orientation/getOrientationString.js ***!
    		  \*********************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _util_convertToVector3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/convertToVector3.js */ "./util/convertToVector3.js");


    		/**
    		 * Returns the orientation of the vector in the patient coordinate system.
    		 * @public
    		 * @function getOrientationString
    		 *
    		 * @param  {Array|cornerstoneMath.Vector3} vector Input array or Vector3
    		 * @returns {string} The orientation in the patient coordinate system.
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (vector) {
    		  var vec3 = Object(_util_convertToVector3_js__WEBPACK_IMPORTED_MODULE_1__["default"])(vector); // Thanks to David Clunie
    		  // https://sites.google.com/site/dicomnotes/

    		  var orientation = '';
    		  var orientationX = vec3.x < 0 ? 'R' : 'L';
    		  var orientationY = vec3.y < 0 ? 'A' : 'P';
    		  var orientationZ = vec3.z < 0 ? 'F' : 'H'; // Should probably make this a function vector3.abs

    		  var abs = new _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstoneMath.Vector3(Math.abs(vec3.x), Math.abs(vec3.y), Math.abs(vec3.z));

    		  for (var i = 0; i < 3; i++) {
    		    if (abs.x > 0.0001 && abs.x > abs.y && abs.x > abs.z) {
    		      orientation += orientationX;
    		      abs.x = 0;
    		    } else if (abs.y > 0.0001 && abs.y > abs.x && abs.y > abs.z) {
    		      orientation += orientationY;
    		      abs.y = 0;
    		    } else if (abs.z > 0.0001 && abs.z > abs.x && abs.z > abs.y) {
    		      orientation += orientationZ;
    		      abs.z = 0;
    		    } else {
    		      break;
    		    }
    		  }

    		  return orientation;
    		});

    		/***/ }),

    		/***/ "./orientation/index.js":
    		/*!******************************!*\
    		  !*** ./orientation/index.js ***!
    		  \******************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _getOrientationString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getOrientationString.js */ "./orientation/getOrientationString.js");
    		/* harmony import */ var _invertOrientationString_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./invertOrientationString.js */ "./orientation/invertOrientationString.js");


    		var orientation = {
    		  getOrientationString: _getOrientationString_js__WEBPACK_IMPORTED_MODULE_0__["default"],
    		  invertOrientationString: _invertOrientationString_js__WEBPACK_IMPORTED_MODULE_1__["default"]
    		};
    		/* harmony default export */ __webpack_exports__["default"] = (orientation);

    		/***/ }),

    		/***/ "./orientation/invertOrientationString.js":
    		/*!************************************************!*\
    		  !*** ./orientation/invertOrientationString.js ***!
    		  \************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/**
    		 * Inverts an orientation string.
    		 * @public
    		 * @function invertOrientationString
    		 *
    		 * @param  {string} orientationString The orientation.
    		 * @returns {string}  The inverted orientationString.
    		 */
    		/* harmony default export */ __webpack_exports__["default"] = (function (orientationString) {
    		  var inverted = orientationString.replace('H', 'f');
    		  inverted = inverted.replace('F', 'h');
    		  inverted = inverted.replace('R', 'l');
    		  inverted = inverted.replace('L', 'r');
    		  inverted = inverted.replace('A', 'p');
    		  inverted = inverted.replace('P', 'a');
    		  inverted = inverted.toUpperCase();
    		  return inverted;
    		});

    		/***/ }),

    		/***/ "./requestPool/requestPoolManager.js":
    		/*!*******************************************!*\
    		  !*** ./requestPool/requestPoolManager.js ***!
    		  \*******************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _util_getMaxSimultaneousRequests_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/getMaxSimultaneousRequests.js */ "./util/getMaxSimultaneousRequests.js");


    		var requestPool = {
    		  interaction: [],
    		  thumbnail: [],
    		  prefetch: []
    		};
    		var numRequests = {
    		  interaction: 0,
    		  thumbnail: 0,
    		  prefetch: 0
    		};
    		var maxNumRequests = {
    		  interaction: 6,
    		  thumbnail: 6,
    		  prefetch: 5
    		};
    		var awake = false;
    		var grabDelay = 20;

    		function addRequest(element, imageId, type, preventCache, doneCallback, failCallback, addToBeginning) {
    		  if (!requestPool.hasOwnProperty(type)) {
    		    throw new Error('Request type must be one of interaction, thumbnail, or prefetch');
    		  }

    		  if (!element || !imageId) {
    		    return;
    		  } // Describe the request


    		  var requestDetails = {
    		    type: type,
    		    imageId: imageId,
    		    preventCache: preventCache,
    		    doneCallback: doneCallback,
    		    failCallback: failCallback
    		  }; // If this imageId is in the cache, resolve it immediately

    		  var imageLoadObject = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.imageCache.getImageLoadObject(imageId);

    		  if (imageLoadObject) {
    		    imageLoadObject.promise.then(function (image) {
    		      doneCallback(image);
    		    }, function (error) {
    		      failCallback(error);
    		    });
    		    return;
    		  }

    		  if (addToBeginning) {
    		    // Add it to the beginning of the stack
    		    requestPool[type].unshift(requestDetails);
    		  } else {
    		    // Add it to the end of the stack
    		    requestPool[type].push(requestDetails);
    		  } // Wake up


    		  awake = true;
    		}

    		function clearRequestStack(type) {
    		  // Console.log('clearRequestStack');
    		  if (!requestPool.hasOwnProperty(type)) {
    		    throw new Error('Request type must be one of interaction, thumbnail, or prefetch');
    		  }

    		  requestPool[type] = [];
    		}

    		function startAgain() {
    		  if (!awake) {
    		    return;
    		  }

    		  setTimeout(function () {
    		    startGrabbing();
    		  }, grabDelay);
    		}

    		function sendRequest(requestDetails) {
    		  var cornerstone = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone; // Increment the number of current requests of this type

    		  var type = requestDetails.type;
    		  numRequests[type]++;
    		  awake = true;
    		  var imageId = requestDetails.imageId;
    		  var doneCallback = requestDetails.doneCallback;
    		  var failCallback = requestDetails.failCallback; // Check if we already have this image promise in the cache

    		  var imageLoadObject = cornerstone.imageCache.getImageLoadObject(imageId);

    		  if (imageLoadObject) {
    		    // If we do, remove from list (when resolved, as we could have
    		    // Pending prefetch requests) and stop processing this iteration
    		    imageLoadObject.promise.then(function (image) {
    		      numRequests[type]--; // Console.log(numRequests);

    		      doneCallback(image);
    		      startAgain();
    		    }, function (error) {
    		      numRequests[type]--; // Console.log(numRequests);

    		      failCallback(error);
    		      startAgain();
    		    });
    		    return;
    		  }

    		  function requestTypeToLoadPriority(requestDetails) {
    		    if (requestDetails.type === 'prefetch') {
    		      return -5;
    		    } else if (requestDetails.type === 'interactive') {
    		      return 0;
    		    } else if (requestDetails.type === 'thumbnail') {
    		      return 5;
    		    }
    		  }

    		  var priority = requestTypeToLoadPriority(requestDetails);
    		  var loader;

    		  if (requestDetails.preventCache === true) {
    		    loader = cornerstone.loadImage(imageId, {
    		      priority: priority,
    		      type: requestDetails.type
    		    });
    		  } else {
    		    loader = cornerstone.loadAndCacheImage(imageId, {
    		      priority: priority,
    		      type: requestDetails.type
    		    });
    		  } // Load and cache the image


    		  loader.then(function (image) {
    		    numRequests[type]--; // Console.log(numRequests);

    		    doneCallback(image);
    		    startAgain();
    		  }, function (error) {
    		    numRequests[type]--; // Console.log(numRequests);

    		    failCallback(error);
    		    startAgain();
    		  });
    		}

    		function startGrabbing() {
    		  // Begin by grabbing X images
    		  var maxSimultaneousRequests = Object(_util_getMaxSimultaneousRequests_js__WEBPACK_IMPORTED_MODULE_1__["getMaxSimultaneousRequests"])();
    		  maxNumRequests = {
    		    interaction: Math.max(maxSimultaneousRequests, 1),
    		    thumbnail: Math.max(maxSimultaneousRequests - 2, 1),
    		    prefetch: Math.max(maxSimultaneousRequests - 1, 1)
    		  };
    		  var currentRequests = numRequests.interaction + numRequests.thumbnail + numRequests.prefetch;
    		  var requestsToSend = maxSimultaneousRequests - currentRequests;

    		  for (var i = 0; i < requestsToSend; i++) {
    		    var requestDetails = getNextRequest();

    		    if (requestDetails) {
    		      sendRequest(requestDetails);
    		    }
    		  }
    		}

    		function getNextRequest() {
    		  if (requestPool.interaction.length && numRequests.interaction < maxNumRequests.interaction) {
    		    return requestPool.interaction.shift();
    		  }

    		  if (requestPool.thumbnail.length && numRequests.thumbnail < maxNumRequests.thumbnail) {
    		    return requestPool.thumbnail.shift();
    		  }

    		  if (requestPool.prefetch.length && numRequests.prefetch < maxNumRequests.prefetch) {
    		    return requestPool.prefetch.shift();
    		  }

    		  if (!requestPool.interaction.length && !requestPool.thumbnail.length && !requestPool.prefetch.length) {
    		    awake = false;
    		  }

    		  return false;
    		}

    		function getRequestPool() {
    		  return requestPool;
    		}

    		/* harmony default export */ __webpack_exports__["default"] = ({
    		  addRequest: addRequest,
    		  clearRequestStack: clearRequestStack,
    		  startGrabbing: startGrabbing,
    		  getRequestPool: getRequestPool
    		});

    		/***/ }),

    		/***/ "./stackTools/fusionRenderer.js":
    		/*!**************************************!*\
    		  !*** ./stackTools/fusionRenderer.js ***!
    		  \**************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return FusionRenderer; });
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../stateManagement/toolState.js */ "./stateManagement/toolState.js");





    		var FusionRenderer =
    		/*#__PURE__*/
    		function () {
    		  function FusionRenderer() {
    		    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, FusionRenderer);

    		    this.currentImageIdIndex = 0;
    		    this.layerIds = [];
    		    this.findImageFn = undefined;
    		  }

    		  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(FusionRenderer, [{
    		    key: "render",
    		    value: function render(element, imageStacks) {
    		      var _this = this;

    		      // Move this to base Renderer class
    		      if (!Number.isInteger(this.currentImageIdIndex)) {
    		        throw new Error('FusionRenderer: render - Image ID Index is not an integer');
    		      }

    		      if (!this.findImageFn) {
    		        throw new Error('No findImage function has been defined');
    		      }

    		      if (!imageStacks) {
    		        var toolData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_3__["getToolState"])(element, 'stack');
    		        imageStacks = toolData.data;
    		      } // TODO: Figure out what to do with LoadHandlers in this scenario...


    		      var cornerstone = _externalModules_js__WEBPACK_IMPORTED_MODULE_2__["default"].cornerstone; // For the base layer, go to the currentImageIdIndex

    		      var baseImageObject = imageStacks[0];
    		      var currentImageId = baseImageObject.imageIds[this.currentImageIdIndex];
    		      var overlayImageStacks = imageStacks.slice(1, imageStacks.length);
    		      cornerstone.loadAndCacheImage(currentImageId).then(function (baseImage) {
    		        var baseLayerId = _this.layerIds[0]; // Get the base layer if one exists

    		        if (baseLayerId) {
    		          cornerstone.setLayerImage(element, baseImage, baseLayerId);
    		        } else {
    		          // Otherwise, create a new layer with the base layer's image
    		          baseLayerId = cornerstone.addLayer(element, baseImage, baseImageObject.options);

    		          _this.layerIds.push(baseLayerId);
    		        } // Display the image immediately while the overlay images are identified


    		        cornerstone.displayImage(element, baseImage); // Loop through the remaining 'overlay' image stacks

    		        overlayImageStacks.forEach(function (imgObj, overlayLayerIndex) {
    		          var imageId = _this.findImageFn(imgObj.imageIds, currentImageId);

    		          var layerIndex = overlayLayerIndex + 1;
    		          var currentLayerId = _this.layerIds[layerIndex]; // If no layer exists yet for this overlaid stack, create
    		          // One and add it to the layerIds property for this instance
    		          // Of the fusion renderer.

    		          if (!currentLayerId) {
    		            currentLayerId = cornerstone.addLayer(element, undefined, imgObj.options);

    		            _this.layerIds.push(currentLayerId);
    		          }

    		          if (imageId) {
    		            // If an imageId was returned from the findImage function,
    		            // Load it, make sure it's visible and update the layer
    		            // With the new image object.
    		            cornerstone.loadAndCacheImage(imageId).then(function (image) {
    		              cornerstone.setLayerImage(element, image, currentLayerId);
    		              cornerstone.updateImage(element);
    		            });
    		          } else {
    		            // If no imageId was returned from the findImage function.
    		            // This means that there is no relevant image to display.
    		            cornerstone.setLayerImage(element, undefined, currentLayerId);
    		            cornerstone.setActiveLayer(element, baseLayerId);
    		            cornerstone.updateImage(element);
    		          }
    		        });
    		      });
    		    }
    		  }]);

    		  return FusionRenderer;
    		}();



    		/***/ }),

    		/***/ "./stackTools/playClip.js":
    		/*!********************************!*\
    		  !*** ./stackTools/playClip.js ***!
    		  \********************************/
    		/*! exports provided: playClip, stopClip */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "playClip", function() { return playClip; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stopClip", function() { return stopClip; });
    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../events.js */ "./events.js");
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _stateManagement_loadHandlerManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../stateManagement/loadHandlerManager.js */ "./stateManagement/loadHandlerManager.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/triggerEvent.js */ "./util/triggerEvent.js");





    		var toolType = 'playClip';
    		/**
    		 * [private] Turns a Frame Time Vector (0018,1065) array into a normalized array of timeouts. Each element
    		 * ... of the resulting array represents the amount of time each frame will remain on the screen.
    		 * @param {Array} vector A Frame Time Vector (0018,1065) as specified in section C.7.6.5.1.2 of DICOM standard.
    		 * @param {Number} speed A speed factor which will be applied to each element of the resulting array.
    		 * @returns {Array} An array with timeouts for each animation frame.
    		 */

    		function getPlayClipTimeouts(vector, speed) {
    		  var i;
    		  var sample;
    		  var delay;
    		  var sum = 0;
    		  var limit = vector.length;
    		  var timeouts = []; // Initialize time varying to false

    		  timeouts.isTimeVarying = false;

    		  if (typeof speed !== 'number' || speed <= 0) {
    		    speed = 1;
    		  } // First element of a frame time vector must be discarded


    		  for (i = 1; i < limit; i++) {
    		    // eslint-disable-next-line no-bitwise
    		    delay = Number(vector[i]) / speed | 0; // Integral part only

    		    timeouts.push(delay);

    		    if (i === 1) {
    		      // Use first item as a sample for comparison
    		      sample = delay;
    		    } else if (delay !== sample) {
    		      timeouts.isTimeVarying = true;
    		    }

    		    sum += delay;
    		  }

    		  if (timeouts.length > 0) {
    		    if (timeouts.isTimeVarying) {
    		      // If it's a time varying vector, make the last item an average...
    		      // eslint-disable-next-line no-bitwise
    		      delay = sum / timeouts.length | 0;
    		    } else {
    		      delay = timeouts[0];
    		    }

    		    timeouts.push(delay);
    		  }

    		  return timeouts;
    		}
    		/**
    		 * [private] Performs the heavy lifting of stopping an ongoing animation.
    		 * @param {Object} playClipData The data from playClip that needs to be stopped.
    		 * @returns {void}
    		 */


    		function stopClipWithData(playClipData) {
    		  var id = playClipData.intervalId;

    		  if (typeof id !== 'undefined') {
    		    playClipData.intervalId = undefined;

    		    if (playClipData.usingFrameTimeVector) {
    		      clearTimeout(id);
    		    } else {
    		      clearInterval(id);
    		    }
    		  }
    		}
    		/**
    		 * [private] Trigger playClip tool stop event.
    		 * @param {HTMLElement} element
    		 * @returns {void}
    		 */


    		function triggerStopEvent(element) {
    		  var eventDetail = {
    		    element: element
    		  };
    		  Object(_util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_4__["default"])(element, _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].CLIP_STOPPED, eventDetail);
    		}
    		/**
    		 * Starts playing a clip or adjusts the frame rate of an already playing clip.  framesPerSecond is
    		 * optional and defaults to 30 if not specified.  A negative framesPerSecond will play the clip in reverse.
    		 * The element must be a stack of images
    		 * @param {HTMLElement} element
    		 * @param {number} framesPerSecond
    		 * @returns {void}
    		 */


    		function playClip(element, framesPerSecond) {
    		  var playClipData;
    		  var playClipTimeouts;

    		  if (element === undefined) {
    		    throw new Error('playClip: element must not be undefined');
    		  }

    		  var stackToolData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_3__["getToolState"])(element, 'stack');

    		  if (!stackToolData || !stackToolData.data || !stackToolData.data.length) {
    		    return;
    		  }

    		  var cornerstone = _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone; // If we have more than one stack, check if we have a stack renderer defined

    		  var stackRenderer;

    		  if (stackToolData.data.length > 1) {
    		    var stackRendererData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_3__["getToolState"])(element, 'stackRenderer');

    		    if (stackRendererData && stackRendererData.data && stackRendererData.data.length) {
    		      stackRenderer = stackRendererData.data[0];
    		    }
    		  }

    		  var stackData = stackToolData.data[0];
    		  var playClipToolData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_3__["getToolState"])(element, toolType);

    		  if (!playClipToolData || !playClipToolData.data || !playClipToolData.data.length) {
    		    playClipData = {
    		      intervalId: undefined,
    		      framesPerSecond: 30,
    		      lastFrameTimeStamp: undefined,
    		      frameRate: 0,
    		      frameTimeVector: undefined,
    		      ignoreFrameTimeVector: false,
    		      usingFrameTimeVector: false,
    		      speed: 1,
    		      reverse: false,
    		      loop: true
    		    };
    		    Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_3__["addToolState"])(element, toolType, playClipData);
    		  } else {
    		    playClipData = playClipToolData.data[0]; // Make sure the specified clip is not running before any property update

    		    stopClipWithData(playClipData);
    		  } // If a framesPerSecond is specified and is valid, update the playClipData now


    		  if (framesPerSecond < 0 || framesPerSecond > 0) {
    		    playClipData.framesPerSecond = Number(framesPerSecond);
    		    playClipData.reverse = playClipData.framesPerSecond < 0; // If framesPerSecond is given, frameTimeVector will be ignored...

    		    playClipData.ignoreFrameTimeVector = true;
    		  } // Determine if frame time vector should be used instead of a fixed frame rate...


    		  if (playClipData.ignoreFrameTimeVector !== true && playClipData.frameTimeVector && playClipData.frameTimeVector.length === stackData.imageIds.length) {
    		    playClipTimeouts = getPlayClipTimeouts(playClipData.frameTimeVector, playClipData.speed);
    		  } // This function encapsulates the frame rendering logic...


    		  var playClipAction = function playClipAction() {
    		    // Hoisting of context variables
    		    var loader,
    		        startLoadingHandler,
    		        endLoadingHandler,
    		        errorLoadingHandler,
    		        newImageIdIndex = stackData.currentImageIdIndex;
    		    var imageCount = stackData.imageIds.length;

    		    if (playClipData.reverse) {
    		      newImageIdIndex--;
    		    } else {
    		      newImageIdIndex++;
    		    }

    		    if (!playClipData.loop && (newImageIdIndex < 0 || newImageIdIndex >= imageCount)) {
    		      stopClipWithData(playClipData);
    		      triggerStopEvent(element);
    		      return;
    		    } // Loop around if we go outside the stack


    		    if (newImageIdIndex >= imageCount) {
    		      newImageIdIndex = 0;
    		    }

    		    if (newImageIdIndex < 0) {
    		      newImageIdIndex = imageCount - 1;
    		    }

    		    if (newImageIdIndex !== stackData.currentImageIdIndex) {
    		      startLoadingHandler = _stateManagement_loadHandlerManager_js__WEBPACK_IMPORTED_MODULE_2__["default"].getStartLoadHandler(element);
    		      endLoadingHandler = _stateManagement_loadHandlerManager_js__WEBPACK_IMPORTED_MODULE_2__["default"].getEndLoadHandler(element);
    		      errorLoadingHandler = _stateManagement_loadHandlerManager_js__WEBPACK_IMPORTED_MODULE_2__["default"].getErrorLoadingHandler(element);

    		      if (startLoadingHandler) {
    		        startLoadingHandler(element);
    		      }

    		      if (stackData.preventCache === true) {
    		        loader = cornerstone.loadImage(stackData.imageIds[newImageIdIndex]);
    		      } else {
    		        loader = cornerstone.loadAndCacheImage(stackData.imageIds[newImageIdIndex]);
    		      }

    		      loader.then(function (image) {
    		        try {
    		          stackData.currentImageIdIndex = newImageIdIndex;

    		          if (stackRenderer) {
    		            stackRenderer.currentImageIdIndex = newImageIdIndex;
    		            stackRenderer.render(element, stackToolData.data);
    		          } else {
    		            cornerstone.displayImage(element, image);
    		          }

    		          if (endLoadingHandler) {
    		            endLoadingHandler(element, image);
    		          }
    		        } catch (error) {
    		          return;
    		        }
    		      }, function (error) {
    		        var imageId = stackData.imageIds[newImageIdIndex];

    		        if (errorLoadingHandler) {
    		          errorLoadingHandler(element, imageId, error);
    		        }
    		      });
    		    }
    		  }; // If playClipTimeouts array is available, not empty and its elements are NOT uniform ...
    		  // ... (at least one timeout is different from the others), use alternate setTimeout implementation


    		  if (playClipTimeouts && playClipTimeouts.length > 0 && playClipTimeouts.isTimeVarying) {
    		    playClipData.usingFrameTimeVector = true;
    		    playClipData.intervalId = setTimeout(function playClipTimeoutHandler() {
    		      playClipData.intervalId = setTimeout(playClipTimeoutHandler, playClipTimeouts[stackData.currentImageIdIndex]);
    		      playClipAction();
    		    }, 0);
    		  } else {
    		    // ... otherwise user setInterval implementation which is much more efficient.
    		    playClipData.usingFrameTimeVector = false;
    		    playClipData.intervalId = setInterval(playClipAction, 1000 / Math.abs(playClipData.framesPerSecond));
    		  }
    		}
    		/**
    		 * Stops an already playing clip.
    		 * @param {HTMLElement} element
    		 * @returns {void}
    		 */


    		function stopClip(element) {
    		  var playClipToolData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_3__["getToolState"])(element, toolType);

    		  if (!playClipToolData || !playClipToolData.data || !playClipToolData.data.length) {
    		    return;
    		  }

    		  stopClipWithData(playClipToolData.data[0]);
    		}



    		/***/ }),

    		/***/ "./stackTools/stackPrefetch.js":
    		/*!*************************************!*\
    		  !*** ./stackTools/stackPrefetch.js ***!
    		  \*************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _requestPool_requestPoolManager_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../requestPool/requestPoolManager.js */ "./requestPool/requestPoolManager.js");
    		/* harmony import */ var _stateManagement_loadHandlerManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../stateManagement/loadHandlerManager.js */ "./stateManagement/loadHandlerManager.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _util_getMaxSimultaneousRequests_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/getMaxSimultaneousRequests.js */ "./util/getMaxSimultaneousRequests.js");
    		/* harmony import */ var _util_logger_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/logger.js */ "./util/logger.js");
    		/* harmony import */ var _util_triggerEvent__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/triggerEvent */ "./util/triggerEvent.js");
    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../events.js */ "./events.js");








    		var logger = Object(_util_logger_js__WEBPACK_IMPORTED_MODULE_5__["getLogger"])('stackTools:stackPrefetch');
    		var toolType = 'stackPrefetch';
    		var requestType = 'prefetch';
    		var configuration = {
    		  maxImagesToPrefetch: Infinity
    		};
    		var resetPrefetchTimeout;
    		var resetPrefetchDelay = 10;

    		function range(lowEnd, highEnd) {
    		  // Javascript version of Python's range function
    		  // http://stackoverflow.com/questions/3895478/does-javascript-have-a-method-like-range-to-generate-an-array-based-on-suppl
    		  lowEnd = Math.round(lowEnd) || 0;
    		  highEnd = Math.round(highEnd) || 0;
    		  var arr = [];
    		  var c = highEnd - lowEnd + 1;

    		  if (c <= 0) {
    		    return arr;
    		  }

    		  while (c--) {
    		    arr[c] = highEnd--;
    		  }

    		  return arr;
    		}

    		var max = function max(arr) {
    		  return Math.max.apply(null, arr);
    		};

    		var min = function min(arr) {
    		  return Math.min.apply(null, arr);
    		};

    		function nearestIndex(arr, x) {
    		  // Return index of nearest values in array
    		  // http://stackoverflow.com/questions/25854212/return-index-of-nearest-values-in-an-array
    		  var l = [];
    		  var h = [];
    		  arr.forEach(function (v) {
    		    if (v < x) {
    		      l.push(v);
    		    } else if (v > x) {
    		      h.push(v);
    		    }
    		  });
    		  return {
    		    low: arr.indexOf(max(l)),
    		    high: arr.indexOf(min(h))
    		  };
    		}

    		function prefetch(element) {
    		  // Check to make sure stack data exists
    		  var stackData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_3__["getToolState"])(element, 'stack');

    		  if (!stackData || !stackData.data || !stackData.data.length) {
    		    return;
    		  }

    		  var stack = stackData.data[0]; // Get the stackPrefetch tool data

    		  var stackPrefetchData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_3__["getToolState"])(element, toolType);

    		  if (!stackPrefetchData) {
    		    return;
    		  }

    		  var stackPrefetch = stackPrefetchData.data[0] || {}; // If all the requests are complete, disable the stackPrefetch tool

    		  if (!stackPrefetch.indicesToRequest || !stackPrefetch.indicesToRequest.length) {
    		    stackPrefetch.enabled = false;
    		  } // Make sure the tool is still enabled


    		  if (stackPrefetch.enabled === false) {
    		    return;
    		  } // Remove an imageIdIndex from the list of indices to request
    		  // This fires when the individual image loading deferred is resolved


    		  function removeFromList(imageIdIndex) {
    		    var index = stackPrefetch.indicesToRequest.indexOf(imageIdIndex);

    		    if (index > -1) {
    		      // Don't remove last element if imageIdIndex not found
    		      stackPrefetch.indicesToRequest.splice(index, 1);
    		    }
    		  } // Remove all already cached images from the
    		  // IndicesToRequest array


    		  stackPrefetchData.data[0].indicesToRequest.sort(function (a, b) {
    		    return a - b;
    		  });
    		  var indicesToRequestCopy = stackPrefetch.indicesToRequest.slice();
    		  indicesToRequestCopy.forEach(function (imageIdIndex) {
    		    var imageId = stack.imageIds[imageIdIndex];

    		    if (!imageId) {
    		      return;
    		    }

    		    var imageLoadObject = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.imageCache.getImageLoadObject(imageId);

    		    if (imageLoadObject) {
    		      removeFromList(imageIdIndex);
    		    }
    		  }); // Stop here if there are no images left to request
    		  // After those in the cache have been removed

    		  if (!stackPrefetch.indicesToRequest.length) {
    		    return;
    		  } // Clear the requestPool of prefetch requests


    		  _requestPool_requestPoolManager_js__WEBPACK_IMPORTED_MODULE_1__["default"].clearRequestStack(requestType); // Identify the nearest imageIdIndex to the currentImageIdIndex

    		  var nearest = nearestIndex(stackPrefetch.indicesToRequest, stack.currentImageIdIndex);
    		  var imageId;
    		  var nextImageIdIndex;
    		  var preventCache = false;

    		  function doneCallback(image) {
    		    logger.log('prefetch done: %s', image.imageId);
    		    var imageIdIndex = stack.imageIds.indexOf(image.imageId);
    		    removeFromList(imageIdIndex);
    		    Object(_util_triggerEvent__WEBPACK_IMPORTED_MODULE_6__["default"])(element, _events_js__WEBPACK_IMPORTED_MODULE_7__["default"].STACK_PREFETCH_IMAGE_LOADED, {
    		      element: element,
    		      imageId: image.imageId,
    		      imageIndex: imageIdIndex,
    		      stackPrefetch: stackPrefetch,
    		      stack: stack
    		    }); // If there are no more images to fetch

    		    if (!(stackPrefetch.indicesToRequest && stackPrefetch.indicesToRequest.length > 0)) {
    		      Object(_util_triggerEvent__WEBPACK_IMPORTED_MODULE_6__["default"])(element, _events_js__WEBPACK_IMPORTED_MODULE_7__["default"].STACK_PREFETCH_DONE, {
    		        element: element,
    		        stackPrefetch: stackPrefetch,
    		        stack: stack
    		      });
    		    }
    		  } // Retrieve the errorLoadingHandler if one exists


    		  var errorLoadingHandler = _stateManagement_loadHandlerManager_js__WEBPACK_IMPORTED_MODULE_2__["default"].getErrorLoadingHandler(element);

    		  function failCallback(error) {
    		    logger.log('prefetch errored: %o', error);

    		    if (errorLoadingHandler) {
    		      errorLoadingHandler(element, imageId, error, 'stackPrefetch');
    		    }
    		  } // Prefetch images around the current image (before and after)


    		  var lowerIndex = nearest.low;
    		  var higherIndex = nearest.high;

    		  while (lowerIndex >= 0 || higherIndex < stackPrefetch.indicesToRequest.length) {
    		    var currentIndex = stack.currentImageIdIndex;
    		    var shouldSkipLower = currentIndex - stackPrefetch.indicesToRequest[lowerIndex] > configuration.maxImagesToPrefetch;
    		    var shouldSkipHigher = stackPrefetch.indicesToRequest[higherIndex] - currentIndex > configuration.maxImagesToPrefetch;
    		    var shouldLoadLower = !shouldSkipLower && lowerIndex >= 0;
    		    var shouldLoadHigher = !shouldSkipHigher && higherIndex < stackPrefetch.indicesToRequest.length;

    		    if (!shouldLoadHigher && !shouldLoadLower) {
    		      break;
    		    }

    		    if (shouldLoadLower) {
    		      nextImageIdIndex = stackPrefetch.indicesToRequest[lowerIndex--];
    		      imageId = stack.imageIds[nextImageIdIndex];
    		      _requestPool_requestPoolManager_js__WEBPACK_IMPORTED_MODULE_1__["default"].addRequest(element, imageId, requestType, preventCache, doneCallback, failCallback);
    		    }

    		    if (shouldLoadHigher) {
    		      nextImageIdIndex = stackPrefetch.indicesToRequest[higherIndex++];
    		      imageId = stack.imageIds[nextImageIdIndex];
    		      _requestPool_requestPoolManager_js__WEBPACK_IMPORTED_MODULE_1__["default"].addRequest(element, imageId, requestType, preventCache, doneCallback, failCallback);
    		    }
    		  } // Try to start the requestPool's grabbing procedure
    		  // In case it isn't already running


    		  _requestPool_requestPoolManager_js__WEBPACK_IMPORTED_MODULE_1__["default"].startGrabbing();
    		}

    		function getPromiseRemovedHandler(element) {
    		  return function (e) {
    		    var eventData = e.detail; // When an imagePromise has been pushed out of the cache, re-add its index
    		    // It to the indicesToRequest list so that it will be retrieved later if the
    		    // CurrentImageIdIndex is changed to an image nearby

    		    var stackData;

    		    try {
    		      // It will throw an exception in some cases (eg: thumbnails)
    		      stackData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_3__["getToolState"])(element, 'stack');
    		    } catch (error) {
    		      return;
    		    }

    		    if (!stackData || !stackData.data || !stackData.data.length) {
    		      return;
    		    }

    		    var stack = stackData.data[0];
    		    var imageIdIndex = stack.imageIds.indexOf(eventData.imageId); // Make sure the image that was removed is actually in this stack
    		    // Before adding it to the indicesToRequest array

    		    if (imageIdIndex < 0) {
    		      return;
    		    }

    		    var stackPrefetchData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_3__["getToolState"])(element, toolType);

    		    if (!stackPrefetchData || !stackPrefetchData.data || !stackPrefetchData.data.length) {
    		      return;
    		    }

    		    stackPrefetchData.data[0].indicesToRequest.push(imageIdIndex);
    		  };
    		}

    		function onImageUpdated(e) {
    		  // Start prefetching again (after a delay)
    		  // When the user has scrolled to a new image
    		  clearTimeout(resetPrefetchTimeout);
    		  resetPrefetchTimeout = setTimeout(function () {
    		    var element = e.target; // If playClip is enabled and the user loads a different series in the viewport
    		    // An exception will be thrown because the element will not be enabled anymore

    		    try {
    		      prefetch(element);
    		    } catch (error) {
    		      return;
    		    }
    		  }, resetPrefetchDelay);
    		}

    		function enable(element) {
    		  // Clear old prefetch data. Skipping this can cause problems when changing the series inside an element
    		  var stackPrefetchDataArray = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_3__["getToolState"])(element, toolType);
    		  stackPrefetchDataArray.data = []; // First check that there is stack data available

    		  var stackData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_3__["getToolState"])(element, 'stack');

    		  if (!stackData || !stackData.data || !stackData.data.length) {
    		    return;
    		  }

    		  var stack = stackData.data[0]; // Check if we are allowed to cache images in this stack

    		  if (stack.preventCache === true) {
    		    logger.warn('A stack that should not be cached was given the stackPrefetch');
    		    return;
    		  } // Use the currentImageIdIndex from the stack as the initalImageIdIndex


    		  var stackPrefetchData = {
    		    indicesToRequest: range(0, stack.imageIds.length - 1),
    		    enabled: true,
    		    direction: 1
    		  }; // Remove the currentImageIdIndex from the list to request

    		  var indexOfCurrentImage = stackPrefetchData.indicesToRequest.indexOf(stack.currentImageIdIndex);
    		  stackPrefetchData.indicesToRequest.splice(indexOfCurrentImage, 1);
    		  Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_3__["addToolState"])(element, toolType, stackPrefetchData);
    		  prefetch(element);
    		  element.removeEventListener(_externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.EVENTS.NEW_IMAGE, onImageUpdated);
    		  element.addEventListener(_externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.EVENTS.NEW_IMAGE, onImageUpdated);
    		  var promiseRemovedHandler = getPromiseRemovedHandler(element);
    		  _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.events.removeEventListener(_externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.EVENTS.IMAGE_CACHE_PROMISE_REMOVED, promiseRemovedHandler);
    		  _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.events.addEventListener(_externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.EVENTS.IMAGE_CACHE_PROMISE_REMOVED, promiseRemovedHandler);
    		}

    		function disable(element) {
    		  clearTimeout(resetPrefetchTimeout);
    		  element.removeEventListener(_externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.EVENTS.NEW_IMAGE, onImageUpdated);
    		  var promiseRemovedHandler = getPromiseRemovedHandler(element);
    		  _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.events.removeEventListener(_externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.EVENTS.IMAGE_CACHE_PROMISE_REMOVED, promiseRemovedHandler);
    		  var stackPrefetchData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_3__["getToolState"])(element, toolType); // If there is actually something to disable, disable it

    		  if (stackPrefetchData && stackPrefetchData.data.length) {
    		    stackPrefetchData.data[0].enabled = false; // Clear current prefetch requests from the requestPool

    		    _requestPool_requestPoolManager_js__WEBPACK_IMPORTED_MODULE_1__["default"].clearRequestStack(requestType);
    		  }
    		}

    		function getConfiguration() {
    		  return configuration;
    		}

    		function setConfiguration(config) {
    		  configuration = config;

    		  if (config.maxSimultaneousRequests) {
    		    Object(_util_getMaxSimultaneousRequests_js__WEBPACK_IMPORTED_MODULE_4__["setMaxSimultaneousRequests"])(config.maxSimultaneousRequests);
    		  }
    		} // Module/private exports


    		var stackPrefetch = {
    		  enable: enable,
    		  disable: disable,
    		  getConfiguration: getConfiguration,
    		  setConfiguration: setConfiguration
    		};
    		/* harmony default export */ __webpack_exports__["default"] = (stackPrefetch);

    		/***/ }),

    		/***/ "./stackTools/stackRenderers.js":
    		/*!**************************************!*\
    		  !*** ./stackTools/stackRenderers.js ***!
    		  \**************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _fusionRenderer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fusionRenderer.js */ "./stackTools/fusionRenderer.js");

    		var stackRenderers = {};
    		stackRenderers.FusionRenderer = _fusionRenderer_js__WEBPACK_IMPORTED_MODULE_0__["default"];
    		/* harmony default export */ __webpack_exports__["default"] = (stackRenderers);

    		/***/ }),

    		/***/ "./stateManagement/frameOfReferenceStateManager.js":
    		/*!*********************************************************!*\
    		  !*** ./stateManagement/frameOfReferenceStateManager.js ***!
    		  \*********************************************************/
    		/*! exports provided: newFrameOfReferenceSpecificToolStateManager, globalFrameOfReferenceSpecificToolStateManager */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newFrameOfReferenceSpecificToolStateManager", function() { return newFrameOfReferenceSpecificToolStateManager; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "globalFrameOfReferenceSpecificToolStateManager", function() { return globalFrameOfReferenceSpecificToolStateManager; });
    		/**
    		 * Implements a frame-of-reference specific tool state management strategy.  This means that
    		 * Measurement data are tied to a specific frame of reference UID and only visible to objects using
    		 * That frame-of-reference UID.
    		 * @public
    		 * @constructor newFrameOfReferenceSpecificToolStateManager
    		 * @memberof StateManagement
    		 *
    		 * @returns {Object} A frameOfReferenceSpecificToolStateManager instance.
    		 */
    		function newFrameOfReferenceSpecificToolStateManager() {
    		  var toolState = {}; // Here we add tool state, this is done by tools as well
    		  // As modules that restore saved state

    		  function addFrameOfReferenceSpecificToolState(frameOfReference, toolType, data) {
    		    // If we don't have any tool state for this frameOfReference, add an empty object
    		    if (toolState.hasOwnProperty(frameOfReference) === false) {
    		      toolState[frameOfReference] = {};
    		    }

    		    var frameOfReferenceToolState = toolState[frameOfReference]; // If we don't have tool state for this type of tool, add an empty object

    		    if (frameOfReferenceToolState.hasOwnProperty(toolType) === false) {
    		      frameOfReferenceToolState[toolType] = {
    		        data: []
    		      };
    		    }

    		    var toolData = frameOfReferenceToolState[toolType]; // Finally, add this new tool to the state

    		    toolData.data.push(data);
    		  } // Here you can get state - used by tools as well as modules
    		  // That save state persistently


    		  function getFrameOfReferenceSpecificToolState(frameOfReference, toolType) {
    		    // If we don't have any tool state for this frame of reference, return undefined
    		    if (toolState.hasOwnProperty(frameOfReference) === false) {
    		      return;
    		    }

    		    var frameOfReferenceToolState = toolState[frameOfReference]; // If we don't have tool state for this type of tool, return undefined

    		    if (frameOfReferenceToolState.hasOwnProperty(toolType) === false) {
    		      return;
    		    }

    		    var toolData = frameOfReferenceToolState[toolType];
    		    return toolData;
    		  }

    		  function removeFrameOfReferenceSpecificToolState(frameOfReference, toolType, data) {
    		    // If we don't have any tool state for this frame of reference, return undefined
    		    if (toolState.hasOwnProperty(frameOfReference) === false) {
    		      return;
    		    }

    		    var frameOfReferenceToolState = toolState[frameOfReference]; // If we don't have tool state for this type of tool, return undefined

    		    if (frameOfReferenceToolState.hasOwnProperty(toolType) === false) {
    		      return;
    		    }

    		    var toolData = frameOfReferenceToolState[toolType]; // Find this tool data

    		    var indexOfData = -1;

    		    for (var i = 0; i < toolData.data.length; i++) {
    		      if (toolData.data[i] === data) {
    		        indexOfData = i;
    		      }
    		    }

    		    if (indexOfData !== -1) {
    		      toolData.data.splice(indexOfData, 1);
    		    }
    		  }

    		  return {
    		    get: getFrameOfReferenceSpecificToolState,
    		    add: addFrameOfReferenceSpecificToolState,
    		    remove: removeFrameOfReferenceSpecificToolState
    		  };
    		} // A global frameOfReferenceSpecificToolStateManager - the most common case is to share 3d information
    		// Between stacks of images


    		var globalFrameOfReferenceSpecificToolStateManager = newFrameOfReferenceSpecificToolStateManager();


    		/***/ }),

    		/***/ "./stateManagement/imageIdSpecificStateManager.js":
    		/*!********************************************************!*\
    		  !*** ./stateManagement/imageIdSpecificStateManager.js ***!
    		  \********************************************************/
    		/*! exports provided: newImageIdSpecificToolStateManager, globalImageIdSpecificToolStateManager */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newImageIdSpecificToolStateManager", function() { return newImageIdSpecificToolStateManager; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "globalImageIdSpecificToolStateManager", function() { return globalImageIdSpecificToolStateManager; });
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");

    		/**
    		 * Implements an imageId specific tool state management strategy.  This means that
    		 * Measurements data is tied to a specific imageId and only visible for enabled elements
    		 * That are displaying that imageId.
    		 * @public
    		 * @constructor newImageIdSpecificToolStateManager
    		 * @memberof StateManagement
    		 *
    		 * @returns {Object} An imageIdSpecificToolStateManager instance.
    		 */

    		function newImageIdSpecificToolStateManager() {
    		  var toolState = {}; // Here we add tool state, this is done by tools as well
    		  // As modules that restore saved state

    		  function saveImageIdToolState(imageId) {
    		    return toolState[imageId];
    		  }

    		  function restoreImageIdToolState(imageId, imageIdToolState) {
    		    toolState[imageId] = imageIdToolState;
    		  }

    		  function saveToolState() {
    		    return toolState;
    		  }

    		  function restoreToolState(savedToolState) {
    		    toolState = savedToolState;
    		  } // Here we add tool state, this is done by tools as well
    		  // As modules that restore saved state


    		  function addImageIdSpecificToolState(element, toolType, data) {
    		    var enabledElement = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.getEnabledElement(element); // If we don't have an image for this element exit early

    		    if (!enabledElement.image) {
    		      return;
    		    } // If we don't have any tool state for this imageId, add an empty object


    		    if (toolState.hasOwnProperty(enabledElement.image.imageId) === false) {
    		      toolState[enabledElement.image.imageId] = {};
    		    }

    		    var imageIdToolState = toolState[enabledElement.image.imageId]; // If we don't have tool state for this type of tool, add an empty object

    		    if (imageIdToolState.hasOwnProperty(toolType) === false) {
    		      imageIdToolState[toolType] = {
    		        data: []
    		      };
    		    }

    		    var toolData = imageIdToolState[toolType]; // Finally, add this new tool to the state

    		    toolData.data.push(data);
    		  } // Here you can get state - used by tools as well as modules
    		  // That save state persistently


    		  function getImageIdSpecificToolState(element, toolType) {
    		    var enabledElement = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.getEnabledElement(element); // If we don't have any tool state for this imageId, return undefined

    		    if (!enabledElement.image || toolState.hasOwnProperty(enabledElement.image.imageId) === false) {
    		      return;
    		    }

    		    var imageIdToolState = toolState[enabledElement.image.imageId]; // If we don't have tool state for this type of tool, return undefined

    		    if (imageIdToolState.hasOwnProperty(toolType) === false) {
    		      return;
    		    }

    		    var toolData = imageIdToolState[toolType];
    		    return toolData;
    		  } // Clears all tool data from this toolStateManager.


    		  function clearImageIdSpecificToolStateManager(element) {
    		    var enabledElement = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.getEnabledElement(element);

    		    if (!enabledElement.image || toolState.hasOwnProperty(enabledElement.image.imageId) === false) {
    		      return;
    		    }

    		    delete toolState[enabledElement.image.imageId];
    		  }

    		  return {
    		    get: getImageIdSpecificToolState,
    		    add: addImageIdSpecificToolState,
    		    clear: clearImageIdSpecificToolStateManager,
    		    saveImageIdToolState: saveImageIdToolState,
    		    restoreImageIdToolState: restoreImageIdToolState,
    		    saveToolState: saveToolState,
    		    restoreToolState: restoreToolState,
    		    toolState: toolState
    		  };
    		} // A global imageIdSpecificToolStateManager - the most common case is to share state between all
    		// Visible enabled images


    		var globalImageIdSpecificToolStateManager = newImageIdSpecificToolStateManager();


    		/***/ }),

    		/***/ "./stateManagement/loadHandlerManager.js":
    		/*!***********************************************!*\
    		  !*** ./stateManagement/loadHandlerManager.js ***!
    		  \***********************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");

    		var _DEFAULT_LOAD_HANDLER = 'DEFAULT';
    		var defaultStartLoadHandler = {};
    		var defaultEndLoadHandler = {};
    		var defaultErrorLoadingHandler = {};

    		function _getUUIDFromElement(element) {
    		  if (!element) {
    		    return _DEFAULT_LOAD_HANDLER;
    		  }

    		  var uuid = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.getEnabledElement(element).uuid;

    		  if (!uuid) {
    		    throw new Error('Something went wrong when getting uuid from element');
    		  }

    		  return uuid;
    		}

    		function setStartLoadHandler(handler) {
    		  var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;

    		  if (!handler) {
    		    throw new Error('The Handler function must be defined');
    		  }

    		  var uuid = _getUUIDFromElement(element);

    		  defaultStartLoadHandler[uuid] = handler;
    		}

    		function getStartLoadHandler(element) {
    		  var uuid = _getUUIDFromElement(element);

    		  return defaultStartLoadHandler[uuid] || defaultStartLoadHandler[_DEFAULT_LOAD_HANDLER];
    		}

    		function setEndLoadHandler(handler) {
    		  var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;

    		  if (!handler) {
    		    throw new Error('The Handler function must be defined');
    		  }

    		  var uuid = _getUUIDFromElement(element);

    		  defaultEndLoadHandler[uuid] = handler;
    		}

    		function getEndLoadHandler(element) {
    		  var uuid = _getUUIDFromElement(element);

    		  return defaultEndLoadHandler[uuid] || defaultEndLoadHandler[_DEFAULT_LOAD_HANDLER];
    		}

    		function setErrorLoadingHandler(handler) {
    		  var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;

    		  if (!handler) {
    		    throw new Error('The Handler function must be defined');
    		  }

    		  var uuid = _getUUIDFromElement(element);

    		  defaultErrorLoadingHandler[uuid] = handler;
    		}

    		function getErrorLoadingHandler(element) {
    		  var uuid = _getUUIDFromElement(element);

    		  return defaultErrorLoadingHandler[uuid] || defaultErrorLoadingHandler[_DEFAULT_LOAD_HANDLER];
    		}

    		function removeHandlers(element) {
    		  var uuid = _getUUIDFromElement(element);

    		  delete defaultStartLoadHandler[uuid];
    		  delete defaultEndLoadHandler[uuid];
    		  delete defaultErrorLoadingHandler[uuid];
    		}

    		var loadHandlerManager = {
    		  setStartLoadHandler: setStartLoadHandler,
    		  getStartLoadHandler: getStartLoadHandler,
    		  setEndLoadHandler: setEndLoadHandler,
    		  getEndLoadHandler: getEndLoadHandler,
    		  setErrorLoadingHandler: setErrorLoadingHandler,
    		  getErrorLoadingHandler: getErrorLoadingHandler,
    		  removeHandlers: removeHandlers
    		};
    		/* harmony default export */ __webpack_exports__["default"] = (loadHandlerManager);

    		/***/ }),

    		/***/ "./stateManagement/stackSpecificStateManager.js":
    		/*!******************************************************!*\
    		  !*** ./stateManagement/stackSpecificStateManager.js ***!
    		  \******************************************************/
    		/*! exports provided: stackSpecificStateManager, newStackSpecificToolStateManager, addStackStateManager */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stackSpecificStateManager", function() { return stackSpecificStateManager; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newStackSpecificToolStateManager", function() { return newStackSpecificToolStateManager; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addStackStateManager", function() { return addStackStateManager; });
    		/* harmony import */ var _imageIdSpecificStateManager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./imageIdSpecificStateManager.js */ "./stateManagement/imageIdSpecificStateManager.js");
    		/* harmony import */ var _toolState_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./toolState.js */ "./stateManagement/toolState.js");


    		/**
    		 * Implements an Stack specific tool state management strategy. This means
    		 * That tool data is shared between all imageIds in a given stack.
    		 * @public
    		 * @constructor newStackSpecificToolStateManager
    		 * @memberof StateManagement
    		 *
    		 * @param  {string[]} toolTypes       The tool types to apply to the stack.
    		 * @param  {Object} oldStateManager The imageIdSpecificStateManager.
    		 * @returns {Object} A stackSpecificToolStateManager instance.
    		 */

    		function newStackSpecificToolStateManager(toolTypes, oldStateManager) {
    		  var toolState = {};

    		  function saveToolState() {
    		    return toolState;
    		  }

    		  function restoreToolState(stackToolState) {
    		    toolState = stackToolState;
    		  } // Here we add tool state, this is done by tools as well
    		  // As modules that restore saved state


    		  function addStackSpecificToolState(element, toolType, data) {
    		    // If this is a tool type to apply to the stack, do so
    		    if (toolTypes.indexOf(toolType) >= 0) {
    		      // If we don't have tool state for this type of tool, add an empty object
    		      if (toolState.hasOwnProperty(toolType) === false) {
    		        toolState[toolType] = {
    		          data: []
    		        };
    		      }

    		      var toolData = toolState[toolType]; // Finally, add this new tool to the state

    		      toolData.data.push(data);
    		    } else {
    		      // Call the imageId specific tool state manager
    		      return oldStateManager.add(element, toolType, data);
    		    }
    		  } // Here you can get state - used by tools as well as modules
    		  // That save state persistently


    		  function getStackSpecificToolState(element, toolType) {
    		    // If this is a tool type to apply to the stack, do so
    		    if (toolTypes.indexOf(toolType) >= 0) {
    		      // If we don't have tool state for this type of tool, add an empty object
    		      if (toolState.hasOwnProperty(toolType) === false) {
    		        toolState[toolType] = {
    		          data: []
    		        };
    		      }

    		      return toolState[toolType];
    		    } // Call the imageId specific tool state manager


    		    return oldStateManager.get(element, toolType);
    		  }

    		  var stackSpecificToolStateManager = {
    		    get: getStackSpecificToolState,
    		    add: addStackSpecificToolState,
    		    saveToolState: saveToolState,
    		    restoreToolState: restoreToolState,
    		    toolState: toolState
    		  };
    		  return stackSpecificToolStateManager;
    		}

    		function addStackStateManager(element, otherTools) {
    		  var oldStateManager = Object(_toolState_js__WEBPACK_IMPORTED_MODULE_1__["getElementToolStateManager"])(element);

    		  if (!oldStateManager) {
    		    oldStateManager = _imageIdSpecificStateManager_js__WEBPACK_IMPORTED_MODULE_0__["globalImageIdSpecificToolStateManager"];
    		  }

    		  var stackTools = ['stack', 'stackPrefetch', 'playClip', 'volume', 'slab', 'referenceLines', 'crosshairs', 'stackRenderer'];

    		  if (otherTools) {
    		    stackTools = stackTools.concat(otherTools);
    		  }

    		  var stackSpecificStateManager = newStackSpecificToolStateManager(stackTools, oldStateManager);
    		  Object(_toolState_js__WEBPACK_IMPORTED_MODULE_1__["setElementToolStateManager"])(element, stackSpecificStateManager);
    		}

    		var stackSpecificStateManager = {
    		  newStackSpecificToolStateManager: newStackSpecificToolStateManager,
    		  addStackStateManager: addStackStateManager
    		};


    		/***/ }),

    		/***/ "./stateManagement/textStyle.js":
    		/*!**************************************!*\
    		  !*** ./stateManagement/textStyle.js ***!
    		  \**************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		var defaultFontSize = 15,
    		    defaultFont = "".concat(defaultFontSize, "px Arial"),
    		    defaultBackgroundColor = 'transparent';

    		function setFont(font) {
    		  defaultFont = font;
    		}

    		function getFont() {
    		  return defaultFont;
    		}

    		function setFontSize(fontSize) {
    		  defaultFontSize = fontSize;
    		}

    		function getFontSize() {
    		  return defaultFontSize;
    		}

    		function setBackgroundColor(backgroundColor) {
    		  defaultBackgroundColor = backgroundColor;
    		}

    		function getBackgroundColor() {
    		  return defaultBackgroundColor;
    		}

    		var textStyle = {
    		  setFont: setFont,
    		  getFont: getFont,
    		  setFontSize: setFontSize,
    		  getFontSize: getFontSize,
    		  setBackgroundColor: setBackgroundColor,
    		  getBackgroundColor: getBackgroundColor
    		};
    		/* harmony default export */ __webpack_exports__["default"] = (textStyle);

    		/***/ }),

    		/***/ "./stateManagement/toolColors.js":
    		/*!***************************************!*\
    		  !*** ./stateManagement/toolColors.js ***!
    		  \***************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		var defaultColor = 'white',
    		    activeColor = 'greenyellow',
    		    fillColor = 'transparent';

    		function setFillColor(color) {
    		  fillColor = color;
    		}

    		function getFillColor() {
    		  return fillColor;
    		}

    		function setToolColor(color) {
    		  defaultColor = color;
    		}

    		function getToolColor() {
    		  return defaultColor;
    		}

    		function setActiveColor(color) {
    		  activeColor = color;
    		}

    		function getActiveColor() {
    		  return activeColor;
    		}

    		function getColorIfActive(data) {
    		  if (data.color) {
    		    return data.color;
    		  }

    		  return data.active ? activeColor : defaultColor;
    		}

    		var toolColors = {
    		  setFillColor: setFillColor,
    		  getFillColor: getFillColor,
    		  setToolColor: setToolColor,
    		  getToolColor: getToolColor,
    		  setActiveColor: setActiveColor,
    		  getActiveColor: getActiveColor,
    		  getColorIfActive: getColorIfActive
    		};
    		/* harmony default export */ __webpack_exports__["default"] = (toolColors);

    		/***/ }),

    		/***/ "./stateManagement/toolCoordinates.js":
    		/*!********************************************!*\
    		  !*** ./stateManagement/toolCoordinates.js ***!
    		  \********************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		var coordsData;

    		function setCoords(eventData) {
    		  coordsData = eventData.currentPoints.canvas;
    		}

    		function getCoords() {
    		  return coordsData;
    		}

    		var toolCoordinates = {
    		  setCoords: setCoords,
    		  getCoords: getCoords
    		};
    		/* harmony default export */ __webpack_exports__["default"] = (toolCoordinates);

    		/***/ }),

    		/***/ "./stateManagement/toolState.js":
    		/*!**************************************!*\
    		  !*** ./stateManagement/toolState.js ***!
    		  \**************************************/
    		/*! exports provided: addToolState, getToolState, removeToolState, clearToolState, setElementToolStateManager, getElementToolStateManager */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addToolState", function() { return addToolState; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getToolState", function() { return getToolState; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeToolState", function() { return removeToolState; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clearToolState", function() { return clearToolState; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setElementToolStateManager", function() { return setElementToolStateManager; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getElementToolStateManager", function() { return getElementToolStateManager; });
    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../events.js */ "./events.js");
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _imageIdSpecificStateManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./imageIdSpecificStateManager.js */ "./stateManagement/imageIdSpecificStateManager.js");
    		/* harmony import */ var _util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/triggerEvent.js */ "./util/triggerEvent.js");




    		/**
    		 * Returns the toolstate for a specific element.
    		 * @public
    		 * @function getElementToolStateManager
    		 *
    		 * @param  {HTMLElement} element The element.
    		 * @returns {Object} The toolState.
    		 */

    		function getElementToolStateManager(element) {
    		  var enabledElement = _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.getEnabledElement(element); // If the enabledElement has no toolStateManager, create a default one for it
    		  // NOTE: This makes state management element specific

    		  if (enabledElement.toolStateManager === undefined) {
    		    enabledElement.toolStateManager = _imageIdSpecificStateManager_js__WEBPACK_IMPORTED_MODULE_2__["globalImageIdSpecificToolStateManager"];
    		  }

    		  return enabledElement.toolStateManager;
    		}
    		/**
    		 * Adds tool state to the toolStateManager, this is done by tools as well
    		 * as modules that restore saved state.
    		 * @public
    		 * @method addToolState
    		 *
    		 * @param  {HTMLElement} element  The element.
    		 * @param  {string} toolType      The toolType of the state.
    		 * @param  {Object} measurementData The data to store in the state.
    		 * @returns {undefined}
    		 */


    		function addToolState(element, toolType, measurementData) {
    		  var toolStateManager = getElementToolStateManager(element);
    		  toolStateManager.add(element, toolType, measurementData);
    		  var eventType = _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MEASUREMENT_ADDED;
    		  var eventData = {
    		    toolType: toolType,
    		    element: element,
    		    measurementData: measurementData
    		  };
    		  Object(_util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_3__["default"])(element, eventType, eventData);
    		}
    		/**
    		 * Returns tool specific state of an element. Used by tools as well as modules
    		 * that save state persistently
    		 * @export
    		 * @public
    		 * @method
    		 * @name getToolState
    		 *
    		 * @param  {HTMLElement} element The element.
    		 * @param  {string} toolType The toolType of the state.
    		 * @returns {Object}          The element's state for the given toolType.
    		 */


    		function getToolState(element, toolType) {
    		  var toolStateManager = getElementToolStateManager(element);
    		  return toolStateManager.get(element, toolType);
    		}
    		/**
    		 * Removes specific tool state from the toolStateManager.
    		 * @public
    		 * @method removeToolState
    		 *
    		 * @param  {HTMLElement} element  The element.
    		 * @param  {string} toolType      The toolType of the state.
    		 * @param  {Object} data          The data to remove from the toolStateManager.
    		 * @returns {undefined}
    		 */


    		function removeToolState(element, toolType, data) {
    		  var toolStateManager = getElementToolStateManager(element);
    		  var toolData = toolStateManager.get(element, toolType); // Find this tool data

    		  var indexOfData = -1;

    		  for (var i = 0; i < toolData.data.length; i++) {
    		    if (toolData.data[i] === data) {
    		      indexOfData = i;
    		    }
    		  }

    		  if (indexOfData !== -1) {
    		    toolData.data.splice(indexOfData, 1);
    		    var eventType = _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].MEASUREMENT_REMOVED;
    		    var eventData = {
    		      toolType: toolType,
    		      element: element,
    		      measurementData: data
    		    };
    		    Object(_util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_3__["default"])(element, eventType, eventData);
    		  }
    		}
    		/**
    		 * Removes all toolState from the toolStateManager corresponding to
    		 * the toolType and element.
    		 * @public
    		 * @method clearToolState
    		 *
    		 * @param  {HTMLElement} element  The element.
    		 * @param  {string} toolType      The toolType of the state.
    		 * @returns {undefined}
    		 */


    		function clearToolState(element, toolType) {
    		  var toolStateManager = getElementToolStateManager(element);
    		  var toolData = toolStateManager.get(element, toolType); // If any toolData actually exists, clear it

    		  if (toolData !== undefined) {
    		    toolData.data = [];
    		  }
    		}
    		/**
    		 * Sets the tool state manager for an element
    		 * @public
    		 * @method setElementToolStateManager
    		 *
    		 * @param  {HTMLElement} element The element.
    		 * @param {Object} toolStateManager The toolStateManager.
    		 * @returns {undefined}
    		 */


    		function setElementToolStateManager(element, toolStateManager) {
    		  var enabledElement = _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.getEnabledElement(element);
    		  enabledElement.toolStateManager = toolStateManager;
    		}



    		/***/ }),

    		/***/ "./stateManagement/toolStyle.js":
    		/*!**************************************!*\
    		  !*** ./stateManagement/toolStyle.js ***!
    		  \**************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		var defaultWidth = 1,
    		    activeWidth = 2;

    		function setToolWidth(width) {
    		  defaultWidth = width;
    		}

    		function getToolWidth() {
    		  return defaultWidth;
    		}

    		function setActiveWidth(width) {
    		  activeWidth = width;
    		}

    		function getActiveWidth() {
    		  return activeWidth;
    		}

    		var toolStyle = {
    		  setToolWidth: setToolWidth,
    		  getToolWidth: getToolWidth,
    		  setActiveWidth: setActiveWidth,
    		  getActiveWidth: getActiveWidth
    		};
    		/* harmony default export */ __webpack_exports__["default"] = (toolStyle);

    		/***/ }),

    		/***/ "./store/addTool.js":
    		/*!**************************!*\
    		  !*** ./store/addTool.js ***!
    		  \**************************/
    		/*! exports provided: addTool, addToolForElement */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addTool", function() { return addTool; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addToolForElement", function() { return addToolForElement; });
    		/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ "./store/index.js");
    		/* harmony import */ var _getToolForElement_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getToolForElement.js */ "./store/getToolForElement.js");
    		/* harmony import */ var _util_logger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/logger.js */ "./util/logger.js");



    		var logger = Object(_util_logger_js__WEBPACK_IMPORTED_MODULE_2__["getLogger"])('addTool');
    		/**
    		 * Adds a tool to an enabled element.
    		 *
    		 * @public
    		 * @function addToolForElement
    		 * @memberof CornerstoneTools
    		 *
    		 * @param {HTMLElement} element The element to add the tool to.
    		 * @param {BaseTool} ApiTool The tool to add to the element.
    		 * @param {Object} [props] Override the default tool props
    		 * @returns {undefined}
    		 */

    		var addToolForElement = function addToolForElement(element, ApiTool, props) {
    		  // Instantiating the tool here makes it harder to accidentally add
    		  // The same tool (by reference) for multiple elements (which would reassign the tool
    		  // To a new element).
    		  var tool = new ApiTool(props);
    		  var toolAlreadyAddedToElement = Object(_getToolForElement_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element, tool.name);

    		  if (toolAlreadyAddedToElement) {
    		    logger.warn('%s has already been added to the target element', tool.name);
    		    return;
    		  }

    		  tool.element = element;
    		  _index_js__WEBPACK_IMPORTED_MODULE_0__["default"].state.tools.push(tool);
    		};
    		/**
    		 * Adds a tool to all enabled element.
    		 *
    		 * @public
    		 * @function addTool
    		 * @memberof CornerstoneTools
    		 *
    		 * @param {BaseTool} ApiTool The tool to add to each element.
    		 * @param {Object} [props] Override the default tool configuration
    		 * @returns {undefined}
    		 */


    		var addTool = function addTool(ApiTool, props) {
    		  _addToolGlobally(ApiTool, props);

    		  _index_js__WEBPACK_IMPORTED_MODULE_0__["default"].state.enabledElements.forEach(function (element) {
    		    addToolForElement(element, ApiTool, props);
    		  });
    		};
    		/**
    		 * Adds tool with matching name from globally registered tools.
    		 * Requires `globalToolSyncEnabled` to be set to true
    		 *
    		 * @private
    		 * @function addToolGlobally
    		 *
    		 * @param {BaseTool} ApiTool
    		 * @param {Object} [props] Override the default tool configuration
    		 * @returns {undefined}
    		 */


    		var _addToolGlobally = function _addToolGlobally(ApiTool, props) {
    		  if (!_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].modules.globalConfiguration.state.globalToolSyncEnabled) {
    		    return;
    		  }

    		  var tool = new ApiTool(props);
    		  var toolAlreadyAddedGlobally = _index_js__WEBPACK_IMPORTED_MODULE_0__["default"].state.globalTools[tool.name] !== undefined;

    		  if (toolAlreadyAddedGlobally) {
    		    logger.warn('%s has already been added globally', tool.name);
    		    return;
    		  }

    		  _index_js__WEBPACK_IMPORTED_MODULE_0__["default"].state.globalTools[tool.name] = {
    		    tool: ApiTool,
    		    props: props,
    		    activeBindings: []
    		  };
    		};



    		/***/ }),

    		/***/ "./store/filterToolsUsableWithMultiPartTools.js":
    		/*!******************************************************!*\
    		  !*** ./store/filterToolsUsableWithMultiPartTools.js ***!
    		  \******************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _tools_base_BaseAnnotationTool_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tools/base/BaseAnnotationTool.js */ "./tools/base/BaseAnnotationTool.js");
    		/* harmony import */ var _tools_base_BaseBrushTool_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tools/base/BaseBrushTool.js */ "./tools/base/BaseBrushTool.js");


    		/**
    		 * Filters an array of tools, returning only tools which are active or passive.
    		 * @export
    		 * @public
    		 * @method
    		 * @name filterToolsUseableWithMultiPartTools
    		 *
    		 * @param  {Object[]} tools      The input tool array.
    		 * @returns {Object[]}            The filtered array.
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (tools) {
    		  return tools.filter(function (tool) {
    		    return !tool.isMultiPartTool && !(tool instanceof _tools_base_BaseAnnotationTool_js__WEBPACK_IMPORTED_MODULE_0__["default"]) && !(tool instanceof _tools_base_BaseBrushTool_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
    		  });
    		});

    		/***/ }),

    		/***/ "./store/getActiveToolsForElement.js":
    		/*!*******************************************!*\
    		  !*** ./store/getActiveToolsForElement.js ***!
    		  \*******************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/**
    		 * Filters an array of tools, returning only tools which are active.
    		 * @export
    		 * @public
    		 * @method
    		 * @name getActiveToolsForElement
    		 *
    		 * @param  {HTMLElement} element The element.
    		 * @param  {Object[]} tools      The input tool array.
    		 * @param  {string} handlerType  The input type being queried.
    		 * @returns {Object[]}            The filtered array.
    		 */
    		/* harmony default export */ __webpack_exports__["default"] = (function (element, tools, handlerType) {
    		  return tools.filter(function (tool) {
    		    return tool.element === element && tool.mode === 'active' && (handlerType === undefined || tool.options["is".concat(handlerType, "Active")]);
    		  });
    		});

    		/***/ }),

    		/***/ "./store/getInteractiveToolsForElement.js":
    		/*!************************************************!*\
    		  !*** ./store/getInteractiveToolsForElement.js ***!
    		  \************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/**
    		 * Filters an array of tools, returning only tools which are active or passive.
    		 * @export
    		 * @public
    		 * @method
    		 * @name getInteractiveToolsForElement
    		 *
    		 * @param  {HTMLElement} element The element.
    		 * @param  {Object[]} tools      The input tool array.
    		 * @returns {Object[]}            The filtered array.
    		 */
    		/* harmony default export */ __webpack_exports__["default"] = (function (element, tools) {
    		  return tools.filter(function (tool) {
    		    return tool.element === element && (tool.mode === 'active' || tool.mode === 'passive');
    		  });
    		});

    		/***/ }),

    		/***/ "./store/getToolForElement.js":
    		/*!************************************!*\
    		  !*** ./store/getToolForElement.js ***!
    		  \************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ "./store/index.js");

    		/**
    		 * Returns the tool instance attached to the element.
    		 * @export
    		 * @public
    		 * @method
    		 * @name getToolForElement
    		 *
    		 * @param  {HTMLElement} element The element.
    		 * @param  {string}      name The tool's name.
    		 * @returns {Object}      The tool instance.
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (element, name) {
    		  return _index_js__WEBPACK_IMPORTED_MODULE_0__["state"].tools.find(function (tool) {
    		    return tool.element === element && tool.name === name;
    		  });
    		});

    		/***/ }),

    		/***/ "./store/getToolsWithDataForElement.js":
    		/*!*********************************************!*\
    		  !*** ./store/getToolsWithDataForElement.js ***!
    		  \*********************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../stateManagement/toolState.js */ "./stateManagement/toolState.js");

    		/**
    		 * Filters an array of tools, returning only tools which have annotation data.
    		 * @export
    		 * @public
    		 * @method
    		 * @name getToolsWithDataForElement
    		 *
    		 * @param  {HTMLElement} element The element.
    		 * @param  {Object[]} tools      The input tool array.
    		 * @returns {Object[]}            The filtered array.
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (element, tools) {
    		  return tools.filter(function (tool) {
    		    var toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_0__["getToolState"])(element, tool.name);
    		    return toolState && toolState.data.length > 0;
    		  });
    		});

    		/***/ }),

    		/***/ "./store/getToolsWithMoveableHandles.js":
    		/*!**********************************************!*\
    		  !*** ./store/getToolsWithMoveableHandles.js ***!
    		  \**********************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ "./store/index.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _manipulators_getHandleNearImagePoint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../manipulators/getHandleNearImagePoint.js */ "./manipulators/getHandleNearImagePoint.js");



    		/**
    		 * Filters an array of tools, returning only tools with moveable handles at the
    		 * mouse location.
    		 *
    		 * @public
    		 * @function getToolsWithMoveableHandles
    		 *
    		 * @param  {HTMLElement} element The element
    		 * @param  {Object[]}    tools   The input tool array.
    		 * @param  {Object}      coords  The coordinates of the mouse position.
    		 * @param  {string}      [interactionType=mouse]
    		 * @returns {Object[]}            The filtered array.
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (element, tools, coords) {
    		  var interactionType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'mouse';
    		  var proximity = interactionType === 'mouse' ? _index_js__WEBPACK_IMPORTED_MODULE_0__["state"].clickProximity : _index_js__WEBPACK_IMPORTED_MODULE_0__["state"].touchProximity;
    		  return tools.filter(function (tool) {
    		    var toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_1__["getToolState"])(element, tool.name);

    		    for (var i = 0; i < toolState.data.length; i++) {
    		      if (Object(_manipulators_getHandleNearImagePoint_js__WEBPACK_IMPORTED_MODULE_2__["default"])(element, toolState.data[i].handles, coords, proximity) !== undefined) {
    		        return true;
    		      }
    		    }

    		    return false;
    		  });
    		});

    		/***/ }),

    		/***/ "./store/index.js":
    		/*!************************!*\
    		  !*** ./store/index.js ***!
    		  \************************/
    		/*! exports provided: state, getters, setters, modules, default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "state", function() { return state; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getters", function() { return getters; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setters", function() { return setters; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modules", function() { return modules; });
    		/* harmony import */ var _modules_brushModule_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/brushModule.js */ "./store/modules/brushModule.js");
    		/* harmony import */ var _modules_cursorModule_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/cursorModule.js */ "./store/modules/cursorModule.js");
    		/* harmony import */ var _modules_globalConfigurationModule_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/globalConfigurationModule.js */ "./store/modules/globalConfigurationModule.js");
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");
    		// Modules




    		var state = {
    		  // Global
    		  globalTools: {},
    		  globalToolChangeHistory: [],
    		  // Tracking
    		  enabledElements: [],
    		  tools: [],
    		  isToolLocked: false,
    		  activeMultiPartTool: null,
    		  mousePositionImage: {},
    		  // Settings
    		  clickProximity: 6,
    		  touchProximity: 10,
    		  handleRadius: 6,
    		  deleteIfHandleOutsideImage: true,
    		  preventHandleOutsideImage: false,
    		  // Cursor
    		  svgCursorUrl: null
    		};
    		var getters = {
    		  mouseTools: function mouseTools() {
    		    return state.tools.filter(function (tool) {
    		      return tool.supportedInteractionTypes.includes('Mouse');
    		    });
    		  },
    		  touchTools: function touchTools() {
    		    return state.tools.filter(function (tool) {
    		      return tool.supportedInteractionTypes.includes('Touch');
    		    });
    		  },
    		  enabledElementByUID: function enabledElementByUID(enabledElementUID) {
    		    return state.enabledElements.find(function (element) {
    		      return _externalModules_js__WEBPACK_IMPORTED_MODULE_3__["default"].cornerstone.getEnabledElement(element).uuid === enabledElementUID;
    		    });
    		  }
    		};
    		var setters = {};
    		var modules = {
    		  brush: _modules_brushModule_js__WEBPACK_IMPORTED_MODULE_0__["default"],
    		  cursor: _modules_cursorModule_js__WEBPACK_IMPORTED_MODULE_1__["default"],
    		  globalConfiguration: _modules_globalConfigurationModule_js__WEBPACK_IMPORTED_MODULE_2__["default"]
    		};
    		/* harmony default export */ __webpack_exports__["default"] = ({
    		  modules: modules,
    		  state: state,
    		  getters: getters
    		});

    		/***/ }),

    		/***/ "./store/internals/addEnabledElement.js":
    		/*!**********************************************!*\
    		  !*** ./store/internals/addEnabledElement.js ***!
    		  \**********************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _eventListeners_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../eventListeners/index.js */ "./eventListeners/index.js");
    		/* harmony import */ var _eventDispatchers_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../eventDispatchers/index.js */ "./eventDispatchers/index.js");
    		/* harmony import */ var _addTool_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../addTool.js */ "./store/addTool.js");
    		/* harmony import */ var _setToolMode_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../setToolMode.js */ "./store/setToolMode.js");
    		/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../index.js */ "./store/index.js");
    		/* harmony import */ var _util_logger_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../util/logger.js */ "./util/logger.js");






    		var logger = Object(_util_logger_js__WEBPACK_IMPORTED_MODULE_5__["getLogger"])('internals:addEnabledElement');
    		/**
    		 * Element Enabled event.
    		 *
    		 * @event Cornerstone#ElementEnabled
    		 * @type {Object}
    		 * @property {string} type
    		 * @property {Object} detail
    		 * @property {HTMLElement} detail.element - The element being enabled.
    		 */

    		/* TODO: It would be nice if this automatically added "all tools"
    		 * To the enabledElement that already exist on all other tools.
    		 * A half-measure might be a new method to "duplicate" the tool
    		 * Configuration for an existing enabled element
    		 * We may need to also save/store the original class/constructor per tool
    		 * To accomplish this
    		 */

    		/**
    		 * Adds an enabledElement to our store.
    		 * @export
    		 * @private
    		 * @method
    		 * @name addEnabledElement
    		 * @param {Cornerstone#ElementEnabled} elementEnabledEvt
    		 * @listens Cornerstone#ElementEnabled
    		 * @returns {void}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (elementEnabledEvt) {
    		  logger.log('EVENT:ELEMENT_ENABLED');
    		  var enabledElement = elementEnabledEvt.detail.element; // Dispatchers

    		  _eventDispatchers_index_js__WEBPACK_IMPORTED_MODULE_1__["imageRenderedEventDispatcher"].enable(enabledElement);
    		  _eventDispatchers_index_js__WEBPACK_IMPORTED_MODULE_1__["newImageEventDispatcher"].enable(enabledElement); // Mouse

    		  if (_index_js__WEBPACK_IMPORTED_MODULE_4__["default"].modules.globalConfiguration.state.mouseEnabled) {
    		    _eventListeners_index_js__WEBPACK_IMPORTED_MODULE_0__["mouseEventListeners"].enable(enabledElement);
    		    _eventListeners_index_js__WEBPACK_IMPORTED_MODULE_0__["wheelEventListener"].enable(enabledElement);
    		    _eventDispatchers_index_js__WEBPACK_IMPORTED_MODULE_1__["mouseToolEventDispatcher"].enable(enabledElement);
    		  } // Touch


    		  if (_index_js__WEBPACK_IMPORTED_MODULE_4__["default"].modules.globalConfiguration.state.touchEnabled) {
    		    _eventListeners_index_js__WEBPACK_IMPORTED_MODULE_0__["touchEventListeners"].enable(enabledElement);
    		    _eventDispatchers_index_js__WEBPACK_IMPORTED_MODULE_1__["touchToolEventDispatcher"].enable(enabledElement);
    		  } // State


    		  _addEnabledElement(enabledElement);
    		});
    		/**
    		 * Adds the enabled element to the store.
    		 * @private
    		 * @method
    		 * @param {HTMLElement} enabledElement
    		 * @returns {void}
    		 */

    		var _addEnabledElement = function _addEnabledElement(enabledElement) {
    		  _index_js__WEBPACK_IMPORTED_MODULE_4__["default"].state.enabledElements.push(enabledElement);

    		  if (_index_js__WEBPACK_IMPORTED_MODULE_4__["default"].modules) {
    		    _initModulesOnElement(enabledElement);
    		  }

    		  _addGlobalToolsToElement(enabledElement);

    		  _repeatGlobalToolHistory(enabledElement);
    		};
    		/**
    		 * Iterate over our store's modules. If the module has an `enabledElementCallback`
    		 * call it and pass it a reference to our enabled element.
    		 * @private
    		 * @method
    		 * @param  {Object} enabledElement
    		 * @returns {void}
    		 */


    		function _initModulesOnElement(enabledElement) {
    		  var modules = _index_js__WEBPACK_IMPORTED_MODULE_4__["default"].modules;
    		  Object.keys(modules).forEach(function (key) {
    		    if (typeof modules[key].enabledElementCallback === 'function') {
    		      modules[key].enabledElementCallback(enabledElement);
    		    }
    		  });
    		}
    		/**
    		 * Iterate over our stores globalTools adding each one to `enabledElement`
    		 * @private
    		 * @method
    		 * @param {HTMLElement} enabledElement
    		 * @returns {void}
    		 */


    		function _addGlobalToolsToElement(enabledElement) {
    		  if (!_index_js__WEBPACK_IMPORTED_MODULE_4__["default"].modules.globalConfiguration.state.globalToolSyncEnabled) {
    		    return;
    		  }

    		  Object.keys(_index_js__WEBPACK_IMPORTED_MODULE_4__["default"].state.globalTools).forEach(function (key) {
    		    var _store$state$globalTo = _index_js__WEBPACK_IMPORTED_MODULE_4__["default"].state.globalTools[key],
    		        tool = _store$state$globalTo.tool,
    		        props = _store$state$globalTo.props;
    		    Object(_addTool_js__WEBPACK_IMPORTED_MODULE_2__["addToolForElement"])(enabledElement, tool, props);
    		  });
    		}
    		/**
    		 * Iterate over the globalToolChangeHistory and apply each `historyEvent`
    		 * to the supplied `enabledElement`.
    		 * @private
    		 * @method
    		 * @param {HTMLElement} enabledElement
    		 * @returns {void}
    		 */


    		function _repeatGlobalToolHistory(enabledElement) {
    		  if (!_index_js__WEBPACK_IMPORTED_MODULE_4__["default"].modules.globalConfiguration.state.globalToolSyncEnabled) {
    		    return;
    		  }

    		  var setToolModeFns = {
    		    active: _setToolMode_js__WEBPACK_IMPORTED_MODULE_3__["setToolActiveForElement"],
    		    passive: _setToolMode_js__WEBPACK_IMPORTED_MODULE_3__["setToolPassiveForElement"],
    		    enabled: _setToolMode_js__WEBPACK_IMPORTED_MODULE_3__["setToolEnabledForElement"],
    		    disabled: _setToolMode_js__WEBPACK_IMPORTED_MODULE_3__["setToolDisabledForElement"]
    		  };
    		  _index_js__WEBPACK_IMPORTED_MODULE_4__["default"].state.globalToolChangeHistory.forEach(function (historyEvent) {
    		    var args = historyEvent.args.slice(0);
    		    args.unshift(enabledElement);
    		    setToolModeFns[historyEvent.mode].apply(null, args);
    		  });
    		}

    		/***/ }),

    		/***/ "./store/internals/removeEnabledElement.js":
    		/*!*************************************************!*\
    		  !*** ./store/internals/removeEnabledElement.js ***!
    		  \*************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _eventListeners_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../eventListeners/index.js */ "./eventListeners/index.js");
    		/* harmony import */ var _eventDispatchers_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../eventDispatchers/index.js */ "./eventDispatchers/index.js");
    		/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../index.js */ "./store/index.js");
    		/* harmony import */ var _util_logger_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../util/logger.js */ "./util/logger.js");
    		/* harmony import */ var _stateManagement_loadHandlerManager_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../stateManagement/loadHandlerManager.js */ "./stateManagement/loadHandlerManager.js");





    		var logger = Object(_util_logger_js__WEBPACK_IMPORTED_MODULE_3__["getLogger"])('internals:removeEnabledElement');
    		/**
    		 * Element Disabled event.
    		 *
    		 * @event Cornerstone#ElementDisabled
    		 * @type {Object}
    		 * @property {string} type
    		 * @property {Object} detail
    		 * @property {HTMLElement} detail.element - The element being disabled.
    		 */

    		/**
    		 * Removes an enabledElement from our store, and all associated tools that were added to it.
    		 * @export
    		 * @private
    		 * @method
    		 * @name removeEnabledElement
    		 * @param {Cornerstone#ElementDisabled} elementDisabledEvt
    		 * @listens Cornerstone#ElementDisabled
    		 * @returns {void}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (elementDisabledEvt) {
    		  logger.log('EVENT:ELEMENT_DISABLED');
    		  var enabledElement = elementDisabledEvt.detail.element; // Dispatchers

    		  _eventDispatchers_index_js__WEBPACK_IMPORTED_MODULE_1__["imageRenderedEventDispatcher"].disable(enabledElement);
    		  _eventDispatchers_index_js__WEBPACK_IMPORTED_MODULE_1__["newImageEventDispatcher"].disable(enabledElement); // Mouse

    		  if (_index_js__WEBPACK_IMPORTED_MODULE_2__["default"].modules.globalConfiguration.state.mouseEnabled) {
    		    _eventListeners_index_js__WEBPACK_IMPORTED_MODULE_0__["mouseEventListeners"].disable(enabledElement);
    		    _eventListeners_index_js__WEBPACK_IMPORTED_MODULE_0__["wheelEventListener"].disable(enabledElement);
    		    _eventDispatchers_index_js__WEBPACK_IMPORTED_MODULE_1__["mouseToolEventDispatcher"].disable(enabledElement);
    		  } // Touch


    		  if (_index_js__WEBPACK_IMPORTED_MODULE_2__["default"].modules.globalConfiguration.state.touchEnabled) {
    		    _eventListeners_index_js__WEBPACK_IMPORTED_MODULE_0__["touchEventListeners"].disable(enabledElement);
    		    _eventDispatchers_index_js__WEBPACK_IMPORTED_MODULE_1__["touchToolEventDispatcher"].disable(enabledElement);
    		  } // State


    		  _removeAllToolsForElement(enabledElement);

    		  _removeEnabledElement(enabledElement);

    		  _removeLoadHandlers(enabledElement);
    		});
    		/**
    		 * Remove all tools associated with enabled element.
    		 * @private
    		 * @method
    		 * @param {HTMLElement} enabledElement
    		 * @returns  {void}
    		 */

    		var _removeAllToolsForElement = function _removeAllToolsForElement(enabledElement) {
    		  // Note: We may want to `setToolDisabled` before removing from store
    		  // Or take other action to remove any lingering eventListeners/state
    		  _index_js__WEBPACK_IMPORTED_MODULE_2__["default"].state.tools = _index_js__WEBPACK_IMPORTED_MODULE_2__["default"].state.tools.filter(function (tool) {
    		    return tool.element !== enabledElement;
    		  });
    		};
    		/**
    		 * Remove the enabled element from the store if it exists.
    		 * @private
    		 * @method
    		 * @param {HTMLElement} enabledElement
    		 * @returns {void}
    		 */


    		var _removeEnabledElement = function _removeEnabledElement(enabledElement) {
    		  if (_index_js__WEBPACK_IMPORTED_MODULE_2__["default"].modules) {
    		    _cleanModulesOnElement(enabledElement);
    		  }

    		  var foundElementIndex = _index_js__WEBPACK_IMPORTED_MODULE_2__["default"].state.enabledElements.findIndex(function (element) {
    		    return element === enabledElement;
    		  });

    		  if (foundElementIndex > -1) {
    		    _index_js__WEBPACK_IMPORTED_MODULE_2__["default"].state.enabledElements.splice(foundElementIndex, 1);
    		  } else {
    		    logger.warn('unable to remove element');
    		  }
    		};
    		/**
    		 * Remove load handler for the element
    		 * @private
    		 * @method
    		 * @param {HTMLElement} element
    		 * @returns {void}
    		 */


    		var _removeLoadHandlers = function _removeLoadHandlers(element) {
    		  _stateManagement_loadHandlerManager_js__WEBPACK_IMPORTED_MODULE_4__["default"].removeHandlers(element);
    		};
    		/**
    		 * Iterate over our store's modules. If the module has a
    		 * `removeEnabledElementCallback` call it and clean up unneeded metadata.
    		 * @private
    		 * @method
    		 * @param  {Object} enabledElement
    		 * @returns {void}
    		 */


    		function _cleanModulesOnElement(enabledElement) {
    		  var modules = _index_js__WEBPACK_IMPORTED_MODULE_2__["default"].modules;
    		  Object.keys(modules).forEach(function (key) {
    		    if (typeof modules[key].removeEnabledElementCallback === 'function') {
    		      modules[key].removeEnabledElementCallback(enabledElement);
    		    }
    		  });
    		}

    		/***/ }),

    		/***/ "./store/isToolActive.js":
    		/*!*******************************!*\
    		  !*** ./store/isToolActive.js ***!
    		  \*******************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _getToolForElement_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getToolForElement.js */ "./store/getToolForElement.js");

    		/**
    		 * Queries if a tool is active on the specified element.
    		 * @export
    		 * @public
    		 * @method
    		 * @name isToolActive
    		 *
    		 * @param  {HTMLElement} element The element being queried.
    		 * @param  {string} name    The name of the tool.
    		 * @returns {boolean}         True if the tool is active.
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (element, name) {
    		  var tool = Object(_getToolForElement_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element, name);
    		  return tool.mode === 'active';
    		});

    		/***/ }),

    		/***/ "./store/modules/brushModule.js":
    		/*!**************************************!*\
    		  !*** ./store/modules/brushModule.js ***!
    		  \**************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../externalModules.js */ "./externalModules.js");

    		var state = {
    		  drawColorId: 0,
    		  radius: 10,
    		  minRadius: 1,
    		  maxRadius: 50,
    		  alpha: 0.4,
    		  renderBrushIfHiddenButActive: true,
    		  hiddenButActiveAlpha: 0.2,
    		  colorMapId: 'BrushColorMap',
    		  visibleSegmentations: {},
    		  imageBitmapCache: {},
    		  segmentationMetadata: {},
    		  //
    		  invalidatedEnabledElements: []
    		};
    		var setters = {
    		  /**
    		   * Sets the brush radius, account for global min/max radius
    		   *
    		   * @param {number} radius
    		   * @returns {void}
    		   */
    		  radius: function radius(_radius) {
    		    state.radius = Math.min(Math.max(_radius, state.minRadius), state.maxRadius);
    		  },
    		  forceUpdateImageForElement: function forceUpdateImageForElement(element) {
    		    var enabledElement = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.getEnabledElement(element);
    		    var enabledElementUID = enabledElement.uuid;

    		    if (!state.invalidatedEnabledElements.includes(enabledElementUID)) {
    		      state.invalidatedEnabledElements.push(enabledElementUID);
    		    }
    		  },

    		  /**
    		   * TODO: Should this be a init config property?
    		   * Sets the brush color map to something other than the default
    		   *
    		   * @param  {Array} colors An array of 4D [red, green, blue, alpha] arrays.
    		   * @returns {void}
    		   */
    		  brushColorMap: function brushColorMap(colors) {
    		    var colormap = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.colors.getColormap(state.colorMapId);
    		    colormap.setNumberOfColors(colors.length);

    		    for (var i = 0; i < colors.length; i++) {
    		      colormap.setColor(i, colors[i]);
    		    }
    		  },
    		  elementVisible: function elementVisible(enabledElement) {
    		    if (!_externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone) {
    		      return;
    		    }

    		    var cornerstoneEnabledElement = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.getEnabledElement(enabledElement);
    		    var enabledElementUID = cornerstoneEnabledElement.uuid;
    		    var colormap = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.colors.getColormap(state.colorMapId);
    		    var numberOfColors = colormap.getNumberOfColors();
    		    state.visibleSegmentations[enabledElementUID] = [];

    		    for (var i = 0; i < numberOfColors; i++) {
    		      state.visibleSegmentations[enabledElementUID].push(true);
    		    }
    		  },
    		  brushVisibilityForElement: function brushVisibilityForElement(enabledElementUID, segIndex) {
    		    var visible = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

    		    if (!state.visibleSegmentations[enabledElementUID]) {
    		      state.imageBitmapCache[enabledElementUID] = [];
    		    }

    		    state.visibleSegmentations[enabledElementUID][segIndex] = visible;
    		  },
    		  imageBitmapCacheForElement: function imageBitmapCacheForElement(enabledElementUID, segIndex, imageBitmap) {
    		    if (!state.imageBitmapCache[enabledElementUID]) {
    		      state.imageBitmapCache[enabledElementUID] = [];
    		    }

    		    state.imageBitmapCache[enabledElementUID][segIndex] = imageBitmap;
    		  },
    		  clearImageBitmapCacheForElement: function clearImageBitmapCacheForElement(enabledElementUID) {
    		    state.imageBitmapCache[enabledElementUID] = [];
    		  },
    		  metadata: function metadata(seriesInstanceUid, segIndex, _metadata) {
    		    if (!state.segmentationMetadata[seriesInstanceUid]) {
    		      state.segmentationMetadata[seriesInstanceUid] = [];
    		    }

    		    state.segmentationMetadata[seriesInstanceUid][segIndex] = _metadata;
    		  }
    		};
    		var getters = {
    		  imageBitmapCacheForElement: function imageBitmapCacheForElement(enabledElementUID) {
    		    if (!state.imageBitmapCache[enabledElementUID]) {
    		      return null;
    		    }

    		    return state.imageBitmapCache[enabledElementUID];
    		  },
    		  visibleSegmentationsForElement: function visibleSegmentationsForElement(enabledElementUID) {
    		    if (!state.visibleSegmentations[enabledElementUID]) {
    		      return null;
    		    }

    		    return state.visibleSegmentations[enabledElementUID];
    		  },

    		  /**
    		   * Retrieves series-specific brush segmentation metadata.
    		   * @public
    		   * @function metadata
    		   * @param {string} seriesInstanceUid - The seriesInstanceUid of the scan.
    		   * @param {number} [segIndex] - The segmentation index.
    		   *
    		   * @returns {Object[]|Object} An array of segmentation metadata, or specifc
    		   *                            segmentation data if segIndex is defined.
    		   */
    		  metadata: function metadata(seriesInstanceUid, segIndex) {
    		    if (!state.segmentationMetadata[seriesInstanceUid]) {
    		      return;
    		    }

    		    if (segIndex !== undefined) {
    		      return state.segmentationMetadata[seriesInstanceUid][segIndex];
    		    }

    		    return state.segmentationMetadata[seriesInstanceUid];
    		  }
    		};
    		/**
    		 * EnabledElementCallback - Element specific initilisation.
    		 * @public
    		 * @param  {Object} enabledElement - The element on which the module is
    		 *                                  being initialised.
    		 * @returns {void}
    		 */

    		function enabledElementCallback(enabledElement) {
    		  setters.elementVisible(enabledElement);
    		}
    		/**
    		 * OnRegisterCallback - Initialise the module when a new element is added.
    		 * @public
    		 * @returns {void}
    		 */


    		function onRegisterCallback() {
    		  _initDefaultColorMap();
    		}

    		/* harmony default export */ __webpack_exports__["default"] = ({
    		  state: state,
    		  onRegisterCallback: onRegisterCallback,
    		  enabledElementCallback: enabledElementCallback,
    		  getters: getters,
    		  setters: setters
    		});
    		var distinctColors = [[230, 25, 75, 255], [60, 180, 175, 255], [255, 225, 25, 255], [0, 130, 200, 255], [245, 130, 48, 255], [145, 30, 180, 255], [70, 240, 240, 255], [240, 50, 230, 255], [210, 245, 60, 255], [250, 190, 190, 255], [0, 128, 128, 255], [230, 190, 255, 255], [170, 110, 40, 255], [255, 250, 200, 255], [128, 0, 0, 255], [170, 255, 195, 255], [128, 128, 0, 255], [255, 215, 180, 255], [0, 0, 128, 255]];
    		var colorPairIndex = 0;

    		function _initDefaultColorMap() {
    		  var defaultSegmentationCount = 19;
    		  var colormap = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.colors.getColormap(state.colorMapId);
    		  colormap.setNumberOfColors(defaultSegmentationCount);
    		  /*
    		    19 Colors selected to be as distinct from each other as possible,
    		    and ordered such that between each index you make large jumps around the
    		    color wheel. If defaultSegmentationCount is greater than 19, generate a
    		    random linearly interperlated color between 2 colors.
    		  */

    		  for (var i = 0; i < defaultSegmentationCount; i++) {
    		    if (i < distinctColors.length) {
    		      colormap.setColor(i, distinctColors[i]);
    		    } else {
    		      colormap.setColor(i, _generateInterpolatedColor());
    		    }
    		  }
    		}
    		/**
    		 * _generateInterpolatedColor -  generates a color interpolated between two
    		 *                              colors. Humans can only distinguish between
    		 *                              ~15-20 colors, so this is the best we can do.
    		 * @private
    		 *
    		 * @returns {type}  description
    		 */


    		function _generateInterpolatedColor() {
    		  var randIndicies = _getNextColorPair();

    		  var fraction = Math.random();
    		  var interpolatedColor = [];

    		  for (var i = 0; i < 4; i++) {
    		    interpolatedColor.push(Math.floor(fraction * distinctColors[randIndicies[0]][i] + (1.0 - fraction) * distinctColors[randIndicies[1]][i]));
    		  }

    		  return interpolatedColor;
    		}
    		/**
    		 * _getNextColorPair - returns the next pair of indicies to interpolate between.
    		 *
    		 * @private
    		 *
    		 * @returns {Array} An array containing the two indicies.
    		 */


    		function _getNextColorPair() {
    		  var indexPair = [colorPairIndex];

    		  if (colorPairIndex < distinctColors.length - 1) {
    		    colorPairIndex++;
    		    indexPair.push(colorPairIndex);
    		  } else {
    		    colorPairIndex = 0;
    		    indexPair.push(colorPairIndex);
    		  }

    		  return indexPair;
    		}

    		/***/ }),

    		/***/ "./store/modules/cursorModule.js":
    		/*!***************************************!*\
    		  !*** ./store/modules/cursorModule.js ***!
    		  \***************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		var state = {
    		  iconSize: 16,
    		  viewBox: {
    		    x: 16,
    		    y: 16
    		  },
    		  mousePoint: {
    		    x: 8,
    		    y: 8
    		  },
    		  mousePointerGroupString: "\n    <path stroke=\"ACTIVE_COLOR\" d=\"M8 16L8 0\"></path>\n    <path stroke=\"ACTIVE_COLOR\" d=\"M16 8L0 8\"></path>\n  "
    		};
    		var setters = {
    		  defaultOptions: function defaultOptions(newOptions) {
    		    Object.assign(state, newOptions);
    		  }
    		};
    		var getters = {
    		  defaultOptions: function defaultOptions() {
    		    return state;
    		  }
    		};
    		/* harmony default export */ __webpack_exports__["default"] = ({
    		  getters: getters,
    		  setters: setters
    		});

    		/***/ }),

    		/***/ "./store/modules/globalConfigurationModule.js":
    		/*!****************************************************!*\
    		  !*** ./store/modules/globalConfigurationModule.js ***!
    		  \****************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		var state = {
    		  mouseEnabled: true,
    		  touchEnabled: true,
    		  globalToolSyncEnabled: false,
    		  showSVGCursors: false
    		};
    		/* harmony default export */ __webpack_exports__["default"] = ({
    		  state: state,
    		  setters: {}
    		});

    		/***/ }),

    		/***/ "./store/removeTool.js":
    		/*!*****************************!*\
    		  !*** ./store/removeTool.js ***!
    		  \*****************************/
    		/*! exports provided: removeTool, removeToolForElement */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeTool", function() { return removeTool; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeToolForElement", function() { return removeToolForElement; });
    		/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ "./store/index.js");

    		/**
    		 * Deactivates and removes the tool from the target element with the provided name
    		 *
    		 * @export
    		 * @public
    		 * @method
    		 * @name removeToolForElement
    		 * @param {HTMLElement} element The element.
    		 * @param {string} toolName The name of the tool.
    		 * @returns {void}
    		 */

    		var removeToolForElement = function removeToolForElement(element, toolName) {
    		  var toolIndex = _index_js__WEBPACK_IMPORTED_MODULE_0__["default"].state.tools.findIndex(function (tool) {
    		    return tool.element === element && tool.name === toolName;
    		  });

    		  if (toolIndex >= 0) {
    		    _index_js__WEBPACK_IMPORTED_MODULE_0__["default"].state.tools.splice(toolIndex, 1);
    		  }
    		};
    		/**
    		 * Removes all tools from all enabled elements with the provided name.
    		 *
    		 * @export
    		 * @public
    		 * @method
    		 * @name removeTool
    		 * @param {string} toolName The name of the tool.
    		 * @returns {void}
    		 */


    		var removeTool = function removeTool(toolName) {
    		  _removeToolGlobally(toolName);

    		  _index_js__WEBPACK_IMPORTED_MODULE_0__["default"].state.enabledElements.forEach(function (element) {
    		    removeToolForElement(element, toolName);
    		  });
    		};
    		/**
    		 * Removes tool with matching name from globally registered tools.
    		 * Requires `globalToolSyncEnabled` to be set to true
    		 *
    		 * @private
    		 * @method
    		 * @name removeToolGlobally
    		 * @param {string} toolName The name of the tool to remove.
    		 * @returns {void}
    		 */


    		var _removeToolGlobally = function _removeToolGlobally(toolName) {
    		  if (!_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].modules.globalConfiguration.state.globalToolSyncEnabled) {
    		    return;
    		  }

    		  if (_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].state.globalTools[toolName]) {
    		    delete _index_js__WEBPACK_IMPORTED_MODULE_0__["default"].state.globalTools[toolName];
    		  }
    		};



    		/***/ }),

    		/***/ "./store/setToolCursor.js":
    		/*!********************************!*\
    		  !*** ./store/setToolCursor.js ***!
    		  \********************************/
    		/*! exports provided: setToolCursor, resetToolCursor, hideToolCursor */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setToolCursor", function() { return setToolCursor; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resetToolCursor", function() { return resetToolCursor; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hideToolCursor", function() { return hideToolCursor; });
    		/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ "./store/index.js");


    		var globalConfiguration = _index_js__WEBPACK_IMPORTED_MODULE_0__["modules"].globalConfiguration;
    		/**
    		 * Creates an SVG Cursor for the target element
    		 *
    		 * @param {HTMLElement} element - The DOM Element to draw on
    		 * @param {MouseCursor} svgCursor - The cursor.
    		 * @returns {void}
    		 */

    		function setToolCursor(element, svgCursor) {
    		  if (!globalConfiguration.state.showSVGCursors) {
    		    return;
    		  } // TODO: (state vs options) Exit if cursor wasn't updated
    		  // TODO: Exit if invalid options to create cursor
    		  // Note: Max size of an SVG cursor is 128x128, default is 32x32.


    		  var cursorBlob = svgCursor.getIconWithPointerSVG();
    		  var mousePoint = svgCursor.mousePoint;
    		  var svgCursorUrl = window.URL.createObjectURL(cursorBlob);
    		  element.style.cursor = "url('".concat(svgCursorUrl, "') ").concat(mousePoint, ", auto");
    		  _index_js__WEBPACK_IMPORTED_MODULE_0__["state"].svgCursorUrl = svgCursorUrl;
    		}

    		function resetToolCursor(element) {
    		  _clearStateAndSetCursor(element, 'initial');
    		}

    		function hideToolCursor(element) {
    		  if (!globalConfiguration.state.showSVGCursors) {
    		    return;
    		  }

    		  _clearStateAndSetCursor(element, 'none');
    		}

    		function _clearStateAndSetCursor(element, cursorSeting) {
    		  if (_index_js__WEBPACK_IMPORTED_MODULE_0__["state"].svgCursorUrl) {
    		    window.URL.revokeObjectURL(_index_js__WEBPACK_IMPORTED_MODULE_0__["state"].svgCursorUrl);
    		  }

    		  _index_js__WEBPACK_IMPORTED_MODULE_0__["state"].svgCursorUrl = null;
    		  element.style.cursor = cursorSeting;
    		}

    		/***/ }),

    		/***/ "./store/setToolMode.js":
    		/*!******************************!*\
    		  !*** ./store/setToolMode.js ***!
    		  \******************************/
    		/*! exports provided: setToolActive, setToolActiveForElement, setToolDisabled, setToolDisabledForElement, setToolEnabled, setToolEnabledForElement, setToolPassive, setToolPassiveForElement, setToolMode, setToolModeForElement, _getNormalizedOptions, _mergeMouseButtonMask */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setToolActive", function() { return setToolActive; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setToolActiveForElement", function() { return setToolActiveForElement; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setToolDisabled", function() { return setToolDisabled; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setToolDisabledForElement", function() { return setToolDisabledForElement; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setToolEnabled", function() { return setToolEnabled; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setToolEnabledForElement", function() { return setToolEnabledForElement; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setToolPassive", function() { return setToolPassive; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setToolPassiveForElement", function() { return setToolPassiveForElement; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setToolMode", function() { return setToolMode; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setToolModeForElement", function() { return setToolModeForElement; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_getNormalizedOptions", function() { return _getNormalizedOptions; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_mergeMouseButtonMask", function() { return _mergeMouseButtonMask; });
    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../events.js */ "./events.js");
    		/* harmony import */ var _util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../util/triggerEvent.js */ "./util/triggerEvent.js");
    		/* harmony import */ var _getToolForElement_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getToolForElement.js */ "./store/getToolForElement.js");
    		/* harmony import */ var _store_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../store/index.js */ "./store/index.js");
    		/* harmony import */ var _setToolCursor_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./setToolCursor.js */ "./store/setToolCursor.js");
    		/* harmony import */ var _util_logger_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/logger.js */ "./util/logger.js");






    		var globalConfiguration = _store_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].modules.globalConfiguration;
    		var logger = Object(_util_logger_js__WEBPACK_IMPORTED_MODULE_5__["getLogger"])('store:setToolMode');
    		/**
    		 * Sets a tool's state, with the provided toolName and element, to 'active'. Active tools are rendered,
    		 * respond to user input, and can create new data.
    		 *
    		 * @public
    		 * @function setToolActiveForElement
    		 * @memberof CornerstoneTools
    		 *
    		 * @example <caption>Setting a tool 'active' for a specific interaction type.</caption>
    		 * // Sets length tool to Active
    		 * setToolActiveForElement(element, 'Length', {
    		 *   mouseButtonMask: 1
    		 * }, ['Mouse'])
    		 * @example <caption>Setting a tool 'active' for all interaction types.</caption>
    		 * // Sets length tool to Active
    		 * setToolActiveForElement(element, 'Length', {
    		 *   mouseButtonMask: 1
    		 * })
    		 * @param {HTMLElement} element
    		 * @param {string} toolName
    		 * @param {(Object|string[]|number)} options
    		 * @param {(string[])} interactionTypes
    		 * @returns {undefined}
    		 */

    		var setToolActiveForElement = function setToolActiveForElement(element, toolName, options, interactionTypes) {
    		  // If interactionTypes was passed in via options
    		  if (interactionTypes === undefined && Array.isArray(options)) {
    		    interactionTypes = options;
    		    options = null;
    		  }

    		  var tool = Object(_getToolForElement_js__WEBPACK_IMPORTED_MODULE_2__["default"])(element, toolName);

    		  if (tool) {
    		    _resolveInputConflicts(element, tool, options, interactionTypes); // Iterate over specific interaction types and set active
    		    // This is used as a secondary check on active tools to find the active "parts" of the tool


    		    tool.supportedInteractionTypes.forEach(function (interactionType) {
    		      if (interactionTypes === undefined || interactionTypes.includes(interactionType)) {
    		        options["is".concat(interactionType, "Active")] = true;
    		      } else {
    		        options["is".concat(interactionType, "Active")] = false;
    		      }
    		    });

    		    if (globalConfiguration.state.showSVGCursors && tool.supportedInteractionTypes.includes('Mouse')) {
    		      _setToolCursorIfPrimary(element, options, tool);
    		    }
    		  } // Resume normal behavior


    		  setToolModeForElement('active', null, element, toolName, options);
    		};

    		function _setToolCursorIfPrimary(element, options, tool) {
    		  var mouseButtonMask;

    		  if (typeof options === 'number') {
    		    mouseButtonMask = [options];
    		  } else {
    		    mouseButtonMask = options.mouseButtonMask;
    		  }

    		  if (mouseButtonMask.includes(1)) {
    		    if (tool.svgCursor) {
    		      Object(_setToolCursor_js__WEBPACK_IMPORTED_MODULE_4__["setToolCursor"])(tool.element, tool.svgCursor);
    		    } else if (tool.hideDefaultCursor) {
    		      Object(_setToolCursor_js__WEBPACK_IMPORTED_MODULE_4__["hideToolCursor"])(element);
    		    } else {
    		      Object(_setToolCursor_js__WEBPACK_IMPORTED_MODULE_4__["resetToolCursor"])(element);
    		    }
    		  }
    		}
    		/**
    		 * Sets all tool's state, with the provided toolName, to 'active'. Active tools are rendered,
    		 * respond to user input, and can create new data.
    		 * @public
    		 * @function setToolActive
    		 * @memberof CornerstoneTools
    		 *
    		 * @param {string} toolName
    		 * @param {(Object|string[]|number)} options
    		 * @param {(string[])} interactionTypes
    		 * @returns {undefined}
    		 */


    		var setToolActive = function setToolActive(toolName, options, interactionTypes) {
    		  _trackGlobalToolModeChange('active', toolName, options, interactionTypes);

    		  _store_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].state.enabledElements.forEach(function (element) {
    		    setToolActiveForElement(element, toolName, options, interactionTypes);
    		  });
    		};
    		/**
    		 * Sets a tool's state, with the provided toolName and element, to 'disabled'. Disabled tools are not rendered,
    		 * and do not respond to user input
    		 * @public
    		 * @function setToolDisabledForElement
    		 * @memberof CornerstoneTools
    		 *
    		 * @param {HTMLElement} element
    		 * @param {string} toolName
    		 * @param {(Object|number)} options
    		 * @returns {undefined}
    		 */


    		var setToolDisabledForElement = setToolModeForElement.bind(null, 'disabled', null);
    		/**
    		 * Sets all tool's state, with the provided toolName, to 'disabled'. Disabled tools are not rendered,
    		 * and do not respond to user input
    		 * @public
    		 * @function setToolDisabled
    		 * @memberof CornerstoneTools
    		 *
    		 * @param {string} toolName
    		 * @param {(Object|number)} options
    		 * @returns {undefined}
    		 */

    		var setToolDisabled = setToolMode.bind(null, 'disabled', null);
    		/**
    		 * Sets a tool's state, with the provided toolName and element, to 'enabled'. Enabled tools are rendered,
    		 * but do not respond to user input
    		 * @public
    		 * @function setToolEnabledForElement
    		 * @memberof CornerstoneTools
    		 *
    		 * @param {HTMLElement} element
    		 * @param {string} toolName
    		 * @param {(Object|number)} options
    		 * @returns {undefined}
    		 */

    		var setToolEnabledForElement = setToolModeForElement.bind(null, 'enabled', null);
    		/**
    		 * Sets all tool's state, with the provided toolName, to 'enabled'. Enabled tools are rendered,
    		 * but do not respond to user input
    		 * @public
    		 * @function setToolEnabled
    		 * @memberof CornerstoneTools
    		 *
    		 * @param {string} toolName
    		 * @param {(Object|number)} options
    		 * @returns {undefined}
    		 */

    		var setToolEnabled = setToolMode.bind(null, 'enabled', null);
    		/**
    		 * Sets a tool's state, with the provided toolName and element, to 'passive'. Passive tools are rendered and respond to user input,
    		 * but do not create new measurements or annotations.
    		 * @public
    		 * @function setToolPassiveForElement
    		 * @memberof CornerstoneTools
    		 *
    		 * @param {HTMLElement} element
    		 * @param {string} toolName
    		 * @param {(Object|number)} options
    		 * @returns {undefined}
    		 */

    		var setToolPassiveForElement = setToolModeForElement.bind(null, 'passive', _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOOL_DEACTIVATED);
    		/**
    		 * Sets all tool's state, with the provided toolName, to 'passive'. Passive tools are rendered and respond to user input,
    		 * but do not create new measurements or annotations.
    		 * @public
    		 * @function setToolPassive
    		 * @memberof CornerstoneTools
    		 *
    		 * @param {string} toolName
    		 * @param {(Object|number)} options
    		 * @returns {undefined}
    		 */

    		var setToolPassive = setToolMode.bind(null, 'passive', _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].TOOL_DEACTIVATED);
    		/**
    		 * An internal method that helps make sure we change tool mode in a consistent
    		 * way
    		 * @private
    		 * @function setToolModeForElement
    		 *
    		 * @param {string} mode
    		 * @param {string} changeEvent
    		 * @param {HTMLElement} element
    		 * @param {string} toolName
    		 * @param {(Object|number[]|number)} options
    		 * @returns {undefined}
    		 */

    		function setToolModeForElement(mode, changeEvent, element, toolName, options) {
    		  var tool = Object(_getToolForElement_js__WEBPACK_IMPORTED_MODULE_2__["default"])(element, toolName);

    		  if (!tool) {
    		    logger.warn('Unable to find tool "%s" for enabledElement', toolName);
    		    return;
    		  }

    		  options = _getNormalizedOptions(options); // Keep the same if not an array (undefined)
    		  // Reset if empty array
    		  // Merge if array contains any bindings

    		  if (Array.isArray(options.mouseButtonMask) && options.mouseButtonMask.length !== 0 && Array.isArray(tool.options.mouseButtonMask)) {
    		    options.mouseButtonMask = _mergeMouseButtonMask(options.mouseButtonMask, tool.options.mouseButtonMask);
    		  } // Set mode & options


    		  tool.mode = mode;
    		  tool.mergeOptions(options); // Call tool's hook for this event, if one exists

    		  if (tool["".concat(mode, "Callback")]) {
    		    tool["".concat(mode, "Callback")](element, options);
    		  } // Emit event indicating tool state change


    		  if (changeEvent) {
    		    var statusChangeEventData = {
    		      options: options,
    		      toolName: toolName,
    		      type: changeEvent
    		    };
    		    Object(_util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element, changeEvent, statusChangeEventData);
    		  } // Trigger Update
    		  // Todo: don't error out if image hasn't been loaded...
    		  // Cornerstone.updateImage(element);

    		}
    		/**
    		 * A helper/quick way to set a tool's mode for all canvases
    		 *
    		 * @private
    		 * @function setToolMode
    		 *
    		 * @param {string} mode
    		 * @param {string} changeEvent
    		 * @param {string} toolName
    		 * @param {(Object|number)} options
    		 * @returns {undefined}
    		 */


    		function setToolMode(mode, changeEvent, toolName, options) {
    		  _trackGlobalToolModeChange(mode, toolName, options);

    		  _store_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].state.enabledElements.forEach(function (element) {
    		    setToolModeForElement(mode, changeEvent, element, toolName, options);
    		  });
    		}
    		/**
    		 * Find tool's that conflict with the incoming tool's mouse/touch bindings and
    		 * resolve those conflicts.
    		 *
    		 * @private
    		 * @function _resolveInputConflicts
    		 *
    		 * @param {HTMLElement} element
    		 * @param {Object} tool
    		 * @param {(Object|number)} options
    		 * @param {(Array)} interactionTypes
    		 * @returns {undefined}
    		 */


    		function _resolveInputConflicts(element, tool, options, interactionTypes) {
    		  // Iterate over the interaction types our tool supports.
    		  // For each one we intend to activate, check for potential conflicts
    		  // And resolve them
    		  tool.supportedInteractionTypes.forEach(function (interactionType) {
    		    if (interactionTypes === undefined || interactionTypes.includes(interactionType)) {
    		      var inputResolver = _inputResolvers[interactionType];

    		      if (inputResolver) {
    		        inputResolver(tool, element, options);
    		      } else {
    		        logger.warn('Unable to resolve input conflicts for type %s', interactionType);
    		      }
    		    }
    		  });
    		  var activeToolsForElement = _store_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].state.tools.filter(function (t) {
    		    return t.element === element && t.mode === 'active' && t.supportedInteractionTypes.length > 0;
    		  });
    		  activeToolsForElement.forEach(function (t) {
    		    var toolHasAnyActiveInteractionType = false;
    		    t.supportedInteractionTypes.forEach(function (interactionType) {
    		      if (t.options["is".concat(interactionType, "Active")]) {
    		        toolHasAnyActiveInteractionType = true;
    		      }
    		    });

    		    if (!toolHasAnyActiveInteractionType) {
    		      logger.log("Setting tool %s's to PASSIVE", t.name);
    		      setToolPassiveForElement(element, t.name);
    		    }
    		  });
    		}
    		/**
    		 * Resolves conflicting active tools when activating a tool for mouse interaction
    		 * @private
    		 * @function _resolveMouseInputConflicts
    		 *
    		 * @param {Object} tool
    		 * @param {HTMLElement} element
    		 * @param {(Object|number)} options
    		 * @returns {undefined}
    		 */


    		function _resolveMouseInputConflicts(tool, element, options) {
    		  var mouseButtonMask = _getNormalizedOptions(options).mouseButtonMask;

    		  var hasMouseButtonMask = Array.isArray(mouseButtonMask) && mouseButtonMask.length > 0;

    		  if (!hasMouseButtonMask) {
    		    return;
    		  }

    		  var activeToolWithMatchingMouseButtonMask = _store_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].state.tools.find(function (t) {
    		    return t.element === element && t.mode === 'active' && t.options.isMouseActive === true && Array.isArray(t.options.mouseButtonMask) && t.options.mouseButtonMask.some(function (v) {
    		      return mouseButtonMask.includes(v);
    		    });
    		  });

    		  if (activeToolWithMatchingMouseButtonMask) {
    		    // Remove collissions
    		    activeToolWithMatchingMouseButtonMask.options.mouseButtonMask = activeToolWithMatchingMouseButtonMask.options.mouseButtonMask.filter(function (mask) {
    		      return !mouseButtonMask.includes(mask);
    		    }); // If no remaining bindings, set inactive

    		    if (activeToolWithMatchingMouseButtonMask.options.mouseButtonMask.length === 0) {
    		      activeToolWithMatchingMouseButtonMask.options.isMouseActive = false;
    		    }
    		  }
    		}
    		/**
    		 * Resolves conflicting active tools when activating a tool for touch interaction
    		 * @private
    		 * @function _resolveTouchInputConflicts
    		 *
    		 * @param {Object} tool
    		 * @param {HTMLElement} element
    		 * @returns {undefined}
    		 */


    		function _resolveTouchInputConflicts(tool, element) {
    		  var activeTouchTool = _store_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].state.tools.find(function (t) {
    		    return t.element === element && t.mode === 'active' && t.options.isTouchActive === true;
    		  });
    		  var activeMultiTouchToolWithOneTouchPointer = _store_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].state.tools.find(function (t) {
    		    return t.element === element && t.mode === 'active' && t.options.isMultiTouchActive === true && t.configuration.touchPointers === 1;
    		  });

    		  if (activeTouchTool) {
    		    logger.log("Setting tool %s's isTouchActive to false", activeTouchTool.name);
    		    activeTouchTool.options.isTouchActive = false;
    		  }

    		  if (activeMultiTouchToolWithOneTouchPointer) {
    		    logger.log("Setting tool %s's isTouchActive to false", activeMultiTouchToolWithOneTouchPointer.name);
    		    activeMultiTouchToolWithOneTouchPointer.options.isMultiTouchActive = false;
    		  }
    		}
    		/**
    		 * Resolves conflicting active tools when activating a tool for MultiTouch interaction
    		 * @private
    		 * @function _resolveMultiTouchInputConflicts
    		 *
    		 * @param {Object} tool
    		 * @param {HTMLElement} element
    		 * @returns {undefined}
    		 */


    		function _resolveMultiTouchInputConflicts(tool, element) {
    		  var activeMultiTouchTool = _store_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].state.tools.find(function (t) {
    		    return t.element === element && t.mode === 'active' && t.options.isMultiTouchActive === true && t.configuration.touchPointers === tool.configuration.touchPointers;
    		  });
    		  var activeTouchTool;

    		  if (tool.configuration.touchPointers === 1) {
    		    activeTouchTool = _store_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].state.tools.find(function (t) {
    		      return t.element === element && t.mode === 'active' && t.options.isTouchActive === true;
    		    });
    		  }

    		  if (activeMultiTouchTool) {
    		    logger.log("Setting tool %s's isMultiTouchActive to false", activeMultiTouchTool.name);
    		    activeMultiTouchTool.options.isMultiTouchActive = false;
    		  }

    		  if (activeTouchTool) {
    		    logger.log("Setting tool %s's isTouchActive to false", activeTouchTool.name);
    		    activeTouchTool.options.isTouchActive = false;
    		  }
    		}
    		/**
    		 * If the incoming tool isTouchActive, find any conflicting tools
    		 * and set their isTouchActive to false to avoid conflicts.
    		 *
    		 * @private
    		 * @function _resolveGenericInputConflicts
    		 *
    		 * @param {string} interactionType
    		 * @param {Object} tool
    		 * @param {HTMLElement} element
    		 * @param {(Object|number)} options
    		 * @returns {undefined}
    		 */


    		function _resolveGenericInputConflicts(interactionType, tool, element) {
    		  var interactionTypeFlag = "is".concat(interactionType, "Active");
    		  var activeToolWithActiveInteractionType = _store_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].state.tools.find(function (t) {
    		    return t.element === element && t.mode === 'active' && t.options[interactionTypeFlag] === true;
    		  });

    		  if (activeToolWithActiveInteractionType) {
    		    logger.log("Setting tool %s's %s to false", activeToolWithActiveInteractionType.name, interactionTypeFlag);
    		    activeToolWithActiveInteractionType.options[interactionTypeFlag] = false;
    		  }
    		}

    		function _trackGlobalToolModeChange(mode, toolName, options, interactionTypes) {
    		  if (!_store_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].modules.globalConfiguration.state.globalToolSyncEnabled) {
    		    return;
    		  } // Update Tool History


    		  var historyEvent = {
    		    mode: mode,
    		    args: [toolName, options]
    		  };

    		  if (interactionTypes) {
    		    historyEvent.push(interactionTypes);
    		  }

    		  _store_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].state.globalToolChangeHistory.push(historyEvent);
    		  var arbitraryChangeHistoryLimit = 50;

    		  if (_store_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].state.globalToolChangeHistory.length > arbitraryChangeHistoryLimit) {
    		    _store_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].state.globalToolChangeHistory.shift();
    		  } // Update ActiveBindings Array


    		  var globalTool = _store_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].state.globalTools[toolName];

    		  if (!globalTool) {
    		    logger.warn("setToolMode call for tool that's not available globally: ".concat(toolName));
    		    return;
    		  }

    		  if (mode === 'active') {
    		    var stringBindings = _determineStringBindings(toolName, options, interactionTypes); // Remove the incoming bindings from all global tools


    		    Object.keys(_store_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].state.globalTools).forEach(function (key) {
    		      var tool = _store_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].state.globalTools[key];
    		      tool.activeBindings = tool.activeBindings.filter(function (binding) {
    		        return !stringBindings.includes(binding);
    		      });
    		    }); // @HACK: Clear mouse bindings

    		    if (stringBindings.some(function (binding) {
    		      return binding.includes('Mouse-DELETE');
    		    })) {
    		      globalTool.activeBindings = globalTool.activeBindings.filter(function (binding) {
    		        return !binding.includes('Mouse');
    		      });
    		      stringBindings = stringBindings.filter(function (binding) {
    		        return !binding.includes('Mouse');
    		      });
    		    }

    		    globalTool.activeBindings = globalTool.activeBindings.concat(stringBindings);
    		  } else {
    		    globalTool.activeBindings = [];
    		  }
    		}

    		function _determineStringBindings(toolName, options, interactionTypes) {
    		  if (interactionTypes === undefined && Array.isArray(options)) {
    		    interactionTypes = options;
    		    options = null;
    		  }

    		  var stringBindings = [];
    		  var globalTool = _store_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].state.globalTools[toolName];

    		  if (globalTool) {
    		    // eslint-disable-next-line new-cap
    		    var tool = new globalTool.tool(globalTool.props);
    		    tool.supportedInteractionTypes.forEach(function (interactionType) {
    		      if (interactionTypes === undefined || interactionTypes.includes(interactionType)) {
    		        if (interactionType === 'Mouse') {
    		          var mouseButtonMasks = _getNormalizedOptions(options).mouseButtonMask; // Add or delete


    		          if (Array.isArray(mouseButtonMasks) && mouseButtonMasks.length > 0) {
    		            mouseButtonMasks.forEach(function (mask) {
    		              return stringBindings.push("".concat(interactionType, "-").concat(mask));
    		            });
    		          } else if (Array.isArray(mouseButtonMasks) && mouseButtonMasks.length === 0) {
    		            stringBindings.push("".concat(interactionType, "-DELETE"));
    		          }
    		        } else if (interactionType === 'MultiTouch') {
    		          stringBindings.push("".concat(interactionType, "-").concat(tool.configuration.touchPointers));
    		        } else {
    		          stringBindings.push(interactionType);
    		        }
    		      }
    		    });
    		  }

    		  return stringBindings;
    		}

    		var _inputResolvers = {
    		  Mouse: _resolveMouseInputConflicts,
    		  MouseWheel: _resolveGenericInputConflicts.bind(undefined, 'MouseWheel'),
    		  Touch: _resolveTouchInputConflicts,
    		  TouchPinch: _resolveGenericInputConflicts.bind(undefined, 'TouchPinch'),
    		  TouchRotate: _resolveGenericInputConflicts.bind(undefined, 'TouchRotate'),
    		  DoubleTap: _resolveGenericInputConflicts.bind(undefined, 'DoubleTap'),
    		  MultiTouch: _resolveMultiTouchInputConflicts
    		};

    		function _getNormalizedOptions(options) {
    		  if (Array.isArray(options)) {
    		    // If options is an array assume the array is the mouseButtonMask array
    		    options = {
    		      mouseButtonMask: options
    		    };
    		  } else if (options !== Object(options)) {
    		    // And if it's something other than an object, assume options is
    		    // a single mouseButtonMask
    		    options = {
    		      mouseButtonMask: [options]
    		    };
    		  } // If there is still no 'mouseButtonMask' default it to an empty array


    		  if (!options.hasOwnProperty('mouseButtonMask')) {
    		    options.mouseButtonMask = [];
    		  }

    		  if (!Array.isArray(options.mouseButtonMask)) {
    		    options.mouseButtonMask = [options.mouseButtonMask];
    		  } // Now filter out anything that is not an number or is the number 0


    		  options.mouseButtonMask = options.mouseButtonMask.filter(function (o) {
    		    return typeof o === 'number' && o !== 0;
    		  });
    		  return options;
    		}

    		function _mergeMouseButtonMask(newMask, oldMask) {
    		  // Merges and removes duplicates
    		  return newMask.concat(oldMask).reduce(function (acc, m) {
    		    if (acc.indexOf(m) === -1) {
    		      acc.push(m);
    		    }

    		    return acc;
    		  }, []);
    		}



    		/***/ }),

    		/***/ "./store/setToolOptions.js":
    		/*!*********************************!*\
    		  !*** ./store/setToolOptions.js ***!
    		  \*********************************/
    		/*! exports provided: setToolOptions, setToolOptionsForElement */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setToolOptions", function() { return setToolOptions; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setToolOptionsForElement", function() { return setToolOptionsForElement; });
    		/* harmony import */ var _getToolForElement_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getToolForElement.js */ "./store/getToolForElement.js");
    		/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.js */ "./store/index.js");


    		/**
    		 * Sets the options of a tool on a specific element.
    		 * @export
    		 * @public
    		 * @method
    		 * @name setToolOptionsForElement
    		 *
    		 * @param {HTMLElement} element The element.
    		 * @param {string} toolName The name of the tool.
    		 * @param {Object} options The options to set.
    		 * @returns {void}
    		 */

    		var setToolOptionsForElement = function setToolOptionsForElement(element, toolName, options) {
    		  var tool = Object(_getToolForElement_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element, toolName);

    		  if (tool) {
    		    tool.mergeOptions(options);
    		  }
    		};
    		/**
    		 * Sets the options of a tool for all elements.
    		 * @export
    		 * @public
    		 * @method
    		 * @name setToolOptions
    		 *
    		 * @param {string} toolName
    		 * @param {Object} options
    		 * @returns {void}
    		 */


    		var setToolOptions = function setToolOptions(toolName, options) {
    		  _index_js__WEBPACK_IMPORTED_MODULE_1__["state"].enabledElements.forEach(function (element) {
    		    setToolOptionsForElement(element, toolName, options);
    		  });
    		};



    		/***/ }),

    		/***/ "./synchronization/Synchronizer.js":
    		/*!*****************************************!*\
    		  !*** ./synchronization/Synchronizer.js ***!
    		  \*****************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _util_convertToVector3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/convertToVector3.js */ "./util/convertToVector3.js");
    		/* harmony import */ var _toolOptions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../toolOptions.js */ "./toolOptions.js");



    		/**
    		 * Return an array filtered to only its unique members
    		 *
    		 * @private
    		 * @param {Array} array - The array to filter
    		 * @returns {Array}
    		 */

    		function unique(array) {
    		  return array.filter(function (value, index, self) {
    		    return self.indexOf(value) === index;
    		  });
    		}
    		/**
    		 * Synchronize target and source elements when an event fires on the source element
    		 * @export @public constructor
    		 * @name Synchronizer
    		 *
    		 * @param {String} event - The event(s) that will trigger synchronization. Separate multiple events by a space
    		 * @param {Function} handler - The function that will make the necessary changes to the target element in order to synchronize it with the source element
    		 * @returns {void}
    		 */


    		function Synchronizer(event, handler) {
    		  var cornerstone = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone;
    		  var that = this;
    		  var sourceElements = []; // Source elements fire the events we want to synchronize to

    		  var targetElements = []; // Target elements we want to synchronize to source elements

    		  var ignoreFiredEvents = false;
    		  var initialData = {};
    		  var eventHandler = handler;
    		  this.enabled = true;
    		  /**
    		   * Update the event handler to perform synchronization
    		   * @param {Function} handler - The event handler function
    		   * @returns {void}
    		   */

    		  this.setHandler = function (handler) {
    		    eventHandler = handler;
    		  };
    		  /**
    		   * Return a reference to the event handler function
    		   * @returns {Function}
    		   */


    		  this.getHandler = function () {
    		    return eventHandler;
    		  };
    		  /**
    		   * Calculate the initial distances between the source image and each
    		   * of the target images
    		   * @returns {void}
    		   */


    		  this.getDistances = function () {
    		    if (!sourceElements.length || !targetElements.length) {
    		      return;
    		    }

    		    initialData.distances = {};
    		    initialData.imageIds = {
    		      sourceElements: [],
    		      targetElements: []
    		    };
    		    sourceElements.forEach(function (sourceElement) {
    		      var sourceEnabledElement = cornerstone.getEnabledElement(sourceElement);

    		      if (!sourceEnabledElement || !sourceEnabledElement.image) {
    		        return;
    		      }

    		      var sourceImageId = sourceEnabledElement.image.imageId;
    		      var sourceImagePlane = cornerstone.metaData.get('imagePlaneModule', sourceImageId);

    		      if (!sourceImagePlane || !sourceImagePlane.imagePositionPatient) {
    		        return;
    		      }

    		      var sourceImagePosition = Object(_util_convertToVector3_js__WEBPACK_IMPORTED_MODULE_1__["default"])(sourceImagePlane.imagePositionPatient);

    		      if (initialData.hasOwnProperty(sourceEnabledElement)) {
    		        return;
    		      }

    		      initialData.distances[sourceImageId] = {};
    		      initialData.imageIds.sourceElements.push(sourceImageId);
    		      targetElements.forEach(function (targetElement) {
    		        var targetEnabledElement = cornerstone.getEnabledElement(targetElement);

    		        if (!targetEnabledElement || !targetEnabledElement.image) {
    		          return;
    		        }

    		        var targetImageId = targetEnabledElement.image.imageId;
    		        initialData.imageIds.targetElements.push(targetImageId);

    		        if (sourceElement === targetElement) {
    		          return;
    		        }

    		        if (sourceImageId === targetImageId) {
    		          return;
    		        }

    		        if (initialData.distances[sourceImageId].hasOwnProperty(targetImageId)) {
    		          return;
    		        }

    		        var targetImagePlane = cornerstone.metaData.get('imagePlaneModule', targetImageId);

    		        if (!targetImagePlane || !targetImagePlane.imagePositionPatient) {
    		          return;
    		        }

    		        var targetImagePosition = Object(_util_convertToVector3_js__WEBPACK_IMPORTED_MODULE_1__["default"])(targetImagePlane.imagePositionPatient);
    		        initialData.distances[sourceImageId][targetImageId] = targetImagePosition.clone().sub(sourceImagePosition);
    		      });

    		      if (!Object.keys(initialData.distances[sourceImageId]).length) {
    		        delete initialData.distances[sourceImageId];
    		      }
    		    });
    		  };
    		  /**
    		   * Gather necessary event data and call synchronization handler
    		   *
    		   * @private
    		   * @param {HTMLElement} sourceElement - The source element for the event
    		   * @param {Object} eventData - The data object for the source event
    		   * @returns {void}
    		   */


    		  function fireEvent(sourceElement, eventData) {
    		    var isDisabled = !that.enabled;
    		    var noElements = !sourceElements.length || !targetElements.length;

    		    if (isDisabled || noElements) {
    		      return;
    		    }

    		    ignoreFiredEvents = true;
    		    targetElements.forEach(function (targetElement) {
    		      var targetIndex = targetElements.indexOf(targetElement);

    		      if (targetIndex === -1) {
    		        return;
    		      }

    		      var targetImageId = initialData.imageIds.targetElements[targetIndex];
    		      var sourceIndex = sourceElements.indexOf(sourceElement);

    		      if (sourceIndex === -1) {
    		        return;
    		      }

    		      var sourceImageId = initialData.imageIds.sourceElements[sourceIndex];
    		      var positionDifference;

    		      if (sourceImageId === targetImageId) {
    		        positionDifference = 0;
    		      } else if (initialData.distances[sourceImageId] !== undefined) {
    		        positionDifference = initialData.distances[sourceImageId][targetImageId];
    		      }

    		      eventHandler(that, sourceElement, targetElement, eventData, positionDifference);
    		    });
    		    ignoreFiredEvents = false;
    		  }
    		  /**
    		   * Call fireEvent if not ignoring events, and pass along event data
    		   *
    		   * @private
    		   * @param {Event} e - The source event object
    		   * @returns {void}
    		   */


    		  function onEvent(e) {
    		    var eventData = e.detail;

    		    if (ignoreFiredEvents === true) {
    		      return;
    		    }

    		    fireEvent(e.currentTarget, eventData);
    		  }
    		  /**
    		   * Add a source element to this synchronizer
    		   *
    		   * @param {HTMLElement} element - The new source element
    		   * @returns {void}
    		   */


    		  this.addSource = function (element) {
    		    // Return if this element was previously added
    		    var index = sourceElements.indexOf(element);

    		    if (index !== -1) {
    		      return;
    		    } // Add to our list of enabled elements


    		    sourceElements.push(element); // Subscribe to the event

    		    event.split(' ').forEach(function (oneEvent) {
    		      element.addEventListener(oneEvent, onEvent);
    		    }); // Update the initial distances between elements

    		    that.getDistances();
    		    that.updateDisableHandlers();
    		  };
    		  /**
    		   * Add a target element to this synchronizer
    		   *
    		   * @param {HTMLElement} element - The new target element to be synchronized
    		   * @returns {void}
    		   */


    		  this.addTarget = function (element) {
    		    // Return if this element was previously added
    		    var index = targetElements.indexOf(element);

    		    if (index !== -1) {
    		      return;
    		    } // Add to our list of enabled elements


    		    targetElements.push(element); // Update the initial distances between elements

    		    that.getDistances(); // Invoke the handler for this new target element

    		    eventHandler(that, element, element, 0);
    		    that.updateDisableHandlers();
    		  };
    		  /**
    		   * Add an element to this synchronizer as both a source and a target
    		   *
    		   * @param {HTMLElement} element - The new element
    		   * @returns {void}
    		   */


    		  this.add = function (element) {
    		    that.addSource(element);
    		    that.addTarget(element);
    		  };
    		  /**
    		   * Remove a source element from this synchronizer
    		   *
    		   * @param {HTMLElement} element - The element to be removed
    		   * @returns {void}
    		   */


    		  this.removeSource = function (element) {
    		    // Find the index of this element
    		    var index = sourceElements.indexOf(element);

    		    if (index === -1) {
    		      return;
    		    } // Remove this element from the array


    		    sourceElements.splice(index, 1); // Stop listening for the event

    		    event.split(' ').forEach(function (oneEvent) {
    		      element.removeEventListener(oneEvent, onEvent);
    		    }); // Update the initial distances between elements

    		    that.getDistances(); // Update everyone listening for events

    		    fireEvent(element);
    		    that.updateDisableHandlers();
    		  };
    		  /**
    		   * Remove a target element from this synchronizer
    		   *
    		   * @param {HTMLElement} element - The element to be removed
    		   * @returns {void}
    		   */


    		  this.removeTarget = function (element) {
    		    // Find the index of this element
    		    var index = targetElements.indexOf(element);

    		    if (index === -1) {
    		      return;
    		    } // Remove this element from the array


    		    targetElements.splice(index, 1); // Update the initial distances between elements

    		    that.getDistances(); // Invoke the handler for the removed target

    		    eventHandler(that, element, element, 0);
    		    that.updateDisableHandlers();
    		  };
    		  /**
    		   * Remove an element from this synchronizer as both a target and source
    		   *
    		   * @param {HTMLElement} element - The element to be removed
    		   * @returns {void}
    		   */


    		  this.remove = function (element) {
    		    that.removeTarget(element);
    		    that.removeSource(element);
    		  };
    		  /**
    		   * Get the array of source elements
    		   *
    		   * @returns {HTMLElement[]}
    		   */


    		  this.getSourceElements = function () {
    		    return sourceElements;
    		  };
    		  /**
    		   * Get the array of target elements
    		   *
    		   * @returns {HTMLElement[]}
    		   */


    		  this.getTargetElements = function () {
    		    return targetElements;
    		  };
    		  /**
    		   * Display an image while halting synchronization
    		   *
    		   * @param {HTMLElement} element - The element containing the image
    		   * @param {Object} image - The cornerstone image object
    		   * @param {Object} viewport - The cornerstone viewport object
    		   * @returns {void}
    		   */


    		  this.displayImage = function (element, image, viewport) {
    		    ignoreFiredEvents = true;
    		    cornerstone.displayImage(element, image, viewport);
    		    ignoreFiredEvents = false;
    		  };
    		  /**
    		   * Update a viewport while halting synchronization
    		   *
    		   * @param {HTMLElement} element - The target element
    		   * @param {Object} viewport - The new cornerstone viewport object
    		   * @returns {void}
    		   */


    		  this.setViewport = function (element, viewport) {
    		    ignoreFiredEvents = true;
    		    cornerstone.setViewport(element, viewport);
    		    ignoreFiredEvents = false;
    		  };
    		  /**
    		   * Remove an element from the synchronizer based on an event from that element
    		   *
    		   * @private
    		   * @param {Event} e - The event whose element will be removed
    		   * @returns {void}
    		   */


    		  function disableHandler(e) {
    		    var element = e.detail.element;
    		    that.remove(element);
    		    Object(_toolOptions_js__WEBPACK_IMPORTED_MODULE_2__["clearToolOptionsByElement"])(element);
    		  }
    		  /**
    		   * Add an event listener to each element that can remove it from the synchronizer
    		   * @returns {void}
    		   */


    		  this.updateDisableHandlers = function () {
    		    var elements = unique(sourceElements.concat(targetElements));
    		    elements.forEach(function (element) {
    		      element.removeEventListener(_externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.EVENTS.ELEMENT_DISABLED, disableHandler);
    		      element.addEventListener(_externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.EVENTS.ELEMENT_DISABLED, disableHandler);
    		    });
    		  };
    		  /**
    		   * Remove all elements from this synchronizer
    		   *  @returns {void}
    		   */


    		  this.destroy = function () {
    		    var elements = unique(sourceElements.concat(targetElements));
    		    elements.forEach(function (element) {
    		      that.remove(element);
    		    });
    		  };
    		}

    		/* harmony default export */ __webpack_exports__["default"] = (Synchronizer);

    		/***/ }),

    		/***/ "./synchronization/panZoomSynchronizer.js":
    		/*!************************************************!*\
    		  !*** ./synchronization/panZoomSynchronizer.js ***!
    		  \************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");

    		/**
    		 * Synchronize the target zoom and pan to match the source
    		 * @export
    		 * @public
    		 * @method
    		 * @name panZoomSynchronizer
    		 *
    		 * @param {Object} synchronizer - The Synchronizer instance that attaches this
    		 * handler to an event
    		 * @param {HTMLElement} sourceElement - The source element for the zoom and pan values
    		 * @param {HTMLElement} targetElement - The target element
    		 * @returns {void}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (synchronizer, sourceElement, targetElement) {
    		  // Ignore the case where the source and target are the same enabled element
    		  if (targetElement === sourceElement) {
    		    return;
    		  }

    		  var cornerstone = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone; // Get the source and target viewports

    		  var sourceViewport = cornerstone.getViewport(sourceElement);
    		  var targetViewport = cornerstone.getViewport(targetElement); // Do nothing if the scale and translation are the same

    		  if (targetViewport.scale === sourceViewport.scale && targetViewport.translation.x === sourceViewport.translation.x && targetViewport.translation.y === sourceViewport.translation.y) {
    		    return;
    		  } // Scale and/or translation are different, sync them


    		  targetViewport.scale = sourceViewport.scale;
    		  targetViewport.translation.x = sourceViewport.translation.x;
    		  targetViewport.translation.y = sourceViewport.translation.y;
    		  synchronizer.setViewport(targetElement, targetViewport);
    		});

    		/***/ }),

    		/***/ "./synchronization/stackImageIndexSynchronizer.js":
    		/*!********************************************************!*\
    		  !*** ./synchronization/stackImageIndexSynchronizer.js ***!
    		  \********************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _stateManagement_loadHandlerManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../stateManagement/loadHandlerManager.js */ "./stateManagement/loadHandlerManager.js");
    		/* harmony import */ var _util_clip_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/clip.js */ "./util/clip.js");




    		/**
    		 * Synchronize the target stack to the index closest to the source stack's index
    		 * @export
    		 * @public
    		 * @method
    		 * @name stackImageIndexSynchronizer
    		 *
    		 * @param {Object} synchronizer - The Synchronizer instance that attaches this
    		 * handler to an event
    		 * @param {HTMLElement} sourceElement - The source element for the index value
    		 * @param {HTMLElement} targetElement - The target element
    		 * @returns {void}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (synchronizer, sourceElement, targetElement) {
    		  // Ignore the case where the source and target are the same enabled element
    		  if (targetElement === sourceElement) {
    		    return;
    		  }

    		  var cornerstone = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone;
    		  var sourceStackToolDataSource = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_1__["getToolState"])(sourceElement, 'stack');
    		  var sourceStackData = sourceStackToolDataSource.data[0];
    		  var targetStackToolDataSource = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_1__["getToolState"])(targetElement, 'stack');
    		  var targetStackData = targetStackToolDataSource.data[0];
    		  var newImageIdIndex = sourceStackData.currentImageIdIndex; // Clamp the index

    		  newImageIdIndex = Object(_util_clip_js__WEBPACK_IMPORTED_MODULE_3__["default"])(newImageIdIndex, 0, targetStackData.imageIds.length - 1); // Do nothing if the index has not changed

    		  if (newImageIdIndex === targetStackData.currentImageIdIndex) {
    		    return;
    		  }

    		  var startLoadingHandler = _stateManagement_loadHandlerManager_js__WEBPACK_IMPORTED_MODULE_2__["default"].getStartLoadHandler(targetElement);
    		  var endLoadingHandler = _stateManagement_loadHandlerManager_js__WEBPACK_IMPORTED_MODULE_2__["default"].getEndLoadHandler(targetElement);
    		  var errorLoadingHandler = _stateManagement_loadHandlerManager_js__WEBPACK_IMPORTED_MODULE_2__["default"].getErrorLoadingHandler(targetElement);

    		  if (startLoadingHandler) {
    		    startLoadingHandler(targetElement);
    		  }

    		  var loader;

    		  if (targetStackData.preventCache === true) {
    		    loader = cornerstone.loadImage(targetStackData.imageIds[newImageIdIndex]);
    		  } else {
    		    loader = cornerstone.loadAndCacheImage(targetStackData.imageIds[newImageIdIndex]);
    		  }

    		  loader.then(function (image) {
    		    var viewport = cornerstone.getViewport(targetElement);
    		    targetStackData.currentImageIdIndex = newImageIdIndex;
    		    synchronizer.displayImage(targetElement, image, viewport);

    		    if (endLoadingHandler) {
    		      endLoadingHandler(targetElement, image);
    		    }
    		  }, function (error) {
    		    var imageId = targetStackData.imageIds[newImageIdIndex];

    		    if (errorLoadingHandler) {
    		      errorLoadingHandler(targetElement, imageId, error);
    		    }
    		  });
    		});

    		/***/ }),

    		/***/ "./synchronization/stackImagePositionOffsetSynchronizer.js":
    		/*!*****************************************************************!*\
    		  !*** ./synchronization/stackImagePositionOffsetSynchronizer.js ***!
    		  \*****************************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _stateManagement_loadHandlerManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../stateManagement/loadHandlerManager.js */ "./stateManagement/loadHandlerManager.js");
    		/* harmony import */ var _util_convertToVector3_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/convertToVector3.js */ "./util/convertToVector3.js");



    		 // In the future we will want to have a way to manually register links sets of the same orientation (e.g. an axial link set from a prior with an axial link set of a current).  The user could do this by scrolling the two stacks to a similar location and then doing a user action (e.g. right click link) at which point the system will capture the delta between the image position (patient) of both stacks and use that to sync them.  This offset will need to be adjustable.

    		/**
    		 * Calculate a position in space that is offset from the source image's position,
    		 * and synchronize the target stack to the image that is closest to that position.
    		 * @export
    		 * @public
    		 * @method
    		 * @name stackImagePositionOffsetSynchronizer
    		 *
    		 * @param {Object} synchronizer - The Synchronizer instance that attaches this
    		 * handler to an event
    		 * @param {HTMLElement} sourceElement - The source element
    		 * @param {HTMLElement} targetElement - The target element
    		 * @param {Object} eventData - The data object from the triggering event
    		 * @param {Object} positionDifference - An object with { x, y, z } values that will be
    		 * added to the source image's coordinates
    		 * @returns {void}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (synchronizer, sourceElement, targetElement, eventData, positionDifference) {
    		  // Ignore the case where the source and target are the same enabled element
    		  if (targetElement === sourceElement) {
    		    return;
    		  }

    		  var cornerstone = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone;
    		  var sourceStackData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_1__["getToolState"])(sourceElement, 'stack').data[0];
    		  var sourceImageId = sourceStackData.imageIds[sourceStackData.currentImageIdIndex];
    		  var sourceImagePlane = cornerstone.metaData.get('imagePlaneModule', sourceImageId);

    		  if (sourceImagePlane === undefined || sourceImagePlane.imagePositionPatient === undefined) {
    		    return;
    		  }

    		  var sourceImagePosition = Object(_util_convertToVector3_js__WEBPACK_IMPORTED_MODULE_3__["default"])(sourceImagePlane.imagePositionPatient);
    		  var stackToolDataSource = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_1__["getToolState"])(targetElement, 'stack');
    		  var stackData = stackToolDataSource.data[0];
    		  var minDistance = Number.MAX_VALUE;
    		  var newImageIdIndex = -1;

    		  if (!positionDifference) {
    		    return;
    		  }

    		  var finalPosition = sourceImagePosition.clone().add(positionDifference);
    		  stackData.imageIds.forEach(function (imageId, index) {
    		    var imagePlane = cornerstone.metaData.get('imagePlaneModule', imageId);

    		    if (imagePlane === undefined || imagePlane.imagePositionPatient === undefined) {
    		      return;
    		    }

    		    var imagePosition = Object(_util_convertToVector3_js__WEBPACK_IMPORTED_MODULE_3__["default"])(imagePlane.imagePositionPatient);
    		    var distance = finalPosition.distanceToSquared(imagePosition);

    		    if (distance < minDistance) {
    		      minDistance = distance;
    		      newImageIdIndex = index;
    		    }
    		  });

    		  if (newImageIdIndex === stackData.currentImageIdIndex || newImageIdIndex === -1) {
    		    return;
    		  }

    		  var startLoadingHandler = _stateManagement_loadHandlerManager_js__WEBPACK_IMPORTED_MODULE_2__["default"].getStartLoadHandler(targetElement);
    		  var endLoadingHandler = _stateManagement_loadHandlerManager_js__WEBPACK_IMPORTED_MODULE_2__["default"].getEndLoadHandler(targetElement);
    		  var errorLoadingHandler = _stateManagement_loadHandlerManager_js__WEBPACK_IMPORTED_MODULE_2__["default"].getErrorLoadingHandler(targetElement);
    		  stackData.currentImageIdIndex = newImageIdIndex;
    		  var newImageId = stackData.imageIds[newImageIdIndex];

    		  if (startLoadingHandler) {
    		    startLoadingHandler(targetElement);
    		  }

    		  var loader;

    		  if (stackData.preventCache === true) {
    		    loader = cornerstone.loadImage(newImageId);
    		  } else {
    		    loader = cornerstone.loadAndCacheImage(newImageId);
    		  }

    		  loader.then(function (image) {
    		    var viewport = cornerstone.getViewport(targetElement);

    		    if (stackData.currentImageIdIndex !== newImageIdIndex) {
    		      return;
    		    }

    		    synchronizer.displayImage(targetElement, image, viewport);

    		    if (endLoadingHandler) {
    		      endLoadingHandler(targetElement, image);
    		    }
    		  }, function (error) {
    		    var imageId = stackData.imageIds[newImageIdIndex];

    		    if (errorLoadingHandler) {
    		      errorLoadingHandler(targetElement, imageId, error);
    		    }
    		  });
    		});

    		/***/ }),

    		/***/ "./synchronization/stackImagePositionSynchronizer.js":
    		/*!***********************************************************!*\
    		  !*** ./synchronization/stackImagePositionSynchronizer.js ***!
    		  \***********************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _stateManagement_loadHandlerManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../stateManagement/loadHandlerManager.js */ "./stateManagement/loadHandlerManager.js");
    		/* harmony import */ var _util_convertToVector3_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/convertToVector3.js */ "./util/convertToVector3.js");




    		/**
    		 * Synchronize the target stack to the image closest to the source image's position
    		 * @export
    		 * @public
    		 * @method
    		 * @name stackImagePositionSynchronizer
    		 *
    		 * @param {Object} synchronizer - The Synchronizer instance that attaches this
    		 * handler to an event
    		 * @param {HTMLElement} sourceElement - The source element for the image position
    		 * @param {HTMLElement} targetElement - The target element
    		 * @returns {void}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (synchronizer, sourceElement, targetElement) {
    		  // Ignore the case where the source and target are the same enabled element
    		  if (targetElement === sourceElement) {
    		    return;
    		  }

    		  var cornerstone = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone;
    		  var sourceStackData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_1__["getToolState"])(sourceElement, 'stack').data[0];
    		  var sourceImageId = sourceStackData.imageIds[sourceStackData.currentImageIdIndex];
    		  var sourceImagePlane = cornerstone.metaData.get('imagePlaneModule', sourceImageId);

    		  if (sourceImagePlane === undefined || sourceImagePlane.imagePositionPatient === undefined) {
    		    // Console.log('No position found for image ' + sourceImage.imageId);
    		    return;
    		  }

    		  var sourceImagePosition = Object(_util_convertToVector3_js__WEBPACK_IMPORTED_MODULE_3__["default"])(sourceImagePlane.imagePositionPatient);
    		  var stackToolDataSource = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_1__["getToolState"])(targetElement, 'stack');
    		  var stackData = stackToolDataSource.data[0];
    		  var minDistance = Number.MAX_VALUE;
    		  var newImageIdIndex = -1;
    		  stackData.imageIds.forEach(function (imageId, index) {
    		    var imagePlane = cornerstone.metaData.get('imagePlaneModule', imageId);

    		    if (imagePlane === undefined || imagePlane.imagePositionPatient === undefined) {
    		      // Console.log('No position found for image ' + imageId);
    		      return;
    		    }

    		    var imagePosition = Object(_util_convertToVector3_js__WEBPACK_IMPORTED_MODULE_3__["default"])(imagePlane.imagePositionPatient);
    		    var distance = imagePosition.distanceToSquared(sourceImagePosition); // Console.log(index + '=' + distance);

    		    if (distance < minDistance) {
    		      minDistance = distance;
    		      newImageIdIndex = index;
    		    }
    		  });

    		  if (newImageIdIndex === stackData.currentImageIdIndex) {
    		    return;
    		  }

    		  var startLoadingHandler = _stateManagement_loadHandlerManager_js__WEBPACK_IMPORTED_MODULE_2__["default"].getStartLoadHandler(targetElement);
    		  var endLoadingHandler = _stateManagement_loadHandlerManager_js__WEBPACK_IMPORTED_MODULE_2__["default"].getEndLoadHandler(targetElement);
    		  var errorLoadingHandler = _stateManagement_loadHandlerManager_js__WEBPACK_IMPORTED_MODULE_2__["default"].getErrorLoadingHandler(targetElement);
    		  stackData.currentImageIdIndex = newImageIdIndex;
    		  var newImageId = stackData.imageIds[newImageIdIndex];

    		  if (startLoadingHandler) {
    		    startLoadingHandler(targetElement);
    		  }

    		  if (newImageIdIndex !== -1) {
    		    var loader;

    		    if (stackData.preventCache === true) {
    		      loader = cornerstone.loadImage(newImageId);
    		    } else {
    		      loader = cornerstone.loadAndCacheImage(newImageId);
    		    }

    		    loader.then(function (image) {
    		      var viewport = cornerstone.getViewport(targetElement);

    		      if (stackData.currentImageIdIndex !== newImageIdIndex) {
    		        return;
    		      }

    		      synchronizer.displayImage(targetElement, image, viewport);

    		      if (endLoadingHandler) {
    		        endLoadingHandler(targetElement, image);
    		      }
    		    }, function (error) {
    		      var imageId = stackData.imageIds[newImageIdIndex];

    		      if (errorLoadingHandler) {
    		        errorLoadingHandler(targetElement, imageId, error);
    		      }
    		    });
    		  }
    		});

    		/***/ }),

    		/***/ "./synchronization/stackScrollSynchronizer.js":
    		/*!****************************************************!*\
    		  !*** ./synchronization/stackScrollSynchronizer.js ***!
    		  \****************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _stateManagement_loadHandlerManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../stateManagement/loadHandlerManager.js */ "./stateManagement/loadHandlerManager.js");
    		/* harmony import */ var _util_clip_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/clip.js */ "./util/clip.js");




    		/**
    		 * Propogate scrolling actions from the source element to the target element.
    		 * @export
    		 * @public
    		 * @method
    		 * @name stackScrollSynchronizer
    		 *
    		 * @param {Object} synchronizer - The Synchronizer instance that attaches this
    		 * handler to an event
    		 * @param {HTMLElement} sourceElement - The source element for the scroll event
    		 * @param {HTMLElement} targetElement - The target element
    		 * @param {Object} eventData - The data object from the triggering event
    		 * @returns {void}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (synchronizer, sourceElement, targetElement, eventData) {
    		  // If the target and source are the same, stop
    		  if (sourceElement === targetElement) {
    		    return;
    		  } // If there is no event, or direction is 0, stop


    		  if (!eventData || !eventData.direction) {
    		    return;
    		  }

    		  var cornerstone = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone; // Get the stack of the target viewport

    		  var stackToolDataSource = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_1__["getToolState"])(targetElement, 'stack');
    		  var stackData = stackToolDataSource.data[0]; // Get the new index for the stack

    		  var newImageIdIndex = stackData.currentImageIdIndex + eventData.direction; // Ensure the index does not exceed the bounds of the stack

    		  newImageIdIndex = Object(_util_clip_js__WEBPACK_IMPORTED_MODULE_3__["default"])(newImageIdIndex, 0, stackData.imageIds.length - 1); // If the index has not changed, stop here

    		  if (stackData.currentImageIdIndex === newImageIdIndex) {
    		    return;
    		  }

    		  var startLoadingHandler = _stateManagement_loadHandlerManager_js__WEBPACK_IMPORTED_MODULE_2__["default"].getStartLoadHandler(targetElement);
    		  var endLoadingHandler = _stateManagement_loadHandlerManager_js__WEBPACK_IMPORTED_MODULE_2__["default"].getEndLoadHandler(targetElement);
    		  var errorLoadingHandler = _stateManagement_loadHandlerManager_js__WEBPACK_IMPORTED_MODULE_2__["default"].getErrorLoadingHandler(targetElement);
    		  stackData.currentImageIdIndex = newImageIdIndex;
    		  var newImageId = stackData.imageIds[newImageIdIndex];

    		  if (startLoadingHandler) {
    		    startLoadingHandler(targetElement);
    		  }

    		  var loader;

    		  if (stackData.preventCache === true) {
    		    loader = cornerstone.loadImage(newImageId);
    		  } else {
    		    loader = cornerstone.loadAndCacheImage(newImageId);
    		  }

    		  loader.then(function (image) {
    		    var viewport = cornerstone.getViewport(targetElement);

    		    if (stackData.currentImageIdIndex !== newImageIdIndex) {
    		      return;
    		    }

    		    synchronizer.displayImage(targetElement, image, viewport);

    		    if (endLoadingHandler) {
    		      endLoadingHandler(targetElement, image);
    		    }
    		  }, function (error) {
    		    var imageId = stackData.imageIds[newImageIdIndex];

    		    if (errorLoadingHandler) {
    		      errorLoadingHandler(targetElement, imageId, error);
    		    }
    		  });
    		});

    		/***/ }),

    		/***/ "./synchronization/updateImageSynchronizer.js":
    		/*!****************************************************!*\
    		  !*** ./synchronization/updateImageSynchronizer.js ***!
    		  \****************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");

    		/**
    		 * Redraw target image immediately any time handler is called from source element.
    		 * @export
    		 * @public
    		 * @method
    		 * @name updateImageSynchronizer
    		 *
    		 * @param {Object} synchronizer - The Synchronizer instance that attaches this
    		 * handler to an event
    		 * @param {HTMLElement} sourceElement - The source element
    		 * @param {HTMLElement} targetElement - The target element
    		 * @returns {void}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (synchronizer, sourceElement, targetElement) {
    		  // Ignore the case where the source and target are the same enabled element
    		  if (targetElement === sourceElement) {
    		    return;
    		  }

    		  _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.updateImage(targetElement);
    		});

    		/***/ }),

    		/***/ "./synchronization/wwwcSynchronizer.js":
    		/*!*********************************************!*\
    		  !*** ./synchronization/wwwcSynchronizer.js ***!
    		  \*********************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");

    		/**
    		 * Synchronize the target viewport ww/wc to match the source element.
    		 * @export
    		 * @public
    		 * @method
    		 * @name wwwcSynchronizer
    		 *
    		 * @param {Object} synchronizer - The Synchronizer instance that attaches this
    		 * handler to an event
    		 * @param {HTMLElement} sourceElement - The source element for the ww/wc values
    		 * @param {HTMLElement} targetElement - The target element
    		 * @returns {void}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (synchronizer, sourceElement, targetElement) {
    		  // Ignore the case where the source and target are the same enabled element
    		  if (targetElement === sourceElement) {
    		    return;
    		  }

    		  var cornerstone = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone; // Get the source and target viewports

    		  var sourceViewport = cornerstone.getViewport(sourceElement);
    		  var targetViewport = cornerstone.getViewport(targetElement); // Do nothing if the ww/wc already match

    		  if (targetViewport.voi.windowWidth === sourceViewport.voi.windowWidth && targetViewport.voi.windowCenter === sourceViewport.voi.windowCenter && targetViewport.invert === sourceViewport.invert) {
    		    return;
    		  } // Www/wc are different, sync them


    		  targetViewport.voi.windowWidth = sourceViewport.voi.windowWidth;
    		  targetViewport.voi.windowCenter = sourceViewport.voi.windowCenter;
    		  targetViewport.invert = sourceViewport.invert;
    		  synchronizer.setViewport(targetElement, targetViewport);
    		});

    		/***/ }),

    		/***/ "./thirdParty/register.js":
    		/*!********************************!*\
    		  !*** ./thirdParty/register.js ***!
    		  \********************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "../node_modules/@babel/runtime/helpers/typeof.js");
    		/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _registerModule_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./registerModule.js */ "./thirdParty/registerModule.js");
    		/* harmony import */ var _registerMixin_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./registerMixin.js */ "./thirdParty/registerMixin.js");
    		/* harmony import */ var _registerItem_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./registerItem.js */ "./thirdParty/registerItem.js");
    		/* harmony import */ var _util_logger_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/logger.js */ "./util/logger.js");





    		var logger = Object(_util_logger_js__WEBPACK_IMPORTED_MODULE_4__["getLogger"])('thirdParty:register');
    		/**
    		 * Register an item or module to cornerstoneTools.
    		 * @export
    		 * @public
    		 * @method
    		 * @name register
    		 *
    		 * @param {string} type The type of the item/module.
    		 * @param {string} name The name of the item/module.
    		 * @param {Object|function} item The item/module itself.
    		 * @param {boolean} [overwrite=false] Whether an item/module should be
    		 *                                    overwritten, should it have the same name.
    		 * @returns {void}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (type, name, item) {
    		  var overwrite = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

    		  if (!isValidInput(type, name, item)) {
    		    return;
    		  }

    		  switch (type) {
    		    case 'module':
    		      Object(_registerModule_js__WEBPACK_IMPORTED_MODULE_1__["default"])(name, item, overwrite);
    		      break;

    		    case 'mixin':
    		      Object(_registerMixin_js__WEBPACK_IMPORTED_MODULE_2__["default"])(name, item, overwrite);
    		      break;

    		    default:
    		      Object(_registerItem_js__WEBPACK_IMPORTED_MODULE_3__["default"])(type, name, item, overwrite);
    		  }
    		});
    		/**
    		 * Returns true if the item is valid, this avoids
    		 * clogging up the library with invalid data.
    		 * @private
    		 * @method
    		 * @name isValidInput
    		 *
    		 * @param {string} type The type of the item/module.
    		 * @param {string} name The name of the item/module.
    		 * @param {Object|function} item The item/module itself.
    		 * @returns {boolean}    Whether the input is valid.
    		 */

    		function isValidInput(type, name, item) {
    		  if (!type) {
    		    logger.warn('The type must be given in order to register.');
    		    return false;
    		  }

    		  if (!name) {
    		    logger.warn("The %s must have a name in order to register.", type);
    		    return false;
    		  }

    		  if (_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(item) !== 'object' && typeof item !== 'function') {
    		    logger.warn("The %s is a %s, it should be an Object or a function.", item, _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(item));
    		    return false;
    		  }

    		  return true;
    		}

    		/***/ }),

    		/***/ "./thirdParty/registerItem.js":
    		/*!************************************!*\
    		  !*** ./thirdParty/registerItem.js ***!
    		  \************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _lib_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib.js */ "./lib.js");
    		/* harmony import */ var _util_logger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/logger.js */ "./util/logger.js");


    		var logger = Object(_util_logger_js__WEBPACK_IMPORTED_MODULE_1__["getLogger"])('thirdParty:registerType');
    		/**
    		 * Register an item to cornerstoneTools.
    		 * @export
    		 * @private
    		 * @method
    		 * @name registerItem
    		 *
    		 * @param {string} type The type of the item.
    		 * @param {string} name The name of the item.
    		 * @param {Object|function} item The item itself.
    		 * @param {boolean} [overwrite=false] Whether an item should be overwritten,
    		 *                                    should it have the same name.
    		 * @returns {void}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (type, name, item) {
    		  var overwrite = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
    		  var itemKey = "".concat(type, "/").concat(name);
    		  var alreadyRegistered = isItemNameRegistered(itemKey);

    		  if (alreadyRegistered && !overwrite) {
    		    logger.warn('%s is already registered', itemKey);
    		    return;
    		  }

    		  if (alreadyRegistered) {
    		    logger.warn('Overwriting %s', itemKey);
    		  }

    		  _lib_js__WEBPACK_IMPORTED_MODULE_0__["lib"][itemKey] = item;
    		});

    		function isItemNameRegistered(itemKey) {
    		  return _lib_js__WEBPACK_IMPORTED_MODULE_0__["lib"][itemKey] !== undefined;
    		}

    		/***/ }),

    		/***/ "./thirdParty/registerMixin.js":
    		/*!*************************************!*\
    		  !*** ./thirdParty/registerMixin.js ***!
    		  \*************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _lib_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib.js */ "./lib.js");
    		/* harmony import */ var _mixins_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../mixins/index.js */ "./mixins/index.js");
    		/* harmony import */ var _util_logger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/logger.js */ "./util/logger.js");



    		var logger = Object(_util_logger_js__WEBPACK_IMPORTED_MODULE_2__["getLogger"])('thirdParty:registerMixin');
    		/**
    		 * Register an mixin to cornerstoneTools.
    		 * @export
    		 * @private
    		 * @method
    		 * @name registerMixin
    		 *
    		 * @param {string} name The name of the mixin.
    		 * @param {Object} mixin The mixin itself.
    		 * @param {boolean} [overwrite=false] Whether an mixin should be overwritten,
    		 *                                    should it have the same name.
    		 * @returns {void}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (name, mixin) {
    		  var overwrite = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    		  var alreadyRegistered = isMixinRegistered(name);

    		  if (alreadyRegistered && !overwrite) {
    		    logger.warn('mixins/%s is already registered', name);
    		    return;
    		  }

    		  if (alreadyRegistered) {
    		    logger.warn('Overwriting mixins/%s', name);
    		  } // Register to the mixins object


    		  _mixins_index_js__WEBPACK_IMPORTED_MODULE_1__["default"][name] = mixin; // Reference the mixin from the library so it can be exported externally.

    		  _lib_js__WEBPACK_IMPORTED_MODULE_0__["lib"]["mixins/".concat(name)] = _mixins_index_js__WEBPACK_IMPORTED_MODULE_1__["default"][name];
    		});

    		function isMixinRegistered(name) {
    		  return _mixins_index_js__WEBPACK_IMPORTED_MODULE_1__["default"][name] !== undefined;
    		}

    		/***/ }),

    		/***/ "./thirdParty/registerModule.js":
    		/*!**************************************!*\
    		  !*** ./thirdParty/registerModule.js ***!
    		  \**************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _store_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../store/index.js */ "./store/index.js");
    		/* harmony import */ var _util_logger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/logger.js */ "./util/logger.js");


    		var logger = Object(_util_logger_js__WEBPACK_IMPORTED_MODULE_1__["getLogger"])('thirdParty:registerModule');
    		/**
    		 * Register a module.
    		 * @export
    		 * @private
    		 * @method
    		 * @name registerModule
    		 *
    		 * @param {string} name The name of the module.
    		 * @param {Object} newModule The module to register.
    		 * @param {boolean} [overwrite] Whether a module should be overwritten,
    		 *                              should it have the same name.
    		 * @returns {void}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (name, newModule) {
    		  var overwrite = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    		  var alreadyRegistered = isModuleNameRegistered(name);

    		  if (alreadyRegistered && !overwrite) {
    		    logger.warn('A module with the name %s is already registered', name);
    		    return;
    		  }

    		  if (alreadyRegistered) {
    		    logger.warn('Overwriting module %s', name);
    		  }

    		  _store_index_js__WEBPACK_IMPORTED_MODULE_0__["modules"][name] = newModule;
    		});

    		function isModuleNameRegistered(name) {
    		  return _store_index_js__WEBPACK_IMPORTED_MODULE_0__["modules"][name] !== undefined;
    		}

    		/***/ }),

    		/***/ "./thirdParty/registerSome.js":
    		/*!************************************!*\
    		  !*** ./thirdParty/registerSome.js ***!
    		  \************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _register_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./register.js */ "./thirdParty/register.js");

    		/**
    		 * Register an array of items and/or modules to cornerstoneTools.
    		 * @export
    		 * @public
    		 * @method
    		 * @name registerSome
    		 *
    		 * @param {Object[]} items An array of items/modules to register.
    		 * @param {boolean} [overwrite=false] Whether an item/module should be
    		 *                                    overwritten, should it have the same name.
    		 * @returns {void}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (items) {
    		  var overwrite = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    		  items.forEach(function (_ref) {
    		    var type = _ref.type,
    		        name = _ref.name,
    		        item = _ref.item;
    		    Object(_register_js__WEBPACK_IMPORTED_MODULE_0__["default"])(type, name, item, overwrite);
    		  });
    		});

    		/***/ }),

    		/***/ "./toolOptions.js":
    		/*!************************!*\
    		  !*** ./toolOptions.js ***!
    		  \************************/
    		/*! exports provided: getToolOptions, setToolOptions, clearToolOptions, clearToolOptionsByToolType, clearToolOptionsByElement */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getToolOptions", function() { return getToolOptions; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setToolOptions", function() { return setToolOptions; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clearToolOptions", function() { return clearToolOptions; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clearToolOptionsByToolType", function() { return clearToolOptionsByToolType; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clearToolOptionsByElement", function() { return clearToolOptionsByElement; });
    		var elementToolOptions = {};
    		/**
    		 * Retrieve the options object associated with a particular toolType and element
    		 * @export
    		 * @public
    		 * @method
    		 * @name getToolOptions
    		 *
    		 * @param {string} toolType Tool type identifier of the target options object
    		 * @param {HTMLElement} element Element of the target options object
    		 *
    		 * @returns {Object} Target options object (empty if not yet set)
    		 */

    		function getToolOptions(toolType, element) {
    		  if (!elementToolOptions[toolType]) {
    		    return {};
    		  }

    		  var toolOptions = elementToolOptions[toolType];
    		  var optionsObject = toolOptions.find(function (toolOptionObject) {
    		    return toolOptionObject.element === element;
    		  });

    		  if (!optionsObject) {
    		    return {};
    		  }

    		  return optionsObject.options;
    		}
    		/**
    		 * Set the options object associated with a particular toolType and element.
    		 * @export
    		 * @public
    		 * @method
    		 * @name setToolOptions
    		 *
    		 * @param {string} toolType Tool type identifier of the target options object.
    		 * @param {HTMLElement} element Element of the target options object.
    		 * @param {Object} options Options object to store at target.
    		 * @returns {void}
    		 */


    		function setToolOptions(toolType, element, options) {
    		  if (!elementToolOptions[toolType]) {
    		    elementToolOptions[toolType] = [{
    		      element: element,
    		      options: options
    		    }];
    		    return;
    		  }

    		  var toolOptions = elementToolOptions[toolType];
    		  var index = toolOptions.findIndex(function (toolOptionObject) {
    		    return toolOptionObject.element === element;
    		  });

    		  if (index === -1) {
    		    elementToolOptions[toolType].push({
    		      element: element,
    		      options: options
    		    });
    		  } else {
    		    var elementOptions = elementToolOptions[toolType][index].options || {};
    		    elementToolOptions[toolType][index].options = Object.assign(elementOptions, options);
    		  }
    		}
    		/**
    		 * Clear the options object associated with a particular toolType and element.
    		 * @export
    		 * @public
    		 * @method
    		 * @name clearToolOptions
    		 *
    		 * @param {string} toolType Tool type identifier of the target options object.
    		 * @param {HTMLElement} element Element of the target options object.
    		 * @returns {void}
    		 */


    		function clearToolOptions(toolType, element) {
    		  var toolOptions = elementToolOptions[toolType];

    		  if (toolOptions) {
    		    elementToolOptions[toolType] = toolOptions.filter(function (toolOptionObject) {
    		      return toolOptionObject.element !== element;
    		    });
    		  }
    		}
    		/**
    		 * Clear the options objects associated with a particular toolType.
    		 * @export
    		 * @public
    		 * @method
    		 * @name clearToolOptionsByToolType
    		 *
    		 * @param {string} toolType Tool type identifier of the target options objects.
    		 * @returns {void}
    		 */


    		function clearToolOptionsByToolType(toolType) {
    		  delete elementToolOptions[toolType];
    		}
    		/**
    		 * Clear the options objects associated with a particular element.
    		 * @export
    		 * @public
    		 * @method
    		 * @name clearToolOptionsByElement
    		 *
    		 * @param {HTMLElement} element Element of the target options objects.
    		 * @returns {void}
    		 */


    		function clearToolOptionsByElement(element) {
    		  for (var toolType in elementToolOptions) {
    		    elementToolOptions[toolType] = elementToolOptions[toolType].filter(function (toolOptionObject) {
    		      return toolOptionObject.element !== element;
    		    });
    		  }
    		}



    		/***/ }),

    		/***/ "./tools/CrosshairsTool.js":
    		/*!*********************************!*\
    		  !*** ./tools/CrosshairsTool.js ***!
    		  \*********************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return CrosshairsTool; });
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__);
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__);
    		/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "../node_modules/@babel/runtime/helpers/assertThisInitialized.js");
    		/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__);
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__);
    		/* harmony import */ var _base_BaseTool_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./base/BaseTool.js */ "./tools/base/BaseTool.js");
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _stateManagement_loadHandlerManager_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../stateManagement/loadHandlerManager.js */ "./stateManagement/loadHandlerManager.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _util_pointProjector_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../util/pointProjector.js */ "./util/pointProjector.js");
    		/* harmony import */ var _util_convertToVector3_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../util/convertToVector3.js */ "./util/convertToVector3.js");
    		/* harmony import */ var _toolOptions_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../toolOptions.js */ "./toolOptions.js");
    		/* harmony import */ var _cursors_index_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./cursors/index.js */ "./tools/cursors/index.js");














    		/**
    		 * @public
    		 * @class CrosshairsTool
    		 * @memberof Tools
    		 *
    		 * @classdesc Tool for finding the slice in another element corresponding to the
    		 * image position in a synchronized image series.
    		 * @extends Tools.Base.BaseTool
    		 */

    		var CrosshairsTool =
    		/*#__PURE__*/
    		function (_BaseTool) {
    		  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5___default()(CrosshairsTool, _BaseTool);

    		  function CrosshairsTool() {
    		    var _this;

    		    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    		    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, CrosshairsTool);

    		    var defaultProps = {
    		      name: 'Crosshairs',
    		      supportedInteractionTypes: ['Mouse', 'Touch'],
    		      svgCursor: _cursors_index_js__WEBPACK_IMPORTED_MODULE_13__["crosshairsCursor"]
    		    };
    		    _this = _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(CrosshairsTool).call(this, props, defaultProps));
    		    _this.mouseDownCallback = _this._chooseLocation.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    _this.mouseDragCallback = _this._chooseLocation.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    _this.touchDragCallback = _this._chooseLocation.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    return _this;
    		  }

    		  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(CrosshairsTool, [{
    		    key: "_chooseLocation",
    		    value: function _chooseLocation(evt) {
    		      var eventData = evt.detail;
    		      var element = eventData.element; // Prevent CornerstoneToolsTouchStartActive from killing any press events

    		      evt.stopImmediatePropagation(); // If we have no toolData for this element, return immediately as there is nothing to do

    		      var toolData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_9__["getToolState"])(element, this.name);

    		      if (!toolData) {
    		        return;
    		      } // Get current element target information


    		      var sourceElement = element;
    		      var sourceEnabledElement = _externalModules_js__WEBPACK_IMPORTED_MODULE_7__["default"].cornerstone.getEnabledElement(sourceElement);
    		      var sourceImageId = sourceEnabledElement.image.imageId;
    		      var sourceImagePlane = _externalModules_js__WEBPACK_IMPORTED_MODULE_7__["default"].cornerstone.metaData.get('imagePlaneModule', sourceImageId);

    		      if (!sourceImagePlane) {
    		        return;
    		      } // Get currentPoints from mouse cursor on selected element


    		      var sourceImagePoint = eventData.currentPoints.image; // Transfer this to a patientPoint given imagePlane metadata

    		      var patientPoint = Object(_util_pointProjector_js__WEBPACK_IMPORTED_MODULE_10__["imagePointToPatientPoint"])(sourceImagePoint, sourceImagePlane); // Get the enabled elements associated with this synchronization context

    		      var syncContext = toolData.data[0].synchronizationContext;
    		      var enabledElements = syncContext.getSourceElements(); // Iterate over each synchronized element

    		      enabledElements.forEach(function (targetElement) {
    		        // Don't do anything if the target is the same as the source
    		        if (targetElement === sourceElement) {
    		          return;
    		        }

    		        var minDistance = Number.MAX_VALUE;
    		        var newImageIdIndex = -1;
    		        var stackToolDataSource = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_9__["getToolState"])(targetElement, 'stack');

    		        if (stackToolDataSource === undefined) {
    		          return;
    		        }

    		        var stackData = stackToolDataSource.data[0]; // Find within the element's stack the closest image plane to selected location

    		        stackData.imageIds.forEach(function (imageId, index) {
    		          var imagePlane = _externalModules_js__WEBPACK_IMPORTED_MODULE_7__["default"].cornerstone.metaData.get('imagePlaneModule', imageId); // Skip if the image plane is not ready

    		          if (!imagePlane || !imagePlane.imagePositionPatient || !imagePlane.rowCosines || !imagePlane.columnCosines) {
    		            return;
    		          }

    		          var imagePosition = Object(_util_convertToVector3_js__WEBPACK_IMPORTED_MODULE_11__["default"])(imagePlane.imagePositionPatient);
    		          var row = Object(_util_convertToVector3_js__WEBPACK_IMPORTED_MODULE_11__["default"])(imagePlane.rowCosines);
    		          var column = Object(_util_convertToVector3_js__WEBPACK_IMPORTED_MODULE_11__["default"])(imagePlane.columnCosines);
    		          var normal = column.clone().cross(row.clone());
    		          var distance = Math.abs(normal.clone().dot(imagePosition) - normal.clone().dot(patientPoint));

    		          if (distance < minDistance) {
    		            minDistance = distance;
    		            newImageIdIndex = index;
    		          }
    		        });

    		        if (newImageIdIndex === stackData.currentImageIdIndex) {
    		          return;
    		        } // Switch the loaded image to the required image


    		        if (newImageIdIndex !== -1 && stackData.imageIds[newImageIdIndex] !== undefined) {
    		          var startLoadingHandler = _stateManagement_loadHandlerManager_js__WEBPACK_IMPORTED_MODULE_8__["default"].getStartLoadHandler(targetElement);
    		          var endLoadingHandler = _stateManagement_loadHandlerManager_js__WEBPACK_IMPORTED_MODULE_8__["default"].getEndLoadHandler(targetElement);
    		          var errorLoadingHandler = _stateManagement_loadHandlerManager_js__WEBPACK_IMPORTED_MODULE_8__["default"].getErrorLoadingHandler(targetElement);

    		          if (startLoadingHandler) {
    		            startLoadingHandler(targetElement);
    		          }

    		          var loader;

    		          if (stackData.preventCache === true) {
    		            loader = _externalModules_js__WEBPACK_IMPORTED_MODULE_7__["default"].cornerstone.loadImage(stackData.imageIds[newImageIdIndex]);
    		          } else {
    		            loader = _externalModules_js__WEBPACK_IMPORTED_MODULE_7__["default"].cornerstone.loadAndCacheImage(stackData.imageIds[newImageIdIndex]);
    		          }

    		          loader.then(function (image) {
    		            var viewport = _externalModules_js__WEBPACK_IMPORTED_MODULE_7__["default"].cornerstone.getViewport(targetElement);
    		            stackData.currentImageIdIndex = newImageIdIndex;
    		            _externalModules_js__WEBPACK_IMPORTED_MODULE_7__["default"].cornerstone.displayImage(targetElement, image, viewport);

    		            if (endLoadingHandler) {
    		              endLoadingHandler(targetElement, image);
    		            }
    		          }, function (error) {
    		            var imageId = stackData.imageIds[newImageIdIndex];

    		            if (errorLoadingHandler) {
    		              errorLoadingHandler(targetElement, imageId, error);
    		            }
    		          });
    		        }
    		      });
    		    }
    		  }, {
    		    key: "activeCallback",
    		    value: function activeCallback(element, _ref) {
    		      var mouseButtonMask = _ref.mouseButtonMask,
    		          synchronizationContext = _ref.synchronizationContext;
    		      Object(_toolOptions_js__WEBPACK_IMPORTED_MODULE_12__["setToolOptions"])(this.name, element, {
    		        mouseButtonMask: mouseButtonMask
    		      }); // Clear any currently existing toolData

    		      Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_9__["clearToolState"])(element, this.name);
    		      Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_9__["addToolState"])(element, this.name, {
    		        synchronizationContext: synchronizationContext
    		      });
    		    }
    		  }]);

    		  return CrosshairsTool;
    		}(_base_BaseTool_js__WEBPACK_IMPORTED_MODULE_6__["default"]);



    		/***/ }),

    		/***/ "./tools/DoubleTapFitToWindowTool.js":
    		/*!*******************************************!*\
    		  !*** ./tools/DoubleTapFitToWindowTool.js ***!
    		  \*******************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return DoubleTapFitToWindowTool; });
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__);
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__);
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _base_BaseTool_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./base/BaseTool.js */ "./tools/base/BaseTool.js");







    		/**
    		 * @public
    		 * @class DoubleTapFitToWindowTool
    		 * @memberof Tools
    		 *
    		 * @classdesc Tool which calls the external cornerstone.fitToWindow() function
    		 * on double tap.
    		 * @extends Tools.Base.BaseTool
    		 */

    		var DoubleTapFitToWindowTool =
    		/*#__PURE__*/
    		function (_BaseTool) {
    		  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default()(DoubleTapFitToWindowTool, _BaseTool);

    		  function DoubleTapFitToWindowTool() {
    		    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    		    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, DoubleTapFitToWindowTool);

    		    var defaultProps = {
    		      name: 'DoubleTapFitToWindow',
    		      supportedInteractionTypes: ['DoubleTap']
    		    };
    		    return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(DoubleTapFitToWindowTool).call(this, props, defaultProps));
    		  }

    		  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(DoubleTapFitToWindowTool, [{
    		    key: "doubleTapCallback",
    		    value: function doubleTapCallback(evt) {
    		      var eventData = evt.detail;
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.fitToWindow(eventData.element);
    		    }
    		  }]);

    		  return DoubleTapFitToWindowTool;
    		}(_base_BaseTool_js__WEBPACK_IMPORTED_MODULE_6__["default"]);



    		/***/ }),

    		/***/ "./tools/DragProbeTool.js":
    		/*!********************************!*\
    		  !*** ./tools/DragProbeTool.js ***!
    		  \********************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return DragProbeTool; });
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__);
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__);
    		/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "../node_modules/@babel/runtime/helpers/assertThisInitialized.js");
    		/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__);
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _base_BaseTool_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./base/BaseTool.js */ "./tools/base/BaseTool.js");
    		/* harmony import */ var _stateManagement_textStyle_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../stateManagement/textStyle.js */ "./stateManagement/textStyle.js");
    		/* harmony import */ var _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../stateManagement/toolColors.js */ "./stateManagement/toolColors.js");
    		/* harmony import */ var _util_getRGBPixels_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../util/getRGBPixels.js */ "./util/getRGBPixels.js");
    		/* harmony import */ var _util_calculateSUV_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../util/calculateSUV.js */ "./util/calculateSUV.js");
    		/* harmony import */ var _drawing_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../drawing/index.js */ "./drawing/index.js");
    		/* harmony import */ var _drawing_drawTextBox_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../drawing/drawTextBox.js */ "./drawing/drawTextBox.js");
    		/* harmony import */ var _cursors_index_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./cursors/index.js */ "./tools/cursors/index.js");















    		/**
    		 * @public
    		 * @class DragProbeTool
    		 * @memberof Tools
    		 *
    		 * @classdesc Tool which provides a probe of the image data at the
    		 * input position on drag.
    		 * @extends Tools.Base.BaseTool
    		 */

    		var DragProbeTool =
    		/*#__PURE__*/
    		function (_BaseTool) {
    		  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5___default()(DragProbeTool, _BaseTool);

    		  function DragProbeTool() {
    		    var _this;

    		    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    		    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, DragProbeTool);

    		    var defaultProps = {
    		      name: 'DragProbe',
    		      strategies: {
    		        default: defaultStrategy,
    		        minimal: minimalStrategy
    		      },
    		      defaultStrategy: 'default',
    		      supportedInteractionTypes: ['Mouse', 'Touch'],
    		      svgCursor: _cursors_index_js__WEBPACK_IMPORTED_MODULE_14__["probeCursor"]
    		    };
    		    _this = _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(DragProbeTool).call(this, props, defaultProps));
    		    _this.touchDragCallback = _this._movingEventCallback.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    _this.touchEndCallback = _this._endMovingEventCallback.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    _this.mouseDragCallback = _this._movingEventCallback.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    _this.mouseUpCallback = _this._endMovingEventCallback.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    _this.dragEventData = {};
    		    return _this;
    		  }

    		  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(DragProbeTool, [{
    		    key: "_movingEventCallback",
    		    value: function _movingEventCallback(evt) {
    		      var eventData = evt.detail;
    		      var element = eventData.element;
    		      this.dragEventData = eventData;
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_6__["default"].cornerstone.updateImage(element);
    		    }
    		  }, {
    		    key: "_endMovingEventCallback",
    		    value: function _endMovingEventCallback(evt) {
    		      var eventData = evt.detail;
    		      var element = eventData.element;
    		      this.dragEventData = {};
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_6__["default"].cornerstone.updateImage(element);
    		    }
    		  }, {
    		    key: "renderToolData",
    		    value: function renderToolData(evt) {
    		      if (!this.dragEventData.currentPoints) {
    		        return;
    		      }

    		      if (evt && evt.detail && Boolean(Object.keys(this.dragEventData.currentPoints).length)) {
    		        evt.detail.currentPoints = this.dragEventData.currentPoints;
    		        this.applyActiveStrategy(evt);
    		      }
    		    }
    		  }]);

    		  return DragProbeTool;
    		}(_base_BaseTool_js__WEBPACK_IMPORTED_MODULE_7__["default"]);
    		/**
    		 * Default strategy will pick the exactly point of mouse/touch interact and display the probe data.
    		 *
    		 * @param  {Object} evt Image rendered event
    		 * @param  {Object} config Tool configuration
    		 * @returns {void}
    		 */




    		var defaultStrategy = function defaultStrategy(evt, config) {
    		  var cornerstone = _externalModules_js__WEBPACK_IMPORTED_MODULE_6__["default"].cornerstone;
    		  var eventData = evt.detail;
    		  var element = eventData.element,
    		      image = eventData.image,
    		      currentPoints = eventData.currentPoints,
    		      canvasContext = eventData.canvasContext;
    		  var context = Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_12__["getNewContext"])(canvasContext.canvas);
    		  var color = _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_9__["default"].getActiveColor();
    		  var fontHeight = _stateManagement_textStyle_js__WEBPACK_IMPORTED_MODULE_8__["default"].getFontSize();
    		  var x = Math.round(currentPoints.image.x);
    		  var y = Math.round(currentPoints.image.y);

    		  if (x < 0 || y < 0 || x >= image.columns || y >= image.rows) {
    		    return;
    		  }

    		  Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_12__["draw"])(context, function (context) {
    		    Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_12__["setShadow"])(context, config);
    		    var text = "".concat(x, ", ").concat(y);
    		    var storedPixels;
    		    var str;

    		    if (image.color) {
    		      storedPixels = Object(_util_getRGBPixels_js__WEBPACK_IMPORTED_MODULE_10__["default"])(element, x, y, 1, 1);
    		      str = "R: ".concat(storedPixels[0], " G: ").concat(storedPixels[1], " B: ").concat(storedPixels[2], " A: ").concat(storedPixels[3]);
    		    } else {
    		      storedPixels = cornerstone.getStoredPixels(element, x, y, 1, 1);
    		      var sp = storedPixels[0];
    		      var mo = sp * image.slope + image.intercept;
    		      var suv = Object(_util_calculateSUV_js__WEBPACK_IMPORTED_MODULE_11__["default"])(image, sp); // Draw text

    		      str = "SP: ".concat(sp, " MO: ").concat(parseFloat(mo.toFixed(3)));

    		      if (suv) {
    		        str += " SUV: ".concat(parseFloat(suv.toFixed(3)));
    		      }
    		    } // Draw text 5px away from cursor


    		    var textCoords = {
    		      x: currentPoints.canvas.x + 5,
    		      y: currentPoints.canvas.y - 5
    		    };
    		    Object(_drawing_drawTextBox_js__WEBPACK_IMPORTED_MODULE_13__["default"])(context, str, textCoords.x, textCoords.y + fontHeight + 5, color);
    		    Object(_drawing_drawTextBox_js__WEBPACK_IMPORTED_MODULE_13__["default"])(context, text, textCoords.x, textCoords.y, color);
    		  });
    		};
    		/**
    		 * Minimal strategy will position a circle and use the center of the circle to calculate and display probe data.
    		 *
    		 * @param  {Object} evt Image rendered event
    		 * @param  {Object} config Tool configuration
    		 * @returns {void}
    		 */


    		var minimalStrategy = function minimalStrategy(evt, config) {
    		  var cornerstone = _externalModules_js__WEBPACK_IMPORTED_MODULE_6__["default"].cornerstone;
    		  var eventData = evt.detail;
    		  var element = eventData.element,
    		      image = eventData.image,
    		      currentPoints = eventData.currentPoints,
    		      canvasContext = eventData.canvasContext,
    		      isTouchEvent = eventData.isTouchEvent;
    		  var context = Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_12__["getNewContext"])(canvasContext.canvas);
    		  var color = _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_9__["default"].getActiveColor();
    		  var pageCoordY = currentPoints.page.y - _stateManagement_textStyle_js__WEBPACK_IMPORTED_MODULE_8__["default"].getFontSize() / 2;

    		  if (isTouchEvent) {
    		    pageCoordY = currentPoints.page.y - _stateManagement_textStyle_js__WEBPACK_IMPORTED_MODULE_8__["default"].getFontSize() * 4;
    		  }

    		  var toolCoords = cornerstone.pageToPixel(element, currentPoints.page.x, pageCoordY);

    		  if (toolCoords.x < 0 || toolCoords.y < 0 || toolCoords.x >= image.columns || toolCoords.y >= image.rows) {
    		    return;
    		  }

    		  Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_12__["draw"])(context, function (context) {
    		    Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_12__["setShadow"])(context, config);
    		    var seriesModule = cornerstone.metaData.get('generalSeriesModule', image.imageId);
    		    var modality = seriesModule && seriesModule.modality;
    		    var storedPixels;
    		    var text = '';

    		    if (image.color) {
    		      storedPixels = Object(_util_getRGBPixels_js__WEBPACK_IMPORTED_MODULE_10__["default"])(element, toolCoords.x, toolCoords.y, 1, 1);
    		      text = "R: ".concat(storedPixels[0], " G: ").concat(storedPixels[1], " B: ").concat(storedPixels[2]);
    		    } else {
    		      storedPixels = cornerstone.getStoredPixels(element, toolCoords.x, toolCoords.y, 1, 1);
    		      var sp = storedPixels[0];
    		      var mo = sp * image.slope + image.intercept;
    		      var modalityPixelValueText = parseFloat(mo.toFixed(2));

    		      if (modality === 'CT') {
    		        text += "HU: ".concat(modalityPixelValueText);
    		      } else if (modality === 'PT') {
    		        text += modalityPixelValueText;
    		        var suv = Object(_util_calculateSUV_js__WEBPACK_IMPORTED_MODULE_11__["default"])(image, sp);

    		        if (suv) {
    		          text += " SUV: ".concat(parseFloat(suv.toFixed(2)));
    		        }
    		      } else {
    		        text += modalityPixelValueText;
    		      }
    		    } // Prepare text


    		    var textCoords = cornerstone.pixelToCanvas(element, toolCoords); // Translate the x/y away from the cursor

    		    var translation = {
    		      x: 12,
    		      y: -(_stateManagement_textStyle_js__WEBPACK_IMPORTED_MODULE_8__["default"].getFontSize() + 10) / 2
    		    };
    		    var handleRadius = 6;
    		    var padding = 5;
    		    var width = Object(_drawing_drawTextBox_js__WEBPACK_IMPORTED_MODULE_13__["textBoxWidth"])(context, text, padding);

    		    if (isTouchEvent) {
    		      translation = {
    		        x: -width / 2,
    		        y: -_stateManagement_textStyle_js__WEBPACK_IMPORTED_MODULE_8__["default"].getFontSize() - 10 - 2 * handleRadius
    		      };
    		    }

    		    Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_12__["drawCircle"])(context, element, textCoords, handleRadius, {
    		      color: color
    		    }, 'canvas');
    		    Object(_drawing_drawTextBox_js__WEBPACK_IMPORTED_MODULE_13__["default"])(context, text, textCoords.x + translation.x, textCoords.y + translation.y, color);
    		  });
    		};

    		/***/ }),

    		/***/ "./tools/EraserTool.js":
    		/*!*****************************!*\
    		  !*** ./tools/EraserTool.js ***!
    		  \*****************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return EraserTool; });
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__);
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__);
    		/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "../node_modules/@babel/runtime/helpers/assertThisInitialized.js");
    		/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__);
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _base_BaseTool_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./base/BaseTool.js */ "./tools/base/BaseTool.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _store_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../store/index.js */ "./store/index.js");
    		/* harmony import */ var _cursors_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./cursors/index.js */ "./tools/cursors/index.js");











    		/**
    		 * @public
    		 * @class EraserTool
    		 * @memberof Tools
    		 *
    		 * @classdesc Tool for deleting the data of other Annotation Tools.
    		 * @extends Tools.Base.BaseTool
    		 */

    		var EraserTool =
    		/*#__PURE__*/
    		function (_BaseTool) {
    		  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5___default()(EraserTool, _BaseTool);

    		  function EraserTool() {
    		    var _this;

    		    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    		    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, EraserTool);

    		    var defaultProps = {
    		      name: 'Eraser',
    		      supportedInteractionTypes: ['Mouse', 'Touch'],
    		      svgCursor: _cursors_index_js__WEBPACK_IMPORTED_MODULE_10__["eraserCursor"]
    		    };
    		    _this = _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(EraserTool).call(this, props, defaultProps));
    		    _this.preMouseDownCallback = _this._deleteAllNearbyTools.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    _this.preTouchStartCallback = _this._deleteAllNearbyTools.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    return _this;
    		  }

    		  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(EraserTool, [{
    		    key: "_deleteAllNearbyTools",
    		    value: function _deleteAllNearbyTools(evt) {
    		      var coords = evt.detail.currentPoints.canvas;
    		      var element = evt.detail.element;
    		      _store_index_js__WEBPACK_IMPORTED_MODULE_9__["state"].tools.forEach(function (tool) {
    		        var toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_8__["getToolState"])(element, tool.name);

    		        if (toolState) {
    		          // Modifying in a foreach? Probably not ideal
    		          toolState.data.forEach(function (data) {
    		            if (typeof tool.pointNearTool === 'function' && tool.pointNearTool(element, data, coords)) {
    		              Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_8__["removeToolState"])(element, tool.name, data);
    		              _externalModules_js__WEBPACK_IMPORTED_MODULE_6__["default"].cornerstone.updateImage(element);
    		            }
    		          });
    		        }
    		      });
    		      var consumeEvent = true;
    		      return consumeEvent;
    		    }
    		  }]);

    		  return EraserTool;
    		}(_base_BaseTool_js__WEBPACK_IMPORTED_MODULE_7__["default"]);



    		/***/ }),

    		/***/ "./tools/FreehandSculpterMouseTool.js":
    		/*!********************************************!*\
    		  !*** ./tools/FreehandSculpterMouseTool.js ***!
    		  \********************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return FreehandSculpterMouseTool; });
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__);
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__);
    		/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "../node_modules/@babel/runtime/helpers/assertThisInitialized.js");
    		/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__);
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__);
    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../events.js */ "./events.js");
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../stateManagement/toolColors.js */ "./stateManagement/toolColors.js");
    		/* harmony import */ var _drawing_drawHandles_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../drawing/drawHandles.js */ "./drawing/drawHandles.js");
    		/* harmony import */ var _store_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../store/index.js */ "./store/index.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _util_clip_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../util/clip.js */ "./util/clip.js");
    		/* harmony import */ var _store_getToolForElement_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../store/getToolForElement.js */ "./store/getToolForElement.js");
    		/* harmony import */ var _base_BaseTool_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./base/BaseTool.js */ "./tools/base/BaseTool.js");
    		/* harmony import */ var _store_setToolCursor_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../store/setToolCursor.js */ "./store/setToolCursor.js");
    		/* harmony import */ var _cursors_index_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./cursors/index.js */ "./tools/cursors/index.js");
    		/* harmony import */ var _util_freehand_index_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../util/freehand/index.js */ "./util/freehand/index.js");


















    		var FreehandHandleData = _util_freehand_index_js__WEBPACK_IMPORTED_MODULE_17__["default"].FreehandHandleData;
    		/**
    		 * @public
    		 * @class FreehandSculpterMouseTool
    		 * @memberof Tools
    		 *
    		 * @classdesc Tool for easily sculpting annotations drawn with
    		 * the FreehandMouseTool.
    		 * @extends Tools.Base.BaseTool
    		 */

    		var FreehandSculpterMouseTool =
    		/*#__PURE__*/
    		function (_BaseTool) {
    		  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5___default()(FreehandSculpterMouseTool, _BaseTool);

    		  function FreehandSculpterMouseTool() {
    		    var _this;

    		    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    		    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, FreehandSculpterMouseTool);

    		    var defaultProps = {
    		      name: 'FreehandSculpterMouse',
    		      referencedToolName: 'FreehandMouse',
    		      supportedInteractionTypes: ['Mouse', 'Touch', 'DoubleTap'],
    		      mixins: ['activeOrDisabledBinaryTool'],
    		      configuration: getDefaultFreehandSculpterMouseToolConfiguration(),
    		      svgCursor: _cursors_index_js__WEBPACK_IMPORTED_MODULE_16__["freehandSculpterMouseCursor"]
    		    };
    		    _this = _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(FreehandSculpterMouseTool).call(this, props, defaultProps));
    		    _this.updateOnMouseMove = true;
    		    _this.isMultiPartTool = true;
    		    _this.referencedToolName = defaultProps.referencedToolName;
    		    _this._active = false; // Create bound functions for private event loop.

    		    _this.activeMouseUpCallback = _this.activeMouseUpCallback.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    _this.activeTouchEndCallback = _this.activeTouchEndCallback.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    _this.activeMouseDragCallback = _this.activeMouseDragCallback.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    return _this;
    		  }

    		  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(FreehandSculpterMouseTool, [{
    		    key: "renderToolData",
    		    value: function renderToolData(evt) {
    		      var eventData = evt.detail;

    		      if (this.configuration.currentTool === null) {
    		        return false;
    		      }

    		      var element = eventData.element;
    		      var config = this.configuration;
    		      var toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_11__["getToolState"])(element, this.referencedToolName);
    		      var data = toolState.data[config.currentTool];

    		      if (!data) {
    		        return false;
    		      }

    		      if (this._active) {
    		        var context = eventData.canvasContext.canvas.getContext('2d');
    		        var options = {
    		          color: this.configuration.dragColor,
    		          fill: null,
    		          handleRadius: this._toolSizeCanvas
    		        };
    		        Object(_drawing_drawHandles_js__WEBPACK_IMPORTED_MODULE_9__["default"])(context, eventData, this.configuration.mouseLocation.handles, options);
    		      } else if (this.configuration.showCursorOnHover && !this._recentTouchEnd) {
    		        this._renderHoverCursor(evt);
    		      }
    		    }
    		  }, {
    		    key: "doubleClickCallback",
    		    value: function doubleClickCallback(evt) {
    		      var eventData = evt.detail;

    		      this._selectFreehandTool(eventData);

    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_7__["default"].cornerstone.updateImage(eventData.element);
    		    }
    		  }, {
    		    key: "doubleTapCallback",
    		    value: function doubleTapCallback(evt) {
    		      var eventData = evt.detail;

    		      this._selectFreehandTool(eventData);

    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_7__["default"].cornerstone.updateImage(eventData.element);
    		    }
    		  }, {
    		    key: "preTouchStartCallback",
    		    value: function preTouchStartCallback(evt) {
    		      this._initialiseSculpting(evt);

    		      return true;
    		    }
    		    /**
    		     * Event handler for MOUSE_DOWN.
    		     *
    		     * @param {Object} evt - The event.
    		     * @returns {boolean}
    		     */

    		  }, {
    		    key: "preMouseDownCallback",
    		    value: function preMouseDownCallback(evt) {
    		      if (!this.options.mouseButtonMask.includes(evt.detail.buttons)) {
    		        return;
    		      }

    		      this._initialiseSculpting(evt);

    		      return true;
    		    }
    		    /**
    		     * Event handler for MOUSE_DRAG during the active loop.
    		     *
    		     * @event
    		     * @param {Object} evt - The event.
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "activeMouseDragCallback",
    		    value: function activeMouseDragCallback(evt) {
    		      var config = this.configuration;

    		      if (!this._active) {
    		        return;
    		      }

    		      var eventData = evt.detail;
    		      var toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_11__["getToolState"])(eventData.element, this.referencedToolName);

    		      if (!toolState) {
    		        return;
    		      }

    		      var points = toolState.data[config.currentTool].handles.points; // Set the mouseLocation handle

    		      this._getMouseLocation(eventData);

    		      this._sculpt(eventData, points); // Update the image


    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_7__["default"].cornerstone.updateImage(eventData.element);
    		    }
    		    /**
    		     * Event handler for MOUSE_UP during the active loop.
    		     *
    		     * @param {Object} evt - The event.
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "activeMouseUpCallback",
    		    value: function activeMouseUpCallback(evt) {
    		      this._activeEnd(evt);
    		    }
    		    /**
    		     * Event handler for TOUCH_END during the active loop.
    		     *
    		     * @param {Object} evt - The event.
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "activeTouchEndCallback",
    		    value: function activeTouchEndCallback(evt) {
    		      this._activeEnd(evt);

    		      this._deselectAllTools(evt);

    		      this._recentTouchEnd = true;
    		    }
    		  }, {
    		    key: "_activeEnd",
    		    value: function _activeEnd(evt) {
    		      var eventData = evt.detail;
    		      var element = eventData.element;
    		      var config = this.configuration;
    		      this._active = false;
    		      _store_index_js__WEBPACK_IMPORTED_MODULE_10__["state"].isMultiPartToolActive = false;

    		      this._getMouseLocation(eventData);

    		      this._invalidateToolData(eventData);

    		      config.mouseUpRender = true;

    		      this._deactivateSculpt(element); // Update the image


    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_7__["default"].cornerstone.updateImage(eventData.element);
    		      preventPropagation(evt);
    		    }
    		    /**
    		     * Renders the cursor
    		     *
    		     * @private
    		     * @param  {type} evt description
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "_renderHoverCursor",
    		    value: function _renderHoverCursor(evt) {
    		      var eventData = evt.detail;
    		      var element = eventData.element;
    		      var context = eventData.canvasContext.canvas.getContext('2d');
    		      var toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_11__["getToolState"])(element, this.referencedToolName);
    		      var data = toolState.data[this.configuration.currentTool];
    		      this._recentTouchEnd = false;
    		      var coords;

    		      if (this.configuration.mouseUpRender) {
    		        coords = this.configuration.mouseLocation.handles.start;
    		        this.configuration.mouseUpRender = false;
    		      } else {
    		        coords = _store_index_js__WEBPACK_IMPORTED_MODULE_10__["state"].mousePositionImage;
    		      }

    		      var freehandMouseTool = Object(_store_getToolForElement_js__WEBPACK_IMPORTED_MODULE_13__["default"])(element, this.referencedToolName);
    		      var radiusCanvas = freehandMouseTool.distanceFromPointCanvas(element, data, coords);
    		      this.configuration.mouseLocation.handles.start.x = coords.x;
    		      this.configuration.mouseLocation.handles.start.y = coords.y;

    		      if (this.configuration.limitRadiusOutsideRegion) {
    		        var unlimitedRadius = radiusCanvas;
    		        radiusCanvas = this._limitCursorRadiusCanvas(eventData, radiusCanvas); // Fade if distant

    		        if (unlimitedRadius > this.configuration.hoverCursorFadeDistance * radiusCanvas) {
    		          context.globalAlpha = this.configuration.hoverCursorFadeAlpha;
    		        }
    		      }

    		      var options = {
    		        fill: null,
    		        color: this.configuration.hoverColor,
    		        handleRadius: radiusCanvas
    		      };
    		      Object(_drawing_drawHandles_js__WEBPACK_IMPORTED_MODULE_9__["default"])(context, eventData, this.configuration.mouseLocation.handles, options);

    		      if (this.configuration.limitRadiusOutsideRegion) {
    		        context.globalAlpha = 1.0; // Reset drawing alpha for other draw calls.
    		      }
    		    }
    		    /**
    		     * Event handler for NEW_IMAGE event.
    		     *
    		     * @public
    		     * @param {Object} evt - The event.
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "newImageCallback",
    		    value: function newImageCallback(evt) {
    		      this._deselectAllTools(evt);
    		    }
    		    /**
    		     * Event handler for switching mode to enabled.
    		     *
    		     * @public
    		     * @param {Object} evt - The event.
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "enabledCallback",
    		    value: function enabledCallback(evt) {
    		      this._deselectAllTools(evt);
    		    }
    		    /**
    		     * Event handler for switching mode to passive.
    		     *
    		     * @public
    		     * @param {Object} evt - The event.
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "passiveCallback",
    		    value: function passiveCallback(evt) {
    		      this._deselectAllTools(evt);
    		    }
    		    /**
    		     * Event handler for switching mode to disabled.
    		     *
    		     * @public
    		     * @param {Object} evt - The event.
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "disabledCallback",
    		    value: function disabledCallback(evt) {
    		      this._deselectAllTools(evt);
    		    }
    		    /**
    		     * Select the freehand tool to be edited.
    		     *
    		     * @private
    		     * @param {Object} eventData - Data object associated with the event.
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "_selectFreehandTool",
    		    value: function _selectFreehandTool(eventData) {
    		      var config = this.configuration;
    		      var element = eventData.element;

    		      var closestToolIndex = this._getClosestFreehandToolOnElement(element, eventData);

    		      if (closestToolIndex === undefined) {
    		        return;
    		      }

    		      config.currentTool = closestToolIndex;
    		      Object(_store_setToolCursor_js__WEBPACK_IMPORTED_MODULE_15__["hideToolCursor"])(element);
    		    }
    		    /**
    		     * Activate the selected freehand tool and deactivate others.
    		     *
    		     * @private
    		     * @param {Object} element - The parent element of the freehand tool.
    		     * @param {Number} toolIndex - The ID of the freehand tool.
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "_activateFreehandTool",
    		    value: function _activateFreehandTool(element, toolIndex) {
    		      var toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_11__["getToolState"])(element, this.referencedToolName);
    		      var data = toolState.data;
    		      var config = this.configuration;
    		      config.currentTool = toolIndex;

    		      for (var i = 0; i < data.length; i++) {
    		        if (i === toolIndex) {
    		          data[i].active = true;
    		        } else {
    		          data[i].active = false;
    		        }
    		      }
    		    }
    		    /**
    		     * Choose the tool radius from the mouse position relative to the active freehand
    		     * tool, and begin sculpting.
    		     *
    		     * @private
    		     * @param {Object} evt - The event.
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "_initialiseSculpting",
    		    value: function _initialiseSculpting(evt) {
    		      var eventData = evt.detail;
    		      var config = this.configuration;
    		      var element = eventData.element;

    		      if (config.currentTool === null) {
    		        this._selectFreehandTool(eventData);

    		        if (config.currentTool === null) {
    		          return;
    		        }
    		      }

    		      this._active = true; // Interupt event dispatcher

    		      _store_index_js__WEBPACK_IMPORTED_MODULE_10__["state"].isMultiPartToolActive = true;

    		      this._configureToolSize(eventData);

    		      this._getMouseLocation(eventData);

    		      this._activateFreehandTool(element, config.currentTool);

    		      this._activateSculpt(element);

    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_7__["default"].cornerstone.updateImage(eventData.element);
    		    }
    		    /**
    		     * Sculpts the freehand ROI with the circular freehandSculpter tool, moving,
    		     * adding and removing handles as necessary.
    		     *
    		     * @private
    		     * @param {Object} eventData - Data object associated with the event.
    		     * @param {Object} points - Array of points.
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "_sculpt",
    		    value: function _sculpt(eventData, points) {
    		      var config = this.configuration;
    		      this._sculptData = {
    		        element: eventData.element,
    		        image: eventData.image,
    		        mousePoint: eventData.currentPoints.image,
    		        points: points,
    		        toolSize: this._toolSizeImage,
    		        minSpacing: config.minSpacing,
    		        maxSpacing: Math.max(this._toolSizeImage, config.minSpacing * 2)
    		      }; // Push existing handles radially away from tool.

    		      var pushedHandles = this._pushHandles(); // Insert new handles in sparsely populated areas of the
    		      // Pushed part of the contour.


    		      if (pushedHandles.first !== undefined) {
    		        this._insertNewHandles(pushedHandles); // If any handles have been pushed very close together or even overlap,
    		        // Combine these into a single handle.


    		        this._consolidateHandles();
    		      }
    		    }
    		    /**
    		     * _pushHandles -Pushes the points radially away from the mouse if they are
    		     * contained within the circle defined by the freehandSculpter's toolSize and
    		     * the mouse position.
    		     *
    		     * @returns {Object}  The first and last pushedHandles.
    		     */

    		  }, {
    		    key: "_pushHandles",
    		    value: function _pushHandles() {
    		      var _this$_sculptData = this._sculptData,
    		          points = _this$_sculptData.points,
    		          mousePoint = _this$_sculptData.mousePoint,
    		          toolSize = _this$_sculptData.toolSize;
    		      var pushedHandles = {};

    		      for (var i = 0; i < points.length; i++) {
    		        var distanceToHandle = _externalModules_js__WEBPACK_IMPORTED_MODULE_7__["default"].cornerstoneMath.point.distance(points[i], mousePoint);

    		        if (distanceToHandle > toolSize) {
    		          continue;
    		        } // Push point if inside circle, to edge of circle.


    		        this._pushOneHandle(i, distanceToHandle);

    		        if (pushedHandles.first === undefined) {
    		          pushedHandles.first = i;
    		          pushedHandles.last = i;
    		        } else {
    		          pushedHandles.last = i;
    		        }
    		      }

    		      return pushedHandles;
    		    }
    		    /**
    		     * Pushes one handle.
    		     *
    		     * @private
    		     * @param {number} i - The index of the handle to push.
    		     * @param {number} distanceToHandle - The distance between the mouse cursor and the handle.
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "_pushOneHandle",
    		    value: function _pushOneHandle(i, distanceToHandle) {
    		      var _this$_sculptData2 = this._sculptData,
    		          points = _this$_sculptData2.points,
    		          mousePoint = _this$_sculptData2.mousePoint,
    		          toolSize = _this$_sculptData2.toolSize,
    		          image = _this$_sculptData2.image;
    		      var handle = points[i];
    		      var directionUnitVector = {
    		        x: (handle.x - mousePoint.x) / distanceToHandle,
    		        y: (handle.y - mousePoint.y) / distanceToHandle
    		      };
    		      var position = {
    		        x: mousePoint.x + toolSize * directionUnitVector.x,
    		        y: mousePoint.y + toolSize * directionUnitVector.y
    		      };
    		      Object(_util_clip_js__WEBPACK_IMPORTED_MODULE_12__["clipToBox"])(position, image);
    		      handle.x = position.x;
    		      handle.y = position.y; // Push lines

    		      var lastHandleIndex = this.constructor._getPreviousHandleIndex(i, points.length);

    		      points[lastHandleIndex].lines.pop();
    		      points[lastHandleIndex].lines.push(handle);
    		    }
    		    /**
    		     * Inserts additional handles in sparsely sampled regions of the contour. The
    		     * new handles are placed on the circle defined by the the freehandSculpter's
    		     * toolSize and the mouse position.
    		     * @private
    		     * @param {Array} pushedHandles
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "_insertNewHandles",
    		    value: function _insertNewHandles(pushedHandles) {
    		      var indiciesToInsertAfter = this._findNewHandleIndicies(pushedHandles);

    		      var newIndexModifier = 0;

    		      for (var i = 0; i < indiciesToInsertAfter.length; i++) {
    		        var insertIndex = indiciesToInsertAfter[i] + 1 + newIndexModifier;

    		        this._insertHandleRadially(insertIndex);

    		        newIndexModifier++;
    		      }
    		    }
    		    /**
    		     * Returns an array of indicies that describe where new handles should be
    		     * inserted (where the distance between subsequent handles is >
    		     * config.maxSpacing).
    		     *
    		     * @private
    		     * @param {Object} pushedHandles - The first and last handles that were pushed.
    		     * @returns {Object} An array of indicies that describe where new handles should be inserted.
    		     */

    		  }, {
    		    key: "_findNewHandleIndicies",
    		    value: function _findNewHandleIndicies(pushedHandles) {
    		      var _this$_sculptData3 = this._sculptData,
    		          points = _this$_sculptData3.points,
    		          maxSpacing = _this$_sculptData3.maxSpacing;
    		      var indiciesToInsertAfter = [];

    		      for (var i = pushedHandles.first; i <= pushedHandles.last; i++) {
    		        this._checkSpacing(i, points, indiciesToInsertAfter, maxSpacing);
    		      }

    		      var pointAfterLast = this.constructor._getNextHandleIndex(pushedHandles.last, points.length); // Check points before and after those pushed.


    		      if (pointAfterLast !== pushedHandles.first) {
    		        this._checkSpacing(pointAfterLast, points, indiciesToInsertAfter, maxSpacing);

    		        var pointBeforeFirst = this.constructor._getPreviousHandleIndex(pushedHandles.first, points.length);

    		        if (pointBeforeFirst !== pointAfterLast) {
    		          this._checkSpacing(pointBeforeFirst, points, indiciesToInsertAfter, maxSpacing);
    		        }
    		      }

    		      return indiciesToInsertAfter;
    		    }
    		    /**
    		     * _checkSpacing - description
    		     *@modifies indiciesToInsertAfter
    		     *
    		     * @param {number} i - The index to check.
    		     * @param {Object} points - The points.
    		     * @param {Array} indiciesToInsertAfter - The working list of indicies to insert new points after.
    		     * @param {number} maxSpacing
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "_checkSpacing",
    		    value: function _checkSpacing(i, points, indiciesToInsertAfter, maxSpacing) {
    		      var nextHandleIndex = this.constructor._getNextHandleIndex(i, points.length);

    		      var distanceToNextHandle = _externalModules_js__WEBPACK_IMPORTED_MODULE_7__["default"].cornerstoneMath.point.distance(points[i], points[nextHandleIndex]);

    		      if (distanceToNextHandle > maxSpacing) {
    		        indiciesToInsertAfter.push(i);
    		      }
    		    }
    		    /**
    		     * Inserts a handle on the surface of the circle defined by toolSize and the
    		     * mousePoint.
    		     *
    		     * @private
    		     * @param {number} insertIndex - The index to insert the new handle.
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "_insertHandleRadially",
    		    value: function _insertHandleRadially(insertIndex) {
    		      var points = this._sculptData.points;
    		      var previousIndex = insertIndex - 1;

    		      var nextIndex = this.constructor._getNextHandleIndexBeforeInsert(insertIndex, points.length);

    		      var insertPosition = this._getInsertPosition(insertIndex, previousIndex, nextIndex);

    		      var handleData = new FreehandHandleData(insertPosition);
    		      points.splice(insertIndex, 0, handleData); // Add the line from the previous handle to the inserted handle (note the tool is now one increment longer)

    		      points[previousIndex].lines.pop();
    		      points[previousIndex].lines.push(points[insertIndex]);
    		      _util_freehand_index_js__WEBPACK_IMPORTED_MODULE_17__["default"].addLine(points, insertIndex);
    		    }
    		    /**
    		     * Checks for any close points and consolidates these to a
    		     * single point.
    		     *
    		     * @private
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "_consolidateHandles",
    		    value: function _consolidateHandles() {
    		      var points = this._sculptData.points; // Don't merge handles if it would destroy the polygon.

    		      if (points.length <= 3) {
    		        return;
    		      }

    		      var closePairs = this._findCloseHandlePairs();

    		      this._mergeCloseHandles(closePairs);
    		    }
    		    /**
    		     * Finds pairs of close handles with seperations < config.minSpacing. No handle
    		     * is included in more than one pair, to avoid spurious deletion of densely
    		     * populated regions of the contour (see mergeCloseHandles).
    		     *
    		     * @private
    		     * @returns {Array} An array of close pairs in points.
    		     */

    		  }, {
    		    key: "_findCloseHandlePairs",
    		    value: function _findCloseHandlePairs() {
    		      var _this$_sculptData4 = this._sculptData,
    		          points = _this$_sculptData4.points,
    		          minSpacing = _this$_sculptData4.minSpacing;
    		      var closePairs = [];
    		      var length = points.length;

    		      for (var i = 0; i < length; i++) {
    		        var nextHandleIndex = this.constructor._getNextHandleIndex(i, points.length);

    		        var distanceToNextHandle = _externalModules_js__WEBPACK_IMPORTED_MODULE_7__["default"].cornerstoneMath.point.distance(points[i], points[nextHandleIndex]);

    		        if (distanceToNextHandle < minSpacing) {
    		          var pair = [i, nextHandleIndex];
    		          closePairs.push(pair); // Don't check last node if first in pair to avoid double counting.

    		          if (i === 0) {
    		            length -= 1;
    		          } // Don't double count pairs in order to prevent your polygon collapsing to a singularity.


    		          i++;
    		        }
    		      }

    		      return closePairs;
    		    }
    		    /**
    		     * Merges points given a list of close pairs. The points are merged in an
    		     * iterative fashion to prevent generating a singularity in some edge cases.
    		     *
    		     * @private
    		     * @param {Array} closePairs - An array of pairs of handle indicies.
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "_mergeCloseHandles",
    		    value: function _mergeCloseHandles(closePairs) {
    		      var removedIndexModifier = 0;

    		      for (var i = 0; i < closePairs.length; i++) {
    		        var pair = this.constructor._getCorrectedPair(closePairs[i], removedIndexModifier);

    		        this._combineHandles(pair);

    		        removedIndexModifier++;
    		      } // Recursively remove problem childs


    		      var newClosePairs = this._findCloseHandlePairs();

    		      if (newClosePairs.length) {
    		        this._mergeCloseHandles(newClosePairs);
    		      }
    		    }
    		    /**
    		     * Combines two handles defined by the indicies in handlePairs.
    		     *
    		     * @private
    		     * @param {Object} handlePair - A pair of handle indicies.
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "_combineHandles",
    		    value: function _combineHandles(handlePair) {
    		      var _this$_sculptData5 = this._sculptData,
    		          points = _this$_sculptData5.points,
    		          image = _this$_sculptData5.image; // Calculate combine position: half way between the handles.

    		      var midPoint = {
    		        x: (points[handlePair[0]].x + points[handlePair[1]].x) / 2.0,
    		        y: (points[handlePair[0]].y + points[handlePair[1]].y) / 2.0
    		      };
    		      Object(_util_clip_js__WEBPACK_IMPORTED_MODULE_12__["clipToBox"])(midPoint, image); // Move first point to midpoint

    		      points[handlePair[0]].x = midPoint.x;
    		      points[handlePair[0]].y = midPoint.y; // Link first point to handle that second point links to.

    		      var handleAfterPairIndex = this.constructor._getNextHandleIndex(handlePair[1], points.length);

    		      points[handlePair[0]].lines.pop();
    		      points[handlePair[0]].lines.push(points[handleAfterPairIndex]); // Remove the latter handle

    		      points.splice(handlePair[1], 1);
    		    }
    		    /**
    		     * Calculates the distance to the closest handle in the tool, and stores the
    		     * result in this._toolSizeImage and this._toolSizeCanvas.
    		     *
    		     * @private
    		     * @param {Object} eventData - Data object associated with the event.
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "_configureToolSize",
    		    value: function _configureToolSize(eventData) {
    		      var element = eventData.element;
    		      var config = this.configuration;
    		      var toolIndex = config.currentTool;
    		      var coords = eventData.currentPoints.image;
    		      var toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_11__["getToolState"])(element, this.referencedToolName);
    		      var data = toolState.data[toolIndex];
    		      var freehandMouseTool = Object(_store_getToolForElement_js__WEBPACK_IMPORTED_MODULE_13__["default"])(element, this.referencedToolName);
    		      var radiusImage = freehandMouseTool.distanceFromPoint(element, data, coords);
    		      var radiusCanvas = freehandMouseTool.distanceFromPointCanvas(element, data, coords); // Check if should limit maximum size.

    		      if (config.limitRadiusOutsideRegion) {
    		        radiusImage = this._limitCursorRadiusImage(eventData, radiusImage);
    		        radiusCanvas = this._limitCursorRadiusCanvas(eventData, radiusCanvas);
    		      }

    		      this._toolSizeImage = radiusImage;
    		      this._toolSizeCanvas = radiusCanvas;
    		    }
    		    /**
    		     * Gets the current mouse location and stores it in the configuration object.
    		     *
    		     * @private
    		     * @param {Object} eventData - The data assoicated with the event.
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "_getMouseLocation",
    		    value: function _getMouseLocation(eventData) {
    		      var config = this.configuration;
    		      config.mouseLocation.handles.start.x = eventData.currentPoints.image.x;
    		      config.mouseLocation.handles.start.y = eventData.currentPoints.image.y;
    		      Object(_util_clip_js__WEBPACK_IMPORTED_MODULE_12__["clipToBox"])(config.mouseLocation.handles.start, eventData.image);
    		    }
    		    /**
    		     * Attaches event listeners to the element such that is is visible, modifiable, and new data can be created.
    		     *
    		     * @private
    		     * @param {Object} element - The viewport element to attach event listeners to.
    		     * @modifies {element}
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "_activateSculpt",
    		    value: function _activateSculpt(element) {
    		      this._deactivateSculpt(element); // Begin activeMouseDragCallback loop - call activeMouseUpCallback at end of drag or straight away if just a click.


    		      element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_6__["default"].MOUSE_UP, this.activeMouseUpCallback);
    		      element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_6__["default"].MOUSE_CLICK, this.activeMouseUpCallback);
    		      element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_6__["default"].MOUSE_DRAG, this.activeMouseDragCallback);
    		      element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_6__["default"].TOUCH_END, this.activeTouchEndCallback);
    		      element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_6__["default"].TOUCH_TAP, this.activeTouchEndCallback);
    		      element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_6__["default"].TOUCH_DRAG, this.activeMouseDragCallback);
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_7__["default"].cornerstone.updateImage(element);
    		    }
    		    /**
    		     * Removes event listeners from the element.
    		     *
    		     * @private
    		     * @param {Object} element - The viewport element to remove event listeners from.
    		     * @modifies {element}
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "_deactivateSculpt",
    		    value: function _deactivateSculpt(element) {
    		      element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_6__["default"].MOUSE_UP, this.activeMouseUpCallback);
    		      element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_6__["default"].MOUSE_CLICK, this.activeMouseUpCallback);
    		      element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_6__["default"].MOUSE_DRAG, this.activeMouseDragCallback);
    		      element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_6__["default"].TOUCH_END, this.activeTouchEndCallback);
    		      element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_6__["default"].TOUCH_TAP, this.activeTouchEndCallback);
    		      element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_6__["default"].TOUCH_DRAG, this.activeMouseDragCallback);
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_7__["default"].cornerstone.updateImage(element);
    		    }
    		    /**
    		     * Invalidate the freehand tool data, tirggering re-calculation of statistics.
    		     *
    		     * @private
    		     * @param {Object} eventData - Data object associated with the event.
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "_invalidateToolData",
    		    value: function _invalidateToolData(eventData) {
    		      var config = this.configuration;
    		      var element = eventData.element;
    		      var toolData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_11__["getToolState"])(element, this.referencedToolName);
    		      var data = toolData.data[config.currentTool];
    		      data.invalidated = true;
    		    }
    		    /**
    		     * Deactivates all freehand ROIs and change currentTool to null
    		     *
    		     * @private
    		     * @param {Object} evt - The event.
    		     * @returns {void}
    		     */
    		    // eslint-disable-next-line no-unused-vars

    		  }, {
    		    key: "_deselectAllTools",
    		    value: function _deselectAllTools(evt) {
    		      var config = this.configuration;
    		      var toolData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_11__["getToolState"])(this.element, this.referencedToolName);
    		      config.currentTool = null;

    		      if (toolData) {
    		        for (var i = 0; i < toolData.data.length; i++) {
    		          toolData.data[i].active = false;
    		        }
    		      }

    		      Object(_store_setToolCursor_js__WEBPACK_IMPORTED_MODULE_15__["setToolCursor"])(this.element, this.svgCursor);
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_7__["default"].cornerstone.updateImage(this.element);
    		    }
    		    /**
    		     * Given a pair of indicies, and the number of points already removed,
    		     * convert to the correct live indicies.
    		     *
    		     * @private
    		     * @static
    		     * @param {Object} pair A pairs of handle indicies.
    		     * @param {Number} removedIndexModifier The number of handles already removed.
    		     * @returns {Object} The corrected pair of handle indicies.
    		     */

    		  }, {
    		    key: "_limitCursorRadiusCanvas",

    		    /**
    		     * Limits the cursor radius so that it its maximum area is the same as the
    		     * ROI being sculpted (in canvas coordinates).
    		     *
    		     * @private
    		     * @param  {Object}  eventData    Data object associated with the event.
    		     * @param  {Number}  radiusCanvas The distance from the mouse to the ROI
    		     *                                in canvas coordinates.
    		     * @returns {Number}              The limited radius in canvas coordinates.
    		     */
    		    value: function _limitCursorRadiusCanvas(eventData, radiusCanvas) {
    		      return this._limitCursorRadius(eventData, radiusCanvas, true);
    		    }
    		    /**
    		     * Limits the cursor radius so that it its maximum area is the same as the
    		     * ROI being sculpted (in image coordinates).
    		     *
    		     * @private
    		     * @param  {Object}  eventData    Data object associated with the event.
    		     * @param  {Number}  radiusImage  The distance from the mouse to the ROI
    		     *                                in image coordinates.
    		     * @returns {Number}              The limited radius in image coordinates.
    		     */

    		  }, {
    		    key: "_limitCursorRadiusImage",
    		    value: function _limitCursorRadiusImage(eventData, radiusImage) {
    		      return this._limitCursorRadius(eventData, radiusImage, false);
    		    }
    		    /**
    		     * Limits the cursor radius so that it its maximum area is the same as the
    		     * ROI being sculpted.
    		     *
    		     * @private
    		     * @param  {Object}  eventData    Data object associated with the event.
    		     * @param  {Number}  radius       The distance from the mouse to the ROI.
    		     * @param  {Boolean} canvasCoords Whether the calculation should be performed
    		     *                                In canvas coordinates.
    		     * @returns {Number}              The limited radius.
    		     */

    		  }, {
    		    key: "_limitCursorRadius",
    		    value: function _limitCursorRadius(eventData, radius) {
    		      var canvasCoords = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    		      var element = eventData.element;
    		      var image = eventData.image;
    		      var config = this.configuration;
    		      var toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_11__["getToolState"])(element, this.referencedToolName);
    		      var data = toolState.data[config.currentTool];
    		      var areaModifier = 1.0;

    		      if (canvasCoords) {
    		        var topLeft = _externalModules_js__WEBPACK_IMPORTED_MODULE_7__["default"].cornerstone.pixelToCanvas(element, {
    		          x: 0,
    		          y: 0
    		        });
    		        var bottomRight = _externalModules_js__WEBPACK_IMPORTED_MODULE_7__["default"].cornerstone.pixelToCanvas(element, {
    		          x: image.width,
    		          y: image.height
    		        });
    		        var canvasArea = (bottomRight.x - topLeft.x) * (bottomRight.y - topLeft.y);
    		        areaModifier = canvasArea / (image.width * image.height);
    		      }

    		      var area = data.area * areaModifier;
    		      var maxRadius = Math.pow(area / Math.PI, 0.5);
    		      return Math.min(radius, maxRadius);
    		    }
    		    /**
    		     * Finds the nearest handle to the mouse cursor for all freehand
    		     * data on the element.
    		     *
    		     * @private
    		     * @param {Object} element - The element.
    		     * @param {Object} eventData - Data object associated with the event.
    		     * @returns {Number} The tool index of the closest freehand tool.
    		     */

    		  }, {
    		    key: "_getClosestFreehandToolOnElement",
    		    value: function _getClosestFreehandToolOnElement(element, eventData) {
    		      var freehand = Object(_store_getToolForElement_js__WEBPACK_IMPORTED_MODULE_13__["default"])(element, this.referencedToolName);
    		      var toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_11__["getToolState"])(element, this.referencedToolName);

    		      if (!toolState) {
    		        return;
    		      }

    		      var data = toolState.data;
    		      var pixelCoords = eventData.currentPoints.image;
    		      var closest = {
    		        distance: Infinity,
    		        toolIndex: null
    		      };

    		      for (var i = 0; i < data.length; i++) {
    		        var distanceFromToolI = freehand.distanceFromPoint(element, data[i], pixelCoords);

    		        if (distanceFromToolI === -1) {
    		          continue;
    		        }

    		        if (distanceFromToolI < closest.distance) {
    		          closest.distance = distanceFromToolI;
    		          closest.toolIndex = i;
    		        }
    		      }

    		      return closest.toolIndex;
    		    }
    		    /**
    		     * Returns the next handle index.
    		     *
    		     * @private
    		     * @static
    		     * @param {Number} i - The handle index.
    		     * @param {Number} length - The length of the polygon.
    		     * @returns {Number} The next handle index.
    		     */

    		  }, {
    		    key: "_getInsertPosition",

    		    /**
    		     * Calculates the position that a new handle should be inserted.
    		     *
    		     * @private
    		     * @static
    		     * @param {Number} insertIndex - The index to insert the new handle.
    		     * @param {Number} previousIndex - The previous index.
    		     * @param {Number} nextIndex - The next index.
    		     * @returns {Object} The position the handle should be inserted.
    		     */
    		    value: function _getInsertPosition(insertIndex, previousIndex, nextIndex) {
    		      var _this$_sculptData6 = this._sculptData,
    		          points = _this$_sculptData6.points,
    		          toolSize = _this$_sculptData6.toolSize,
    		          mousePoint = _this$_sculptData6.mousePoint,
    		          image = _this$_sculptData6.image; // Calculate insert position: half way between the handles, then pushed out
    		      // Radially to the edge of the freehandSculpter.

    		      var midPoint = {
    		        x: (points[previousIndex].x + points[nextIndex].x) / 2.0,
    		        y: (points[previousIndex].y + points[nextIndex].y) / 2.0
    		      };
    		      var distanceToMidPoint = _externalModules_js__WEBPACK_IMPORTED_MODULE_7__["default"].cornerstoneMath.point.distance(mousePoint, midPoint);
    		      var insertPosition;

    		      if (distanceToMidPoint < toolSize) {
    		        var directionUnitVector = {
    		          x: (midPoint.x - mousePoint.x) / distanceToMidPoint,
    		          y: (midPoint.y - mousePoint.y) / distanceToMidPoint
    		        };
    		        insertPosition = {
    		          x: mousePoint.x + toolSize * directionUnitVector.x,
    		          y: mousePoint.y + toolSize * directionUnitVector.y
    		        };
    		      } else {
    		        insertPosition = midPoint;
    		      }

    		      Object(_util_clip_js__WEBPACK_IMPORTED_MODULE_12__["clipToBox"])(insertPosition, image);
    		      return insertPosition;
    		    } // ===================================================================
    		    // Public Configuration API. .
    		    // ===================================================================

    		  }, {
    		    key: "minSpacing",
    		    get: function get() {
    		      return this.configuration.minSpacing;
    		    },
    		    set: function set(value) {
    		      if (typeof value !== 'number') {
    		        throw new Error('Attempting to set freehandSculpter minSpacing to a value other than a number.');
    		      }

    		      this.configuration.minSpacing = value;
    		    }
    		  }, {
    		    key: "maxSpacing",
    		    get: function get() {
    		      return this.configuration.maxSpacing;
    		    },
    		    set: function set(value) {
    		      if (typeof value !== 'number') {
    		        throw new Error('Attempting to set freehandSculpter maxSpacing to a value other than a number.');
    		      }

    		      this.configuration.maxSpacing = value;
    		    }
    		  }, {
    		    key: "showCursorOnHover",
    		    get: function get() {
    		      return this.configuration.showCursorOnHover;
    		    },
    		    set: function set(value) {
    		      if (typeof value !== 'boolean') {
    		        throw new Error('Attempting to set freehandSculpter showCursorOnHover to a value other than a boolean.');
    		      }

    		      this.configuration.showCursorOnHover = value;
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_7__["default"].cornerstone.updateImage(this.element);
    		    }
    		  }, {
    		    key: "limitRadiusOutsideRegion",
    		    get: function get() {
    		      return this.configuration.limitRadiusOutsideRegion;
    		    },
    		    set: function set(value) {
    		      if (typeof value !== 'boolean') {
    		        throw new Error('Attempting to set freehandSculpter limitRadiusOutsideRegion to a value other than a boolean.');
    		      }

    		      this.configuration.limitRadiusOutsideRegion = value;
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_7__["default"].cornerstone.updateImage(this.element);
    		    }
    		  }, {
    		    key: "hoverCursorFadeAlpha",
    		    get: function get() {
    		      return this.configuration.hoverCursorFadeAlpha;
    		    },
    		    set: function set(value) {
    		      if (typeof value !== 'number') {
    		        throw new Error('Attempting to set freehandSculpter hoverCursorFadeAlpha to a value other than a number.');
    		      } // Clamp the value from 0 to 1.


    		      value = Math.max(Math.min(value, 1.0), 0.0);
    		      this.configuration.hoverCursorFadeAlpha = value;
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_7__["default"].cornerstone.updateImage(this.element);
    		    }
    		  }, {
    		    key: "hoverCursorFadeDistance",
    		    get: function get() {
    		      return this.configuration.hoverCursorFadeDistance;
    		    },
    		    set: function set(value) {
    		      if (typeof value !== 'number') {
    		        throw new Error('Attempting to set freehandSculpter hoverCursorFadeDistance to a value other than a number.');
    		      } // Don't allow to fade a distances smaller than the tool's radius.


    		      value = Math.max(value, 1.0);
    		      this.configuration.hoverCursorFadeDistance = value;
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_7__["default"].cornerstone.updateImage(this.element);
    		    }
    		  }], [{
    		    key: "_getCorrectedPair",
    		    value: function _getCorrectedPair(pair, removedIndexModifier) {
    		      var correctedPair = [pair[0] - removedIndexModifier, pair[1] - removedIndexModifier]; // Deal with edge case of last node + first node.

    		      if (correctedPair[1] < 0) {
    		        correctedPair[1] = 0;
    		      }

    		      return correctedPair;
    		    }
    		  }, {
    		    key: "_getNextHandleIndex",
    		    value: function _getNextHandleIndex(i, length) {
    		      if (i === length - 1) {
    		        return 0;
    		      }

    		      return i + 1;
    		    }
    		    /**
    		     * Returns the previous handle index.
    		     *
    		     * @private
    		     * @static
    		     * @param {Number} i - The handle index.
    		     * @param {Number} length - The length of the polygon.
    		     * @returns {Number} The previous handle index.
    		     */

    		  }, {
    		    key: "_getPreviousHandleIndex",
    		    value: function _getPreviousHandleIndex(i, length) {
    		      if (i === 0) {
    		        return length - 1;
    		      }

    		      return i - 1;
    		    }
    		    /**
    		     * Returns the next handle index, with a correction considering a handle is
    		     * about to be inserted.
    		     *
    		     * @private
    		     * @static
    		     * @param {Number} insertIndex - The index in which the handle is being inserted.
    		     * @param {Number} length - The length of the polygon.
    		     * @returns {Number} The next handle index.
    		     */

    		  }, {
    		    key: "_getNextHandleIndexBeforeInsert",
    		    value: function _getNextHandleIndexBeforeInsert(insertIndex, length) {
    		      if (insertIndex === length) {
    		        return 0;
    		      } // Index correction here: The line bellow is correct, as we haven't inserted our handle yet!


    		      return insertIndex;
    		    }
    		  }]);

    		  return FreehandSculpterMouseTool;
    		}(_base_BaseTool_js__WEBPACK_IMPORTED_MODULE_14__["default"]);
    		/**
    		 * Returns the default freehandSculpterMouseTool configuration.
    		 *
    		 * @returns {Object} The default configuration object.
    		 */




    		function getDefaultFreehandSculpterMouseToolConfiguration() {
    		  return {
    		    mouseLocation: {
    		      handles: {
    		        start: {
    		          highlight: true,
    		          active: true
    		        }
    		      }
    		    },
    		    minSpacing: 1,
    		    currentTool: null,
    		    dragColor: _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_8__["default"].getActiveColor(),
    		    hoverColor: _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_8__["default"].getToolColor(),

    		    /* --- Hover options ---
    		    showCursorOnHover:        Shows a preview of the sculpting radius on hover.
    		    limitRadiusOutsideRegion: Limit max toolsize outside the subject ROI based
    		                              on subject ROI area.
    		    hoverCursorFadeAlpha:     Alpha to fade to when tool very distant from
    		                              subject ROI.
    		    hoverCursorFadeDistance:  Distance from ROI in which to fade the hoverCursor
    		                              (in units of radii).
    		    */
    		    showCursorOnHover: true,
    		    limitRadiusOutsideRegion: true,
    		    hoverCursorFadeAlpha: 0.5,
    		    hoverCursorFadeDistance: 1.2
    		  };
    		}

    		function preventPropagation(evt) {
    		  evt.stopImmediatePropagation();
    		  evt.stopPropagation();
    		  evt.preventDefault();
    		}

    		/***/ }),

    		/***/ "./tools/MagnifyTool.js":
    		/*!******************************!*\
    		  !*** ./tools/MagnifyTool.js ***!
    		  \******************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return MagnifyTool; });
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__);
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__);
    		/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "../node_modules/@babel/runtime/helpers/assertThisInitialized.js");
    		/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__);
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _drawing_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../drawing/index.js */ "./drawing/index.js");
    		/* harmony import */ var _base_BaseTool_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./base/BaseTool.js */ "./tools/base/BaseTool.js");
    		/* harmony import */ var _store_setToolCursor_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../store/setToolCursor.js */ "./store/setToolCursor.js");
    		/* harmony import */ var _cursors_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./cursors/index.js */ "./tools/cursors/index.js");











    		/**
    		 * @public
    		 * @class MagnifyTool
    		 * @memberof Tools
    		 *
    		 * @classdesc Tool for inspecting a region at increased magnification.
    		 * @extends Tools.Base.BaseTool
    		 */

    		var MagnifyTool =
    		/*#__PURE__*/
    		function (_BaseTool) {
    		  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5___default()(MagnifyTool, _BaseTool);

    		  function MagnifyTool() {
    		    var _this;

    		    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    		    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, MagnifyTool);

    		    var defaultProps = {
    		      name: 'Magnify',
    		      supportedInteractionTypes: ['Mouse', 'Touch'],
    		      configuration: {
    		        magnifySize: 300,
    		        magnificationLevel: 2
    		      },
    		      svgCursor: _cursors_index_js__WEBPACK_IMPORTED_MODULE_10__["magnifyCursor"]
    		    };
    		    _this = _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(MagnifyTool).call(this, props, defaultProps));
    		    _this.zoomCanvas = undefined;
    		    _this.zoomElement = undefined; // Mode Callbacks: (element, options)

    		    _this.activeCallback = _this._createMagnificationCanvas.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    _this.enabledCallback = _this._createMagnificationCanvas.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    _this.disabledCallback = _this._destroyMagnificationCanvas.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this)); // Touch

    		    _this.postTouchStartCallback = _this._addMagnifyingGlass.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    _this.touchDragCallback = _this._updateMagnifyingGlass.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    _this.touchEndCallback = _this._removeMagnifyingGlass.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    _this.touchDragEndCallback = _this._removeMagnifyingGlass.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this)); // Mouse

    		    _this.postMouseDownCallback = _this._addMagnifyingGlass.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    _this.mouseDragCallback = _this._updateMagnifyingGlass.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    _this.mouseUpCallback = _this._removeMagnifyingGlass.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this)); // On quick clicks, mouseUp does not fire, but this does

    		    _this.mouseClickCallback = _this._removeMagnifyingGlass.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this)); // Misc

    		    _this.newImageCallback = _this._drawMagnificationTool.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    return _this;
    		  }

    		  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(MagnifyTool, [{
    		    key: "_addMagnifyingGlass",
    		    value: function _addMagnifyingGlass(evt) {
    		      var _this2 = this;

    		      // Ignore until next event
    		      this._removeZoomElement();

    		      this._drawZoomedElement(evt); // On next frame


    		      window.requestAnimationFrame(function () {
    		        return _this2._drawMagnificationTool(evt);
    		      });
    		      Object(_store_setToolCursor_js__WEBPACK_IMPORTED_MODULE_9__["hideToolCursor"])(evt.detail.element);
    		      evt.preventDefault();
    		      evt.stopPropagation();
    		    }
    		  }, {
    		    key: "_updateMagnifyingGlass",
    		    value: function _updateMagnifyingGlass(evt) {
    		      this._drawMagnificationTool(evt);

    		      evt.preventDefault();
    		      evt.stopPropagation();
    		    }
    		  }, {
    		    key: "_removeMagnifyingGlass",
    		    value: function _removeMagnifyingGlass(evt) {
    		      var element = evt.detail.element; // Re-enable the mouse cursor

    		      Object(_store_setToolCursor_js__WEBPACK_IMPORTED_MODULE_9__["setToolCursor"])(this.element, this.svgCursor);
    		      element.querySelector('.magnifyTool').style.display = 'none';

    		      this._removeZoomElement();
    		    }
    		  }, {
    		    key: "_drawMagnificationTool",
    		    value: function _drawMagnificationTool(evt) {
    		      var element = evt.detail.element;
    		      var magnifyCanvas = element.querySelector('.magnifyTool');

    		      if (!magnifyCanvas) {
    		        this._createMagnificationCanvas(element);
    		      }

    		      if (this.zoomCanvas === undefined) {
    		        return;
    		      } // The 'not' magnifyTool class here is necessary because cornerstone places
    		      // No classes of it's own on the canvas we want to select


    		      var canvas = element.querySelector('canvas:not(.magnifyTool)');
    		      var context = Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_7__["getNewContext"])(magnifyCanvas); // Calculate the on-canvas location of the mouse pointer / touch

    		      var canvasLocation = _externalModules_js__WEBPACK_IMPORTED_MODULE_6__["default"].cornerstone.pixelToCanvas(evt.detail.element, evt.detail.currentPoints.image); // Shrink magnifier to smallest canvas dimension if smaller than desired magnifier size

    		      var magnifySize = Math.min(this.configuration.magnifySize, canvas.width, canvas.height);
    		      var magnificationLevel = this.configuration.magnificationLevel;
    		      magnifyCanvas.width = magnifySize;
    		      magnifyCanvas.height = magnifySize; // Constrain drag movement to zoomed image boundaries

    		      canvasLocation.x = Math.max(canvasLocation.x, 0.5 * magnifySize / magnificationLevel);
    		      canvasLocation.x = Math.min(canvasLocation.x, canvas.width - 0.5 * magnifySize / magnificationLevel);
    		      canvasLocation.y = Math.max(canvasLocation.y, 0.5 * magnifySize / magnificationLevel);
    		      canvasLocation.y = Math.min(canvasLocation.y, canvas.height - 0.5 * magnifySize / magnificationLevel);
    		      var copyFrom = {
    		        x: canvasLocation.x * magnificationLevel - 0.5 * magnifySize,
    		        y: canvasLocation.y * magnificationLevel - 0.5 * magnifySize
    		      };
    		      copyFrom.x = Math.max(copyFrom.x, 0);
    		      copyFrom.y = Math.max(copyFrom.y, 0);
    		      context.drawImage(this.zoomCanvas, copyFrom.x, copyFrom.y, magnifySize, magnifySize, 0, 0, magnifySize, magnifySize); // Place the magnification tool at the same location as the pointer

    		      var touchOffset = evt.detail.isTouchEvent ? 120 : 0;
    		      var magnifyPosition = {
    		        top: Math.max(canvasLocation.y - 0.5 * magnifySize - touchOffset, 0),
    		        left: Math.max(canvasLocation.x - 0.5 * magnifySize, 0)
    		      }; // Get full magnifier dimensions with borders

    		      var magnifierBox = magnifyCanvas.getBoundingClientRect(); // Constrain magnifier to canvas boundaries

    		      magnifyPosition.top = Math.min(magnifyPosition.top, canvas.height - magnifierBox.height);
    		      magnifyPosition.left = Math.min(magnifyPosition.left, canvas.width - magnifierBox.width);
    		      magnifyCanvas.style.top = "".concat(magnifyPosition.top, "px");
    		      magnifyCanvas.style.left = "".concat(magnifyPosition.left, "px");
    		      magnifyCanvas.style.display = 'block';
    		    }
    		    /**
    		     * Creates a cornerstone enabled element, and renders the target image at the
    		     * desired magnification level using it.
    		     *
    		     * @private
    		     * @param {*} evt
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "_drawZoomedElement",
    		    value: function _drawZoomedElement(evt) {
    		      var element = evt.detail.element;
    		      var enabledElement = evt.detail.enabledElement;

    		      if (enabledElement === undefined) {
    		        enabledElement = _externalModules_js__WEBPACK_IMPORTED_MODULE_6__["default"].cornerstone.getEnabledElement(element);
    		      }

    		      var magnificationLevel = this.configuration.magnificationLevel;
    		      var origCanvas = enabledElement.canvas;
    		      var image = enabledElement.image; // Create a new cornerstone enabledElement

    		      if (!this.zoomElement) {
    		        this.zoomElement = document.createElement('div');
    		        this.zoomElement.width = origCanvas.width * magnificationLevel;
    		        this.zoomElement.height = origCanvas.height * magnificationLevel;
    		        _externalModules_js__WEBPACK_IMPORTED_MODULE_6__["default"].cornerstone.enable(this.zoomElement, enabledElement.options);
    		      }

    		      var zoomEnabledElement = _externalModules_js__WEBPACK_IMPORTED_MODULE_6__["default"].cornerstone.getEnabledElement(this.zoomElement);
    		      var viewport = _externalModules_js__WEBPACK_IMPORTED_MODULE_6__["default"].cornerstone.getViewport(enabledElement.element);
    		      this.zoomCanvas = zoomEnabledElement.canvas;
    		      this.zoomCanvas.width = origCanvas.width * magnificationLevel;
    		      this.zoomCanvas.height = origCanvas.height * magnificationLevel;
    		      zoomEnabledElement.viewport = Object.assign({}, viewport); // Update it's viewport to render at desired magnification level

    		      viewport.scale *= magnificationLevel;
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_6__["default"].cornerstone.displayImage(this.zoomElement, image);
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_6__["default"].cornerstone.setViewport(this.zoomElement, viewport); // To do enable annotation tools for zoomElement
    		    }
    		    /**
    		     * Removes the canvas and associated enabled element that's
    		     * used to render the zoomed image.
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "_removeZoomElement",
    		    value: function _removeZoomElement() {
    		      if (this.zoomElement !== undefined) {
    		        _externalModules_js__WEBPACK_IMPORTED_MODULE_6__["default"].cornerstone.disable(this.zoomCanvas);
    		        this.zoomElement = undefined;
    		        this.zoomCanvas = undefined;
    		      }
    		    }
    		    /**
    		     * The canvas used to render the zoomed image.
    		     * It will be displayed and clipped inside the magnifying glass frame/element.
    		     *
    		     * @private
    		     *
    		     * @param {*} element
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "_createMagnificationCanvas",
    		    value: function _createMagnificationCanvas(element) {
    		      // If the magnifying glass canvas doesn't already exist
    		      if (element.querySelector('.magnifyTool') === null) {
    		        // Create a canvas and append it as a child to the element
    		        var magnifyCanvas = document.createElement('canvas'); // The magnifyTool class is used to find the canvas later on
    		        // Make sure position is absolute so the canvas can follow the mouse / touch

    		        magnifyCanvas.classList.add('magnifyTool');
    		        magnifyCanvas.width = this.configuration.magnifySize;
    		        magnifyCanvas.height = this.configuration.magnifySize;
    		        magnifyCanvas.style.position = 'absolute';
    		        magnifyCanvas.style.display = 'none';
    		        element.appendChild(magnifyCanvas);
    		      }
    		    }
    		    /**
    		     *
    		     *
    		     * @param {*} element
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "_destroyMagnificationCanvas",
    		    value: function _destroyMagnificationCanvas(element) {
    		      var magnifyCanvas = element.querySelector('.magnifyTool');

    		      if (magnifyCanvas) {
    		        element.removeChild(magnifyCanvas);
    		      }
    		    }
    		  }]);

    		  return MagnifyTool;
    		}(_base_BaseTool_js__WEBPACK_IMPORTED_MODULE_8__["default"]);



    		/***/ }),

    		/***/ "./tools/PanMultiTouchTool.js":
    		/*!************************************!*\
    		  !*** ./tools/PanMultiTouchTool.js ***!
    		  \************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return PanMultiTouchTool; });
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__);
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__);
    		/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "../node_modules/@babel/runtime/helpers/assertThisInitialized.js");
    		/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__);
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _base_BaseTool_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./base/BaseTool.js */ "./tools/base/BaseTool.js");








    		/**
    		 * @public
    		 * @class PanMultiTouchTool
    		 * @memberof Tools
    		 *
    		 * @classdesc Tool for panning the image using multi-touch.
    		 * @extends Tools.Base.BaseTool
    		 */

    		var PanMultiTouchTool =
    		/*#__PURE__*/
    		function (_BaseTool) {
    		  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5___default()(PanMultiTouchTool, _BaseTool);

    		  function PanMultiTouchTool() {
    		    var _this;

    		    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    		    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, PanMultiTouchTool);

    		    var defaultProps = {
    		      name: 'PanMultiTouch',
    		      supportedInteractionTypes: ['MultiTouch'],
    		      configuration: {
    		        touchPointers: 2
    		      }
    		    };
    		    _this = _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(PanMultiTouchTool).call(this, props, defaultProps)); // Touch

    		    _this.multiTouchDragCallback = _this._dragCallback.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    return _this;
    		  }

    		  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(PanMultiTouchTool, [{
    		    key: "_dragCallback",
    		    value: function _dragCallback(evt) {
    		      var eventData = evt.detail;
    		      var element = eventData.element,
    		          viewport = eventData.viewport;

    		      if (eventData.numPointers === this.configuration.touchPointers) {
    		        var translation = this._getTranslation(eventData);

    		        this._applyTranslation(viewport, translation);

    		        _externalModules_js__WEBPACK_IMPORTED_MODULE_6__["default"].cornerstone.setViewport(element, viewport);
    		      }
    		    }
    		  }, {
    		    key: "_getTranslation",
    		    value: function _getTranslation(eventData) {
    		      var viewport = eventData.viewport,
    		          image = eventData.image,
    		          deltaPoints = eventData.deltaPoints;
    		      var widthScale = viewport.scale;
    		      var heightScale = viewport.scale;

    		      if (image.rowPixelSpacing < image.columnPixelSpacing) {
    		        widthScale *= image.columnPixelSpacing / image.rowPixelSpacing;
    		      } else if (image.columnPixelSpacing < image.rowPixelSpacing) {
    		        heightScale *= image.rowPixelSpacing / image.columnPixelSpacing;
    		      }

    		      return {
    		        x: deltaPoints.page.x / widthScale,
    		        y: deltaPoints.page.y / heightScale
    		      };
    		    }
    		  }, {
    		    key: "_applyTranslation",
    		    value: function _applyTranslation(viewport, translation) {
    		      viewport.translation.x += translation.x;
    		      viewport.translation.y += translation.y;
    		    }
    		  }]);

    		  return PanMultiTouchTool;
    		}(_base_BaseTool_js__WEBPACK_IMPORTED_MODULE_7__["default"]);



    		/***/ }),

    		/***/ "./tools/PanTool.js":
    		/*!**************************!*\
    		  !*** ./tools/PanTool.js ***!
    		  \**************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return PanTool; });
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__);
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__);
    		/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "../node_modules/@babel/runtime/helpers/assertThisInitialized.js");
    		/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__);
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _base_BaseTool_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./base/BaseTool.js */ "./tools/base/BaseTool.js");
    		/* harmony import */ var _cursors_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./cursors/index.js */ "./tools/cursors/index.js");









    		/**
    		 * @public
    		 * @class PanTool
    		 * @memberof Tools
    		 *
    		 * @classdesc Tool for panning the image.
    		 * @extends Tools.Base.BaseTool
    		 */

    		var PanTool =
    		/*#__PURE__*/
    		function (_BaseTool) {
    		  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5___default()(PanTool, _BaseTool);

    		  function PanTool() {
    		    var _this;

    		    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    		    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, PanTool);

    		    var defaultProps = {
    		      name: 'Pan',
    		      supportedInteractionTypes: ['Mouse', 'Touch'],
    		      svgCursor: _cursors_index_js__WEBPACK_IMPORTED_MODULE_8__["panCursor"]
    		    };
    		    _this = _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(PanTool).call(this, props, defaultProps)); // Touch

    		    _this.touchDragCallback = _this._dragCallback.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this)); // Mouse

    		    _this.mouseDragCallback = _this._dragCallback.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    return _this;
    		  }

    		  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(PanTool, [{
    		    key: "_dragCallback",
    		    value: function _dragCallback(evt) {
    		      var eventData = evt.detail;
    		      var element = eventData.element,
    		          viewport = eventData.viewport;

    		      var translation = this._getTranslation(eventData);

    		      this._applyTranslation(viewport, translation);

    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_6__["default"].cornerstone.setViewport(element, viewport);
    		    }
    		  }, {
    		    key: "_getTranslation",
    		    value: function _getTranslation(eventData) {
    		      var viewport = eventData.viewport,
    		          image = eventData.image,
    		          deltaPoints = eventData.deltaPoints;
    		      var widthScale = viewport.scale;
    		      var heightScale = viewport.scale;

    		      if (image.rowPixelSpacing < image.columnPixelSpacing) {
    		        widthScale *= image.columnPixelSpacing / image.rowPixelSpacing;
    		      } else if (image.columnPixelSpacing < image.rowPixelSpacing) {
    		        heightScale *= image.rowPixelSpacing / image.columnPixelSpacing;
    		      }

    		      return {
    		        x: deltaPoints.page.x / widthScale,
    		        y: deltaPoints.page.y / heightScale
    		      };
    		    }
    		  }, {
    		    key: "_applyTranslation",
    		    value: function _applyTranslation(viewport, translation) {
    		      viewport.translation.x += translation.x;
    		      viewport.translation.y += translation.y;
    		    }
    		  }]);

    		  return PanTool;
    		}(_base_BaseTool_js__WEBPACK_IMPORTED_MODULE_7__["default"]);



    		/***/ }),

    		/***/ "./tools/ReferenceLinesTool.js":
    		/*!*************************************!*\
    		  !*** ./tools/ReferenceLinesTool.js ***!
    		  \*************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ReferenceLinesTool; });
    		/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "../node_modules/@babel/runtime/regenerator/index.js");
    		/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ "../node_modules/@babel/runtime/helpers/asyncToGenerator.js");
    		/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__);
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__);
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__);
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__);
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__);
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _base_BaseTool_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./base/BaseTool.js */ "./tools/base/BaseTool.js");
    		/* harmony import */ var _drawing_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../drawing/index.js */ "./drawing/index.js");
    		/* harmony import */ var _referenceLines_renderActiveReferenceLine_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./referenceLines/renderActiveReferenceLine.js */ "./tools/referenceLines/renderActiveReferenceLine.js");
    		/* harmony import */ var _util_wait_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../util/wait.js */ "./util/wait.js");
    		/* harmony import */ var _util_logger_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../util/logger.js */ "./util/logger.js");













    		var logger = Object(_util_logger_js__WEBPACK_IMPORTED_MODULE_12__["getLogger"])('tools:ReferenceLinesTool');
    		/**
    		 * When enabled, this tool will display references lines for each source
    		 * enabledElement in the provided synchronizer. This tool can also be configured
    		 * to use a custom renderer for alternative reference line rendering behavior
    		 *
    		 * TODO: Need to watch for configuration changes to update ToolState
    		 * TODO:
    		 *
    		 * @export @public @class
    		 * @name ReferenceLinesTool
    		 * @classdesc Tool for displaying reference lines of other enabledElements
    		 * @extends Tools.Base.BaseTool
    		 */

    		var ReferenceLinesTool =
    		/*#__PURE__*/
    		function (_BaseTool) {
    		  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6___default()(ReferenceLinesTool, _BaseTool);

    		  function ReferenceLinesTool() {
    		    var _this;

    		    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    		    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default()(this, ReferenceLinesTool);

    		    var defaultProps = {
    		      name: 'ReferenceLines',
    		      mixins: ['enabledOrDisabledBinaryTool'],
    		      configuration: {
    		        renderer: _referenceLines_renderActiveReferenceLine_js__WEBPACK_IMPORTED_MODULE_10__["default"]
    		      }
    		    };
    		    _this = _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(ReferenceLinesTool).call(this, props, defaultProps));
    		    _this.renderer = null;
    		    _this.synchronizationContext = null;
    		    return _this;
    		  }

    		  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3___default()(ReferenceLinesTool, [{
    		    key: "enabledCallback",
    		    value: function () {
    		      var _enabledCallback = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()(
    		      /*#__PURE__*/
    		      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(element) {
    		        var _ref,
    		            synchronizationContext,
    		            renderer,
    		            enabledElement,
    		            _args = arguments;

    		        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
    		          while (1) {
    		            switch (_context.prev = _context.next) {
    		              case 0:
    		                _ref = _args.length > 1 && _args[1] !== undefined ? _args[1] : {}, synchronizationContext = _ref.synchronizationContext;
    		                renderer = this.configuration.renderer;
    		                _context.next = 4;
    		                return Object(_util_wait_js__WEBPACK_IMPORTED_MODULE_11__["waitForEnabledElementImageToLoad"])(element);

    		              case 4:
    		                enabledElement = _context.sent;

    		                if (!(!enabledElement || !renderer || !synchronizationContext)) {
    		                  _context.next = 8;
    		                  break;
    		                }

    		                // TODO: Unable to add tool state, image never loaded.
    		                // Should we `setToolDisabledForElement` here?
    		                logger.warn("Unable to enable ".concat(this.name, ". Exiting enable callback. Tool will be enabled, but will not render."));
    		                return _context.abrupt("return");

    		              case 8:
    		                this.renderer = renderer;
    		                this.synchronizationContext = synchronizationContext;
    		                this.forceImageUpdate(element);

    		              case 11:
    		              case "end":
    		                return _context.stop();
    		            }
    		          }
    		        }, _callee, this);
    		      }));

    		      function enabledCallback(_x) {
    		        return _enabledCallback.apply(this, arguments);
    		      }

    		      return enabledCallback;
    		    }()
    		  }, {
    		    key: "disabledCallback",
    		    value: function disabledCallback(element) {
    		      this.forceImageUpdate(element);
    		    }
    		  }, {
    		    key: "forceImageUpdate",
    		    value: function forceImageUpdate(element) {
    		      var enabledElement = _externalModules_js__WEBPACK_IMPORTED_MODULE_7__["default"].cornerstone.getEnabledElement(element);

    		      if (enabledElement.image) {
    		        _externalModules_js__WEBPACK_IMPORTED_MODULE_7__["default"].cornerstone.updateImage(element);
    		      }
    		    }
    		  }, {
    		    key: "renderToolData",
    		    value: function renderToolData(evt) {
    		      var _this2 = this;

    		      var eventData = evt.detail; // No renderer or synch context? Adios

    		      if (!this.renderer || !this.synchronizationContext) {
    		        return;
    		      } // Get the enabled elements associated with this synchronization context and draw them


    		      var enabledElements = this.synchronizationContext.getSourceElements();
    		      var context = Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_9__["getNewContext"])(eventData.canvasContext.canvas);
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_7__["default"].cornerstone.setToPixelCoordinateSystem(eventData.enabledElement, context);
    		      enabledElements.forEach(function (referenceEnabledElement) {
    		        // Don't draw ourselves
    		        if (referenceEnabledElement === evt.currentTarget) {
    		          return;
    		        } // Render it


    		        _this2.renderer(context, eventData, evt.currentTarget, referenceEnabledElement);
    		      });
    		    }
    		  }]);

    		  return ReferenceLinesTool;
    		}(_base_BaseTool_js__WEBPACK_IMPORTED_MODULE_8__["default"]);



    		/***/ }),

    		/***/ "./tools/RotateTool.js":
    		/*!*****************************!*\
    		  !*** ./tools/RotateTool.js ***!
    		  \*****************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return RotateTool; });
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__);
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__);
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _base_BaseTool_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./base/BaseTool.js */ "./tools/base/BaseTool.js");
    		/* harmony import */ var _util_angleBetweenPoints_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/angleBetweenPoints.js */ "./util/angleBetweenPoints.js");
    		/* harmony import */ var _cursors_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./cursors/index.js */ "./tools/cursors/index.js");









    		/**
    		 * @public
    		 * @class RotateTool
    		 * @memberof Tools
    		 *
    		 * @classdesc Tool for rotating the image.
    		 * @extends Tools.Base.BaseTool
    		 */

    		var RotateTool =
    		/*#__PURE__*/
    		function (_BaseTool) {
    		  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default()(RotateTool, _BaseTool);

    		  function RotateTool() {
    		    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    		    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, RotateTool);

    		    var defaultProps = {
    		      name: 'Rotate',
    		      strategies: {
    		        default: defaultStrategy,
    		        horizontal: horizontalStrategy,
    		        vertical: verticalStrategy
    		      },
    		      defaultStrategy: 'default',
    		      supportedInteractionTypes: ['Mouse', 'Touch'],
    		      svgCursor: _cursors_index_js__WEBPACK_IMPORTED_MODULE_8__["rotateCursor"]
    		    };
    		    return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(RotateTool).call(this, props, defaultProps));
    		  }

    		  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(RotateTool, [{
    		    key: "touchDragCallback",
    		    value: function touchDragCallback(evt) {
    		      this.dragCallback(evt);
    		    }
    		  }, {
    		    key: "mouseDragCallback",
    		    value: function mouseDragCallback(evt) {
    		      this.dragCallback(evt);
    		    }
    		  }, {
    		    key: "postMouseDownCallback",
    		    value: function postMouseDownCallback(evt) {
    		      this.initialRotation = evt.detail.viewport.rotation;
    		    }
    		  }, {
    		    key: "dragCallback",
    		    value: function dragCallback(evt) {
    		      evt.detail.viewport.initialRotation = this.initialRotation;
    		      this.applyActiveStrategy(evt, this.configuration);
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.setViewport(evt.detail.element, evt.detail.viewport);
    		    }
    		  }]);

    		  return RotateTool;
    		}(_base_BaseTool_js__WEBPACK_IMPORTED_MODULE_6__["default"]);



    		var defaultStrategy = function defaultStrategy(evt) {
    		  var eventData = evt.detail;
    		  var element = eventData.element,
    		      viewport = eventData.viewport;
    		  var initialRotation = viewport.initialRotation; // Calculate the center of the image

    		  var rect = element.getBoundingClientRect(element);
    		  var width = element.clientWidth,
    		      height = element.clientHeight;
    		  var initialPoints = {
    		    x: eventData.startPoints.client.x,
    		    y: eventData.startPoints.client.y
    		  };
    		  var scale = viewport.scale,
    		      translation = viewport.translation;
    		  var centerPoints = {
    		    x: rect.left + width / 2 + translation.x * scale,
    		    y: rect.top + height / 2 + translation.y * scale
    		  };
    		  var currentPoints = {
    		    x: eventData.currentPoints.client.x,
    		    y: eventData.currentPoints.client.y
    		  };
    		  var angleInfo = Object(_util_angleBetweenPoints_js__WEBPACK_IMPORTED_MODULE_7__["default"])(centerPoints, initialPoints, currentPoints);

    		  if (angleInfo.direction < 0) {
    		    angleInfo.angle = -angleInfo.angle;
    		  }

    		  viewport.rotation = initialRotation + angleInfo.angle;
    		};

    		var horizontalStrategy = function horizontalStrategy(evt) {
    		  var eventData = evt.detail;
    		  var viewport = eventData.viewport,
    		      deltaPoints = eventData.deltaPoints;
    		  viewport.rotation += deltaPoints.page.x / viewport.scale;
    		};

    		var verticalStrategy = function verticalStrategy(evt) {
    		  var eventData = evt.detail;
    		  var viewport = eventData.viewport,
    		      deltaPoints = eventData.deltaPoints;
    		  viewport.rotation += deltaPoints.page.y / viewport.scale;
    		};

    		/***/ }),

    		/***/ "./tools/RotateTouchTool.js":
    		/*!**********************************!*\
    		  !*** ./tools/RotateTouchTool.js ***!
    		  \**********************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return RotateTouchTool; });
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__);
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__);
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _base_BaseTool_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./base/BaseTool.js */ "./tools/base/BaseTool.js");







    		/**
    		 * @public
    		 * @class RotateTouchTool
    		 * @memberof Tools
    		 *
    		 * @classdesc Tool for rotating the image using touch.
    		 * @extends Tools.Base.BaseTool
    		 */

    		var RotateTouchTool =
    		/*#__PURE__*/
    		function (_BaseTool) {
    		  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default()(RotateTouchTool, _BaseTool);

    		  function RotateTouchTool() {
    		    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    		    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, RotateTouchTool);

    		    var defaultProps = {
    		      name: 'RotateTouch',
    		      supportedInteractionTypes: ['TouchRotate']
    		    };
    		    return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(RotateTouchTool).call(this, props, defaultProps));
    		  }

    		  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(RotateTouchTool, [{
    		    key: "touchRotateCallback",
    		    value: function touchRotateCallback(evt) {
    		      var eventData = evt.detail;
    		      var element = eventData.element,
    		          viewport = eventData.viewport,
    		          rotation = eventData.rotation;
    		      viewport.rotation += rotation;
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.setViewport(element, viewport);
    		    }
    		  }]);

    		  return RotateTouchTool;
    		}(_base_BaseTool_js__WEBPACK_IMPORTED_MODULE_6__["default"]);



    		/***/ }),

    		/***/ "./tools/ScaleOverlayTool.js":
    		/*!***********************************!*\
    		  !*** ./tools/ScaleOverlayTool.js ***!
    		  \***********************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ScaleOverlayTool; });
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__);
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__);
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _base_BaseTool_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./base/BaseTool.js */ "./tools/base/BaseTool.js");
    		/* harmony import */ var _drawing_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../drawing/index.js */ "./drawing/index.js");
    		/* harmony import */ var _stateManagement_toolStyle_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../stateManagement/toolStyle.js */ "./stateManagement/toolStyle.js");
    		/* harmony import */ var _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../stateManagement/toolColors.js */ "./stateManagement/toolColors.js");
    		/* harmony import */ var _util_logger_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../util/logger.js */ "./util/logger.js");






    		 // Drawing





    		var logger = Object(_util_logger_js__WEBPACK_IMPORTED_MODULE_10__["getLogger"])('tools:ScaleOverlayTool');
    		/**
    		 * @public
    		 * @class ScaleOverlayTool
    		 * @memberof Tools
    		 *
    		 * @classdesc Tool for displaying a scale overlay on the image.
    		 * @extends Tools.Base.BaseTool
    		 */

    		var ScaleOverlayTool =
    		/*#__PURE__*/
    		function (_BaseTool) {
    		  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default()(ScaleOverlayTool, _BaseTool);

    		  function ScaleOverlayTool() {
    		    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    		    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, ScaleOverlayTool);

    		    var defaultProps = {
    		      name: 'ScaleOverlay',
    		      configuration: {
    		        minorTickLength: 12.5,
    		        majorTickLength: 25
    		      },
    		      mixins: ['enabledOrDisabledBinaryTool']
    		    };
    		    return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(ScaleOverlayTool).call(this, props, defaultProps));
    		  }

    		  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(ScaleOverlayTool, [{
    		    key: "enabledCallback",
    		    value: function enabledCallback(element) {
    		      this.forceImageUpdate(element);
    		    }
    		  }, {
    		    key: "disabledCallback",
    		    value: function disabledCallback(element) {
    		      this.forceImageUpdate(element);
    		    }
    		  }, {
    		    key: "forceImageUpdate",
    		    value: function forceImageUpdate(element) {
    		      var enabledElement = _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.getEnabledElement(element);

    		      if (enabledElement.image) {
    		        _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.updateImage(element);
    		      }
    		    }
    		  }, {
    		    key: "renderToolData",
    		    value: function renderToolData(evt) {
    		      var eventData = evt.detail;
    		      var context = Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_7__["getNewContext"])(eventData.canvasContext.canvas);
    		      var image = eventData.image,
    		          viewport = eventData.viewport,
    		          element = eventData.element;
    		      var rowPixelSpacing = image.rowPixelSpacing;
    		      var colPixelSpacing = image.columnPixelSpacing;
    		      var imagePlane = _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.metaData.get('imagePlaneModule', image.imageId);

    		      if (imagePlane) {
    		        rowPixelSpacing = imagePlane.rowPixelSpacing || imagePlane.rowImagePixelSpacing;
    		        colPixelSpacing = imagePlane.columnPixelSpacing || imagePlane.colImagePixelSpacing;
    		      } // Check whether pixel spacing is defined


    		      if (!rowPixelSpacing || !colPixelSpacing) {
    		        logger.warn("unable to define rowPixelSpacing or colPixelSpacing from data on ".concat(this.name, "'s renderToolData"));
    		        return;
    		      }

    		      var canvasSize = {
    		        width: context.canvas.width,
    		        height: context.canvas.height
    		      }; // Distance between intervals is 10mm

    		      var verticalIntervalScale = 10.0 / rowPixelSpacing * viewport.scale;
    		      var horizontalIntervalScale = 10.0 / colPixelSpacing * viewport.scale; // 0.1 and 0.05 gives margin to horizontal and vertical lines

    		      var hscaleBounds = computeScaleBounds(canvasSize, 0.25, 0.05);
    		      var vscaleBounds = computeScaleBounds(canvasSize, 0.05, 0.15);

    		      if (!canvasSize.width || !canvasSize.height || !hscaleBounds || !vscaleBounds) {
    		        return;
    		      }

    		      var color = _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_9__["default"].getToolColor();
    		      var lineWidth = _stateManagement_toolStyle_js__WEBPACK_IMPORTED_MODULE_8__["default"].getToolWidth();
    		      var imageAttributes = Object.assign({}, {
    		        hscaleBounds: hscaleBounds,
    		        vscaleBounds: vscaleBounds,
    		        verticalMinorTick: verticalIntervalScale,
    		        horizontalMinorTick: horizontalIntervalScale,
    		        verticalLine: {
    		          start: {
    		            x: vscaleBounds.bottomRight.x,
    		            y: vscaleBounds.topLeft.y
    		          },
    		          end: {
    		            x: vscaleBounds.bottomRight.x,
    		            y: vscaleBounds.bottomRight.y
    		          }
    		        },
    		        horizontalLine: {
    		          start: {
    		            x: hscaleBounds.topLeft.x,
    		            y: hscaleBounds.bottomRight.y
    		          },
    		          end: {
    		            x: hscaleBounds.bottomRight.x,
    		            y: hscaleBounds.bottomRight.y
    		          }
    		        },
    		        color: color,
    		        lineWidth: lineWidth
    		      }, this.configuration);
    		      Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_7__["draw"])(context, function (context) {
    		        Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_7__["setShadow"])(context, imageAttributes); // Draw vertical line

    		        Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_7__["drawLine"])(context, element, imageAttributes.verticalLine.start, imageAttributes.verticalLine.end, {
    		          color: color,
    		          lineWidth: lineWidth
    		        }, 'canvas');
    		        drawVerticalScalebarIntervals(context, element, imageAttributes); // Draw horizontal line

    		        Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_7__["drawLine"])(context, element, imageAttributes.horizontalLine.start, imageAttributes.horizontalLine.end, {
    		          color: color,
    		          lineWidth: lineWidth
    		        }, 'canvas');
    		        drawHorizontalScalebarIntervals(context, element, imageAttributes);
    		      });
    		    }
    		  }]);

    		  return ScaleOverlayTool;
    		}(_base_BaseTool_js__WEBPACK_IMPORTED_MODULE_6__["default"]);
    		/**
    		 * Computes the max bound for scales on the image
    		 * @param  {{width: number, height: number}} canvasSize
    		 * @param  {number} horizontalReduction
    		 * @param  {number} verticalReduction
    		 * @returns {Object.<string, { x:number, y:number }>}
    		 */




    		var computeScaleBounds = function computeScaleBounds(canvasSize, horizontalReduction, verticalReduction) {
    		  var hReduction = horizontalReduction * Math.min(1000, canvasSize.width);
    		  var vReduction = verticalReduction * Math.min(1000, canvasSize.height);
    		  var canvasBounds = {
    		    left: hReduction,
    		    top: vReduction,
    		    width: canvasSize.width - 2 * hReduction,
    		    height: canvasSize.height - 2 * vReduction
    		  };
    		  return {
    		    topLeft: {
    		      x: canvasBounds.left,
    		      y: canvasBounds.top
    		    },
    		    bottomRight: {
    		      x: canvasBounds.left + canvasBounds.width,
    		      y: canvasBounds.top + canvasBounds.height
    		    }
    		  };
    		};
    		/**
    		 * @param {CanvasRenderingContext2D} context
    		 * @param {HTMLElement} element
    		 * @param {Object} imageAttributes
    		 * @returns {void}
    		 */


    		var drawVerticalScalebarIntervals = function drawVerticalScalebarIntervals(context, element, imageAttributes) {
    		  var i = 0;

    		  while (imageAttributes.verticalLine.start.y + i * imageAttributes.verticalMinorTick <= imageAttributes.vscaleBounds.bottomRight.y) {
    		    var color = imageAttributes.color,
    		        lineWidth = imageAttributes.lineWidth;
    		    var startPoint = {
    		      x: imageAttributes.verticalLine.start.x,
    		      y: imageAttributes.verticalLine.start.y + i * imageAttributes.verticalMinorTick
    		    };
    		    var endPoint = {
    		      x: 0,
    		      y: imageAttributes.verticalLine.start.y + i * imageAttributes.verticalMinorTick
    		    };

    		    if (i % 5 === 0) {
    		      endPoint.x = imageAttributes.verticalLine.start.x - imageAttributes.majorTickLength;
    		    } else {
    		      endPoint.x = imageAttributes.verticalLine.start.x - imageAttributes.minorTickLength;
    		    }

    		    Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_7__["drawLine"])(context, element, startPoint, endPoint, {
    		      color: color,
    		      lineWidth: lineWidth
    		    }, 'canvas');
    		    i++;
    		  }
    		};
    		/**
    		 * @param {CanvasRenderingContext2D} context
    		 * @param {HTMLElement} element
    		 * @param {Object} imageAttributes
    		 * @returns {void}
    		 */


    		var drawHorizontalScalebarIntervals = function drawHorizontalScalebarIntervals(context, element, imageAttributes) {
    		  var i = 0;

    		  while (imageAttributes.horizontalLine.start.x + i * imageAttributes.horizontalMinorTick <= imageAttributes.hscaleBounds.bottomRight.x) {
    		    var color = imageAttributes.color,
    		        lineWidth = imageAttributes.lineWidth;
    		    var startPoint = {
    		      x: imageAttributes.horizontalLine.start.x + i * imageAttributes.horizontalMinorTick,
    		      y: imageAttributes.horizontalLine.start.y
    		    };
    		    var endPoint = {
    		      x: imageAttributes.horizontalLine.start.x + i * imageAttributes.horizontalMinorTick,
    		      y: 0
    		    };

    		    if (i % 5 === 0) {
    		      endPoint.y = imageAttributes.horizontalLine.start.y - imageAttributes.majorTickLength;
    		    } else {
    		      endPoint.y = imageAttributes.horizontalLine.start.y - imageAttributes.minorTickLength;
    		    }

    		    Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_7__["drawLine"])(context, element, startPoint, endPoint, {
    		      color: color,
    		      lineWidth: lineWidth
    		    }, 'canvas');
    		    i++;
    		  }
    		};

    		/***/ }),

    		/***/ "./tools/StackScrollMouseWheelTool.js":
    		/*!********************************************!*\
    		  !*** ./tools/StackScrollMouseWheelTool.js ***!
    		  \********************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return StackScrollMouseWheelTool; });
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__);
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__);
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__);
    		/* harmony import */ var _base_BaseTool_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./base/BaseTool.js */ "./tools/base/BaseTool.js");
    		/* harmony import */ var _util_scroll_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/scroll.js */ "./util/scroll.js");







    		/**
    		 * @public
    		 * @class StackScrollMouseWheelTool
    		 * @memberof Tools
    		 *
    		 * @classdesc Tool for scrolling through a series using the mouse wheel.
    		 * @extends Tools.Base.BaseTool
    		 */

    		var StackScrollMouseWheelTool =
    		/*#__PURE__*/
    		function (_BaseTool) {
    		  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default()(StackScrollMouseWheelTool, _BaseTool);

    		  function StackScrollMouseWheelTool() {
    		    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    		    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, StackScrollMouseWheelTool);

    		    var defaultProps = {
    		      name: 'StackScrollMouseWheel',
    		      supportedInteractionTypes: ['MouseWheel'],
    		      configuration: {
    		        loop: false,
    		        allowSkipping: true,
    		        invert: false
    		      }
    		    };
    		    return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(StackScrollMouseWheelTool).call(this, props, defaultProps));
    		  }

    		  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(StackScrollMouseWheelTool, [{
    		    key: "mouseWheelCallback",
    		    value: function mouseWheelCallback(evt) {
    		      var _evt$detail = evt.detail,
    		          images = _evt$detail.direction,
    		          element = _evt$detail.element;
    		      var _this$configuration = this.configuration,
    		          loop = _this$configuration.loop,
    		          allowSkipping = _this$configuration.allowSkipping,
    		          invert = _this$configuration.invert;
    		      var direction = invert ? -images : images;
    		      Object(_util_scroll_js__WEBPACK_IMPORTED_MODULE_6__["default"])(element, direction, loop, allowSkipping);
    		    }
    		  }]);

    		  return StackScrollMouseWheelTool;
    		}(_base_BaseTool_js__WEBPACK_IMPORTED_MODULE_5__["default"]);



    		/***/ }),

    		/***/ "./tools/StackScrollMultiTouchTool.js":
    		/*!********************************************!*\
    		  !*** ./tools/StackScrollMultiTouchTool.js ***!
    		  \********************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return StackScrollMultiTouchTool; });
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__);
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__);
    		/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "../node_modules/@babel/runtime/helpers/assertThisInitialized.js");
    		/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__);
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__);
    		/* harmony import */ var _base_BaseTool_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./base/BaseTool.js */ "./tools/base/BaseTool.js");
    		/* harmony import */ var _util_scroll_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/scroll.js */ "./util/scroll.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _toolOptions_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../toolOptions.js */ "./toolOptions.js");










    		/**
    		 * @public
    		 * @class StackScrollMultiTouchTool
    		 * @memberof Tools
    		 *
    		 * @classdesc Tool for scrolling through a series using multi-touch.
    		 * @extends Tools.Base.BaseTool
    		 */

    		var StackScrollMultiTouchTool =
    		/*#__PURE__*/
    		function (_BaseTool) {
    		  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5___default()(StackScrollMultiTouchTool, _BaseTool);

    		  function StackScrollMultiTouchTool() {
    		    var _this;

    		    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    		    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, StackScrollMultiTouchTool);

    		    var defaultProps = {
    		      name: 'StackScrollMultiTouch',
    		      supportedInteractionTypes: ['MultiTouch'],
    		      configuration: {
    		        loop: false,
    		        allowSkipping: true,
    		        touchPointers: 3
    		      }
    		    };
    		    _this = _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(StackScrollMultiTouchTool).call(this, props, defaultProps));
    		    _this.multiTouchDragCallback = _this._dragCallback.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    return _this;
    		  }

    		  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(StackScrollMultiTouchTool, [{
    		    key: "_dragCallback",
    		    value: function _dragCallback(evt) {
    		      var eventData = evt.detail;

    		      if (eventData.numPointers === this.configuration.touchPointers) {
    		        var element = eventData.element,
    		            deltaPoints = eventData.deltaPoints;
    		        var _this$configuration = this.configuration,
    		            loop = _this$configuration.loop,
    		            allowSkipping = _this$configuration.allowSkipping;
    		        var options = Object(_toolOptions_js__WEBPACK_IMPORTED_MODULE_9__["getToolOptions"])(this.name, element);

    		        var pixelsPerImage = this._getPixelPerImage(element);

    		        var deltaY = this._getDeltaY(element, deltaPoints.page.y);

    		        if (!pixelsPerImage) {
    		          return;
    		        }

    		        if (Math.abs(deltaY) >= pixelsPerImage) {
    		          var imageIdIndexOffset = Math.round(deltaY / pixelsPerImage);
    		          Object(_util_scroll_js__WEBPACK_IMPORTED_MODULE_7__["default"])(element, imageIdIndexOffset, loop, allowSkipping);
    		          options.deltaY = deltaY % pixelsPerImage;
    		        } else {
    		          options.deltaY = deltaY;
    		        }

    		        Object(_toolOptions_js__WEBPACK_IMPORTED_MODULE_9__["setToolOptions"])(this.name, element, options);
    		      }
    		    }
    		  }, {
    		    key: "_getDeltaY",
    		    value: function _getDeltaY(element, deltaPointsY) {
    		      var options = Object(_toolOptions_js__WEBPACK_IMPORTED_MODULE_9__["getToolOptions"])(this.name, element);
    		      var deltaY = options.deltaY || 0;
    		      return deltaY + deltaPointsY;
    		    }
    		  }, {
    		    key: "_getPixelPerImage",
    		    value: function _getPixelPerImage(element) {
    		      var toolData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_8__["getToolState"])(element, 'stack');

    		      if (!toolData || !toolData.data || !toolData.data.length) {
    		        return;
    		      }

    		      var stackData = toolData.data[0];
    		      var stackScrollSpeed = this.configuration.stackScrollSpeed; // The Math.max here makes it easier to mouseDrag-scroll small or really large image stacks

    		      return stackScrollSpeed || Math.max(2, element.offsetHeight / Math.max(stackData.imageIds.length, 8));
    		    }
    		  }]);

    		  return StackScrollMultiTouchTool;
    		}(_base_BaseTool_js__WEBPACK_IMPORTED_MODULE_6__["default"]);



    		/***/ }),

    		/***/ "./tools/StackScrollTool.js":
    		/*!**********************************!*\
    		  !*** ./tools/StackScrollTool.js ***!
    		  \**********************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return StackScrollTool; });
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__);
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__);
    		/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "../node_modules/@babel/runtime/helpers/assertThisInitialized.js");
    		/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__);
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__);
    		/* harmony import */ var _base_BaseTool_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./base/BaseTool.js */ "./tools/base/BaseTool.js");
    		/* harmony import */ var _util_scroll_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/scroll.js */ "./util/scroll.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _toolOptions_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../toolOptions.js */ "./toolOptions.js");
    		/* harmony import */ var _cursors_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./cursors/index.js */ "./tools/cursors/index.js");











    		/**
    		 * @public
    		 * @class StackScrollTool
    		 * @memberof Tools
    		 *
    		 * @classdesc Tool for scrolling through a series.
    		 * @extends Tools.Base.BaseTool
    		 */

    		var StackScrollTool =
    		/*#__PURE__*/
    		function (_BaseTool) {
    		  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5___default()(StackScrollTool, _BaseTool);

    		  function StackScrollTool() {
    		    var _this;

    		    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    		    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, StackScrollTool);

    		    var defaultProps = {
    		      name: 'StackScroll',
    		      supportedInteractionTypes: ['Mouse', 'Touch'],
    		      configuration: {
    		        loop: false,
    		        allowSkipping: true
    		      },
    		      svgCursor: _cursors_index_js__WEBPACK_IMPORTED_MODULE_10__["stackScrollCursor"]
    		    };
    		    _this = _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(StackScrollTool).call(this, props, defaultProps));
    		    _this.mouseDragCallback = _this._dragCallback.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    _this.touchDragCallback = _this._dragCallback.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    return _this;
    		  }

    		  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(StackScrollTool, [{
    		    key: "_dragCallback",
    		    value: function _dragCallback(evt) {
    		      var eventData = evt.detail;
    		      var element = eventData.element,
    		          deltaPoints = eventData.deltaPoints;
    		      var _this$configuration = this.configuration,
    		          loop = _this$configuration.loop,
    		          allowSkipping = _this$configuration.allowSkipping;
    		      var options = Object(_toolOptions_js__WEBPACK_IMPORTED_MODULE_9__["getToolOptions"])(this.name, element);

    		      var pixelsPerImage = this._getPixelPerImage(element);

    		      var deltaY = this._getDeltaY(element, deltaPoints.page.y);

    		      if (!pixelsPerImage) {
    		        return;
    		      }

    		      if (Math.abs(deltaY) >= pixelsPerImage) {
    		        var imageIdIndexOffset = Math.round(deltaY / pixelsPerImage);
    		        Object(_util_scroll_js__WEBPACK_IMPORTED_MODULE_7__["default"])(element, imageIdIndexOffset, loop, allowSkipping);
    		        options.deltaY = deltaY % pixelsPerImage;
    		      } else {
    		        options.deltaY = deltaY;
    		      }

    		      Object(_toolOptions_js__WEBPACK_IMPORTED_MODULE_9__["setToolOptions"])(this.name, element, options);
    		    }
    		  }, {
    		    key: "_getDeltaY",
    		    value: function _getDeltaY(element, deltaPointsY) {
    		      var options = Object(_toolOptions_js__WEBPACK_IMPORTED_MODULE_9__["getToolOptions"])(this.name, element);
    		      var deltaY = options.deltaY || 0;
    		      return deltaY + deltaPointsY;
    		    }
    		  }, {
    		    key: "_getPixelPerImage",
    		    value: function _getPixelPerImage(element) {
    		      var toolData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_8__["getToolState"])(element, 'stack');

    		      if (!toolData || !toolData.data || !toolData.data.length) {
    		        return;
    		      }

    		      var stackData = toolData.data[0];
    		      var stackScrollSpeed = this.configuration.stackScrollSpeed; // The Math.max here makes it easier to mouseDrag-scroll small or really large image stacks

    		      return stackScrollSpeed || Math.max(2, element.offsetHeight / Math.max(stackData.imageIds.length, 8));
    		    }
    		  }]);

    		  return StackScrollTool;
    		}(_base_BaseTool_js__WEBPACK_IMPORTED_MODULE_6__["default"]);



    		/***/ }),

    		/***/ "./tools/WwwcRegionTool.js":
    		/*!*********************************!*\
    		  !*** ./tools/WwwcRegionTool.js ***!
    		  \*********************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return WwwcRegionTool; });
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__);
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__);
    		/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "../node_modules/@babel/runtime/helpers/assertThisInitialized.js");
    		/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__);
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _base_BaseTool_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./base/BaseTool.js */ "./tools/base/BaseTool.js");
    		/* harmony import */ var _drawing_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../drawing/index.js */ "./drawing/index.js");
    		/* harmony import */ var _util_clip_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../util/clip.js */ "./util/clip.js");
    		/* harmony import */ var _util_getLuminance_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../util/getLuminance.js */ "./util/getLuminance.js");
    		/* harmony import */ var _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../stateManagement/toolColors.js */ "./stateManagement/toolColors.js");
    		/* harmony import */ var _cursors_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./cursors/index.js */ "./tools/cursors/index.js");







    		 // Drawing






    		/**
    		 * @public
    		 * @class WwwcRegionTool
    		 * @memberof Tools
    		 *
    		 * @classdesc Tool for setting wwwc based on a rectangular region.
    		 * @extends Tools.Base.BaseTool
    		 */

    		var WwwcRegionTool =
    		/*#__PURE__*/
    		function (_BaseTool) {
    		  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5___default()(WwwcRegionTool, _BaseTool);

    		  /** @inheritdoc */
    		  function WwwcRegionTool() {
    		    var _this;

    		    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    		    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, WwwcRegionTool);

    		    var defaultProps = {
    		      name: 'WwwcRegion',
    		      supportedInteractionTypes: ['Mouse', 'Touch'],
    		      configuration: {
    		        minWindowWidth: 10
    		      },
    		      svgCursor: _cursors_index_js__WEBPACK_IMPORTED_MODULE_12__["wwwcRegionCursor"]
    		    };
    		    _this = _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(WwwcRegionTool).call(this, props, defaultProps));

    		    _this._resetHandles(); //
    		    // Touch
    		    //

    		    /** @inheritdoc */


    		    _this.postTouchStartCallback = _this._startOutliningRegion.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    /** @inheritdoc */

    		    _this.touchDragCallback = _this._setHandlesAndUpdate.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    /** @inheritdoc */

    		    _this.touchEndCallback = _this._applyStrategy.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this)); //
    		    // MOUSE
    		    //

    		    /** @inheritdoc */

    		    _this.postMouseDownCallback = _this._startOutliningRegion.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    /** @inheritdoc */

    		    _this.mouseClickCallback = _this._startOutliningRegion.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    /** @inheritdoc */

    		    _this.mouseDragCallback = _this._setHandlesAndUpdate.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    /** @inheritdoc */

    		    _this.mouseMoveCallback = _this._setHandlesAndUpdate.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    /** @inheritdoc */

    		    _this.mouseUpCallback = _this._applyStrategy.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    return _this;
    		  }
    		  /**
    		   * Render hook: draws the WWWCRegion's "box" when selecting
    		   *
    		   * @param {Cornerstone.event#cornerstoneimagerendered} evt cornerstoneimagerendered event
    		   * @memberof Tools.WwwcRegionTool
    		   * @returns {void}
    		   */


    		  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(WwwcRegionTool, [{
    		    key: "renderToolData",
    		    value: function renderToolData(evt) {
    		      var _this2 = this;

    		      var eventData = evt.detail;
    		      var element = eventData.element;
    		      var color = _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_11__["default"].getColorIfActive({
    		        active: true
    		      });
    		      var context = Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_8__["getNewContext"])(eventData.canvasContext.canvas);
    		      Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_8__["draw"])(context, function (context) {
    		        Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_8__["drawRect"])(context, element, _this2.handles.start, _this2.handles.end, {
    		          color: color
    		        });
    		      });
    		    }
    		    /**
    		     * Sets the start handle point and claims the eventDispatcher event
    		     *
    		     * @private
    		     * @param {*} evt // mousedown, touchstart, click
    		     * @returns {Boolean} True
    		     */

    		  }, {
    		    key: "_startOutliningRegion",
    		    value: function _startOutliningRegion(evt) {
    		      var consumeEvent = true;
    		      var element = evt.detail.element;
    		      var image = evt.detail.currentPoints.image;

    		      if (_isEmptyObject(this.handles.start)) {
    		        this.handles.start = image;
    		      } else {
    		        this.handles.end = image;

    		        this._applyStrategy(evt);
    		      }

    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_6__["default"].cornerstone.updateImage(element);
    		      return consumeEvent;
    		    }
    		    /**
    		     * This function will update the handles and updateImage to force re-draw
    		     *
    		     * @private
    		     * @method _setHandlesAndUpdate
    		     * @param {(CornerstoneTools.event#TOUCH_DRAG|CornerstoneTools.event#MOUSE_DRAG|CornerstoneTools.event#MOUSE_MOVE)} evt  Interaction event emitted by an enabledElement
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "_setHandlesAndUpdate",
    		    value: function _setHandlesAndUpdate(evt) {
    		      var element = evt.detail.element;
    		      var image = evt.detail.currentPoints.image;
    		      this.handles.end = image;
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_6__["default"].cornerstone.updateImage(element);
    		    }
    		    /**
    		     * Event handler for MOUSE_UP/TOUCH_END during handle drag event loop.
    		     *
    		     * @private
    		     * @method _applyStrategy
    		     * @param {(CornerstoneTools.event#MOUSE_UP|CornerstoneTools.event#TOUCH_END)} evt Interaction event emitted by an enabledElement
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "_applyStrategy",
    		    value: function _applyStrategy(evt) {
    		      if (_isEmptyObject(this.handles.start) || _isEmptyObject(this.handles.end)) {
    		        return;
    		      }

    		      evt.detail.handles = this.handles;

    		      _applyWWWCRegion(evt, this.configuration);

    		      this._resetHandles();
    		    }
    		    /**
    		     * Sets the start and end handle points to empty objects
    		     *
    		     * @private
    		     * @method _resetHandles
    		     * @returns {undefined}
    		     */

    		  }, {
    		    key: "_resetHandles",
    		    value: function _resetHandles() {
    		      this.handles = {
    		        start: {},
    		        end: {}
    		      };
    		    }
    		  }]);

    		  return WwwcRegionTool;
    		}(_base_BaseTool_js__WEBPACK_IMPORTED_MODULE_7__["default"]);
    		/**
    		 * Helper to determine if an object has no keys and is the correct type (is empty)
    		 *
    		 * @private
    		 * @function _isEmptyObject
    		 * @param {Object} obj The object to check
    		 * @returns {Boolean} true if the object is empty
    		 */




    		var _isEmptyObject = function _isEmptyObject(obj) {
    		  return Object.keys(obj).length === 0 && obj.constructor === Object;
    		};
    		/**
    		 * Calculates the minimum and maximum value in the given pixel array
    		 * and updates the viewport of the element in the event.
    		 *
    		 * @private
    		 * @method _applyWWWCRegion
    		 * @param {(CornerstoneTools.event#MOUSE_UP|CornerstoneTools.event#TOUCH_END)} evt Interaction event emitted by an enabledElement
    		 * @param {Object} config The tool's configuration object
    		 * @returns {void}
    		 */


    		var _applyWWWCRegion = function _applyWWWCRegion(evt, config) {
    		  var eventData = evt.detail;
    		  var image = eventData.image,
    		      element = eventData.element;
    		  var _evt$detail$handles = evt.detail.handles,
    		      startPoint = _evt$detail$handles.start,
    		      endPoint = _evt$detail$handles.end; // Get the rectangular region defined by the handles

    		  var left = Math.min(startPoint.x, endPoint.x);
    		  var top = Math.min(startPoint.y, endPoint.y);
    		  var width = Math.abs(startPoint.x - endPoint.x);
    		  var height = Math.abs(startPoint.y - endPoint.y); // Bound the rectangle so we don't get undefined pixels

    		  left = Object(_util_clip_js__WEBPACK_IMPORTED_MODULE_9__["default"])(left, 0, image.width);
    		  top = Object(_util_clip_js__WEBPACK_IMPORTED_MODULE_9__["default"])(top, 0, image.height);
    		  width = Math.floor(Math.min(width, Math.abs(image.width - left)));
    		  height = Math.floor(Math.min(height, Math.abs(image.height - top))); // Get the pixel data in the rectangular region

    		  var pixelLuminanceData = Object(_util_getLuminance_js__WEBPACK_IMPORTED_MODULE_10__["default"])(element, left, top, width, height); // Calculate the minimum and maximum pixel values

    		  var minMaxMean = _calculateMinMaxMean(pixelLuminanceData, image.minPixelValue, image.maxPixelValue); // Adjust the viewport window width and center based on the calculated values


    		  var viewport = eventData.viewport;

    		  if (config.minWindowWidth === undefined) {
    		    config.minWindowWidth = 10;
    		  }

    		  viewport.voi.windowWidth = Math.max(Math.abs(minMaxMean.max - minMaxMean.min), config.minWindowWidth);
    		  viewport.voi.windowCenter = minMaxMean.mean;
    		  _externalModules_js__WEBPACK_IMPORTED_MODULE_6__["default"].cornerstone.setViewport(element, viewport);
    		  _externalModules_js__WEBPACK_IMPORTED_MODULE_6__["default"].cornerstone.updateImage(element);
    		};
    		/**
    		 * Calculates the minimum, maximum, and mean value in the given pixel array
    		 *
    		 * @private
    		 * @method _calculateMinMaxMean
    		 * @param {number[]} pixelLuminance array of pixel luminance values
    		 * @param {number} globalMin starting "min" valie
    		 * @param {bumber} globalMax starting "max" value
    		 * @returns {Object} {min: number, max: number, mean: number }
    		 */


    		var _calculateMinMaxMean = function _calculateMinMaxMean(pixelLuminance, globalMin, globalMax) {
    		  var numPixels = pixelLuminance.length;
    		  var min = globalMax;
    		  var max = globalMin;
    		  var sum = 0;

    		  if (numPixels < 2) {
    		    return {
    		      min: min,
    		      max: max,
    		      mean: (globalMin + globalMax) / 2
    		    };
    		  }

    		  for (var index = 0; index < numPixels; index++) {
    		    var spv = pixelLuminance[index];
    		    min = Math.min(min, spv);
    		    max = Math.max(max, spv);
    		    sum += spv;
    		  }

    		  return {
    		    min: min,
    		    max: max,
    		    mean: sum / numPixels
    		  };
    		};

    		/***/ }),

    		/***/ "./tools/WwwcTool.js":
    		/*!***************************!*\
    		  !*** ./tools/WwwcTool.js ***!
    		  \***************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return WwwcTool; });
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__);
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__);
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _base_BaseTool_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./base/BaseTool.js */ "./tools/base/BaseTool.js");
    		/* harmony import */ var _cursors_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./cursors/index.js */ "./tools/cursors/index.js");








    		/**
    		 * @public
    		 * @class WwwcTool
    		 * @memberof Tools
    		 *
    		 * @classdesc Tool for setting wwwc by dragging with mouse/touch.
    		 * @extends Tools.Base.BaseTool
    		 */

    		var WwwcTool =
    		/*#__PURE__*/
    		function (_BaseTool) {
    		  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default()(WwwcTool, _BaseTool);

    		  function WwwcTool() {
    		    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    		    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, WwwcTool);

    		    var defaultProps = {
    		      name: 'Wwwc',
    		      strategies: {
    		        basicLevelingStrategy: basicLevelingStrategy
    		      },
    		      supportedInteractionTypes: ['Mouse', 'Touch'],
    		      configuration: {
    		        orientation: 0
    		      },
    		      svgCursor: _cursors_index_js__WEBPACK_IMPORTED_MODULE_7__["wwwcCursor"]
    		    };
    		    return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(WwwcTool).call(this, props, defaultProps));
    		  }

    		  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(WwwcTool, [{
    		    key: "mouseDragCallback",
    		    value: function mouseDragCallback(evt) {
    		      this.applyActiveStrategy(evt);
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.setViewport(evt.detail.element, evt.detail.viewport);
    		    }
    		  }, {
    		    key: "touchDragCallback",
    		    value: function touchDragCallback(evt) {
    		      // Prevent CornerstoneToolsTouchStartActive from killing any press events
    		      evt.stopImmediatePropagation();
    		      this.applyActiveStrategy(evt);
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.setViewport(evt.detail.element, evt.detail.viewport);
    		    }
    		  }]);

    		  return WwwcTool;
    		}(_base_BaseTool_js__WEBPACK_IMPORTED_MODULE_6__["default"]);
    		/**
    		 * Here we normalize the ww/wc adjustments so the same number of on screen pixels
    		 * adjusts the same percentage of the dynamic range of the image.  This is needed to
    		 * provide consistency for the ww/wc tool regardless of the dynamic range (e.g. an 8 bit
    		 * image will feel the same as a 16 bit image would)
    		 *
    		 * @param {Object} evt
    		 * @param {Object} { orienttion }
    		 * @returns {void}
    		 */




    		function basicLevelingStrategy(evt, _ref) {
    		  var orientation = _ref.orientation;
    		  var eventData = evt.detail;
    		  var maxVOI = eventData.image.maxPixelValue * eventData.image.slope + eventData.image.intercept;
    		  var minVOI = eventData.image.minPixelValue * eventData.image.slope + eventData.image.intercept;
    		  var imageDynamicRange = maxVOI - minVOI;
    		  var multiplier = imageDynamicRange / 1024;
    		  var deltaX = eventData.deltaPoints.page.x * multiplier;
    		  var deltaY = eventData.deltaPoints.page.y * multiplier;

    		  if (orientation === 0) {
    		    eventData.viewport.voi.windowWidth += deltaX;
    		    eventData.viewport.voi.windowCenter += deltaY;
    		  } else {
    		    eventData.viewport.voi.windowWidth += deltaY;
    		    eventData.viewport.voi.windowCenter += deltaX;
    		  }
    		}

    		/***/ }),

    		/***/ "./tools/ZoomMouseWheelTool.js":
    		/*!*************************************!*\
    		  !*** ./tools/ZoomMouseWheelTool.js ***!
    		  \*************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ZoomMouseWheelTool; });
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__);
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__);
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _base_BaseTool_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./base/BaseTool.js */ "./tools/base/BaseTool.js");
    		/* harmony import */ var _util_zoom_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/zoom/index.js */ "./util/zoom/index.js");








    		/**
    		 * @public
    		 * @class ZoomMouseWheelTool
    		 * @memberof Tools
    		 *
    		 * @classdesc Tool for changing magnification with the mouse wheel.
    		 * @extends Tools.Base.BaseTool
    		 */

    		var ZoomMouseWheelTool =
    		/*#__PURE__*/
    		function (_BaseTool) {
    		  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default()(ZoomMouseWheelTool, _BaseTool);

    		  function ZoomMouseWheelTool() {
    		    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    		    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, ZoomMouseWheelTool);

    		    var defaultProps = {
    		      name: 'ZoomMouseWheel',
    		      supportedInteractionTypes: ['MouseWheel'],
    		      configuration: {
    		        minScale: 0.25,
    		        maxScale: 20.0,
    		        invert: false
    		      }
    		    };
    		    return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(ZoomMouseWheelTool).call(this, props, defaultProps));
    		  }

    		  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(ZoomMouseWheelTool, [{
    		    key: "mouseWheelCallback",
    		    value: function mouseWheelCallback(evt) {
    		      var _evt$detail = evt.detail,
    		          element = _evt$detail.element,
    		          viewport = _evt$detail.viewport,
    		          spinY = _evt$detail.spinY;
    		      var _this$configuration = this.configuration,
    		          invert = _this$configuration.invert,
    		          maxScale = _this$configuration.maxScale,
    		          minScale = _this$configuration.minScale;
    		      var ticks = invert ? spinY / 4 : -spinY / 4;
    		      var updatedViewport = Object(_util_zoom_index_js__WEBPACK_IMPORTED_MODULE_7__["changeViewportScale"])(viewport, ticks, {
    		        maxScale: maxScale,
    		        minScale: minScale
    		      });
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.setViewport(element, updatedViewport);
    		    }
    		  }]);

    		  return ZoomMouseWheelTool;
    		}(_base_BaseTool_js__WEBPACK_IMPORTED_MODULE_6__["default"]);



    		/***/ }),

    		/***/ "./tools/ZoomTool.js":
    		/*!***************************!*\
    		  !*** ./tools/ZoomTool.js ***!
    		  \***************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ZoomTool; });
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__);
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__);
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _base_BaseTool_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./base/BaseTool.js */ "./tools/base/BaseTool.js");
    		/* harmony import */ var _util_clip_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/clip.js */ "./util/clip.js");
    		/* harmony import */ var _util_zoom_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../util/zoom/index.js */ "./util/zoom/index.js");
    		/* harmony import */ var _cursors_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./cursors/index.js */ "./tools/cursors/index.js");










    		var correctShift = _util_zoom_index_js__WEBPACK_IMPORTED_MODULE_8__["default"].correctShift,
    		    changeViewportScale = _util_zoom_index_js__WEBPACK_IMPORTED_MODULE_8__["default"].changeViewportScale;
    		/**
    		 * @public
    		 * @class ZoomTool
    		 * @memberof Tools
    		 *
    		 * @classdesc Tool for changing magnification.
    		 * @extends Tools.Base.BaseTool
    		 */

    		var ZoomTool =
    		/*#__PURE__*/
    		function (_BaseTool) {
    		  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default()(ZoomTool, _BaseTool);

    		  function ZoomTool() {
    		    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    		    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, ZoomTool);

    		    var defaultProps = {
    		      name: 'Zoom',
    		      strategies: {
    		        default: defaultStrategy,
    		        translate: translateStrategy,
    		        zoomToCenter: zoomToCenterStrategy
    		      },
    		      defaultStrategy: 'default',
    		      supportedInteractionTypes: ['Mouse', 'Touch'],
    		      configuration: {
    		        invert: false,
    		        preventZoomOutsideImage: false,
    		        minScale: 0.25,
    		        maxScale: 20.0
    		      },
    		      svgCursor: _cursors_index_js__WEBPACK_IMPORTED_MODULE_9__["zoomCursor"]
    		    };
    		    return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(ZoomTool).call(this, props, defaultProps));
    		  }

    		  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(ZoomTool, [{
    		    key: "touchDragCallback",
    		    value: function touchDragCallback(evt) {
    		      dragCallback.call(this, evt);
    		    }
    		  }, {
    		    key: "mouseDragCallback",
    		    value: function mouseDragCallback(evt) {
    		      dragCallback.call(this, evt);
    		    }
    		  }]);

    		  return ZoomTool;
    		}(_base_BaseTool_js__WEBPACK_IMPORTED_MODULE_6__["default"]);



    		var dragCallback = function dragCallback(evt) {
    		  var deltaY = evt.detail.deltaPoints.page.y;

    		  if (!deltaY) {
    		    return false;
    		  }

    		  this.applyActiveStrategy(evt, this.configuration);
    		  _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.setViewport(evt.detail.element, evt.detail.viewport);
    		};
    		/**
    		 * The default strategy keeps the target location fixed on the page
    		 * as we zoom in/out.
    		 *
    		 * @param {*} evt
    		 * @param {*} { invert, maxScale, minScale }
    		 * @returns {void}
    		 */


    		function defaultStrategy(evt, _ref) {
    		  var invert = _ref.invert,
    		      maxScale = _ref.maxScale,
    		      minScale = _ref.minScale;
    		  var deltaY = evt.detail.deltaPoints.page.y;
    		  var ticks = invert ? -deltaY / 100 : deltaY / 100;
    		  var _evt$detail = evt.detail,
    		      element = _evt$detail.element,
    		      viewport = _evt$detail.viewport;
    		  var _ref2 = [evt.detail.startPoints.page.x, evt.detail.startPoints.page.y, evt.detail.startPoints.image.x, evt.detail.startPoints.image.y],
    		      startX = _ref2[0],
    		      startY = _ref2[1],
    		      imageX = _ref2[2],
    		      imageY = _ref2[3]; // Calculate the new scale factor based on how far the mouse has changed

    		  var updatedViewport = changeViewportScale(viewport, ticks, {
    		    maxScale: maxScale,
    		    minScale: minScale
    		  });
    		  _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.setViewport(element, updatedViewport); // Now that the scale has been updated, determine the offset we need to apply to the center so we can
    		  // Keep the original start location in the same position

    		  var newCoords = _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.pageToPixel(element, startX, startY); // The shift we will use is the difference between the original image coordinates of the point we've selected
    		  // And the image coordinates of the same point on the page after the viewport scaling above has been performed
    		  // This shift is in image coordinates, and is designed to keep the target location fixed on the page.

    		  var shift = {
    		    x: imageX - newCoords.x,
    		    y: imageY - newCoords.y
    		  }; // Correct the required shift using the viewport rotation and flip parameters

    		  shift = correctShift(shift, updatedViewport); // Apply the shift to the Viewport's translation setting

    		  viewport.translation.x -= shift.x;
    		  viewport.translation.y -= shift.y;
    		}

    		function translateStrategy(evt, _ref3) {
    		  var invert = _ref3.invert,
    		      preventZoomOutsideImage = _ref3.preventZoomOutsideImage,
    		      maxScale = _ref3.maxScale,
    		      minScale = _ref3.minScale;
    		  var deltaY = evt.detail.deltaPoints.page.y;
    		  var ticks = invert ? -deltaY / 100 : deltaY / 100;
    		  var image = evt.detail.image;
    		  var viewport = evt.detail.viewport;
    		  var _ref4 = [evt.detail.startPoints.image.x, evt.detail.startPoints.image.y],
    		      startX = _ref4[0],
    		      startY = _ref4[1]; // Calculate the new scale factor based on how far the mouse has changed
    		  // Note that in this case we don't need to update the viewport after the initial
    		  // Zoom step since we aren't don't intend to keep the target position static on
    		  // The page

    		  var updatedViewport = changeViewportScale(viewport, ticks, {
    		    maxScale: maxScale,
    		    minScale: minScale
    		  }); // Define the default shift to take place during this zoom step

    		  var shift = {
    		    x: 0,
    		    y: 0
    		  }; // Define the parameters for the translate strategy

    		  var translateSpeed = 8;
    		  var outwardsMinScaleToTranslate = 3;
    		  var minTranslation = 0.01;

    		  if (ticks < 0) {
    		    // Zoom outwards from the image center
    		    if (updatedViewport.scale < outwardsMinScaleToTranslate) {
    		      // If the current translation is smaller than the minimum desired translation,
    		      // Set the translation to zero
    		      if (Math.abs(updatedViewport.translation.x) < minTranslation) {
    		        updatedViewport.translation.x = 0;
    		      } else {
    		        shift.x = updatedViewport.translation.x / translateSpeed;
    		      } // If the current translation is smaller than the minimum desired translation,
    		      // Set the translation to zero


    		      if (Math.abs(updatedViewport.translation.y) < minTranslation) {
    		        updatedViewport.translation.y = 0;
    		      } else {
    		        shift.y = updatedViewport.translation.y / translateSpeed;
    		      }
    		    }
    		  } else {
    		    // Zoom inwards to the current image point
    		    // Identify the coordinates of the point the user is trying to zoom into
    		    // If we are not allowed to zoom outside the image, bound the user-selected position to
    		    // A point inside the image
    		    if (preventZoomOutsideImage) {
    		      Object(_util_clip_js__WEBPACK_IMPORTED_MODULE_7__["clipToBox"])(evt.detail.startPoints.image, image);
    		    } // Calculate the translation value that would place the desired image point in the center
    		    // Of the viewport


    		    var desiredTranslation = {
    		      x: image.width / 2 - startX,
    		      y: image.height / 2 - startY
    		    }; // Correct the target location using the viewport rotation and flip parameters

    		    desiredTranslation = correctShift(desiredTranslation, updatedViewport); // Calculate the difference between the current viewport translation value and the
    		    // Final desired translation values

    		    var distanceToDesired = {
    		      x: updatedViewport.translation.x - desiredTranslation.x,
    		      y: updatedViewport.translation.y - desiredTranslation.y
    		    }; // If the current translation is smaller than the minimum desired translation,
    		    // Stop translating in the x-direction

    		    if (Math.abs(distanceToDesired.x) < minTranslation) {
    		      updatedViewport.translation.x = desiredTranslation.x;
    		    } else {
    		      // Otherwise, shift the viewport by one step
    		      shift.x = distanceToDesired.x / translateSpeed;
    		    } // If the current translation is smaller than the minimum desired translation,
    		    // Stop translating in the y-direction


    		    if (Math.abs(distanceToDesired.y) < minTranslation) {
    		      updatedViewport.translation.y = desiredTranslation.y;
    		    } else {
    		      // Otherwise, shift the viewport by one step
    		      shift.y = distanceToDesired.y / translateSpeed;
    		    }
    		  } // Apply the shift to the Viewport's translation setting


    		  updatedViewport.translation.x -= shift.x;
    		  updatedViewport.translation.y -= shift.y;
    		}

    		function zoomToCenterStrategy(evt, _ref5) {
    		  var invert = _ref5.invert,
    		      maxScale = _ref5.maxScale,
    		      minScale = _ref5.minScale;
    		  var deltaY = evt.detail.deltaPoints.page.y;
    		  var ticks = invert ? -deltaY / 100 : deltaY / 100;
    		  var viewport = evt.detail.viewport; // Calculate the new scale factor based on how far the mouse has changed

    		  changeViewportScale(viewport, ticks, {
    		    maxScale: maxScale,
    		    minScale: minScale
    		  });
    		}

    		/***/ }),

    		/***/ "./tools/ZoomTouchPinchTool.js":
    		/*!*************************************!*\
    		  !*** ./tools/ZoomTouchPinchTool.js ***!
    		  \*************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ZoomTouchPinchTool; });
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__);
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__);
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _base_BaseTool_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./base/BaseTool.js */ "./tools/base/BaseTool.js");
    		/* harmony import */ var _util_zoom_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/zoom/index.js */ "./util/zoom/index.js");








    		var correctShift = _util_zoom_index_js__WEBPACK_IMPORTED_MODULE_7__["default"].correctShift;
    		/**
    		 *
    		 *
    		 * @public
    		 * @class ZoomTouchPinchTool
    		 * @memberof Tools
    		 *
    		 * @extends {BaseTool}
    		 */

    		var ZoomTouchPinchTool =
    		/*#__PURE__*/
    		function (_BaseTool) {
    		  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default()(ZoomTouchPinchTool, _BaseTool);

    		  function ZoomTouchPinchTool() {
    		    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    		    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, ZoomTouchPinchTool);

    		    var defaultProps = {
    		      name: 'ZoomTouchPinch',
    		      // TODO: Do we need a better way to specify touchPinch?
    		      supportedInteractionTypes: ['TouchPinch'],
    		      configuration: {
    		        minScale: 0.25,
    		        maxScale: 20.0
    		      }
    		    };
    		    return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(ZoomTouchPinchTool).call(this, props, defaultProps));
    		  }

    		  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(ZoomTouchPinchTool, [{
    		    key: "touchPinchCallback",
    		    value: function touchPinchCallback(evt) {
    		      var _evt$detail = evt.detail,
    		          element = _evt$detail.element,
    		          viewport = _evt$detail.viewport,
    		          scaleChange = _evt$detail.scaleChange;
    		      var _ref = [evt.detail.startPoints.page.x, evt.detail.startPoints.page.y, evt.detail.startPoints.image.x, evt.detail.startPoints.image.y],
    		          pageStartX = _ref[0],
    		          pageStartY = _ref[1],
    		          imageStartX = _ref[2],
    		          imageStartY = _ref[3];
    		      var _this$configuration = this.configuration,
    		          maxScale = _this$configuration.maxScale,
    		          minScale = _this$configuration.minScale; // Change the scale based on the pinch gesture's scale change

    		      viewport.scale += scaleChange * viewport.scale;

    		      if (maxScale && viewport.scale > maxScale) {
    		        viewport.scale = maxScale;
    		      } else if (minScale && viewport.scale < minScale) {
    		        viewport.scale = minScale;
    		      }

    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.setViewport(element, viewport); // Now that the scale has been updated, determine the offset we need to apply to the center so we can
    		      // Keep the original start location in the same position

    		      var newCoords = _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.pageToPixel(element, pageStartX, pageStartY);
    		      var shift = {
    		        x: imageStartX - newCoords.x,
    		        y: imageStartY - newCoords.y
    		      };
    		      shift = correctShift(shift, viewport);
    		      viewport.translation.x -= shift.x;
    		      viewport.translation.y -= shift.y;
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.setViewport(element, viewport);
    		    }
    		  }]);

    		  return ZoomTouchPinchTool;
    		}(_base_BaseTool_js__WEBPACK_IMPORTED_MODULE_6__["default"]);



    		/***/ }),

    		/***/ "./tools/annotation/AngleTool.js":
    		/*!***************************************!*\
    		  !*** ./tools/annotation/AngleTool.js ***!
    		  \***************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return AngleTool; });
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__);
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__);
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _base_BaseAnnotationTool_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../base/BaseAnnotationTool.js */ "./tools/base/BaseAnnotationTool.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _stateManagement_toolStyle_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./../../stateManagement/toolStyle.js */ "./stateManagement/toolStyle.js");
    		/* harmony import */ var _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./../../stateManagement/toolColors.js */ "./stateManagement/toolColors.js");
    		/* harmony import */ var _manipulators_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./../../manipulators/index.js */ "./manipulators/index.js");
    		/* harmony import */ var _drawing_index_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./../../drawing/index.js */ "./drawing/index.js");
    		/* harmony import */ var _drawing_drawLinkedTextBox_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./../../drawing/drawLinkedTextBox.js */ "./drawing/drawLinkedTextBox.js");
    		/* harmony import */ var _drawing_drawTextBox_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./../../drawing/drawTextBox.js */ "./drawing/drawTextBox.js");
    		/* harmony import */ var _drawing_drawHandles_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./../../drawing/drawHandles.js */ "./drawing/drawHandles.js");
    		/* harmony import */ var _util_lineSegDistance_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./../../util/lineSegDistance.js */ "./util/lineSegDistance.js");
    		/* harmony import */ var _util_roundToDecimal_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./../../util/roundToDecimal.js */ "./util/roundToDecimal.js");
    		/* harmony import */ var _cursors_index_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../cursors/index.js */ "./tools/cursors/index.js");
    		/* harmony import */ var _util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../util/triggerEvent.js */ "./util/triggerEvent.js");
    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../events.js */ "./events.js");
    		/* harmony import */ var _util_getPixelSpacing__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../util/getPixelSpacing */ "./util/getPixelSpacing.js");
    		/* harmony import */ var _util_throttle__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../util/throttle */ "./util/throttle.js");






    		 // State



    		 // Manipulators

    		 // Drawing












    		/**
    		 * @public
    		 * @class AngleTool
    		 * @memberof Tools.Annotation
    		 * @classdesc Create and position an angle by placing three consecutive points.
    		 * @extends Tools.Base.BaseAnnotationTool
    		 * @hideconstructor
    		 *
    		 * @param {ToolConfiguration} [props={}]
    		 */

    		var AngleTool =
    		/*#__PURE__*/
    		function (_BaseAnnotationTool) {
    		  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default()(AngleTool, _BaseAnnotationTool);

    		  function AngleTool() {
    		    var _this;

    		    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    		    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, AngleTool);

    		    var defaultProps = {
    		      name: 'Angle',
    		      supportedInteractionTypes: ['Mouse', 'Touch'],
    		      svgCursor: _cursors_index_js__WEBPACK_IMPORTED_MODULE_17__["angleCursor"]
    		    };
    		    _this = _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(AngleTool).call(this, props, defaultProps));
    		    _this.preventNewMeasurement = false;
    		    _this.throttledUpdateCachedStats = Object(_util_throttle__WEBPACK_IMPORTED_MODULE_21__["default"])(_this.updateCachedStats, 110);
    		    return _this;
    		  }

    		  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(AngleTool, [{
    		    key: "createNewMeasurement",
    		    value: function createNewMeasurement(eventData) {
    		      // Create the measurement data for this tool with the end handle activated
    		      return {
    		        visible: true,
    		        active: true,
    		        color: undefined,
    		        invalidated: true,
    		        handles: {
    		          start: {
    		            x: eventData.currentPoints.image.x,
    		            y: eventData.currentPoints.image.y,
    		            highlight: true,
    		            active: false
    		          },
    		          middle: {
    		            x: eventData.currentPoints.image.x,
    		            y: eventData.currentPoints.image.y,
    		            highlight: true,
    		            active: true
    		          },
    		          end: {
    		            x: eventData.currentPoints.image.x,
    		            y: eventData.currentPoints.image.y,
    		            highlight: true,
    		            active: false
    		          },
    		          textBox: {
    		            active: false,
    		            hasMoved: false,
    		            movesIndependently: false,
    		            drawnIndependently: true,
    		            allowedOutsideImage: true,
    		            hasBoundingBox: true
    		          }
    		        }
    		      };
    		    }
    		  }, {
    		    key: "pointNearTool",
    		    value: function pointNearTool(element, data, coords) {
    		      if (data.visible === false) {
    		        return false;
    		      }

    		      return Object(_util_lineSegDistance_js__WEBPACK_IMPORTED_MODULE_15__["default"])(element, data.handles.start, data.handles.middle, coords) < 25 || Object(_util_lineSegDistance_js__WEBPACK_IMPORTED_MODULE_15__["default"])(element, data.handles.middle, data.handles.end, coords) < 25;
    		    }
    		  }, {
    		    key: "updateCachedStats",
    		    value: function updateCachedStats(image, element, data) {
    		      var _getPixelSpacing = Object(_util_getPixelSpacing__WEBPACK_IMPORTED_MODULE_20__["default"])(image),
    		          rowPixelSpacing = _getPixelSpacing.rowPixelSpacing,
    		          colPixelSpacing = _getPixelSpacing.colPixelSpacing;

    		      var sideA = {
    		        x: (data.handles.middle.x - data.handles.start.x) * colPixelSpacing,
    		        y: (data.handles.middle.y - data.handles.start.y) * rowPixelSpacing
    		      };
    		      var sideB = {
    		        x: (data.handles.end.x - data.handles.middle.x) * colPixelSpacing,
    		        y: (data.handles.end.y - data.handles.middle.y) * rowPixelSpacing
    		      };
    		      var sideC = {
    		        x: (data.handles.end.x - data.handles.start.x) * colPixelSpacing,
    		        y: (data.handles.end.y - data.handles.start.y) * rowPixelSpacing
    		      };
    		      var sideALength = length(sideA);
    		      var sideBLength = length(sideB);
    		      var sideCLength = length(sideC); // Cosine law

    		      var angle = Math.acos((Math.pow(sideALength, 2) + Math.pow(sideBLength, 2) - Math.pow(sideCLength, 2)) / (2 * sideALength * sideBLength));
    		      angle *= 180 / Math.PI;
    		      data.rAngle = Object(_util_roundToDecimal_js__WEBPACK_IMPORTED_MODULE_16__["default"])(angle, 2);
    		      data.invalidated = false;
    		    }
    		  }, {
    		    key: "renderToolData",
    		    value: function renderToolData(evt) {
    		      var _this2 = this;

    		      var eventData = evt.detail;
    		      var enabledElement = eventData.enabledElement;
    		      var _this$configuration = this.configuration,
    		          handleRadius = _this$configuration.handleRadius,
    		          drawHandlesOnHover = _this$configuration.drawHandlesOnHover; // If we have no toolData for this element, return immediately as there is nothing to do

    		      var toolData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_7__["getToolState"])(evt.currentTarget, this.name);

    		      if (!toolData) {
    		        return;
    		      } // We have tool data for this element - iterate over each one and draw it


    		      var context = Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_11__["getNewContext"])(eventData.canvasContext.canvas);
    		      var image = eventData.image,
    		          element = eventData.element;

    		      var _getPixelSpacing2 = Object(_util_getPixelSpacing__WEBPACK_IMPORTED_MODULE_20__["default"])(image),
    		          rowPixelSpacing = _getPixelSpacing2.rowPixelSpacing,
    		          colPixelSpacing = _getPixelSpacing2.colPixelSpacing;

    		      var lineWidth = _stateManagement_toolStyle_js__WEBPACK_IMPORTED_MODULE_8__["default"].getToolWidth();

    		      var _loop = function _loop(i) {
    		        var data = toolData.data[i];

    		        if (data.visible === false) {
    		          return "continue";
    		        }

    		        Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_11__["draw"])(context, function (context) {
    		          Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_11__["setShadow"])(context, _this2.configuration); // Differentiate the color of activation tool

    		          var color = _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_9__["default"].getColorIfActive(data);
    		          var handleStartCanvas = _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.pixelToCanvas(eventData.element, data.handles.start);
    		          var handleMiddleCanvas = _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.pixelToCanvas(eventData.element, data.handles.middle);
    		          Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_11__["drawJoinedLines"])(context, eventData.element, data.handles.start, [data.handles.middle, data.handles.end], {
    		            color: color
    		          }); // Draw the handles

    		          var handleOptions = {
    		            color: color,
    		            handleRadius: handleRadius,
    		            drawHandlesIfActive: drawHandlesOnHover
    		          };
    		          Object(_drawing_drawHandles_js__WEBPACK_IMPORTED_MODULE_14__["default"])(context, eventData, data.handles, handleOptions); // Update textbox stats

    		          if (data.invalidated === true) {
    		            if (data.rAngle) {
    		              _this2.throttledUpdateCachedStats(image, element, data);
    		            } else {
    		              _this2.updateCachedStats(image, element, data);
    		            }
    		          }

    		          if (data.rAngle) {
    		            var text = textBoxText(data, rowPixelSpacing, colPixelSpacing);
    		            var distance = 15;
    		            var textCoords;

    		            if (!data.handles.textBox.hasMoved) {
    		              textCoords = {
    		                x: handleMiddleCanvas.x,
    		                y: handleMiddleCanvas.y
    		              };
    		              var padding = 5;
    		              var textWidth = Object(_drawing_drawTextBox_js__WEBPACK_IMPORTED_MODULE_13__["textBoxWidth"])(context, text, padding);

    		              if (handleMiddleCanvas.x < handleStartCanvas.x) {
    		                textCoords.x -= distance + textWidth + 10;
    		              } else {
    		                textCoords.x += distance;
    		              }

    		              var transform = _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.internal.getTransform(enabledElement);
    		              transform.invert();
    		              var coords = transform.transformPoint(textCoords.x, textCoords.y);
    		              data.handles.textBox.x = coords.x;
    		              data.handles.textBox.y = coords.y;
    		            }

    		            Object(_drawing_drawLinkedTextBox_js__WEBPACK_IMPORTED_MODULE_12__["default"])(context, eventData.element, data.handles.textBox, text, data.handles, textBoxAnchorPoints, color, lineWidth, 0, true);
    		          }
    		        });
    		      };

    		      for (var i = 0; i < toolData.data.length; i++) {
    		        var _ret = _loop(i);

    		        if (_ret === "continue") continue;
    		      }

    		      function textBoxText(data, rowPixelSpacing, colPixelSpacing) {
    		        var suffix = !rowPixelSpacing || !colPixelSpacing ? ' (isotropic)' : '';
    		        var str = '00B0'; // Degrees symbol

    		        return data.rAngle.toString() + String.fromCharCode(parseInt(str, 16)) + suffix;
    		      }

    		      function textBoxAnchorPoints(handles) {
    		        return [handles.start, handles.middle, handles.end];
    		      }
    		    }
    		  }, {
    		    key: "addNewMeasurement",
    		    value: function addNewMeasurement(evt, interactionType) {
    		      var _this3 = this;

    		      if (this.preventNewMeasurement) {
    		        return;
    		      }

    		      this.preventNewMeasurement = true;
    		      evt.preventDefault();
    		      evt.stopPropagation();
    		      var eventData = evt.detail;
    		      var measurementData = this.createNewMeasurement(eventData);
    		      var element = evt.detail.element; // Associate this data with this imageId so we can render it and manipulate it

    		      Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_7__["addToolState"])(element, this.name, measurementData);
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.updateImage(element);
    		      var doneMovingEndHandleOptions = Object.assign({}, {
    		        doneMovingCallback: function doneMovingCallback() {
    		          measurementData.active = false;
    		          _this3.preventNewMeasurement = false;
    		          var eventType = _events_js__WEBPACK_IMPORTED_MODULE_19__["default"].MEASUREMENT_COMPLETED;
    		          var eventData = {
    		            toolType: _this3.name,
    		            element: element,
    		            measurementData: measurementData
    		          };
    		          Object(_util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_18__["default"])(element, eventType, eventData);
    		          _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.updateImage(element);
    		        }
    		      }, this.options);
    		      var doneMovingMiddleHandleOptions = Object.assign({}, {
    		        doneMovingCallback: function doneMovingCallback() {
    		          measurementData.active = false;
    		          measurementData.handles.end.active = true;
    		          _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.updateImage(element);
    		          Object(_manipulators_index_js__WEBPACK_IMPORTED_MODULE_10__["moveNewHandle"])(eventData, _this3.name, measurementData, measurementData.handles.end, doneMovingEndHandleOptions, interactionType);
    		        }
    		      }, this.options); // Step 1, create start and second middle

    		      Object(_manipulators_index_js__WEBPACK_IMPORTED_MODULE_10__["moveNewHandle"])(eventData, this.name, measurementData, measurementData.handles.middle, doneMovingMiddleHandleOptions, interactionType);
    		    }
    		  }]);

    		  return AngleTool;
    		}(_base_BaseAnnotationTool_js__WEBPACK_IMPORTED_MODULE_6__["default"]);



    		function length(vector) {
    		  return Math.sqrt(Math.pow(vector.x, 2) + Math.pow(vector.y, 2));
    		}

    		/***/ }),

    		/***/ "./tools/annotation/ArrowAnnotateTool.js":
    		/*!***********************************************!*\
    		  !*** ./tools/annotation/ArrowAnnotateTool.js ***!
    		  \***********************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ArrowAnnotateTool; });
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__);
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__);
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _base_BaseAnnotationTool_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../base/BaseAnnotationTool.js */ "./tools/base/BaseAnnotationTool.js");
    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../../events.js */ "./events.js");
    		/* harmony import */ var _stateManagement_toolStyle_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./../../stateManagement/toolStyle.js */ "./stateManagement/toolStyle.js");
    		/* harmony import */ var _stateManagement_textStyle_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./../../stateManagement/textStyle.js */ "./stateManagement/textStyle.js");
    		/* harmony import */ var _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./../../stateManagement/toolColors.js */ "./stateManagement/toolColors.js");
    		/* harmony import */ var _manipulators_index_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./../../manipulators/index.js */ "./manipulators/index.js");
    		/* harmony import */ var _util_pointInsideBoundingBox_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./../../util/pointInsideBoundingBox.js */ "./util/pointInsideBoundingBox.js");
    		/* harmony import */ var _util_lineSegDistance_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./../../util/lineSegDistance.js */ "./util/lineSegDistance.js");
    		/* harmony import */ var _util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./../../util/triggerEvent.js */ "./util/triggerEvent.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./../../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _drawing_drawLinkedTextBox_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./../../drawing/drawLinkedTextBox.js */ "./drawing/drawLinkedTextBox.js");
    		/* harmony import */ var _drawing_index_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./../../drawing/index.js */ "./drawing/index.js");
    		/* harmony import */ var _drawing_drawArrow_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./../../drawing/drawArrow.js */ "./drawing/drawArrow.js");
    		/* harmony import */ var _drawing_drawHandles_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./../../drawing/drawHandles.js */ "./drawing/drawHandles.js");
    		/* harmony import */ var _drawing_drawTextBox_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./../../drawing/drawTextBox.js */ "./drawing/drawTextBox.js");
    		/* harmony import */ var _cursors_index_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../cursors/index.js */ "./tools/cursors/index.js");






    		/* eslint no-alert: 0 */

















    		/**
    		 * @public
    		 * @class ArrowAnnotateTool
    		 * @memberof Tools.Annotation
    		 * @classdesc Create and position an arrow and label
    		 * @extends Tools.Base.BaseAnnotationTool
    		 */

    		var ArrowAnnotateTool =
    		/*#__PURE__*/
    		function (_BaseAnnotationTool) {
    		  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default()(ArrowAnnotateTool, _BaseAnnotationTool);

    		  function ArrowAnnotateTool() {
    		    var _this;

    		    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    		    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, ArrowAnnotateTool);

    		    var defaultProps = {
    		      name: 'ArrowAnnotate',
    		      supportedInteractionTypes: ['Mouse', 'Touch'],
    		      configuration: {
    		        getTextCallback: getTextCallback,
    		        changeTextCallback: changeTextCallback,
    		        drawHandles: false,
    		        drawHandlesOnHover: true,
    		        arrowFirst: true
    		      },
    		      svgCursor: _cursors_index_js__WEBPACK_IMPORTED_MODULE_21__["arrowAnnotateCursor"]
    		    };
    		    _this = _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(ArrowAnnotateTool).call(this, props, defaultProps));
    		    _this.preventNewMeasurement = false;
    		    return _this;
    		  }

    		  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(ArrowAnnotateTool, [{
    		    key: "createNewMeasurement",
    		    value: function createNewMeasurement(evt) {
    		      // Create the measurement data for this tool with the end handle activated
    		      return {
    		        visible: true,
    		        active: true,
    		        color: undefined,
    		        handles: {
    		          start: {
    		            x: evt.detail.currentPoints.image.x,
    		            y: evt.detail.currentPoints.image.y,
    		            highlight: true,
    		            active: false
    		          },
    		          end: {
    		            x: evt.detail.currentPoints.image.x,
    		            y: evt.detail.currentPoints.image.y,
    		            highlight: true,
    		            active: false
    		          },
    		          textBox: {
    		            active: false,
    		            hasMoved: false,
    		            movesIndependently: false,
    		            drawnIndependently: true,
    		            allowedOutsideImage: true,
    		            hasBoundingBox: true
    		          }
    		        }
    		      };
    		    }
    		  }, {
    		    key: "pointNearTool",
    		    value: function pointNearTool(element, data, coords) {
    		      if (data.visible === false) {
    		        return false;
    		      }

    		      return Object(_util_lineSegDistance_js__WEBPACK_IMPORTED_MODULE_13__["default"])(element, data.handles.start, data.handles.end, coords) < 25;
    		    }
    		  }, {
    		    key: "updateCachedStats",
    		    value: function updateCachedStats() {// Implementing to satisfy BaseAnnotationTool
    		    }
    		  }, {
    		    key: "renderToolData",
    		    value: function renderToolData(evt) {
    		      var _this2 = this;

    		      var _evt$detail = evt.detail,
    		          element = _evt$detail.element,
    		          enabledElement = _evt$detail.enabledElement;
    		      var _this$configuration = this.configuration,
    		          handleRadius = _this$configuration.handleRadius,
    		          drawHandlesOnHover = _this$configuration.drawHandlesOnHover; // If we have no toolData for this element, return immediately as there is nothing to do

    		      var toolData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_15__["getToolState"])(element, this.name);

    		      if (!toolData) {
    		        return;
    		      } // We have tool data for this element - iterate over each one and draw it


    		      var canvas = evt.detail.canvasContext.canvas;
    		      var context = Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_17__["getNewContext"])(canvas);
    		      var lineWidth = _stateManagement_toolStyle_js__WEBPACK_IMPORTED_MODULE_8__["default"].getToolWidth();

    		      var _loop = function _loop(i) {
    		        var data = toolData.data[i];

    		        if (data.visible === false) {
    		          return "continue";
    		        }

    		        Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_17__["draw"])(context, function (context) {
    		          Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_17__["setShadow"])(context, _this2.configuration);
    		          var color = _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_10__["default"].getColorIfActive(data); // Draw the arrow

    		          var handleStartCanvas = _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.pixelToCanvas(element, data.handles.start);
    		          var handleEndCanvas = _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.pixelToCanvas(element, data.handles.end); // Config.arrowFirst = false;

    		          if (_this2.configuration.arrowFirst) {
    		            Object(_drawing_drawArrow_js__WEBPACK_IMPORTED_MODULE_18__["default"])(context, handleEndCanvas, handleStartCanvas, color, lineWidth);
    		          } else {
    		            Object(_drawing_drawArrow_js__WEBPACK_IMPORTED_MODULE_18__["default"])(context, handleStartCanvas, handleEndCanvas, color, lineWidth);
    		          }

    		          var handleOptions = {
    		            color: color,
    		            handleRadius: handleRadius,
    		            drawHandlesIfActive: drawHandlesOnHover
    		          };

    		          if (_this2.configuration.drawHandles) {
    		            Object(_drawing_drawHandles_js__WEBPACK_IMPORTED_MODULE_19__["default"])(context, evt.detail, data.handles, handleOptions);
    		          }

    		          var text = textBoxText(data); // Draw the text

    		          if (text && text !== '') {
    		            // Calculate the text coordinates.
    		            var padding = 5;
    		            var textWidth = Object(_drawing_drawTextBox_js__WEBPACK_IMPORTED_MODULE_20__["textBoxWidth"])(context, text, padding);
    		            var textHeight = _stateManagement_textStyle_js__WEBPACK_IMPORTED_MODULE_9__["default"].getFontSize() + 10;
    		            var distance = Math.max(textWidth, textHeight) / 2 + 5;

    		            if (handleEndCanvas.x < handleStartCanvas.x) {
    		              distance = -distance;
    		            }

    		            if (!data.handles.textBox.hasMoved) {
    		              var textCoords;

    		              if (_this2.configuration.arrowFirst) {
    		                textCoords = {
    		                  x: handleEndCanvas.x - textWidth / 2 + distance,
    		                  y: handleEndCanvas.y - textHeight / 2
    		                };
    		              } else {
    		                // If the arrow is at the End position, the text should
    		                // Be placed near the Start position
    		                textCoords = {
    		                  x: handleStartCanvas.x - textWidth / 2 - distance,
    		                  y: handleStartCanvas.y - textHeight / 2
    		                };
    		              }

    		              var transform = _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.internal.getTransform(enabledElement);
    		              transform.invert();
    		              var coords = transform.transformPoint(textCoords.x, textCoords.y);
    		              data.handles.textBox.x = coords.x;
    		              data.handles.textBox.y = coords.y;
    		            }

    		            Object(_drawing_drawLinkedTextBox_js__WEBPACK_IMPORTED_MODULE_16__["default"])(context, element, data.handles.textBox, text, data.handles, textBoxAnchorPoints, color, lineWidth, 0, false);
    		          }
    		        });
    		      };

    		      for (var i = 0; i < toolData.data.length; i++) {
    		        var _ret = _loop(i);

    		        if (_ret === "continue") continue;
    		      }

    		      function textBoxText(data) {
    		        return data.text;
    		      }

    		      function textBoxAnchorPoints(handles) {
    		        var midpoint = {
    		          x: (handles.start.x + handles.end.x) / 2,
    		          y: (handles.start.y + handles.end.y) / 2
    		        };
    		        return [handles.start, midpoint, handles.end];
    		      }
    		    }
    		  }, {
    		    key: "addNewMeasurement",
    		    value: function addNewMeasurement(evt, interactionType) {
    		      var _this3 = this;

    		      var element = evt.detail.element;
    		      var measurementData = this.createNewMeasurement(evt); // Associate this data with this imageId so we can render it and manipulate it

    		      Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_15__["addToolState"])(element, this.name, measurementData);
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.updateImage(element);
    		      var toolOptions = Object.assign({}, {
    		        doneMovingCallback: function doneMovingCallback() {
    		          if (measurementData.text === undefined) {
    		            _this3.configuration.getTextCallback(function (text) {
    		              measurementData.active = false;

    		              if (text) {
    		                measurementData.text = text;
    		                var eventType = _events_js__WEBPACK_IMPORTED_MODULE_7__["default"].MEASUREMENT_COMPLETED;
    		                var eventData = {
    		                  toolName: _this3.name,
    		                  element: element,
    		                  measurementData: measurementData
    		                };
    		                Object(_util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_14__["default"])(element, eventType, eventData);
    		              } else {
    		                Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_15__["removeToolState"])(element, _this3.name, measurementData);
    		              }

    		              _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.updateImage(element);
    		            });
    		          }

    		          _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.updateImage(element);
    		        }
    		      }, this.options);
    		      Object(_manipulators_index_js__WEBPACK_IMPORTED_MODULE_11__["moveNewHandle"])(evt.detail, this.name, measurementData, measurementData.handles.end, toolOptions, interactionType);
    		    }
    		  }, {
    		    key: "doubleClickCallback",
    		    value: function doubleClickCallback(evt) {
    		      return this._updateTextForNearbyAnnotation(evt);
    		    }
    		  }, {
    		    key: "touchPressCallback",
    		    value: function touchPressCallback(evt) {
    		      return this._updateTextForNearbyAnnotation(evt);
    		    }
    		  }, {
    		    key: "_updateTextForNearbyAnnotation",
    		    value: function _updateTextForNearbyAnnotation(evt) {
    		      var element = evt.detail.element;
    		      var coords = evt.detail.currentPoints.canvas;
    		      var toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_15__["getToolState"])(element, this.name);

    		      if (!toolState) {
    		        return false;
    		      }

    		      for (var i = 0; i < toolState.data.length; i++) {
    		        var data = toolState.data[i];

    		        if (this.pointNearTool(element, data, coords) || Object(_util_pointInsideBoundingBox_js__WEBPACK_IMPORTED_MODULE_12__["default"])(data.handles.textBox, coords)) {
    		          data.active = true;
    		          _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.updateImage(element); // Allow relabelling via a callback

    		          this.configuration.changeTextCallback(data, evt.detail, this._doneChangingTextCallback.bind(this, element, data));
    		          evt.stopImmediatePropagation();
    		          evt.preventDefault();
    		          evt.stopPropagation();
    		          return true;
    		        }
    		      }
    		    }
    		  }, {
    		    key: "_doneChangingTextCallback",
    		    value: function _doneChangingTextCallback(element, data, updatedText, deleteTool) {
    		      if (deleteTool === true) {
    		        Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_15__["removeToolState"])(element, this.name, data);
    		      } else {
    		        data.text = updatedText;
    		      }

    		      data.active = false;
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.updateImage(element);
    		    }
    		  }]);

    		  return ArrowAnnotateTool;
    		}(_base_BaseAnnotationTool_js__WEBPACK_IMPORTED_MODULE_6__["default"]);



    		function getTextCallback(doneChangingTextCallback) {
    		  doneChangingTextCallback(prompt('Enter your annotation:'));
    		}

    		function changeTextCallback(data, eventData, doneChangingTextCallback) {
    		  doneChangingTextCallback(prompt('Change your annotation:'));
    		}

    		/***/ }),

    		/***/ "./tools/annotation/BidirectionalTool.js":
    		/*!***********************************************!*\
    		  !*** ./tools/annotation/BidirectionalTool.js ***!
    		  \***********************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return BidirectionalTool; });
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__);
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__);
    		/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "../node_modules/@babel/runtime/helpers/assertThisInitialized.js");
    		/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__);
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__);
    		/* harmony import */ var _base_BaseAnnotationTool_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../base/BaseAnnotationTool.js */ "./tools/base/BaseAnnotationTool.js");
    		/* harmony import */ var _bidirectionalTool_createNewMeasurement_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./bidirectionalTool/createNewMeasurement.js */ "./tools/annotation/bidirectionalTool/createNewMeasurement.js");
    		/* harmony import */ var _bidirectionalTool_pointNearTool_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./bidirectionalTool/pointNearTool.js */ "./tools/annotation/bidirectionalTool/pointNearTool.js");
    		/* harmony import */ var _bidirectionalTool_renderToolData_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./bidirectionalTool/renderToolData.js */ "./tools/annotation/bidirectionalTool/renderToolData.js");
    		/* harmony import */ var _bidirectionalTool_addNewMeasurement_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./bidirectionalTool/addNewMeasurement.js */ "./tools/annotation/bidirectionalTool/addNewMeasurement.js");
    		/* harmony import */ var _bidirectionalTool_mouseMoveCallback_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./bidirectionalTool/mouseMoveCallback.js */ "./tools/annotation/bidirectionalTool/mouseMoveCallback.js");
    		/* harmony import */ var _bidirectionalTool_handleSelectedCallback_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./bidirectionalTool/handleSelectedCallback.js */ "./tools/annotation/bidirectionalTool/handleSelectedCallback.js");
    		/* harmony import */ var _bidirectionalTool_handleSelectedMouseCallback_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./bidirectionalTool/handleSelectedMouseCallback.js */ "./tools/annotation/bidirectionalTool/handleSelectedMouseCallback.js");
    		/* harmony import */ var _bidirectionalTool_handleSelectedTouchCallback_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./bidirectionalTool/handleSelectedTouchCallback.js */ "./tools/annotation/bidirectionalTool/handleSelectedTouchCallback.js");
    		/* harmony import */ var _cursors_index_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../cursors/index.js */ "./tools/cursors/index.js");
    		/* harmony import */ var _util_throttle__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../util/throttle */ "./util/throttle.js");
    		/* harmony import */ var _util_getPixelSpacing__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../util/getPixelSpacing */ "./util/getPixelSpacing.js");
    		/* harmony import */ var _bidirectionalTool_utils_calculateLongestAndShortestDiameters__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./bidirectionalTool/utils/calculateLongestAndShortestDiameters */ "./tools/annotation/bidirectionalTool/utils/calculateLongestAndShortestDiameters.js");




















    		var emptyLocationCallback = function emptyLocationCallback(measurementData, eventData, doneCallback) {
    		  return doneCallback();
    		};
    		/**
    		 * @public
    		 * @class BidirectionalTool
    		 * @memberof Tools.Annotation
    		 * @classdesc Create and position an annotation that measures the
    		 * length and width of a region.
    		 * @extends Tools.Base.BaseAnnotationTool
    		 */


    		var BidirectionalTool =
    		/*#__PURE__*/
    		function (_BaseAnnotationTool) {
    		  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5___default()(BidirectionalTool, _BaseAnnotationTool);

    		  function BidirectionalTool(props) {
    		    var _this;

    		    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, BidirectionalTool);

    		    var defaultProps = {
    		      name: 'Bidirectional',
    		      supportedInteractionTypes: ['Mouse', 'Touch'],
    		      configuration: {
    		        changeMeasurementLocationCallback: emptyLocationCallback,
    		        getMeasurementLocationCallback: emptyLocationCallback,
    		        textBox: '',
    		        shadow: '',
    		        drawHandlesOnHover: true,
    		        additionalData: []
    		      },
    		      svgCursor: _cursors_index_js__WEBPACK_IMPORTED_MODULE_15__["bidirectionalCursor"]
    		    };
    		    _this = _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(BidirectionalTool).call(this, props, defaultProps));
    		    _this.throttledUpdateCachedStats = Object(_util_throttle__WEBPACK_IMPORTED_MODULE_16__["default"])(_this.updateCachedStats, 110);
    		    _this.createNewMeasurement = _bidirectionalTool_createNewMeasurement_js__WEBPACK_IMPORTED_MODULE_7__["default"].bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    _this.pointNearTool = _bidirectionalTool_pointNearTool_js__WEBPACK_IMPORTED_MODULE_8__["default"].bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    _this.renderToolData = _bidirectionalTool_renderToolData_js__WEBPACK_IMPORTED_MODULE_9__["default"].bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    _this.addNewMeasurement = _bidirectionalTool_addNewMeasurement_js__WEBPACK_IMPORTED_MODULE_10__["default"].bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    _this._moveCallback = _bidirectionalTool_mouseMoveCallback_js__WEBPACK_IMPORTED_MODULE_11__["default"].bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    _this.handleSelectedCallback = _bidirectionalTool_handleSelectedCallback_js__WEBPACK_IMPORTED_MODULE_12__["default"].bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    _this.handleSelectedMouseCallback = _bidirectionalTool_handleSelectedMouseCallback_js__WEBPACK_IMPORTED_MODULE_13__["default"].bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    _this.handleSelectedTouchCallback = _bidirectionalTool_handleSelectedTouchCallback_js__WEBPACK_IMPORTED_MODULE_14__["default"].bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    return _this;
    		  }

    		  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(BidirectionalTool, [{
    		    key: "updateCachedStats",
    		    value: function updateCachedStats(image, element, data) {
    		      var pixelSpacing = Object(_util_getPixelSpacing__WEBPACK_IMPORTED_MODULE_17__["default"])(image);

    		      var _calculateLongestAndS = Object(_bidirectionalTool_utils_calculateLongestAndShortestDiameters__WEBPACK_IMPORTED_MODULE_18__["default"])(data, pixelSpacing),
    		          longestDiameter = _calculateLongestAndS.longestDiameter,
    		          shortestDiameter = _calculateLongestAndS.shortestDiameter; // Set measurement text to show lesion table


    		      data.longestDiameter = longestDiameter;
    		      data.shortestDiameter = shortestDiameter;
    		      data.invalidated = false;
    		    }
    		  }]);

    		  return BidirectionalTool;
    		}(_base_BaseAnnotationTool_js__WEBPACK_IMPORTED_MODULE_6__["default"]);



    		/***/ }),

    		/***/ "./tools/annotation/CircleRoiTool.js":
    		/*!*******************************************!*\
    		  !*** ./tools/annotation/CircleRoiTool.js ***!
    		  \*******************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return CircleRoiTool; });
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__);
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__);
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _base_BaseAnnotationTool_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../base/BaseAnnotationTool.js */ "./tools/base/BaseAnnotationTool.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _stateManagement_toolStyle_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./../../stateManagement/toolStyle.js */ "./stateManagement/toolStyle.js");
    		/* harmony import */ var _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./../../stateManagement/toolColors.js */ "./stateManagement/toolColors.js");
    		/* harmony import */ var _drawing_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./../../drawing/index.js */ "./drawing/index.js");
    		/* harmony import */ var _util_calculateSUV_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./../../util/calculateSUV.js */ "./util/calculateSUV.js");
    		/* harmony import */ var _util_ellipse_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./../../util/ellipse/index.js */ "./util/ellipse/index.js");
    		/* harmony import */ var _util_getROITextBoxCoords_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../util/getROITextBoxCoords.js */ "./util/getROITextBoxCoords.js");
    		/* harmony import */ var _util_numbersWithCommas_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./../../util/numbersWithCommas.js */ "./util/numbersWithCommas.js");
    		/* harmony import */ var _util_throttle_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./../../util/throttle.js */ "./util/throttle.js");
    		/* harmony import */ var _util_logger_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../util/logger.js */ "./util/logger.js");
    		/* harmony import */ var _util_getPixelSpacing__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../util/getPixelSpacing */ "./util/getPixelSpacing.js");
    		/* harmony import */ var _cursors_index_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../cursors/index.js */ "./tools/cursors/index.js");






    		 // State



    		 // Drawing

    		 // Util









    		var logger = Object(_util_logger_js__WEBPACK_IMPORTED_MODULE_16__["getLogger"])('tools:annotation:CircleRoiTool');
    		/**
    		 * @public
    		 * @class CircleRoiTool
    		 * @memberof Tools.Annotation
    		 * @classdesc Tool for drawing circular regions of interest, and measuring
    		 * the statistics of the enclosed pixels.
    		 * @extends Tools.Base.BaseAnnotationTool
    		 */

    		var CircleRoiTool =
    		/*#__PURE__*/
    		function (_BaseAnnotationTool) {
    		  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default()(CircleRoiTool, _BaseAnnotationTool);

    		  function CircleRoiTool() {
    		    var _this;

    		    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    		    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, CircleRoiTool);

    		    var defaultProps = {
    		      name: 'CircleRoi',
    		      supportedInteractionTypes: ['Mouse', 'Touch'],
    		      svgCursor: _cursors_index_js__WEBPACK_IMPORTED_MODULE_18__["circleRoiCursor"]
    		    };
    		    _this = _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(CircleRoiTool).call(this, props, defaultProps));
    		    _this.throttledUpdateCachedStats = Object(_util_throttle_js__WEBPACK_IMPORTED_MODULE_15__["default"])(_this.updateCachedStats, 110);
    		    return _this;
    		  }

    		  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(CircleRoiTool, [{
    		    key: "createNewMeasurement",
    		    value: function createNewMeasurement(eventData) {
    		      var goodEventData = eventData && eventData.currentPoints && eventData.currentPoints.image;

    		      if (!goodEventData) {
    		        logger.error("required eventData not supplied to tool ".concat(this.name, "'s createNewMeasurement"));
    		        return;
    		      }

    		      return {
    		        visible: true,
    		        active: true,
    		        color: undefined,
    		        invalidated: true,
    		        handles: {
    		          start: {
    		            x: eventData.currentPoints.image.x,
    		            y: eventData.currentPoints.image.y,
    		            highlight: true,
    		            active: false
    		          },
    		          end: {
    		            x: eventData.currentPoints.image.x,
    		            y: eventData.currentPoints.image.y,
    		            highlight: true,
    		            active: true
    		          },
    		          initialRotation: eventData.viewport.rotation,
    		          textBox: {
    		            active: false,
    		            hasMoved: false,
    		            movesIndependently: false,
    		            drawnIndependently: true,
    		            allowedOutsideImage: true,
    		            hasBoundingBox: true
    		          }
    		        }
    		      };
    		    }
    		  }, {
    		    key: "pointNearTool",
    		    value: function pointNearTool(element, data, coords, interactionType) {
    		      var hasStartAndEndHandles = data && data.handles && data.handles.start && data.handles.end;

    		      if (!hasStartAndEndHandles) {
    		        logger.warn("invalid parameters supplied to tool ".concat(this.name, "'s pointNearTool"));
    		      }

    		      if (!hasStartAndEndHandles || data.visible === false) {
    		        return false;
    		      }

    		      var distance = interactionType === 'mouse' ? 15 : 25;
    		      var startCanvas = _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.pixelToCanvas(element, data.handles.start);
    		      var endCanvas = _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.pixelToCanvas(element, data.handles.end); // StartCanvas is the center of the circle

    		      var distanceFromCenter = _getDistance(startCanvas, coords); // Getting radius of circle annotation in canvas


    		      var radius = _getDistance(startCanvas, endCanvas); // Checking if point is near the tool by comparing its distance from the center of the circle


    		      return distanceFromCenter > radius - distance / 2 && distanceFromCenter < radius + distance / 2;
    		    }
    		  }, {
    		    key: "updateCachedStats",
    		    value: function updateCachedStats(image, element, data) {
    		      var seriesModule = _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.metaData.get('generalSeriesModule', image.imageId) || {};
    		      var modality = seriesModule.modality;
    		      var pixelSpacing = Object(_util_getPixelSpacing__WEBPACK_IMPORTED_MODULE_17__["default"])(image);

    		      var stats = _calculateStats(image, element, data.handles, modality, pixelSpacing);

    		      data.cachedStats = stats;
    		      data.invalidated = false;
    		    }
    		  }, {
    		    key: "renderToolData",
    		    value: function renderToolData(evt) {
    		      var _this2 = this;

    		      var toolData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_7__["getToolState"])(evt.currentTarget, this.name);

    		      if (!toolData) {
    		        return;
    		      }

    		      var eventData = evt.detail;
    		      var image = eventData.image,
    		          element = eventData.element,
    		          canvasContext = eventData.canvasContext;
    		      var lineWidth = _stateManagement_toolStyle_js__WEBPACK_IMPORTED_MODULE_8__["default"].getToolWidth();
    		      var _this$configuration = this.configuration,
    		          handleRadius = _this$configuration.handleRadius,
    		          drawHandlesOnHover = _this$configuration.drawHandlesOnHover;
    		      var newContext = Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_10__["getNewContext"])(canvasContext.canvas);

    		      var _getPixelSpacing = Object(_util_getPixelSpacing__WEBPACK_IMPORTED_MODULE_17__["default"])(image),
    		          rowPixelSpacing = _getPixelSpacing.rowPixelSpacing,
    		          colPixelSpacing = _getPixelSpacing.colPixelSpacing; // Meta


    		      var seriesModule = _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.metaData.get('generalSeriesModule', image.imageId) || {}; // Pixel Spacing

    		      var modality = seriesModule.modality;
    		      var hasPixelSpacing = rowPixelSpacing && colPixelSpacing;
    		      Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_10__["draw"])(newContext, function (context) {
    		        // If we have tool data for this element, iterate over each set and draw it
    		        for (var i = 0; i < toolData.data.length; i++) {
    		          var data = toolData.data[i];

    		          if (data.visible === false) {
    		            continue;
    		          } // Configure


    		          var color = _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_9__["default"].getColorIfActive(data);
    		          var handleOptions = {
    		            color: color,
    		            handleRadius: handleRadius,
    		            drawHandlesIfActive: drawHandlesOnHover
    		          };
    		          Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_10__["setShadow"])(context, _this2.configuration);
    		          var startCanvas = _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.pixelToCanvas(element, data.handles.start);
    		          var endCanvas = _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.pixelToCanvas(element, data.handles.end); // Calculating the radius where startCanvas is the center of the circle to be drawn

    		          var radius = _getDistance(startCanvas, endCanvas); // Draw Circle


    		          Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_10__["drawCircle"])(context, element, data.handles.start, radius, {
    		            color: color
    		          }, 'pixel');
    		          Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_10__["drawHandles"])(context, eventData, data.handles, handleOptions); // Update textbox stats

    		          if (data.invalidated === true) {
    		            if (data.cachedStats) {
    		              _this2.throttledUpdateCachedStats(image, element, data);
    		            } else {
    		              _this2.updateCachedStats(image, element, data);
    		            }
    		          } // Default to textbox on right side of ROI


    		          if (!data.handles.textBox.hasMoved) {
    		            var defaultCoords = Object(_util_getROITextBoxCoords_js__WEBPACK_IMPORTED_MODULE_13__["default"])(eventData.viewport, data.handles);
    		            Object.assign(data.handles.textBox, defaultCoords);
    		          }

    		          var textBoxAnchorPoints = function textBoxAnchorPoints(handles) {
    		            return _findTextBoxAnchorPoints(handles.start, handles.end);
    		          };

    		          var textBoxContent = _createTextBoxContent(context, image.color, data.cachedStats, modality, hasPixelSpacing, _this2.configuration);

    		          data.unit = _getUnit(modality, _this2.configuration.showHounsfieldUnits);
    		          Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_10__["drawLinkedTextBox"])(context, element, data.handles.textBox, textBoxContent, data.handles, textBoxAnchorPoints, color, lineWidth, 10, true);
    		        }
    		      });
    		    }
    		  }]);

    		  return CircleRoiTool;
    		}(_base_BaseAnnotationTool_js__WEBPACK_IMPORTED_MODULE_6__["default"]);
    		/**
    		 *
    		 *
    		 * @param {*} startHandle
    		 * @param {*} endHandle
    		 * @returns {Array.<{x: number, y: number}>}
    		 */




    		function _findTextBoxAnchorPoints(startHandle, endHandle) {
    		  var _getCirlceImageCoodin = _getCirlceImageCoodinates(startHandle, endHandle),
    		      left = _getCirlceImageCoodin.left,
    		      top = _getCirlceImageCoodin.top,
    		      width = _getCirlceImageCoodin.width,
    		      height = _getCirlceImageCoodin.height;

    		  return [{
    		    // Top middle point of ellipse
    		    x: left + width / 2,
    		    y: top
    		  }, {
    		    // Left middle point of ellipse
    		    x: left,
    		    y: top + height / 2
    		  }, {
    		    // Bottom middle point of ellipse
    		    x: left + width / 2,
    		    y: top + height
    		  }, {
    		    // Right middle point of ellipse
    		    x: left + width,
    		    y: top + height / 2
    		  }];
    		}

    		function _getUnit(modality, showHounsfieldUnits) {
    		  return modality === 'CT' && showHounsfieldUnits !== false ? 'HU' : '';
    		}
    		/**
    		 *
    		 *
    		 * @param {*} context
    		 * @param {*} isColorImage
    		 * @param {*} { area, mean, stdDev, min, max, meanStdDevSUV }
    		 * @param {*} modality
    		 * @param {*} hasPixelSpacing
    		 * @param {*} [options={}] - { showMinMax, showHounsfieldUnits }
    		 * @returns {string[]}
    		 */


    		function _createTextBoxContent(context, isColorImage) {
    		  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
    		      area = _ref.area,
    		      mean = _ref.mean,
    		      stdDev = _ref.stdDev,
    		      min = _ref.min,
    		      max = _ref.max,
    		      meanStdDevSUV = _ref.meanStdDevSUV;

    		  var modality = arguments.length > 3 ? arguments[3] : undefined;
    		  var hasPixelSpacing = arguments.length > 4 ? arguments[4] : undefined;
    		  var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};
    		  var showMinMax = options.showMinMax || false;
    		  var textLines = []; // Don't display mean/standardDev for color images

    		  var otherLines = [];

    		  if (!isColorImage) {
    		    var hasStandardUptakeValues = meanStdDevSUV && meanStdDevSUV.mean !== 0;

    		    var unit = _getUnit(modality, options.showHounsfieldUnits);

    		    var meanString = "Mean: ".concat(Object(_util_numbersWithCommas_js__WEBPACK_IMPORTED_MODULE_14__["default"])(mean.toFixed(2)), " ").concat(unit);
    		    var stdDevString = "Std Dev: ".concat(Object(_util_numbersWithCommas_js__WEBPACK_IMPORTED_MODULE_14__["default"])(stdDev.toFixed(2)), " ").concat(unit); // If this image has SUV values to display, concatenate them to the text line

    		    if (hasStandardUptakeValues) {
    		      var SUVtext = ' SUV: ';
    		      var meanSuvString = "".concat(SUVtext).concat(Object(_util_numbersWithCommas_js__WEBPACK_IMPORTED_MODULE_14__["default"])(meanStdDevSUV.mean.toFixed(2)));
    		      var stdDevSuvString = "".concat(SUVtext).concat(Object(_util_numbersWithCommas_js__WEBPACK_IMPORTED_MODULE_14__["default"])(meanStdDevSUV.stdDev.toFixed(2)));
    		      var targetStringLength = Math.floor(context.measureText("".concat(stdDevString, "     ")).width);

    		      while (context.measureText(meanString).width < targetStringLength) {
    		        meanString += ' ';
    		      }

    		      otherLines.push("".concat(meanString).concat(meanSuvString));
    		      otherLines.push("".concat(stdDevString, "     ").concat(stdDevSuvString));
    		    } else {
    		      otherLines.push("".concat(meanString, "     ").concat(stdDevString));
    		    }

    		    if (showMinMax) {
    		      var minString = "Min: ".concat(min, " ").concat(unit);
    		      var maxString = "Max: ".concat(max, " ").concat(unit);

    		      var _targetStringLength = hasStandardUptakeValues ? Math.floor(context.measureText("".concat(stdDevString, "     ")).width) : Math.floor(context.measureText("".concat(meanString, "     ")).width);

    		      while (context.measureText(minString).width < _targetStringLength) {
    		        minString += ' ';
    		      }

    		      otherLines.push("".concat(minString).concat(maxString));
    		    }
    		  }

    		  textLines.push(_formatArea(area, hasPixelSpacing));
    		  otherLines.forEach(function (x) {
    		    return textLines.push(x);
    		  });
    		  return textLines;
    		}
    		/**
    		 *
    		 *
    		 * @param {*} area
    		 * @param {*} hasPixelSpacing
    		 * @returns {string} The formatted label for showing area
    		 */


    		function _formatArea(area, hasPixelSpacing) {
    		  // This uses Char code 178 for a superscript 2
    		  var suffix = hasPixelSpacing ? " mm".concat(String.fromCharCode(178)) : " px".concat(String.fromCharCode(178));
    		  return "Area: ".concat(Object(_util_numbersWithCommas_js__WEBPACK_IMPORTED_MODULE_14__["default"])(area.toFixed(2))).concat(suffix);
    		}
    		/**
    		 *
    		 *
    		 * @param {*} image
    		 * @param {*} element
    		 * @param {*} handles
    		 * @param {*} modality
    		 * @param {*} pixelSpacing
    		 * @returns {Object} The Stats object
    		 */


    		function _calculateStats(image, element, handles, modality, pixelSpacing) {
    		  // Retrieve the bounds of the ellipse in image coordinates
    		  var circleCoordinates = _getCirlceImageCoodinates(handles.start, handles.end); // Retrieve the array of pixels that the ellipse bounds cover


    		  var pixels = _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.getPixels(element, circleCoordinates.left, circleCoordinates.top, circleCoordinates.width, circleCoordinates.height); // Calculate the mean & standard deviation from the pixels and the ellipse details.

    		  var ellipseMeanStdDev = Object(_util_ellipse_index_js__WEBPACK_IMPORTED_MODULE_12__["calculateEllipseStatistics"])(pixels, circleCoordinates);
    		  var meanStdDevSUV;

    		  if (modality === 'PT') {
    		    meanStdDevSUV = {
    		      mean: Object(_util_calculateSUV_js__WEBPACK_IMPORTED_MODULE_11__["default"])(image, ellipseMeanStdDev.mean, true) || 0,
    		      stdDev: Object(_util_calculateSUV_js__WEBPACK_IMPORTED_MODULE_11__["default"])(image, ellipseMeanStdDev.stdDev, true) || 0
    		    };
    		  }

    		  var area = Math.PI * (circleCoordinates.width * (pixelSpacing.colPixelSpacing || 1) / 2) * (circleCoordinates.height * (pixelSpacing.rowPixelSpacing || 1) / 2);
    		  return {
    		    area: area || 0,
    		    count: ellipseMeanStdDev.count || 0,
    		    mean: ellipseMeanStdDev.mean || 0,
    		    variance: ellipseMeanStdDev.variance || 0,
    		    stdDev: ellipseMeanStdDev.stdDev || 0,
    		    min: ellipseMeanStdDev.min || 0,
    		    max: ellipseMeanStdDev.max || 0,
    		    meanStdDevSUV: meanStdDevSUV
    		  };
    		}
    		/**
    		 * Retrieve the bounds of the ellipse in image coordinates
    		 *
    		 * @param {*} startHandle
    		 * @param {*} endHandle
    		 * @returns {{ left: number, top: number, width: number, height: number }}
    		 */


    		function _getCirlceImageCoodinates(startHandle, endHandle) {
    		  var radius = _getDistance(startHandle, endHandle);

    		  return {
    		    left: Math.round(Math.min(startHandle.x - radius, endHandle.x)),
    		    top: Math.round(Math.min(startHandle.y - radius, endHandle.y)),
    		    width: radius * 2,
    		    height: radius * 2
    		  };
    		}
    		/**
    		 * Returns the distance in canvas from the given coords to the center of the circle annotation.
    		 *
    		 * @param {*} startCoords - start point cooridnates
    		 * @param {*} endCoords - end point cooridnates
    		 * @returns {number} number - the distance between two points (start and end)
    		 */


    		function _getDistance(startCoords, endCoords) {
    		  var dx = startCoords.x - endCoords.x;
    		  var dy = startCoords.y - endCoords.y;
    		  return Math.sqrt(dx * dx + dy * dy);
    		}

    		/***/ }),

    		/***/ "./tools/annotation/CobbAngleTool.js":
    		/*!*******************************************!*\
    		  !*** ./tools/annotation/CobbAngleTool.js ***!
    		  \*******************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return CobbAngleTool; });
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__);
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__);
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _base_BaseAnnotationTool_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../base/BaseAnnotationTool.js */ "./tools/base/BaseAnnotationTool.js");
    		/* harmony import */ var _stateManagement_textStyle_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../../stateManagement/textStyle.js */ "./stateManagement/textStyle.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./../../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _stateManagement_toolStyle_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./../../stateManagement/toolStyle.js */ "./stateManagement/toolStyle.js");
    		/* harmony import */ var _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./../../stateManagement/toolColors.js */ "./stateManagement/toolColors.js");
    		/* harmony import */ var _manipulators_index_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./../../manipulators/index.js */ "./manipulators/index.js");
    		/* harmony import */ var _drawing_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./../../drawing/index.js */ "./drawing/index.js");
    		/* harmony import */ var _drawing_drawHandles_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./../../drawing/drawHandles.js */ "./drawing/drawHandles.js");
    		/* harmony import */ var _drawing_drawLinkedTextBox_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./../../drawing/drawLinkedTextBox.js */ "./drawing/drawLinkedTextBox.js");
    		/* harmony import */ var _util_lineSegDistance_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./../../util/lineSegDistance.js */ "./util/lineSegDistance.js");
    		/* harmony import */ var _util_roundToDecimal_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./../../util/roundToDecimal.js */ "./util/roundToDecimal.js");
    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./../../events.js */ "./events.js");
    		/* harmony import */ var _cursors_index_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../cursors/index.js */ "./tools/cursors/index.js");
    		/* harmony import */ var _util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../util/triggerEvent.js */ "./util/triggerEvent.js");
    		/* harmony import */ var _util_throttle__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../util/throttle */ "./util/throttle.js");
    		/* harmony import */ var _util_getPixelSpacing__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../util/getPixelSpacing */ "./util/getPixelSpacing.js");






    		 // State




    		 // Manipulators

    		 // Drawing











    		/**
    		 * @public
    		 * @class CobbAngleTool
    		 * @memberof Tools.Annotation
    		 * @classdesc Tool for measuring the angle between two straight lines.
    		 * @extends Tools.Base.BaseAnnotationTool
    		 */

    		var CobbAngleTool =
    		/*#__PURE__*/
    		function (_BaseAnnotationTool) {
    		  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default()(CobbAngleTool, _BaseAnnotationTool);

    		  function CobbAngleTool() {
    		    var _this;

    		    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    		    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, CobbAngleTool);

    		    var defaultProps = {
    		      name: 'CobbAngle',
    		      supportedInteractionTypes: ['Mouse', 'Touch'],
    		      svgCursor: _cursors_index_js__WEBPACK_IMPORTED_MODULE_18__["cobbAngleCursor"]
    		    };
    		    _this = _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(CobbAngleTool).call(this, props, defaultProps));
    		    _this.hasIncomplete = false;
    		    _this.throttledUpdateCachedStats = Object(_util_throttle__WEBPACK_IMPORTED_MODULE_20__["default"])(_this.updateCachedStats, 110);
    		    return _this;
    		  }

    		  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(CobbAngleTool, [{
    		    key: "createNewMeasurement",
    		    value: function createNewMeasurement(eventData) {
    		      // Create the measurement data for this tool with the end handle activated
    		      this.hasIncomplete = true;
    		      return {
    		        visible: true,
    		        active: true,
    		        color: undefined,
    		        invalidated: true,
    		        complete: false,
    		        value: '',
    		        handles: {
    		          start: {
    		            x: eventData.currentPoints.image.x,
    		            y: eventData.currentPoints.image.y,
    		            highlight: true,
    		            active: false
    		          },
    		          end: {
    		            x: eventData.currentPoints.image.x,
    		            y: eventData.currentPoints.image.y,
    		            highlight: true,
    		            active: true
    		          },
    		          start2: {
    		            x: eventData.currentPoints.image.x,
    		            y: eventData.currentPoints.image.y,
    		            highlight: true,
    		            active: false,
    		            drawnIndependently: true
    		          },
    		          end2: {
    		            x: eventData.currentPoints.image.x + 1,
    		            y: eventData.currentPoints.image.y,
    		            highlight: true,
    		            active: false,
    		            drawnIndependently: true
    		          },
    		          textBox: {
    		            active: false,
    		            hasMoved: false,
    		            movesIndependently: false,
    		            drawnIndependently: true,
    		            allowedOutsideImage: true,
    		            hasBoundingBox: true
    		          }
    		        }
    		      };
    		    }
    		    /**
    		     *
    		     *
    		     * @param {*} element
    		     * @param {*} data
    		     * @param {*} coords
    		     * @returns {Boolean}
    		     */

    		  }, {
    		    key: "pointNearTool",
    		    value: function pointNearTool(element, data, coords) {
    		      if (data.visible === false) {
    		        return false;
    		      }

    		      if (this.hasIncomplete) {
    		        return false;
    		      }

    		      return Object(_util_lineSegDistance_js__WEBPACK_IMPORTED_MODULE_15__["default"])(element, data.handles.start, data.handles.end, coords) < 25 || Object(_util_lineSegDistance_js__WEBPACK_IMPORTED_MODULE_15__["default"])(element, data.handles.start2, data.handles.end2, coords) < 25;
    		    }
    		  }, {
    		    key: "updateCachedStats",
    		    value: function updateCachedStats(image, element, data) {
    		      var _getPixelSpacing = Object(_util_getPixelSpacing__WEBPACK_IMPORTED_MODULE_21__["default"])(image),
    		          rowPixelSpacing = _getPixelSpacing.rowPixelSpacing,
    		          colPixelSpacing = _getPixelSpacing.colPixelSpacing;

    		      var dx1 = (Math.ceil(data.handles.start.x) - Math.ceil(data.handles.end.x)) * colPixelSpacing;
    		      var dy1 = (Math.ceil(data.handles.start.y) - Math.ceil(data.handles.end.y)) * rowPixelSpacing;
    		      var dx2 = (Math.ceil(data.handles.start2.x) - Math.ceil(data.handles.end2.x)) * colPixelSpacing;
    		      var dy2 = (Math.ceil(data.handles.start2.y) - Math.ceil(data.handles.end2.y)) * rowPixelSpacing;
    		      var angle = Math.acos(Math.abs((dx1 * dx2 + dy1 * dy2) / (Math.sqrt(dx1 * dx1 + dy1 * dy1) * Math.sqrt(dx2 * dx2 + dy2 * dy2))));
    		      angle *= 180 / Math.PI;
    		      data.rAngle = Object(_util_roundToDecimal_js__WEBPACK_IMPORTED_MODULE_16__["default"])(angle, 2);
    		      data.invalidated = false;
    		    }
    		  }, {
    		    key: "renderToolData",
    		    value: function renderToolData(evt) {
    		      var _this2 = this;

    		      var eventData = evt.detail;
    		      var _this$configuration = this.configuration,
    		          handleRadius = _this$configuration.handleRadius,
    		          drawHandlesOnHover = _this$configuration.drawHandlesOnHover; // If we have no toolData for this element, return immediately as there is nothing to do

    		      var toolData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_8__["getToolState"])(evt.currentTarget, this.name);

    		      if (!toolData) {
    		        return;
    		      } // We have tool data for this element - iterate over each one and draw it


    		      var context = Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_12__["getNewContext"])(eventData.canvasContext.canvas);
    		      var lineWidth = _stateManagement_toolStyle_js__WEBPACK_IMPORTED_MODULE_9__["default"].getToolWidth();
    		      var font = _stateManagement_textStyle_js__WEBPACK_IMPORTED_MODULE_7__["default"].getFont();

    		      var _loop = function _loop(i) {
    		        var data = toolData.data[i];

    		        if (data.visible === false) {
    		          return "continue";
    		        }

    		        Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_12__["draw"])(context, function (context) {
    		          Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_12__["setShadow"])(context, _this2.configuration); // Differentiate the color of activation tool

    		          var color = _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_10__["default"].getColorIfActive(data);
    		          Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_12__["drawLine"])(context, eventData.element, data.handles.start, data.handles.end, {
    		            color: color
    		          });

    		          if (data.complete) {
    		            Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_12__["drawLine"])(context, eventData.element, data.handles.start2, data.handles.end2, {
    		              color: color
    		            });
    		          } // Draw the handles


    		          var handleOptions = {
    		            color: color,
    		            handleRadius: handleRadius,
    		            drawHandlesIfActive: drawHandlesOnHover
    		          };
    		          Object(_drawing_drawHandles_js__WEBPACK_IMPORTED_MODULE_13__["default"])(context, eventData, data.handles, handleOptions); // Draw the text

    		          context.fillStyle = color;
    		          var text = data.value;

    		          if (!data.handles.textBox.hasMoved) {
    		            var textCoords = {
    		              x: (data.handles.start.x + data.handles.end.x) / 2,
    		              y: (data.handles.start.y + data.handles.end.y) / 2 - 10
    		            };
    		            context.font = font;
    		            data.handles.textBox.x = textCoords.x;
    		            data.handles.textBox.y = textCoords.y;
    		          }

    		          Object(_drawing_drawLinkedTextBox_js__WEBPACK_IMPORTED_MODULE_14__["default"])(context, eventData.element, data.handles.textBox, text, data.handles, textBoxAnchorPoints, color, lineWidth, 0, true);
    		        });
    		      };

    		      for (var i = 0; i < toolData.data.length; i++) {
    		        var _ret = _loop(i);

    		        if (_ret === "continue") continue;
    		      }

    		      function textBoxAnchorPoints(handles) {
    		        return [handles.start, handles.start2, handles.end, handles.end2];
    		      }
    		    }
    		  }, {
    		    key: "getIncomplete",
    		    value: function getIncomplete(element) {
    		      var toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_8__["getToolState"])(element, this.name);

    		      if (toolState && Array.isArray(toolState.data)) {
    		        return toolState.data.find(function (_ref) {
    		          var complete = _ref.complete;
    		          return complete === false;
    		        });
    		      }
    		    }
    		  }, {
    		    key: "addNewMeasurement",
    		    value: function addNewMeasurement(evt, interactionType) {
    		      var _this3 = this;

    		      evt.preventDefault();
    		      evt.stopPropagation();
    		      var eventData = evt.detail;
    		      var measurementData;
    		      var toMoveHandle;
    		      var options; // Search for incomplete measurements

    		      var element = evt.detail.element;
    		      var pendingMeasurement = this.getIncomplete(element);

    		      if (pendingMeasurement) {
    		        measurementData = pendingMeasurement;
    		        measurementData.complete = true;
    		        measurementData.handles.start2 = {
    		          x: eventData.currentPoints.image.x,
    		          y: eventData.currentPoints.image.y,
    		          drawnIndependently: false,
    		          highlight: true,
    		          active: false
    		        };
    		        measurementData.handles.end2 = {
    		          x: eventData.currentPoints.image.x,
    		          y: eventData.currentPoints.image.y,
    		          drawnIndependently: false,
    		          highlight: true,
    		          active: true
    		        };
    		        toMoveHandle = measurementData.handles.end2;
    		        this.hasIncomplete = false;
    		        options = Object.assign({
    		          doneMovingCallback: function doneMovingCallback() {
    		            var eventType = _events_js__WEBPACK_IMPORTED_MODULE_17__["default"].MEASUREMENT_COMPLETED;
    		            var eventData = {
    		              toolType: _this3.name,
    		              element: element,
    		              measurementData: measurementData
    		            };
    		            Object(_util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_19__["default"])(element, eventType, eventData);
    		          }
    		        }, this.options);
    		      } else {
    		        measurementData = this.createNewMeasurement(eventData);
    		        Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_8__["addToolState"])(element, this.name, measurementData);
    		        toMoveHandle = measurementData.handles.end;
    		        options = this.options;
    		      } // Associate this data with this imageId so we can render it and manipulate it


    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.updateImage(element);
    		      Object(_manipulators_index_js__WEBPACK_IMPORTED_MODULE_11__["moveNewHandle"])(eventData, this.name, measurementData, toMoveHandle, options, interactionType);
    		    }
    		  }, {
    		    key: "onMeasureModified",
    		    value: function onMeasureModified(ev) {
    		      var element = ev.detail.element;
    		      var image = _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.getEnabledElement(element).image;

    		      var _getPixelSpacing2 = Object(_util_getPixelSpacing__WEBPACK_IMPORTED_MODULE_21__["default"])(image),
    		          rowPixelSpacing = _getPixelSpacing2.rowPixelSpacing,
    		          colPixelSpacing = _getPixelSpacing2.colPixelSpacing;

    		      if (ev.detail.toolName !== this.name) {
    		        return;
    		      }

    		      var data = ev.detail.measurementData; // Update textbox stats

    		      if (data.invalidated === true) {
    		        if (data.rAngle) {
    		          this.throttledUpdateCachedStats(image, element, data);
    		        } else {
    		          this.updateCachedStats(image, element, data);
    		        }
    		      }

    		      var rAngle = data.rAngle;
    		      data.value = '';

    		      if (!Number.isNaN(rAngle)) {
    		        data.value = textBoxText(rAngle, rowPixelSpacing, colPixelSpacing);
    		      }

    		      function textBoxText(rAngle, rowPixelSpacing, colPixelSpacing) {
    		        var suffix = !rowPixelSpacing || !colPixelSpacing ? ' (isotropic)' : '';
    		        var str = '00B0'; // Degrees symbol

    		        return rAngle.toString() + String.fromCharCode(parseInt(str, 16)) + suffix;
    		      }
    		    }
    		  }, {
    		    key: "activeCallback",
    		    value: function activeCallback(element) {
    		      this.onMeasureModified = this.onMeasureModified.bind(this);
    		      element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_17__["default"].MEASUREMENT_MODIFIED, this.onMeasureModified);
    		    }
    		  }, {
    		    key: "passiveCallback",
    		    value: function passiveCallback(element) {
    		      this.onMeasureModified = this.onMeasureModified.bind(this);
    		      element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_17__["default"].MEASUREMENT_MODIFIED, this.onMeasureModified);
    		    }
    		  }, {
    		    key: "enabledCallback",
    		    value: function enabledCallback(element) {
    		      element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_17__["default"].MEASUREMENT_MODIFIED, this.onMeasureModified);
    		    }
    		  }, {
    		    key: "disabledCallback",
    		    value: function disabledCallback(element) {
    		      element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_17__["default"].MEASUREMENT_MODIFIED, this.onMeasureModified);
    		    }
    		  }]);

    		  return CobbAngleTool;
    		}(_base_BaseAnnotationTool_js__WEBPACK_IMPORTED_MODULE_6__["default"]);



    		/***/ }),

    		/***/ "./tools/annotation/EllipticalRoiTool.js":
    		/*!***********************************************!*\
    		  !*** ./tools/annotation/EllipticalRoiTool.js ***!
    		  \***********************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return EllipticalRoiTool; });
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__);
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__);
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _base_BaseAnnotationTool_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../base/BaseAnnotationTool.js */ "./tools/base/BaseAnnotationTool.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _stateManagement_toolStyle_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./../../stateManagement/toolStyle.js */ "./stateManagement/toolStyle.js");
    		/* harmony import */ var _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./../../stateManagement/toolColors.js */ "./stateManagement/toolColors.js");
    		/* harmony import */ var _drawing_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./../../drawing/index.js */ "./drawing/index.js");
    		/* harmony import */ var _util_calculateSUV_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./../../util/calculateSUV.js */ "./util/calculateSUV.js");
    		/* harmony import */ var _util_ellipse_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./../../util/ellipse/index.js */ "./util/ellipse/index.js");
    		/* harmony import */ var _util_getROITextBoxCoords_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../util/getROITextBoxCoords.js */ "./util/getROITextBoxCoords.js");
    		/* harmony import */ var _util_numbersWithCommas_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./../../util/numbersWithCommas.js */ "./util/numbersWithCommas.js");
    		/* harmony import */ var _util_throttle_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./../../util/throttle.js */ "./util/throttle.js");
    		/* harmony import */ var _cursors_index_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../cursors/index.js */ "./tools/cursors/index.js");
    		/* harmony import */ var _util_logger_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../util/logger.js */ "./util/logger.js");
    		/* harmony import */ var _util_getPixelSpacing__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../util/getPixelSpacing */ "./util/getPixelSpacing.js");






    		 // State



    		 // Drawing

    		 // Util









    		var logger = Object(_util_logger_js__WEBPACK_IMPORTED_MODULE_17__["getLogger"])('tools:annotation:EllipticalRoiTool');
    		/**
    		 * @public
    		 * @class EllipticalRoiTool
    		 * @memberof Tools.Annotation
    		 * @classdesc Tool for drawing elliptical regions of interest, and measuring
    		 * the statistics of the enclosed pixels.
    		 * @extends Tools.Base.BaseAnnotationTool
    		 */

    		var EllipticalRoiTool =
    		/*#__PURE__*/
    		function (_BaseAnnotationTool) {
    		  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default()(EllipticalRoiTool, _BaseAnnotationTool);

    		  function EllipticalRoiTool() {
    		    var _this;

    		    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    		    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, EllipticalRoiTool);

    		    var defaultProps = {
    		      name: 'EllipticalRoi',
    		      supportedInteractionTypes: ['Mouse', 'Touch'],
    		      configuration: {// showMinMax: false,
    		        // showHounsfieldUnits: true,
    		      },
    		      svgCursor: _cursors_index_js__WEBPACK_IMPORTED_MODULE_16__["ellipticalRoiCursor"]
    		    };
    		    _this = _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(EllipticalRoiTool).call(this, props, defaultProps));
    		    _this.throttledUpdateCachedStats = Object(_util_throttle_js__WEBPACK_IMPORTED_MODULE_15__["default"])(_this.updateCachedStats, 110);
    		    return _this;
    		  }

    		  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(EllipticalRoiTool, [{
    		    key: "createNewMeasurement",
    		    value: function createNewMeasurement(eventData) {
    		      var goodEventData = eventData && eventData.currentPoints && eventData.currentPoints.image;

    		      if (!goodEventData) {
    		        logger.error("required eventData not supplied to tool ".concat(this.name, "'s createNewMeasurement"));
    		        return;
    		      }

    		      return {
    		        visible: true,
    		        active: true,
    		        color: undefined,
    		        invalidated: true,
    		        handles: {
    		          start: {
    		            x: eventData.currentPoints.image.x,
    		            y: eventData.currentPoints.image.y,
    		            highlight: true,
    		            active: false
    		          },
    		          end: {
    		            x: eventData.currentPoints.image.x,
    		            y: eventData.currentPoints.image.y,
    		            highlight: true,
    		            active: true
    		          },
    		          initialRotation: eventData.viewport.rotation,
    		          textBox: {
    		            active: false,
    		            hasMoved: false,
    		            movesIndependently: false,
    		            drawnIndependently: true,
    		            allowedOutsideImage: true,
    		            hasBoundingBox: true
    		          }
    		        }
    		      };
    		    }
    		  }, {
    		    key: "pointNearTool",
    		    value: function pointNearTool(element, data, coords, interactionType) {
    		      var hasStartAndEndHandles = data && data.handles && data.handles.start && data.handles.end;
    		      var validParameters = hasStartAndEndHandles;

    		      if (!validParameters) {
    		        logger.warn("invalid parameters supplied to tool ".concat(this.name, "'s pointNearTool"));
    		      }

    		      if (!validParameters || data.visible === false) {
    		        return false;
    		      }

    		      var distance = interactionType === 'mouse' ? 15 : 25;
    		      var startCanvas = _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.pixelToCanvas(element, data.handles.start);
    		      var endCanvas = _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.pixelToCanvas(element, data.handles.end);
    		      var minorEllipse = {
    		        left: Math.min(startCanvas.x, endCanvas.x) + distance / 2,
    		        top: Math.min(startCanvas.y, endCanvas.y) + distance / 2,
    		        width: Math.abs(startCanvas.x - endCanvas.x) - distance,
    		        height: Math.abs(startCanvas.y - endCanvas.y) - distance
    		      };
    		      var majorEllipse = {
    		        left: Math.min(startCanvas.x, endCanvas.x) - distance / 2,
    		        top: Math.min(startCanvas.y, endCanvas.y) - distance / 2,
    		        width: Math.abs(startCanvas.x - endCanvas.x) + distance,
    		        height: Math.abs(startCanvas.y - endCanvas.y) + distance
    		      };
    		      var pointInMinorEllipse = Object(_util_ellipse_index_js__WEBPACK_IMPORTED_MODULE_12__["pointInEllipse"])(minorEllipse, coords);
    		      var pointInMajorEllipse = Object(_util_ellipse_index_js__WEBPACK_IMPORTED_MODULE_12__["pointInEllipse"])(majorEllipse, coords);

    		      if (pointInMajorEllipse && !pointInMinorEllipse) {
    		        return true;
    		      }

    		      return false;
    		    }
    		  }, {
    		    key: "updateCachedStats",
    		    value: function updateCachedStats(image, element, data) {
    		      var seriesModule = _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.metaData.get('generalSeriesModule', image.imageId) || {};
    		      var modality = seriesModule.modality;
    		      var pixelSpacing = Object(_util_getPixelSpacing__WEBPACK_IMPORTED_MODULE_18__["default"])(image);

    		      var stats = _calculateStats(image, element, data.handles, modality, pixelSpacing);

    		      data.cachedStats = stats;
    		      data.invalidated = false;
    		    }
    		  }, {
    		    key: "renderToolData",
    		    value: function renderToolData(evt) {
    		      var _this2 = this;

    		      var toolData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_7__["getToolState"])(evt.currentTarget, this.name);

    		      if (!toolData) {
    		        return;
    		      }

    		      var eventData = evt.detail;
    		      var image = eventData.image,
    		          element = eventData.element;
    		      var lineWidth = _stateManagement_toolStyle_js__WEBPACK_IMPORTED_MODULE_8__["default"].getToolWidth();
    		      var _this$configuration = this.configuration,
    		          handleRadius = _this$configuration.handleRadius,
    		          drawHandlesOnHover = _this$configuration.drawHandlesOnHover;
    		      var context = Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_10__["getNewContext"])(eventData.canvasContext.canvas);

    		      var _getPixelSpacing = Object(_util_getPixelSpacing__WEBPACK_IMPORTED_MODULE_18__["default"])(image),
    		          rowPixelSpacing = _getPixelSpacing.rowPixelSpacing,
    		          colPixelSpacing = _getPixelSpacing.colPixelSpacing; // Meta


    		      var seriesModule = _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.metaData.get('generalSeriesModule', image.imageId) || {}; // Pixel Spacing

    		      var modality = seriesModule.modality;
    		      var hasPixelSpacing = rowPixelSpacing && colPixelSpacing;
    		      Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_10__["draw"])(context, function (context) {
    		        // If we have tool data for this element - iterate over each set and draw it
    		        for (var i = 0; i < toolData.data.length; i++) {
    		          var data = toolData.data[i];

    		          if (data.visible === false) {
    		            continue;
    		          } // Configure


    		          var color = _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_9__["default"].getColorIfActive(data);
    		          var handleOptions = {
    		            color: color,
    		            handleRadius: handleRadius,
    		            drawHandlesIfActive: drawHandlesOnHover
    		          };
    		          Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_10__["setShadow"])(context, _this2.configuration); // Draw

    		          Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_10__["drawEllipse"])(context, element, data.handles.start, data.handles.end, {
    		            color: color
    		          }, 'pixel', data.handles.initialRotation);
    		          Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_10__["drawHandles"])(context, eventData, data.handles, handleOptions); // Update textbox stats

    		          if (data.invalidated === true) {
    		            if (data.cachedStats) {
    		              _this2.throttledUpdateCachedStats(image, element, data);
    		            } else {
    		              _this2.updateCachedStats(image, element, data);
    		            }
    		          } // Default to textbox on right side of ROI


    		          if (!data.handles.textBox.hasMoved) {
    		            var defaultCoords = Object(_util_getROITextBoxCoords_js__WEBPACK_IMPORTED_MODULE_13__["default"])(eventData.viewport, data.handles);
    		            Object.assign(data.handles.textBox, defaultCoords);
    		          }

    		          var textBoxAnchorPoints = function textBoxAnchorPoints(handles) {
    		            return _findTextBoxAnchorPoints(handles.start, handles.end);
    		          };

    		          var textBoxContent = _createTextBoxContent(context, image.color, data.cachedStats, modality, hasPixelSpacing, _this2.configuration);

    		          data.unit = _getUnit(modality, _this2.configuration.showHounsfieldUnits);
    		          Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_10__["drawLinkedTextBox"])(context, element, data.handles.textBox, textBoxContent, data.handles, textBoxAnchorPoints, color, lineWidth, 10, true);
    		        }
    		      });
    		    }
    		  }]);

    		  return EllipticalRoiTool;
    		}(_base_BaseAnnotationTool_js__WEBPACK_IMPORTED_MODULE_6__["default"]);
    		/**
    		 *
    		 *
    		 * @param {*} startHandle
    		 * @param {*} endHandle
    		 * @returns {Array.<{x: number, y: number}>}
    		 */




    		function _findTextBoxAnchorPoints(startHandle, endHandle) {
    		  var _getEllipseImageCoord = _getEllipseImageCoordinates(startHandle, endHandle),
    		      left = _getEllipseImageCoord.left,
    		      top = _getEllipseImageCoord.top,
    		      width = _getEllipseImageCoord.width,
    		      height = _getEllipseImageCoord.height;

    		  return [{
    		    // Top middle point of ellipse
    		    x: left + width / 2,
    		    y: top
    		  }, {
    		    // Left middle point of ellipse
    		    x: left,
    		    y: top + height / 2
    		  }, {
    		    // Bottom middle point of ellipse
    		    x: left + width / 2,
    		    y: top + height
    		  }, {
    		    // Right middle point of ellipse
    		    x: left + width,
    		    y: top + height / 2
    		  }];
    		}

    		function _getUnit(modality, showHounsfieldUnits) {
    		  return modality === 'CT' && showHounsfieldUnits !== false ? 'HU' : '';
    		}
    		/**
    		 *
    		 *
    		 * @param {*} context
    		 * @param {*} isColorImage
    		 * @param {*} { area, mean, stdDev, min, max, meanStdDevSUV }
    		 * @param {*} modality
    		 * @param {*} hasPixelSpacing
    		 * @param {*} [options={}] - { showMinMax, showHounsfieldUnits }
    		 * @returns {string[]}
    		 */


    		function _createTextBoxContent(context, isColorImage) {
    		  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
    		      area = _ref.area,
    		      mean = _ref.mean,
    		      stdDev = _ref.stdDev,
    		      min = _ref.min,
    		      max = _ref.max,
    		      meanStdDevSUV = _ref.meanStdDevSUV;

    		  var modality = arguments.length > 3 ? arguments[3] : undefined;
    		  var hasPixelSpacing = arguments.length > 4 ? arguments[4] : undefined;
    		  var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};
    		  var showMinMax = options.showMinMax || false;
    		  var textLines = []; // Don't display mean/standardDev for color images

    		  var otherLines = [];

    		  if (!isColorImage) {
    		    var hasStandardUptakeValues = meanStdDevSUV && meanStdDevSUV.mean !== 0;

    		    var unit = _getUnit(modality, options.showHounsfieldUnits);

    		    var meanString = "Mean: ".concat(Object(_util_numbersWithCommas_js__WEBPACK_IMPORTED_MODULE_14__["default"])(mean.toFixed(2)), " ").concat(unit);
    		    var stdDevString = "Std Dev: ".concat(Object(_util_numbersWithCommas_js__WEBPACK_IMPORTED_MODULE_14__["default"])(stdDev.toFixed(2)), " ").concat(unit); // If this image has SUV values to display, concatenate them to the text line

    		    if (hasStandardUptakeValues) {
    		      var SUVtext = ' SUV: ';
    		      var meanSuvString = "".concat(SUVtext).concat(Object(_util_numbersWithCommas_js__WEBPACK_IMPORTED_MODULE_14__["default"])(meanStdDevSUV.mean.toFixed(2)));
    		      var stdDevSuvString = "".concat(SUVtext).concat(Object(_util_numbersWithCommas_js__WEBPACK_IMPORTED_MODULE_14__["default"])(meanStdDevSUV.stdDev.toFixed(2)));
    		      var targetStringLength = Math.floor(context.measureText("".concat(stdDevString, "     ")).width);

    		      while (context.measureText(meanString).width < targetStringLength) {
    		        meanString += ' ';
    		      }

    		      otherLines.push("".concat(meanString).concat(meanSuvString));
    		      otherLines.push("".concat(stdDevString, "     ").concat(stdDevSuvString));
    		    } else {
    		      otherLines.push("".concat(meanString, "     ").concat(stdDevString));
    		    }

    		    if (showMinMax) {
    		      var minString = "Min: ".concat(min, " ").concat(unit);
    		      var maxString = "Max: ".concat(max, " ").concat(unit);

    		      var _targetStringLength = hasStandardUptakeValues ? Math.floor(context.measureText("".concat(stdDevString, "     ")).width) : Math.floor(context.measureText("".concat(meanString, "     ")).width);

    		      while (context.measureText(minString).width < _targetStringLength) {
    		        minString += ' ';
    		      }

    		      otherLines.push("".concat(minString).concat(maxString));
    		    }
    		  }

    		  textLines.push(_formatArea(area, hasPixelSpacing));
    		  otherLines.forEach(function (x) {
    		    return textLines.push(x);
    		  });
    		  return textLines;
    		}
    		/**
    		 *
    		 *
    		 * @param {*} area
    		 * @param {*} hasPixelSpacing
    		 * @returns {string} The formatted label for showing area
    		 */


    		function _formatArea(area, hasPixelSpacing) {
    		  // This uses Char code 178 for a superscript 2
    		  var suffix = hasPixelSpacing ? " mm".concat(String.fromCharCode(178)) : " px".concat(String.fromCharCode(178));
    		  return "Area: ".concat(Object(_util_numbersWithCommas_js__WEBPACK_IMPORTED_MODULE_14__["default"])(area.toFixed(2))).concat(suffix);
    		}
    		/**
    		 *
    		 *
    		 * @param {*} image
    		 * @param {*} element
    		 * @param {*} handles
    		 * @param {*} modality
    		 * @param {*} pixelSpacing
    		 * @returns {Object} The Stats object
    		 */


    		function _calculateStats(image, element, handles, modality, pixelSpacing) {
    		  // Retrieve the bounds of the ellipse in image coordinates
    		  var ellipseCoordinates = _getEllipseImageCoordinates(handles.start, handles.end); // Retrieve the array of pixels that the ellipse bounds cover


    		  var pixels = _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.getPixels(element, ellipseCoordinates.left, ellipseCoordinates.top, ellipseCoordinates.width, ellipseCoordinates.height); // Calculate the mean & standard deviation from the pixels and the ellipse details.

    		  var ellipseMeanStdDev = Object(_util_ellipse_index_js__WEBPACK_IMPORTED_MODULE_12__["calculateEllipseStatistics"])(pixels, ellipseCoordinates);
    		  var meanStdDevSUV;

    		  if (modality === 'PT') {
    		    meanStdDevSUV = {
    		      mean: Object(_util_calculateSUV_js__WEBPACK_IMPORTED_MODULE_11__["default"])(image, ellipseMeanStdDev.mean, true) || 0,
    		      stdDev: Object(_util_calculateSUV_js__WEBPACK_IMPORTED_MODULE_11__["default"])(image, ellipseMeanStdDev.stdDev, true) || 0
    		    };
    		  } // Calculate the image area from the ellipse dimensions and pixel spacing


    		  var area = Math.PI * (ellipseCoordinates.width * (pixelSpacing.colPixelSpacing || 1) / 2) * (ellipseCoordinates.height * (pixelSpacing.rowPixelSpacing || 1) / 2);
    		  return {
    		    area: area || 0,
    		    count: ellipseMeanStdDev.count || 0,
    		    mean: ellipseMeanStdDev.mean || 0,
    		    variance: ellipseMeanStdDev.variance || 0,
    		    stdDev: ellipseMeanStdDev.stdDev || 0,
    		    min: ellipseMeanStdDev.min || 0,
    		    max: ellipseMeanStdDev.max || 0,
    		    meanStdDevSUV: meanStdDevSUV
    		  };
    		}
    		/**
    		 * Retrieve the bounds of the ellipse in image coordinates
    		 *
    		 * @param {*} startHandle
    		 * @param {*} endHandle
    		 * @returns {{ left: number, top: number, width: number, height: number }}
    		 */


    		function _getEllipseImageCoordinates(startHandle, endHandle) {
    		  return {
    		    left: Math.round(Math.min(startHandle.x, endHandle.x)),
    		    top: Math.round(Math.min(startHandle.y, endHandle.y)),
    		    width: Math.round(Math.abs(startHandle.x - endHandle.x)),
    		    height: Math.round(Math.abs(startHandle.y - endHandle.y))
    		  };
    		}

    		/***/ }),

    		/***/ "./tools/annotation/FreehandMouseTool.js":
    		/*!***********************************************!*\
    		  !*** ./tools/annotation/FreehandMouseTool.js ***!
    		  \***********************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return FreehandMouseTool; });
    		/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js");
    		/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__);
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__);
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__);
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__);
    		/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "../node_modules/@babel/runtime/helpers/assertThisInitialized.js");
    		/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__);
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6__);
    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../../events.js */ "./events.js");
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./../../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _base_BaseAnnotationTool_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./../base/BaseAnnotationTool.js */ "./tools/base/BaseAnnotationTool.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./../../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _stateManagement_toolStyle_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./../../stateManagement/toolStyle.js */ "./stateManagement/toolStyle.js");
    		/* harmony import */ var _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./../../stateManagement/toolColors.js */ "./stateManagement/toolColors.js");
    		/* harmony import */ var _store_index_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../store/index.js */ "./store/index.js");
    		/* harmony import */ var _util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../util/triggerEvent.js */ "./util/triggerEvent.js");
    		/* harmony import */ var _util_findAndMoveHelpers_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../util/findAndMoveHelpers.js */ "./util/findAndMoveHelpers.js");
    		/* harmony import */ var _util_pointInsideBoundingBox_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../util/pointInsideBoundingBox.js */ "./util/pointInsideBoundingBox.js");
    		/* harmony import */ var _util_calculateSUV_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../util/calculateSUV.js */ "./util/calculateSUV.js");
    		/* harmony import */ var _util_numbersWithCommas_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../util/numbersWithCommas.js */ "./util/numbersWithCommas.js");
    		/* harmony import */ var _drawing_index_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../drawing/index.js */ "./drawing/index.js");
    		/* harmony import */ var _drawing_drawLinkedTextBox_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../drawing/drawLinkedTextBox.js */ "./drawing/drawLinkedTextBox.js");
    		/* harmony import */ var _drawing_drawHandles_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../drawing/drawHandles.js */ "./drawing/drawHandles.js");
    		/* harmony import */ var _util_clip_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../../util/clip.js */ "./util/clip.js");
    		/* harmony import */ var _store_setToolCursor_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../../store/setToolCursor.js */ "./store/setToolCursor.js");
    		/* harmony import */ var _cursors_index_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../cursors/index.js */ "./tools/cursors/index.js");
    		/* harmony import */ var _util_freehand_index_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../../util/freehand/index.js */ "./util/freehand/index.js");
    		/* harmony import */ var _util_logger_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../../util/logger.js */ "./util/logger.js");
    		/* harmony import */ var _util_throttle__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../../util/throttle */ "./util/throttle.js");









    		 // State





    		 // Manipulators

    		 // Implementation Logic



    		 // Drawing










    		var logger = Object(_util_logger_js__WEBPACK_IMPORTED_MODULE_26__["getLogger"])('tools:annotation:FreehandMouseTool');
    		var insertOrDelete = _util_freehand_index_js__WEBPACK_IMPORTED_MODULE_25__["default"].insertOrDelete,
    		    freehandArea = _util_freehand_index_js__WEBPACK_IMPORTED_MODULE_25__["default"].freehandArea,
    		    calculateFreehandStatistics = _util_freehand_index_js__WEBPACK_IMPORTED_MODULE_25__["default"].calculateFreehandStatistics,
    		    freehandIntersect = _util_freehand_index_js__WEBPACK_IMPORTED_MODULE_25__["default"].freehandIntersect,
    		    FreehandHandleData = _util_freehand_index_js__WEBPACK_IMPORTED_MODULE_25__["default"].FreehandHandleData;
    		/**
    		 * @public
    		 * @class FreehandMouseTool
    		 * @memberof Tools.Annotation
    		 * @classdesc Tool for drawing arbitrary polygonal regions of interest, and
    		 * measuring the statistics of the enclosed pixels.
    		 * @extends Tools.Base.BaseAnnotationTool
    		 */

    		var FreehandMouseTool =
    		/*#__PURE__*/
    		function (_BaseAnnotationTool) {
    		  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6___default()(FreehandMouseTool, _BaseAnnotationTool);

    		  function FreehandMouseTool() {
    		    var _this;

    		    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    		    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, FreehandMouseTool);

    		    var defaultProps = {
    		      name: 'FreehandMouse',
    		      supportedInteractionTypes: ['Mouse', 'Touch'],
    		      configuration: defaultFreehandConfiguration(),
    		      svgCursor: _cursors_index_js__WEBPACK_IMPORTED_MODULE_24__["freehandMouseCursor"]
    		    };
    		    _this = _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(FreehandMouseTool).call(this, props, defaultProps));
    		    _this.isMultiPartTool = true;
    		    _this._drawing = false;
    		    _this._dragging = false;
    		    _this._modifying = false; // Create bound callback functions for private event loops

    		    _this._drawingMouseDownCallback = _this._drawingMouseDownCallback.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5___default()(_this));
    		    _this._drawingMouseMoveCallback = _this._drawingMouseMoveCallback.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5___default()(_this));
    		    _this._drawingMouseDragCallback = _this._drawingMouseDragCallback.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5___default()(_this));
    		    _this._drawingMouseUpCallback = _this._drawingMouseUpCallback.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5___default()(_this));
    		    _this._drawingMouseDoubleClickCallback = _this._drawingMouseDoubleClickCallback.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5___default()(_this));
    		    _this._editMouseUpCallback = _this._editMouseUpCallback.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5___default()(_this));
    		    _this._editMouseDragCallback = _this._editMouseDragCallback.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5___default()(_this));
    		    _this._drawingTouchStartCallback = _this._drawingTouchStartCallback.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5___default()(_this));
    		    _this._drawingTouchDragCallback = _this._drawingTouchDragCallback.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5___default()(_this));
    		    _this._drawingDoubleTapClickCallback = _this._drawingDoubleTapClickCallback.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5___default()(_this));
    		    _this._editTouchDragCallback = _this._editTouchDragCallback.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5___default()(_this));
    		    _this.throttledUpdateCachedStats = Object(_util_throttle__WEBPACK_IMPORTED_MODULE_27__["default"])(_this.updateCachedStats, 110);
    		    return _this;
    		  }

    		  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(FreehandMouseTool, [{
    		    key: "createNewMeasurement",
    		    value: function createNewMeasurement(eventData) {
    		      var goodEventData = eventData && eventData.currentPoints && eventData.currentPoints.image;

    		      if (!goodEventData) {
    		        logger.error("required eventData not supplied to tool ".concat(this.name, "'s createNewMeasurement"));
    		        return;
    		      }

    		      var measurementData = {
    		        visible: true,
    		        active: true,
    		        invalidated: true,
    		        color: undefined,
    		        handles: {
    		          points: []
    		        }
    		      };
    		      measurementData.handles.textBox = {
    		        active: false,
    		        hasMoved: false,
    		        movesIndependently: false,
    		        drawnIndependently: true,
    		        allowedOutsideImage: true,
    		        hasBoundingBox: true
    		      };
    		      return measurementData;
    		    }
    		    /**
    		     *
    		     *
    		     * @param {*} element element
    		     * @param {*} data data
    		     * @param {*} coords coords
    		     * @returns {Boolean}
    		     */

    		  }, {
    		    key: "pointNearTool",
    		    value: function pointNearTool(element, data, coords) {
    		      var validParameters = data && data.handles && data.handles.points;

    		      if (!validParameters) {
    		        throw new Error("invalid parameters supplied to tool ".concat(this.name, "'s pointNearTool"));
    		      }

    		      if (!validParameters || data.visible === false) {
    		        return false;
    		      }

    		      var isPointNearTool = this._pointNearHandle(element, data, coords);

    		      if (isPointNearTool !== undefined) {
    		        return true;
    		      }

    		      return false;
    		    }
    		    /**
    		     * @param {*} element
    		     * @param {*} data
    		     * @param {*} coords
    		     * @returns {number} the distance in px from the provided coordinates to the
    		     * closest rendered portion of the annotation. -1 if the distance cannot be
    		     * calculated.
    		     */

    		  }, {
    		    key: "distanceFromPoint",
    		    value: function distanceFromPoint(element, data, coords) {
    		      var distance = Infinity;

    		      for (var i = 0; i < data.handles.points.length; i++) {
    		        var distanceI = _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstoneMath.point.distance(data.handles.points[i], coords);
    		        distance = Math.min(distance, distanceI);
    		      } // If an error caused distance not to be calculated, return -1.


    		      if (distance === Infinity) {
    		        return -1;
    		      }

    		      return distance;
    		    }
    		    /**
    		     * @param {*} element
    		     * @param {*} data
    		     * @param {*} coords
    		     * @returns {number} the distance in canvas units from the provided coordinates to the
    		     * closest rendered portion of the annotation. -1 if the distance cannot be
    		     * calculated.
    		     */

    		  }, {
    		    key: "distanceFromPointCanvas",
    		    value: function distanceFromPointCanvas(element, data, coords) {
    		      var distance = Infinity;

    		      if (!data) {
    		        return -1;
    		      }

    		      var canvasCoords = _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.pixelToCanvas(element, coords);
    		      var points = data.handles.points;

    		      for (var i = 0; i < points.length; i++) {
    		        var handleCanvas = _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.pixelToCanvas(element, points[i]);
    		        var distanceI = _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstoneMath.point.distance(handleCanvas, canvasCoords);
    		        distance = Math.min(distance, distanceI);
    		      } // If an error caused distance not to be calculated, return -1.


    		      if (distance === Infinity) {
    		        return -1;
    		      }

    		      return distance;
    		    }
    		    /**
    		     *
    		     *
    		     *
    		     * @param {Object} image image
    		     * @param {Object} element element
    		     * @param {Object} data data
    		     *
    		     * @returns {void}  void
    		     */

    		  }, {
    		    key: "updateCachedStats",
    		    value: function updateCachedStats(image, element, data) {
    		      // Define variables for the area and mean/standard deviation
    		      var meanStdDev, meanStdDevSUV;
    		      var seriesModule = _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.metaData.get('generalSeriesModule', image.imageId);
    		      var modality = seriesModule ? seriesModule.modality : null;
    		      var points = data.handles.points; // If the data has been invalidated, and the tool is not currently active,
    		      // We need to calculate it again.
    		      // Retrieve the bounds of the ROI in image coordinates

    		      var bounds = {
    		        left: points[0].x,
    		        right: points[0].x,
    		        bottom: points[0].y,
    		        top: points[0].x
    		      };

    		      for (var i = 0; i < points.length; i++) {
    		        bounds.left = Math.min(bounds.left, points[i].x);
    		        bounds.right = Math.max(bounds.right, points[i].x);
    		        bounds.bottom = Math.min(bounds.bottom, points[i].y);
    		        bounds.top = Math.max(bounds.top, points[i].y);
    		      }

    		      var polyBoundingBox = {
    		        left: bounds.left,
    		        top: bounds.bottom,
    		        width: Math.abs(bounds.right - bounds.left),
    		        height: Math.abs(bounds.top - bounds.bottom)
    		      }; // Store the bounding box information for the text box

    		      data.polyBoundingBox = polyBoundingBox; // First, make sure this is not a color image, since no mean / standard
    		      // Deviation will be calculated for color images.

    		      if (!image.color) {
    		        // Retrieve the array of pixels that the ROI bounds cover
    		        var pixels = _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.getPixels(element, polyBoundingBox.left, polyBoundingBox.top, polyBoundingBox.width, polyBoundingBox.height); // Calculate the mean & standard deviation from the pixels and the object shape

    		        meanStdDev = calculateFreehandStatistics.call(this, pixels, polyBoundingBox, data.handles.points);

    		        if (modality === 'PT') {
    		          // If the image is from a PET scan, use the DICOM tags to
    		          // Calculate the SUV from the mean and standard deviation.
    		          // Note that because we are using modality pixel values from getPixels, and
    		          // The calculateSUV routine also rescales to modality pixel values, we are first
    		          // Returning the values to storedPixel values before calcuating SUV with them.
    		          // TODO: Clean this up? Should we add an option to not scale in calculateSUV?
    		          meanStdDevSUV = {
    		            mean: Object(_util_calculateSUV_js__WEBPACK_IMPORTED_MODULE_17__["default"])(image, (meanStdDev.mean - image.intercept) / image.slope),
    		            stdDev: Object(_util_calculateSUV_js__WEBPACK_IMPORTED_MODULE_17__["default"])(image, (meanStdDev.stdDev - image.intercept) / image.slope)
    		          };
    		        } // If the mean and standard deviation values are sane, store them for later retrieval


    		        if (meanStdDev && !isNaN(meanStdDev.mean)) {
    		          data.meanStdDev = meanStdDev;
    		          data.meanStdDevSUV = meanStdDevSUV;
    		        }
    		      } // Retrieve the pixel spacing values, and if they are not
    		      // Real non-zero values, set them to 1


    		      var columnPixelSpacing = image.columnPixelSpacing || 1;
    		      var rowPixelSpacing = image.rowPixelSpacing || 1;
    		      var scaling = columnPixelSpacing * rowPixelSpacing;
    		      var area = freehandArea(data.handles.points, scaling); // If the area value is sane, store it for later retrieval

    		      if (!isNaN(area)) {
    		        data.area = area;
    		      } // Set the invalidated flag to false so that this data won't automatically be recalculated


    		      data.invalidated = false;
    		    }
    		    /**
    		     *
    		     *
    		     * @param {*} evt
    		     * @returns {undefined}
    		     */

    		  }, {
    		    key: "renderToolData",
    		    value: function renderToolData(evt) {
    		      var _this2 = this;

    		      var eventData = evt.detail; // If we have no toolState for this element, return immediately as there is nothing to do

    		      var toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_10__["getToolState"])(evt.currentTarget, this.name);

    		      if (!toolState) {
    		        return;
    		      }

    		      var image = eventData.image,
    		          element = eventData.element;
    		      var config = this.configuration;
    		      var seriesModule = _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.metaData.get('generalSeriesModule', image.imageId);
    		      var modality = seriesModule ? seriesModule.modality : null; // We have tool data for this element - iterate over each one and draw it

    		      var context = Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_19__["getNewContext"])(eventData.canvasContext.canvas);
    		      var lineWidth = _stateManagement_toolStyle_js__WEBPACK_IMPORTED_MODULE_11__["default"].getToolWidth();

    		      var _loop = function _loop(i) {
    		        var data = toolState.data[i];

    		        if (data.visible === false) {
    		          return "continue";
    		        }

    		        Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_19__["draw"])(context, function (context) {
    		          var color = _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_12__["default"].getColorIfActive(data);
    		          var fillColor;

    		          if (data.active) {
    		            if (data.handles.invalidHandlePlacement) {
    		              color = config.invalidColor;
    		              fillColor = config.invalidColor;
    		            } else {
    		              color = _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_12__["default"].getColorIfActive(data);
    		              fillColor = _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_12__["default"].getFillColor();
    		            }
    		          } else {
    		            fillColor = _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_12__["default"].getToolColor();
    		          }

    		          if (data.handles.points.length) {
    		            for (var j = 0; j < data.handles.points.length; j++) {
    		              var lines = _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(data.handles.points[j].lines);

    		              var points = data.handles.points;

    		              if (j === points.length - 1 && !data.polyBoundingBox) {
    		                // If it's still being actively drawn, keep the last line to
    		                // The mouse location
    		                lines.push(config.mouseLocation.handles.start);
    		              }

    		              Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_19__["drawJoinedLines"])(context, element, data.handles.points[j], lines, {
    		                color: color
    		              });
    		            }
    		          } // Draw handles


    		          var options = {
    		            color: color,
    		            fill: fillColor
    		          };

    		          if (config.alwaysShowHandles || data.active && data.polyBoundingBox) {
    		            // Render all handles
    		            options.handleRadius = config.activeHandleRadius;
    		            Object(_drawing_drawHandles_js__WEBPACK_IMPORTED_MODULE_21__["default"])(context, eventData, data.handles.points, options);
    		          }

    		          if (data.canComplete) {
    		            // Draw large handle at the origin if can complete drawing
    		            options.handleRadius = config.completeHandleRadius;
    		            var handle = data.handles.points[0];
    		            Object(_drawing_drawHandles_js__WEBPACK_IMPORTED_MODULE_21__["default"])(context, eventData, [handle], options);
    		          }

    		          if (data.active && !data.polyBoundingBox) {
    		            // Draw handle at origin and at mouse if actively drawing
    		            options.handleRadius = config.activeHandleRadius;
    		            Object(_drawing_drawHandles_js__WEBPACK_IMPORTED_MODULE_21__["default"])(context, eventData, config.mouseLocation.handles, options);
    		            var firstHandle = data.handles.points[0];
    		            Object(_drawing_drawHandles_js__WEBPACK_IMPORTED_MODULE_21__["default"])(context, eventData, [firstHandle], options);
    		          } // Update textbox stats


    		          if (data.invalidated === true && !data.active) {
    		            if (data.meanStdDev && data.meanStdDevSUV && data.area) {
    		              _this2.throttledUpdateCachedStats(image, element, data);
    		            } else {
    		              _this2.updateCachedStats(image, element, data);
    		            }
    		          } // Only render text if polygon ROI has been completed and freehand 'shiftKey' mode was not used:


    		          if (data.polyBoundingBox && !data.handles.textBox.freehand) {
    		            // If the textbox has not been moved by the user, it should be displayed on the right-most
    		            // Side of the tool.
    		            if (!data.handles.textBox.hasMoved) {
    		              // Find the rightmost side of the polyBoundingBox at its vertical center, and place the textbox here
    		              // Note that this calculates it in image coordinates
    		              data.handles.textBox.x = data.polyBoundingBox.left + data.polyBoundingBox.width;
    		              data.handles.textBox.y = data.polyBoundingBox.top + data.polyBoundingBox.height / 2;
    		            }

    		            var text = textBoxText.call(_this2, data);
    		            Object(_drawing_drawLinkedTextBox_js__WEBPACK_IMPORTED_MODULE_20__["default"])(context, element, data.handles.textBox, text, data.handles.points, textBoxAnchorPoints, color, lineWidth, 0, true);
    		          }
    		        });
    		      };

    		      for (var i = 0; i < toolState.data.length; i++) {
    		        var _ret = _loop(i);

    		        if (_ret === "continue") continue;
    		      }

    		      function textBoxText(data) {
    		        var meanStdDev = data.meanStdDev,
    		            meanStdDevSUV = data.meanStdDevSUV,
    		            area = data.area; // Define an array to store the rows of text for the textbox

    		        var textLines = []; // If the mean and standard deviation values are present, display them

    		        if (meanStdDev && meanStdDev.mean !== undefined) {
    		          // If the modality is CT, add HU to denote Hounsfield Units
    		          var moSuffix = '';

    		          if (modality === 'CT') {
    		            moSuffix = 'HU';
    		          }

    		          data.unit = moSuffix; // Create a line of text to display the mean and any units that were specified (i.e. HU)

    		          var meanText = "Mean: ".concat(Object(_util_numbersWithCommas_js__WEBPACK_IMPORTED_MODULE_18__["default"])(meanStdDev.mean.toFixed(2)), " ").concat(moSuffix); // Create a line of text to display the standard deviation and any units that were specified (i.e. HU)

    		          var stdDevText = "StdDev: ".concat(Object(_util_numbersWithCommas_js__WEBPACK_IMPORTED_MODULE_18__["default"])(meanStdDev.stdDev.toFixed(2)), " ").concat(moSuffix); // If this image has SUV values to display, concatenate them to the text line

    		          if (meanStdDevSUV && meanStdDevSUV.mean !== undefined) {
    		            var SUVtext = ' SUV: ';
    		            meanText += SUVtext + Object(_util_numbersWithCommas_js__WEBPACK_IMPORTED_MODULE_18__["default"])(meanStdDevSUV.mean.toFixed(2));
    		            stdDevText += SUVtext + Object(_util_numbersWithCommas_js__WEBPACK_IMPORTED_MODULE_18__["default"])(meanStdDevSUV.stdDev.toFixed(2));
    		          } // Add these text lines to the array to be displayed in the textbox


    		          textLines.push(meanText);
    		          textLines.push(stdDevText);
    		        } // If the area is a sane value, display it


    		        if (area) {
    		          // Determine the area suffix based on the pixel spacing in the image.
    		          // If pixel spacing is present, use millimeters. Otherwise, use pixels.
    		          // This uses Char code 178 for a superscript 2
    		          var suffix = " mm".concat(String.fromCharCode(178));

    		          if (!image.rowPixelSpacing || !image.columnPixelSpacing) {
    		            suffix = " pixels".concat(String.fromCharCode(178));
    		          } // Create a line of text to display the area and its units


    		          var areaText = "Area: ".concat(Object(_util_numbersWithCommas_js__WEBPACK_IMPORTED_MODULE_18__["default"])(area.toFixed(2))).concat(suffix); // Add this text line to the array to be displayed in the textbox

    		          textLines.push(areaText);
    		        }

    		        return textLines;
    		      }

    		      function textBoxAnchorPoints(handles) {
    		        return handles;
    		      }
    		    }
    		  }, {
    		    key: "addNewMeasurement",
    		    value: function addNewMeasurement(evt) {
    		      var eventData = evt.detail;

    		      this._startDrawing(evt);

    		      this._addPoint(eventData);

    		      preventPropagation(evt);
    		    }
    		  }, {
    		    key: "preMouseDownCallback",
    		    value: function preMouseDownCallback(evt) {
    		      var eventData = evt.detail;

    		      var nearby = this._pointNearHandleAllTools(eventData);

    		      if (eventData.event.ctrlKey) {
    		        if (nearby !== undefined && nearby.handleNearby.hasBoundingBox) ; else {
    		          insertOrDelete.call(this, evt, nearby);
    		        }

    		        preventPropagation(evt);
    		        return true;
    		      }

    		      return false;
    		    }
    		  }, {
    		    key: "handleSelectedCallback",
    		    value: function handleSelectedCallback(evt, toolData, handle) {
    		      var interactionType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'mouse';
    		      var element = evt.detail.element;
    		      var toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_10__["getToolState"])(element, this.name);

    		      if (handle.hasBoundingBox) {
    		        // Use default move handler.
    		        Object(_util_findAndMoveHelpers_js__WEBPACK_IMPORTED_MODULE_15__["moveHandleNearImagePoint"])(evt, this, toolData, handle, interactionType);
    		        return;
    		      }

    		      var config = this.configuration;
    		      config.dragOrigin = {
    		        x: handle.x,
    		        y: handle.y
    		      }; // Iterating over handles of all toolData instances to find the indices of the selected handle

    		      for (var toolIndex = 0; toolIndex < toolState.data.length; toolIndex++) {
    		        var points = toolState.data[toolIndex].handles.points;

    		        for (var p = 0; p < points.length; p++) {
    		          if (points[p] === handle) {
    		            config.currentHandle = p;
    		            config.currentTool = toolIndex;
    		          }
    		        }
    		      }

    		      this._modifying = true;

    		      this._activateModify(element); // Interupt eventDispatchers


    		      preventPropagation(evt);
    		    }
    		    /**
    		     * Event handler for MOUSE_MOVE during drawing event loop.
    		     *
    		     * @event
    		     * @param {Object} evt - The event.
    		     * @returns {undefined}
    		     */

    		  }, {
    		    key: "_drawingMouseMoveCallback",
    		    value: function _drawingMouseMoveCallback(evt) {
    		      var eventData = evt.detail;
    		      var currentPoints = eventData.currentPoints,
    		          element = eventData.element;
    		      var toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_10__["getToolState"])(element, this.name);
    		      var config = this.configuration;
    		      var currentTool = config.currentTool;
    		      var data = toolState.data[currentTool];
    		      var coords = currentPoints.canvas; // Set the mouseLocation handle

    		      this._getMouseLocation(eventData);

    		      this._checkInvalidHandleLocation(data, eventData); // Mouse move -> Polygon Mode


    		      var handleNearby = this._pointNearHandle(element, data, coords);

    		      var points = data.handles.points; // If there is a handle nearby to snap to
    		      // (and it's not the actual mouse handle)

    		      if (handleNearby !== undefined && !handleNearby.hasBoundingBox && handleNearby < points.length - 1) {
    		        config.mouseLocation.handles.start.x = points[handleNearby].x;
    		        config.mouseLocation.handles.start.y = points[handleNearby].y;
    		      } // Force onImageRendered


    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.updateImage(element);
    		    }
    		    /**
    		     * Event handler for MOUSE_DRAG during drawing event loop.
    		     *
    		     * @event
    		     * @param {Object} evt - The event.
    		     * @returns {undefined}
    		     */

    		  }, {
    		    key: "_drawingMouseDragCallback",
    		    value: function _drawingMouseDragCallback(evt) {
    		      if (!this.options.mouseButtonMask.includes(evt.detail.buttons)) {
    		        return;
    		      }

    		      this._drawingDrag(evt);
    		    }
    		    /**
    		     * Event handler for TOUCH_DRAG during drawing event loop.
    		     *
    		     * @event
    		     * @param {Object} evt - The event.
    		     * @returns {undefined}
    		     */

    		  }, {
    		    key: "_drawingTouchDragCallback",
    		    value: function _drawingTouchDragCallback(evt) {
    		      this._drawingDrag(evt);
    		    }
    		  }, {
    		    key: "_drawingDrag",
    		    value: function _drawingDrag(evt) {
    		      var eventData = evt.detail;
    		      var element = eventData.element;
    		      var toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_10__["getToolState"])(element, this.name);
    		      var config = this.configuration;
    		      var currentTool = config.currentTool;
    		      var data = toolState.data[currentTool]; // Set the mouseLocation handle

    		      this._getMouseLocation(eventData);

    		      this._checkInvalidHandleLocation(data, eventData);

    		      this._addPointPencilMode(eventData, data.handles.points);

    		      this._dragging = true; // Force onImageRendered

    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.updateImage(element);
    		    }
    		    /**
    		     * Event handler for MOUSE_UP during drawing event loop.
    		     *
    		     * @event
    		     * @param {Object} evt - The event.
    		     * @returns {undefined}
    		     */

    		  }, {
    		    key: "_drawingMouseUpCallback",
    		    value: function _drawingMouseUpCallback(evt) {
    		      var element = evt.detail.element;

    		      if (!this._dragging) {
    		        return;
    		      }

    		      this._dragging = false;
    		      var config = this.configuration;
    		      var currentTool = config.currentTool;
    		      var toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_10__["getToolState"])(element, this.name);
    		      var data = toolState.data[currentTool];

    		      if (!freehandIntersect.end(data.handles.points) && data.canComplete) {
    		        var lastHandlePlaced = config.currentHandle;

    		        this._endDrawing(element, lastHandlePlaced);
    		      }

    		      preventPropagation(evt);
    		      return;
    		    }
    		    /**
    		     * Event handler for MOUSE_DOWN during drawing event loop.
    		     *
    		     * @event
    		     * @param {Object} evt - The event.
    		     * @returns {undefined}
    		     */

    		  }, {
    		    key: "_drawingMouseDownCallback",
    		    value: function _drawingMouseDownCallback(evt) {
    		      var eventData = evt.detail;
    		      var buttons = eventData.buttons,
    		          currentPoints = eventData.currentPoints,
    		          element = eventData.element;

    		      if (!this.options.mouseButtonMask.includes(buttons)) {
    		        return;
    		      }

    		      var coords = currentPoints.canvas;
    		      var config = this.configuration;
    		      var currentTool = config.currentTool;
    		      var toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_10__["getToolState"])(element, this.name);
    		      var data = toolState.data[currentTool];

    		      var handleNearby = this._pointNearHandle(element, data, coords);

    		      if (!freehandIntersect.end(data.handles.points) && data.canComplete) {
    		        var lastHandlePlaced = config.currentHandle;

    		        this._endDrawing(element, lastHandlePlaced);
    		      } else if (handleNearby === undefined) {
    		        this._addPoint(eventData);
    		      }

    		      preventPropagation(evt);
    		      return;
    		    }
    		    /**
    		     * Event handler for TOUCH_START during drawing event loop.
    		     *
    		     * @event
    		     * @param {Object} evt - The event.
    		     * @returns {undefined}
    		     */

    		  }, {
    		    key: "_drawingTouchStartCallback",
    		    value: function _drawingTouchStartCallback(evt) {
    		      var eventData = evt.detail;
    		      var currentPoints = eventData.currentPoints,
    		          element = eventData.element;
    		      var coords = currentPoints.canvas;
    		      var config = this.configuration;
    		      var currentTool = config.currentTool;
    		      var toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_10__["getToolState"])(element, this.name);
    		      var data = toolState.data[currentTool];

    		      var handleNearby = this._pointNearHandle(element, data, coords);

    		      if (!freehandIntersect.end(data.handles.points) && data.canComplete) {
    		        var lastHandlePlaced = config.currentHandle;

    		        this._endDrawing(element, lastHandlePlaced);
    		      } else if (handleNearby === undefined) {
    		        this._addPoint(eventData);
    		      }

    		      preventPropagation(evt);
    		      return;
    		    }
    		    /** Ends the active drawing loop and completes the polygon.
    		     *
    		     * @public
    		     * @param {Object} element - The element on which the roi is being drawn.
    		     * @returns {null}
    		     */

    		  }, {
    		    key: "completeDrawing",
    		    value: function completeDrawing(element) {
    		      if (!this._drawing) {
    		        return;
    		      }

    		      var toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_10__["getToolState"])(element, this.name);
    		      var config = this.configuration;
    		      var data = toolState.data[config.currentTool];

    		      if (!freehandIntersect.end(data.handles.points) && data.handles.points.length >= 2) {
    		        var lastHandlePlaced = config.currentHandle;
    		        data.polyBoundingBox = {};

    		        this._endDrawing(element, lastHandlePlaced);
    		      }
    		    }
    		    /**
    		     * Event handler for MOUSE_DOUBLE_CLICK during drawing event loop.
    		     *
    		     * @event
    		     * @param {Object} evt - The event.
    		     * @returns {undefined}
    		     */

    		  }, {
    		    key: "_drawingMouseDoubleClickCallback",
    		    value: function _drawingMouseDoubleClickCallback(evt) {
    		      var element = evt.detail.element;
    		      this.completeDrawing(element);
    		      preventPropagation(evt);
    		    }
    		    /**
    		     * Event handler for DOUBLE_TAP during drawing event loop.
    		     *
    		     * @event
    		     * @param {Object} evt - The event.
    		     * @returns {undefined}
    		     */

    		  }, {
    		    key: "_drawingDoubleTapClickCallback",
    		    value: function _drawingDoubleTapClickCallback(evt) {
    		      var element = evt.detail.element;
    		      this.completeDrawing(element);
    		      preventPropagation(evt);
    		    }
    		    /**
    		     * Event handler for MOUSE_DRAG during handle drag event loop.
    		     *
    		     * @event
    		     * @param {Object} evt - The event.
    		     * @returns {undefined}
    		     */

    		  }, {
    		    key: "_editMouseDragCallback",
    		    value: function _editMouseDragCallback(evt) {
    		      var eventData = evt.detail;
    		      var element = eventData.element,
    		          buttons = eventData.buttons;

    		      if (!this.options.mouseButtonMask.includes(buttons)) {
    		        return;
    		      }

    		      var toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_10__["getToolState"])(element, this.name);
    		      var config = this.configuration;
    		      var data = toolState.data[config.currentTool];
    		      var currentHandle = config.currentHandle;
    		      var points = data.handles.points;
    		      var handleIndex = -1; // Set the mouseLocation handle

    		      this._getMouseLocation(eventData);

    		      data.handles.invalidHandlePlacement = freehandIntersect.modify(points, currentHandle);
    		      data.active = true;
    		      data.highlight = true;
    		      points[currentHandle].x = config.mouseLocation.handles.start.x;
    		      points[currentHandle].y = config.mouseLocation.handles.start.y;
    		      handleIndex = this._getPrevHandleIndex(currentHandle, points);

    		      if (currentHandle >= 0) {
    		        var lastLineIndex = points[handleIndex].lines.length - 1;
    		        var lastLine = points[handleIndex].lines[lastLineIndex];
    		        lastLine.x = config.mouseLocation.handles.start.x;
    		        lastLine.y = config.mouseLocation.handles.start.y;
    		      } // Update the image


    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.updateImage(element);
    		    }
    		    /**
    		     * Event handler for TOUCH_DRAG during handle drag event loop.
    		     *
    		     * @event
    		     * @param {Object} evt - The event.
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "_editTouchDragCallback",
    		    value: function _editTouchDragCallback(evt) {
    		      var eventData = evt.detail;
    		      var element = eventData.element;
    		      var toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_10__["getToolState"])(element, this.name);
    		      var config = this.configuration;
    		      var data = toolState.data[config.currentTool];
    		      var currentHandle = config.currentHandle;
    		      var points = data.handles.points;
    		      var handleIndex = -1; // Set the mouseLocation handle

    		      this._getMouseLocation(eventData);

    		      data.handles.invalidHandlePlacement = freehandIntersect.modify(points, currentHandle);
    		      data.active = true;
    		      data.highlight = true;
    		      points[currentHandle].x = config.mouseLocation.handles.start.x;
    		      points[currentHandle].y = config.mouseLocation.handles.start.y;
    		      handleIndex = this._getPrevHandleIndex(currentHandle, points);

    		      if (currentHandle >= 0) {
    		        var lastLineIndex = points[handleIndex].lines.length - 1;
    		        var lastLine = points[handleIndex].lines[lastLineIndex];
    		        lastLine.x = config.mouseLocation.handles.start.x;
    		        lastLine.y = config.mouseLocation.handles.start.y;
    		      } // Update the image


    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.updateImage(element);
    		    }
    		    /**
    		     * Returns the previous handle to the current one.
    		     * @param {Number} currentHandle - the current handle index
    		     * @param {Array} points - the handles Array of the freehand data
    		     * @returns {Number} - The index of the previos handle
    		     */

    		  }, {
    		    key: "_getPrevHandleIndex",
    		    value: function _getPrevHandleIndex(currentHandle, points) {
    		      if (currentHandle === 0) {
    		        return points.length - 1;
    		      }

    		      return currentHandle - 1;
    		    }
    		    /**
    		     * Event handler for MOUSE_UP during handle drag event loop.
    		     *
    		     * @private
    		     * @param {Object} evt - The event.
    		     * @returns {undefined}
    		     */

    		  }, {
    		    key: "_editMouseUpCallback",
    		    value: function _editMouseUpCallback(evt) {
    		      var eventData = evt.detail;
    		      var element = eventData.element;
    		      var toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_10__["getToolState"])(element, this.name);

    		      this._deactivateModify(element);

    		      this._dropHandle(eventData, toolState);

    		      this._endDrawing(element);

    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.updateImage(element);
    		    }
    		    /**
    		     * Places a handle of the freehand tool if the new location is valid.
    		     * If the new location is invalid the handle snaps back to its previous position.
    		     *
    		     * @private
    		     * @param {Object} eventData - Data object associated with the event.
    		     * @param {Object} toolState - The data associated with the freehand tool.
    		     * @modifies {toolState}
    		     * @returns {undefined}
    		     */

    		  }, {
    		    key: "_dropHandle",
    		    value: function _dropHandle(eventData, toolState) {
    		      var config = this.configuration;
    		      var currentTool = config.currentTool;
    		      var handles = toolState.data[currentTool].handles;
    		      var points = handles.points; // Don't allow the line being modified to intersect other lines

    		      if (handles.invalidHandlePlacement) {
    		        var currentHandle = config.currentHandle;
    		        var currentHandleData = points[currentHandle];
    		        var previousHandleData;

    		        if (currentHandle === 0) {
    		          var lastHandleID = points.length - 1;
    		          previousHandleData = points[lastHandleID];
    		        } else {
    		          previousHandleData = points[currentHandle - 1];
    		        } // Snap back to previous position


    		        currentHandleData.x = config.dragOrigin.x;
    		        currentHandleData.y = config.dragOrigin.y;
    		        previousHandleData.lines[0] = currentHandleData;
    		        handles.invalidHandlePlacement = false;
    		      }
    		    }
    		    /**
    		     * Begining of drawing loop when tool is active and a click event happens far
    		     * from existing handles.
    		     *
    		     * @private
    		     * @param {Object} evt - The event.
    		     * @returns {undefined}
    		     */

    		  }, {
    		    key: "_startDrawing",
    		    value: function _startDrawing(evt) {
    		      var eventData = evt.detail;
    		      var measurementData = this.createNewMeasurement(eventData);
    		      var element = eventData.element;
    		      var config = this.configuration;
    		      var interactionType;

    		      if (evt.type === _events_js__WEBPACK_IMPORTED_MODULE_7__["default"].MOUSE_DOWN_ACTIVATE) {
    		        interactionType = 'Mouse';
    		      } else if (evt.type === _events_js__WEBPACK_IMPORTED_MODULE_7__["default"].TOUCH_START_ACTIVE) {
    		        interactionType = 'Touch';
    		      }

    		      this._activateDraw(element, interactionType);

    		      this._getMouseLocation(eventData);

    		      Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_10__["addToolState"])(element, this.name, measurementData);
    		      var toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_10__["getToolState"])(element, this.name);
    		      config.currentTool = toolState.data.length - 1;
    		      this._activeDrawingToolReference = toolState.data[config.currentTool];
    		    }
    		    /**
    		     * Adds a point on mouse click in polygon mode.
    		     *
    		     * @private
    		     * @param {Object} eventData - data object associated with an event.
    		     * @returns {undefined}
    		     */

    		  }, {
    		    key: "_addPoint",
    		    value: function _addPoint(eventData) {
    		      var currentPoints = eventData.currentPoints,
    		          element = eventData.element;
    		      var toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_10__["getToolState"])(element, this.name); // Get the toolState from the last-drawn polygon

    		      var config = this.configuration;
    		      var data = toolState.data[config.currentTool];

    		      if (data.handles.invalidHandlePlacement) {
    		        return;
    		      }

    		      var newHandleData = new FreehandHandleData(currentPoints.image); // If this is not the first handle

    		      if (data.handles.points.length) {
    		        // Add the line from the current handle to the new handle
    		        data.handles.points[config.currentHandle - 1].lines.push(currentPoints.image);
    		      } // Add the new handle


    		      data.handles.points.push(newHandleData); // Increment the current handle value

    		      config.currentHandle += 1; // Force onImageRendered to fire

    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.updateImage(element);
    		      this.fireModifiedEvent(element, data);
    		    }
    		    /**
    		     * If in pencilMode, check the mouse position is farther than the minimum
    		     * distance between points, then add a point.
    		     *
    		     * @private
    		     * @param {Object} eventData - Data object associated with an event.
    		     * @param {Object} points - Data object associated with the tool.
    		     * @returns {undefined}
    		     */

    		  }, {
    		    key: "_addPointPencilMode",
    		    value: function _addPointPencilMode(eventData, points) {
    		      var _this3 = this;

    		      var config = this.configuration;
    		      var element = eventData.element;
    		      var mousePoint = config.mouseLocation.handles.start;

    		      var handleFurtherThanMinimumSpacing = function handleFurtherThanMinimumSpacing(handle) {
    		        return _this3._isDistanceLargerThanSpacing(element, handle, mousePoint);
    		      };

    		      if (points.every(handleFurtherThanMinimumSpacing)) {
    		        this._addPoint(eventData);
    		      }
    		    }
    		    /**
    		     * Ends the active drawing loop and completes the polygon.
    		     *
    		     * @private
    		     * @param {Object} element - The element on which the roi is being drawn.
    		     * @param {Object} handleNearby - the handle nearest to the mouse cursor.
    		     * @returns {undefined}
    		     */

    		  }, {
    		    key: "_endDrawing",
    		    value: function _endDrawing(element, handleNearby) {
    		      var toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_10__["getToolState"])(element, this.name);
    		      var config = this.configuration;
    		      var data = toolState.data[config.currentTool];
    		      data.active = false;
    		      data.highlight = false;
    		      data.handles.invalidHandlePlacement = false; // Connect the end handle to the origin handle

    		      if (handleNearby !== undefined) {
    		        var points = data.handles.points;
    		        points[config.currentHandle - 1].lines.push(points[0]);
    		      }

    		      if (this._modifying) {
    		        this._modifying = false;
    		        data.invalidated = true;
    		      } // Reset the current handle


    		      config.currentHandle = 0;
    		      config.currentTool = -1;
    		      data.canComplete = false;

    		      if (this._drawing) {
    		        this._deactivateDraw(element);
    		      }

    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.updateImage(element);
    		      this.fireModifiedEvent(element, data);
    		      this.fireCompletedEvent(element, data);
    		    }
    		    /**
    		     * Returns a handle of a particular tool if it is close to the mouse cursor
    		     *
    		     * @private
    		     * @param {Object} element - The element on which the roi is being drawn.
    		     * @param {Object} data      Data object associated with the tool.
    		     * @param {*} coords
    		     * @returns {Number|Object|Boolean}
    		     */

    		  }, {
    		    key: "_pointNearHandle",
    		    value: function _pointNearHandle(element, data, coords) {
    		      if (data.handles === undefined || data.handles.points === undefined) {
    		        return;
    		      }

    		      if (data.visible === false) {
    		        return;
    		      }

    		      for (var i = 0; i < data.handles.points.length; i++) {
    		        var handleCanvas = _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.pixelToCanvas(element, data.handles.points[i]);

    		        if (_externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstoneMath.point.distance(handleCanvas, coords) < 6) {
    		          return i;
    		        }
    		      } // Check to see if mouse in bounding box of textbox


    		      if (data.handles.textBox) {
    		        if (Object(_util_pointInsideBoundingBox_js__WEBPACK_IMPORTED_MODULE_16__["default"])(data.handles.textBox, coords)) {
    		          return data.handles.textBox;
    		        }
    		      }
    		    }
    		    /**
    		     * Returns a handle if it is close to the mouse cursor (all tools)
    		     *
    		     * @private
    		     * @param {Object} eventData - data object associated with an event.
    		     * @returns {Object}
    		     */

    		  }, {
    		    key: "_pointNearHandleAllTools",
    		    value: function _pointNearHandleAllTools(eventData) {
    		      var currentPoints = eventData.currentPoints,
    		          element = eventData.element;
    		      var coords = currentPoints.canvas;
    		      var toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_10__["getToolState"])(element, this.name);

    		      if (!toolState) {
    		        return;
    		      }

    		      var handleNearby;

    		      for (var toolIndex = 0; toolIndex < toolState.data.length; toolIndex++) {
    		        handleNearby = this._pointNearHandle(element, toolState.data[toolIndex], coords);

    		        if (handleNearby !== undefined) {
    		          return {
    		            handleNearby: handleNearby,
    		            toolIndex: toolIndex
    		          };
    		        }
    		      }
    		    }
    		    /**
    		     * Gets the current mouse location and stores it in the configuration object.
    		     *
    		     * @private
    		     * @param {Object} eventData The data assoicated with the event.
    		     * @returns {undefined}
    		     */

    		  }, {
    		    key: "_getMouseLocation",
    		    value: function _getMouseLocation(eventData) {
    		      var currentPoints = eventData.currentPoints,
    		          image = eventData.image; // Set the mouseLocation handle

    		      var config = this.configuration;
    		      config.mouseLocation.handles.start.x = currentPoints.image.x;
    		      config.mouseLocation.handles.start.y = currentPoints.image.y;
    		      Object(_util_clip_js__WEBPACK_IMPORTED_MODULE_22__["clipToBox"])(config.mouseLocation.handles.start, image);
    		    }
    		    /**
    		     * Returns true if the proposed location of a new handle is invalid.
    		     *
    		     * @private
    		     * @param {Object} data      Data object associated with the tool.
    		     * @param {Object} eventData The data assoicated with the event.
    		     * @returns {Boolean}
    		     */

    		  }, {
    		    key: "_checkInvalidHandleLocation",
    		    value: function _checkInvalidHandleLocation(data, eventData) {
    		      if (data.handles.points.length < 2) {
    		        return true;
    		      }

    		      var invalidHandlePlacement;

    		      if (this._dragging) {
    		        invalidHandlePlacement = this._checkHandlesPencilMode(data, eventData);
    		      } else {
    		        invalidHandlePlacement = this._checkHandlesPolygonMode(data, eventData);
    		      }

    		      data.handles.invalidHandlePlacement = invalidHandlePlacement;
    		    }
    		    /**
    		     * Returns true if the proposed location of a new handle is invalid (in polygon mode).
    		     *
    		     * @private
    		     *
    		     * @param {Object} data - data object associated with the tool.
    		     * @param {Object} eventData The data assoicated with the event.
    		     * @returns {Boolean}
    		     */

    		  }, {
    		    key: "_checkHandlesPolygonMode",
    		    value: function _checkHandlesPolygonMode(data, eventData) {
    		      var config = this.configuration;
    		      var element = eventData.element;
    		      var mousePoint = config.mouseLocation.handles.start;
    		      var points = data.handles.points;
    		      var invalidHandlePlacement = false;
    		      data.canComplete = false;

    		      var mouseAtOriginHandle = this._isDistanceSmallerThanCompleteSpacingCanvas(element, points[0], mousePoint);

    		      if (mouseAtOriginHandle && !freehandIntersect.end(points) && points.length > 2) {
    		        data.canComplete = true;
    		        invalidHandlePlacement = false;
    		      } else {
    		        invalidHandlePlacement = freehandIntersect.newHandle(mousePoint, points);
    		      }

    		      return invalidHandlePlacement;
    		    }
    		    /**
    		     * Returns true if the proposed location of a new handle is invalid (in pencilMode).
    		     *
    		     * @private
    		     * @param {Object} data - data object associated with the tool.
    		     * @param {Object} eventData The data associated with the event.
    		     * @returns {Boolean}
    		     */

    		  }, {
    		    key: "_checkHandlesPencilMode",
    		    value: function _checkHandlesPencilMode(data, eventData) {
    		      var config = this.configuration;
    		      var mousePoint = config.mouseLocation.handles.start;
    		      var points = data.handles.points;
    		      var invalidHandlePlacement = freehandIntersect.newHandle(mousePoint, points);

    		      if (invalidHandlePlacement === false) {
    		        invalidHandlePlacement = this._invalidHandlePencilMode(data, eventData);
    		      }

    		      return invalidHandlePlacement;
    		    }
    		    /**
    		     * Returns true if the mouse position is far enough from previous points (in pencilMode).
    		     *
    		     * @private
    		     * @param {Object} data - data object associated with the tool.
    		     * @param {Object} eventData The data associated with the event.
    		     * @returns {Boolean}
    		     */

    		  }, {
    		    key: "_invalidHandlePencilMode",
    		    value: function _invalidHandlePencilMode(data, eventData) {
    		      var config = this.configuration;
    		      var element = eventData.element;
    		      var mousePoint = config.mouseLocation.handles.start;
    		      var points = data.handles.points;

    		      var mouseAtOriginHandle = this._isDistanceSmallerThanCompleteSpacingCanvas(element, points[0], mousePoint);

    		      if (mouseAtOriginHandle) {
    		        data.canComplete = true;
    		        return false;
    		      }

    		      data.canComplete = false; // Compare with all other handles appart from the last one

    		      for (var i = 1; i < points.length - 1; i++) {
    		        if (this._isDistanceSmallerThanSpacing(element, points[i], mousePoint)) {
    		          return true;
    		        }
    		      }

    		      return false;
    		    }
    		    /**
    		     * Returns true if two points are closer than this.configuration.spacing.
    		     *
    		     * @private
    		     * @param  {Object} element     The element on which the roi is being drawn.
    		     * @param  {Object} p1          The first point, in pixel space.
    		     * @param  {Object} p2          The second point, in pixel space.
    		     * @returns {boolean}            True if the distance is smaller than the
    		     *                              allowed canvas spacing.
    		     */

    		  }, {
    		    key: "_isDistanceSmallerThanCompleteSpacingCanvas",
    		    value: function _isDistanceSmallerThanCompleteSpacingCanvas(element, p1, p2) {
    		      var p1Canvas = _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.pixelToCanvas(element, p1);
    		      var p2Canvas = _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.pixelToCanvas(element, p2);
    		      var completeHandleRadius;

    		      if (this._drawingInteractionType === 'Mouse') {
    		        completeHandleRadius = this.configuration.completeHandleRadius;
    		      } else if (this._drawingInteractionType === 'Touch') {
    		        completeHandleRadius = this.configuration.completeHandleRadiusTouch;
    		      }

    		      return this._compareDistanceToSpacing(element, p1Canvas, p2Canvas, '<', completeHandleRadius);
    		    }
    		    /**
    		     * Returns true if two points are closer than this.configuration.spacing.
    		     *
    		     * @private
    		     * @param  {Object} element     The element on which the roi is being drawn.
    		     * @param  {Object} p1          The first point, in pixel space.
    		     * @param  {Object} p2          The second point, in pixel space.
    		     * @returns {boolean}            True if the distance is smaller than the
    		     *                              allowed canvas spacing.
    		     */

    		  }, {
    		    key: "_isDistanceSmallerThanSpacing",
    		    value: function _isDistanceSmallerThanSpacing(element, p1, p2) {
    		      return this._compareDistanceToSpacing(element, p1, p2, '<');
    		    }
    		    /**
    		     * Returns true if two points are farther than this.configuration.spacing.
    		     *
    		     * @private
    		     * @param  {Object} element     The element on which the roi is being drawn.
    		     * @param  {Object} p1          The first point, in pixel space.
    		     * @param  {Object} p2          The second point, in pixel space.
    		     * @returns {boolean}            True if the distance is smaller than the
    		     *                              allowed canvas spacing.
    		     */

    		  }, {
    		    key: "_isDistanceLargerThanSpacing",
    		    value: function _isDistanceLargerThanSpacing(element, p1, p2) {
    		      return this._compareDistanceToSpacing(element, p1, p2, '>');
    		    }
    		    /**
    		     * Compares the distance between two points to this.configuration.spacing.
    		     *
    		     * @private
    		     * @param  {Object} element     The element on which the roi is being drawn.
    		     * @param  {Object} p1          The first point, in pixel space.
    		     * @param  {Object} p2          The second point, in pixel space.
    		     * @param  {string} comparison  The comparison to make.
    		     * @param  {number} spacing     The allowed canvas spacing
    		     * @returns {boolean}           True if the distance is smaller than the
    		     *                              allowed canvas spacing.
    		     */

    		  }, {
    		    key: "_compareDistanceToSpacing",
    		    value: function _compareDistanceToSpacing(element, p1, p2) {
    		      var comparison = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '>';
    		      var spacing = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : this.configuration.spacing;

    		      if (comparison === '>') {
    		        return _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstoneMath.point.distance(p1, p2) > spacing;
    		      }

    		      return _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstoneMath.point.distance(p1, p2) < spacing;
    		    }
    		    /**
    		     * Adds drawing loop event listeners.
    		     *
    		     * @private
    		     * @param {Object} element - The viewport element to add event listeners to.
    		     * @param {string} interactionType - The interactionType used for the loop.
    		     * @modifies {element}
    		     * @returns {undefined}
    		     */

    		  }, {
    		    key: "_activateDraw",
    		    value: function _activateDraw(element) {
    		      var interactionType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Mouse';
    		      this._drawing = true;
    		      this._drawingInteractionType = interactionType;
    		      _store_index_js__WEBPACK_IMPORTED_MODULE_13__["state"].isMultiPartToolActive = true;
    		      Object(_store_setToolCursor_js__WEBPACK_IMPORTED_MODULE_23__["hideToolCursor"])(this.element); // Polygonal Mode

    		      element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_7__["default"].MOUSE_DOWN, this._drawingMouseDownCallback);
    		      element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_7__["default"].MOUSE_MOVE, this._drawingMouseMoveCallback);
    		      element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_7__["default"].MOUSE_DOUBLE_CLICK, this._drawingMouseDoubleClickCallback); // Drag/Pencil Mode

    		      element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_7__["default"].MOUSE_DRAG, this._drawingMouseDragCallback);
    		      element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_7__["default"].MOUSE_UP, this._drawingMouseUpCallback); // Touch

    		      element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_7__["default"].TOUCH_START, this._drawingMouseMoveCallback);
    		      element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_7__["default"].TOUCH_START, this._drawingTouchStartCallback);
    		      element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_7__["default"].TOUCH_DRAG, this._drawingTouchDragCallback);
    		      element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_7__["default"].TOUCH_END, this._drawingMouseUpCallback);
    		      element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_7__["default"].DOUBLE_TAP, this._drawingDoubleTapClickCallback);
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.updateImage(element);
    		    }
    		    /**
    		     * Removes drawing loop event listeners.
    		     *
    		     * @private
    		     * @param {Object} element - The viewport element to add event listeners to.
    		     * @modifies {element}
    		     * @returns {undefined}
    		     */

    		  }, {
    		    key: "_deactivateDraw",
    		    value: function _deactivateDraw(element) {
    		      this._drawing = false;
    		      _store_index_js__WEBPACK_IMPORTED_MODULE_13__["state"].isMultiPartToolActive = false;
    		      this._activeDrawingToolReference = null;
    		      this._drawingInteractionType = null;
    		      Object(_store_setToolCursor_js__WEBPACK_IMPORTED_MODULE_23__["setToolCursor"])(this.element, this.svgCursor);
    		      element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_7__["default"].MOUSE_DOWN, this._drawingMouseDownCallback);
    		      element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_7__["default"].MOUSE_MOVE, this._drawingMouseMoveCallback);
    		      element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_7__["default"].MOUSE_DOUBLE_CLICK, this._drawingMouseDoubleClickCallback);
    		      element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_7__["default"].MOUSE_DRAG, this._drawingMouseDragCallback);
    		      element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_7__["default"].MOUSE_UP, this._drawingMouseUpCallback); // Touch

    		      element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_7__["default"].TOUCH_START, this._drawingTouchStartCallback);
    		      element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_7__["default"].TOUCH_DRAG, this._drawingTouchDragCallback);
    		      element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_7__["default"].TOUCH_START, this._drawingMouseMoveCallback);
    		      element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_7__["default"].TOUCH_END, this._drawingMouseUpCallback);
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.updateImage(element);
    		    }
    		    /**
    		     * Adds modify loop event listeners.
    		     *
    		     * @private
    		     * @param {Object} element - The viewport element to add event listeners to.
    		     * @modifies {element}
    		     * @returns {undefined}
    		     */

    		  }, {
    		    key: "_activateModify",
    		    value: function _activateModify(element) {
    		      _store_index_js__WEBPACK_IMPORTED_MODULE_13__["state"].isToolLocked = true;
    		      element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_7__["default"].MOUSE_UP, this._editMouseUpCallback);
    		      element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_7__["default"].MOUSE_DRAG, this._editMouseDragCallback);
    		      element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_7__["default"].MOUSE_CLICK, this._editMouseUpCallback);
    		      element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_7__["default"].TOUCH_END, this._editMouseUpCallback);
    		      element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_7__["default"].TOUCH_DRAG, this._editTouchDragCallback);
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.updateImage(element);
    		    }
    		    /**
    		     * Removes modify loop event listeners.
    		     *
    		     * @private
    		     * @param {Object} element - The viewport element to add event listeners to.
    		     * @modifies {element}
    		     * @returns {undefined}
    		     */

    		  }, {
    		    key: "_deactivateModify",
    		    value: function _deactivateModify(element) {
    		      _store_index_js__WEBPACK_IMPORTED_MODULE_13__["state"].isToolLocked = false;
    		      element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_7__["default"].MOUSE_UP, this._editMouseUpCallback);
    		      element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_7__["default"].MOUSE_DRAG, this._editMouseDragCallback);
    		      element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_7__["default"].MOUSE_CLICK, this._editMouseUpCallback);
    		      element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_7__["default"].TOUCH_END, this._editMouseUpCallback);
    		      element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_7__["default"].TOUCH_DRAG, this._editTouchDragCallback);
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.updateImage(element);
    		    }
    		  }, {
    		    key: "passiveCallback",
    		    value: function passiveCallback(element) {
    		      this._closeToolIfDrawing(element);
    		    }
    		  }, {
    		    key: "enabledCallback",
    		    value: function enabledCallback(element) {
    		      this._closeToolIfDrawing(element);
    		    }
    		  }, {
    		    key: "disabledCallback",
    		    value: function disabledCallback(element) {
    		      this._closeToolIfDrawing(element);
    		    }
    		  }, {
    		    key: "_closeToolIfDrawing",
    		    value: function _closeToolIfDrawing(element) {
    		      if (this._drawing) {
    		        // Actively drawing but changed mode.
    		        var config = this.configuration;
    		        var lastHandlePlaced = config.currentHandle;

    		        this._endDrawing(element, lastHandlePlaced);

    		        _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.updateImage(element);
    		      }
    		    }
    		    /**
    		     * Fire MEASUREMENT_MODIFIED event on provided element
    		     * @param {any} element which freehand data has been modified
    		     * @param {any} measurementData the measurment data
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "fireModifiedEvent",
    		    value: function fireModifiedEvent(element, measurementData) {
    		      var eventType = _events_js__WEBPACK_IMPORTED_MODULE_7__["default"].MEASUREMENT_MODIFIED;
    		      var eventData = {
    		        toolName: this.name,
    		        element: element,
    		        measurementData: measurementData
    		      };
    		      Object(_util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_14__["default"])(element, eventType, eventData);
    		    }
    		  }, {
    		    key: "fireCompletedEvent",
    		    value: function fireCompletedEvent(element, measurementData) {
    		      var eventType = _events_js__WEBPACK_IMPORTED_MODULE_7__["default"].MEASUREMENT_COMPLETED;
    		      var eventData = {
    		        toolName: this.name,
    		        element: element,
    		        measurementData: measurementData
    		      };
    		      Object(_util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_14__["default"])(element, eventType, eventData);
    		    } // ===================================================================
    		    // Public Configuration API. .
    		    // ===================================================================

    		  }, {
    		    key: "cancelDrawing",

    		    /**
    		     * Ends the active drawing loop and removes the polygon.
    		     *
    		     * @public
    		     * @param {Object} element - The element on which the roi is being drawn.
    		     * @returns {null}
    		     */
    		    value: function cancelDrawing(element) {
    		      if (!this._drawing) {
    		        return;
    		      }

    		      var toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_10__["getToolState"])(element, this.name);
    		      var config = this.configuration;
    		      var data = toolState.data[config.currentTool];
    		      data.active = false;
    		      data.highlight = false;
    		      data.handles.invalidHandlePlacement = false; // Reset the current handle

    		      config.currentHandle = 0;
    		      config.currentTool = -1;
    		      data.canComplete = false;
    		      Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_10__["removeToolState"])(element, this.name, data);

    		      this._deactivateDraw(element);

    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.updateImage(element);
    		    }
    		    /**
    		     * New image event handler.
    		     *
    		     * @public
    		     * @param  {Object} evt The event.
    		     * @returns {null}
    		     */

    		  }, {
    		    key: "newImageCallback",
    		    value: function newImageCallback(evt) {
    		      var config = this.configuration;

    		      if (!(this._drawing && this._activeDrawingToolReference)) {
    		        return;
    		      } // Actively drawing but scrolled to different image.


    		      var element = evt.detail.element;
    		      var data = this._activeDrawingToolReference;
    		      data.active = false;
    		      data.highlight = false;
    		      data.handles.invalidHandlePlacement = false; // Connect the end handle to the origin handle

    		      var points = data.handles.points;
    		      points[config.currentHandle - 1].lines.push(points[0]); // Reset the current handle

    		      config.currentHandle = 0;
    		      config.currentTool = -1;
    		      data.canComplete = false;

    		      this._deactivateDraw(element);

    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.updateImage(element);
    		    }
    		  }, {
    		    key: "spacing",
    		    get: function get() {
    		      return this.configuration.spacing;
    		    },
    		    set: function set(value) {
    		      if (typeof value !== 'number') {
    		        throw new Error('Attempting to set freehand spacing to a value other than a number.');
    		      }

    		      this.configuration.spacing = value;
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.updateImage(this.element);
    		    }
    		  }, {
    		    key: "activeHandleRadius",
    		    get: function get() {
    		      return this.configuration.activeHandleRadius;
    		    },
    		    set: function set(value) {
    		      if (typeof value !== 'number') {
    		        throw new Error('Attempting to set freehand activeHandleRadius to a value other than a number.');
    		      }

    		      this.configuration.activeHandleRadius = value;
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.updateImage(this.element);
    		    }
    		  }, {
    		    key: "completeHandleRadius",
    		    get: function get() {
    		      return this.configuration.completeHandleRadius;
    		    },
    		    set: function set(value) {
    		      if (typeof value !== 'number') {
    		        throw new Error('Attempting to set freehand completeHandleRadius to a value other than a number.');
    		      }

    		      this.configuration.completeHandleRadius = value;
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.updateImage(this.element);
    		    }
    		  }, {
    		    key: "alwaysShowHandles",
    		    get: function get() {
    		      return this.configuration.alwaysShowHandles;
    		    },
    		    set: function set(value) {
    		      if (typeof value !== 'boolean') {
    		        throw new Error('Attempting to set freehand alwaysShowHandles to a value other than a boolean.');
    		      }

    		      this.configuration.alwaysShowHandles = value;
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.updateImage(this.element);
    		    }
    		  }, {
    		    key: "invalidColor",
    		    get: function get() {
    		      return this.configuration.invalidColor;
    		    },
    		    set: function set(value) {
    		      /*
    		        It'd be easy to check if the color was e.g. a valid rgba color. However
    		        it'd be difficult to check if the color was a named CSS color without
    		        bloating the library, so we don't. If the canvas can't intepret the color
    		        it'll show up grey.
    		      */
    		      this.configuration.invalidColor = value;
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.updateImage(this.element);
    		    }
    		  }]);

    		  return FreehandMouseTool;
    		}(_base_BaseAnnotationTool_js__WEBPACK_IMPORTED_MODULE_9__["default"]);



    		function defaultFreehandConfiguration() {
    		  return {
    		    mouseLocation: {
    		      handles: {
    		        start: {
    		          highlight: true,
    		          active: true
    		        }
    		      }
    		    },
    		    spacing: 1,
    		    activeHandleRadius: 3,
    		    completeHandleRadius: 6,
    		    completeHandleRadiusTouch: 28,
    		    alwaysShowHandles: false,
    		    invalidColor: 'crimson',
    		    currentHandle: 0,
    		    currentTool: -1
    		  };
    		}

    		function preventPropagation(evt) {
    		  evt.stopImmediatePropagation();
    		  evt.stopPropagation();
    		  evt.preventDefault();
    		}

    		/***/ }),

    		/***/ "./tools/annotation/LengthTool.js":
    		/*!****************************************!*\
    		  !*** ./tools/annotation/LengthTool.js ***!
    		  \****************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return LengthTool; });
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__);
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__);
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__);
    		/* harmony import */ var _base_BaseAnnotationTool_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../base/BaseAnnotationTool.js */ "./tools/base/BaseAnnotationTool.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _stateManagement_toolStyle_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../../stateManagement/toolStyle.js */ "./stateManagement/toolStyle.js");
    		/* harmony import */ var _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./../../stateManagement/toolColors.js */ "./stateManagement/toolColors.js");
    		/* harmony import */ var _drawing_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./../../drawing/index.js */ "./drawing/index.js");
    		/* harmony import */ var _drawing_drawLinkedTextBox_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./../../drawing/drawLinkedTextBox.js */ "./drawing/drawLinkedTextBox.js");
    		/* harmony import */ var _drawing_drawHandles_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./../../drawing/drawHandles.js */ "./drawing/drawHandles.js");
    		/* harmony import */ var _util_lineSegDistance_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./../../util/lineSegDistance.js */ "./util/lineSegDistance.js");
    		/* harmony import */ var _cursors_index_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../cursors/index.js */ "./tools/cursors/index.js");
    		/* harmony import */ var _util_logger_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../util/logger.js */ "./util/logger.js");
    		/* harmony import */ var _util_getPixelSpacing__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../util/getPixelSpacing */ "./util/getPixelSpacing.js");
    		/* harmony import */ var _util_throttle__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../util/throttle */ "./util/throttle.js");





    		 // State



    		 // Drawing









    		var logger = Object(_util_logger_js__WEBPACK_IMPORTED_MODULE_14__["getLogger"])('tools:annotation:LengthTool');
    		/**
    		 * @public
    		 * @class LengthTool
    		 * @memberof Tools.Annotation
    		 * @classdesc Tool for measuring distances.
    		 * @extends Tools.Base.BaseAnnotationTool
    		 */

    		var LengthTool =
    		/*#__PURE__*/
    		function (_BaseAnnotationTool) {
    		  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default()(LengthTool, _BaseAnnotationTool);

    		  function LengthTool() {
    		    var _this;

    		    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    		    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, LengthTool);

    		    var defaultProps = {
    		      name: 'Length',
    		      supportedInteractionTypes: ['Mouse', 'Touch'],
    		      svgCursor: _cursors_index_js__WEBPACK_IMPORTED_MODULE_13__["lengthCursor"]
    		    };
    		    _this = _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(LengthTool).call(this, props, defaultProps));
    		    _this.throttledUpdateCachedStats = Object(_util_throttle__WEBPACK_IMPORTED_MODULE_16__["default"])(_this.updateCachedStats, 110);
    		    return _this;
    		  }

    		  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(LengthTool, [{
    		    key: "createNewMeasurement",
    		    value: function createNewMeasurement(eventData) {
    		      var goodEventData = eventData && eventData.currentPoints && eventData.currentPoints.image;

    		      if (!goodEventData) {
    		        logger.error("required eventData not supplied to tool ".concat(this.name, "'s createNewMeasurement"));
    		        return;
    		      }

    		      var _eventData$currentPoi = eventData.currentPoints.image,
    		          x = _eventData$currentPoi.x,
    		          y = _eventData$currentPoi.y;
    		      return {
    		        visible: true,
    		        active: true,
    		        color: undefined,
    		        invalidated: true,
    		        handles: {
    		          start: {
    		            x: x,
    		            y: y,
    		            highlight: true,
    		            active: false
    		          },
    		          end: {
    		            x: x,
    		            y: y,
    		            highlight: true,
    		            active: true
    		          },
    		          textBox: {
    		            active: false,
    		            hasMoved: false,
    		            movesIndependently: false,
    		            drawnIndependently: true,
    		            allowedOutsideImage: true,
    		            hasBoundingBox: true
    		          }
    		        }
    		      };
    		    }
    		    /**
    		     *
    		     *
    		     * @param {*} element
    		     * @param {*} data
    		     * @param {*} coords
    		     * @returns {Boolean}
    		     */

    		  }, {
    		    key: "pointNearTool",
    		    value: function pointNearTool(element, data, coords) {
    		      var hasStartAndEndHandles = data && data.handles && data.handles.start && data.handles.end;
    		      var validParameters = hasStartAndEndHandles;

    		      if (!validParameters) {
    		        logger.warn("invalid parameters supplied to tool ".concat(this.name, "'s pointNearTool"));
    		        return false;
    		      }

    		      if (data.visible === false) {
    		        return false;
    		      }

    		      return Object(_util_lineSegDistance_js__WEBPACK_IMPORTED_MODULE_12__["default"])(element, data.handles.start, data.handles.end, coords) < 25;
    		    }
    		  }, {
    		    key: "updateCachedStats",
    		    value: function updateCachedStats(image, element, data) {
    		      var _getPixelSpacing = Object(_util_getPixelSpacing__WEBPACK_IMPORTED_MODULE_15__["default"])(image),
    		          rowPixelSpacing = _getPixelSpacing.rowPixelSpacing,
    		          colPixelSpacing = _getPixelSpacing.colPixelSpacing; // Set rowPixelSpacing and columnPixelSpacing to 1 if they are undefined (or zero)


    		      var dx = (data.handles.end.x - data.handles.start.x) * (colPixelSpacing || 1);
    		      var dy = (data.handles.end.y - data.handles.start.y) * (rowPixelSpacing || 1); // Calculate the length, and create the text variable with the millimeters or pixels suffix

    		      var length = Math.sqrt(dx * dx + dy * dy); // Store the length inside the tool for outside access

    		      data.length = length;
    		      data.invalidated = false;
    		    }
    		  }, {
    		    key: "renderToolData",
    		    value: function renderToolData(evt) {
    		      var _this2 = this;

    		      var eventData = evt.detail;
    		      var _this$configuration = this.configuration,
    		          handleRadius = _this$configuration.handleRadius,
    		          drawHandlesOnHover = _this$configuration.drawHandlesOnHover;
    		      var toolData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_6__["getToolState"])(evt.currentTarget, this.name);

    		      if (!toolData) {
    		        return;
    		      } // We have tool data for this element - iterate over each one and draw it


    		      var context = Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_9__["getNewContext"])(eventData.canvasContext.canvas);
    		      var image = eventData.image,
    		          element = eventData.element;

    		      var _getPixelSpacing2 = Object(_util_getPixelSpacing__WEBPACK_IMPORTED_MODULE_15__["default"])(image),
    		          rowPixelSpacing = _getPixelSpacing2.rowPixelSpacing,
    		          colPixelSpacing = _getPixelSpacing2.colPixelSpacing;

    		      var lineWidth = _stateManagement_toolStyle_js__WEBPACK_IMPORTED_MODULE_7__["default"].getToolWidth();

    		      var _loop = function _loop(i) {
    		        var data = toolData.data[i];

    		        if (data.visible === false) {
    		          return "continue";
    		        }

    		        Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_9__["draw"])(context, function (context) {
    		          // Configurable shadow
    		          Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_9__["setShadow"])(context, _this2.configuration);
    		          var color = _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_8__["default"].getColorIfActive(data); // Draw the measurement line

    		          Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_9__["drawLine"])(context, element, data.handles.start, data.handles.end, {
    		            color: color
    		          }); // Draw the handles

    		          var handleOptions = {
    		            color: color,
    		            handleRadius: handleRadius,
    		            drawHandlesIfActive: drawHandlesOnHover
    		          };
    		          Object(_drawing_drawHandles_js__WEBPACK_IMPORTED_MODULE_11__["default"])(context, eventData, data.handles, handleOptions);

    		          if (!data.handles.textBox.hasMoved) {
    		            var coords = {
    		              x: Math.max(data.handles.start.x, data.handles.end.x)
    		            }; // Depending on which handle has the largest x-value,
    		            // Set the y-value for the text box

    		            if (coords.x === data.handles.start.x) {
    		              coords.y = data.handles.start.y;
    		            } else {
    		              coords.y = data.handles.end.y;
    		            }

    		            data.handles.textBox.x = coords.x;
    		            data.handles.textBox.y = coords.y;
    		          } // Move the textbox slightly to the right and upwards
    		          // So that it sits beside the length tool handle


    		          var xOffset = 10; // Update textbox stats

    		          if (data.invalidated === true) {
    		            if (data.length) {
    		              _this2.throttledUpdateCachedStats(image, element, data);
    		            } else {
    		              _this2.updateCachedStats(image, element, data);
    		            }
    		          }

    		          var text = textBoxText(data, rowPixelSpacing, colPixelSpacing);
    		          Object(_drawing_drawLinkedTextBox_js__WEBPACK_IMPORTED_MODULE_10__["default"])(context, element, data.handles.textBox, text, data.handles, textBoxAnchorPoints, color, lineWidth, xOffset, true);
    		        });
    		      };

    		      for (var i = 0; i < toolData.data.length; i++) {
    		        var _ret = _loop(i);

    		        if (_ret === "continue") continue;
    		      }

    		      function textBoxText(data, rowPixelSpacing, colPixelSpacing) {
    		        // Set the length text suffix depending on whether or not pixelSpacing is available
    		        var suffix = 'mm';

    		        if (!rowPixelSpacing || !colPixelSpacing) {
    		          suffix = 'pixels';
    		        }

    		        data.unit = suffix;
    		        return "".concat(data.length.toFixed(2), " ").concat(suffix);
    		      }

    		      function textBoxAnchorPoints(handles) {
    		        var midpoint = {
    		          x: (handles.start.x + handles.end.x) / 2,
    		          y: (handles.start.y + handles.end.y) / 2
    		        };
    		        return [handles.start, midpoint, handles.end];
    		      }
    		    }
    		  }]);

    		  return LengthTool;
    		}(_base_BaseAnnotationTool_js__WEBPACK_IMPORTED_MODULE_5__["default"]);



    		/***/ }),

    		/***/ "./tools/annotation/ProbeTool.js":
    		/*!***************************************!*\
    		  !*** ./tools/annotation/ProbeTool.js ***!
    		  \***************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ProbeTool; });
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__);
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__);
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _base_BaseAnnotationTool_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../base/BaseAnnotationTool.js */ "./tools/base/BaseAnnotationTool.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _stateManagement_textStyle_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../stateManagement/textStyle.js */ "./stateManagement/textStyle.js");
    		/* harmony import */ var _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../stateManagement/toolColors.js */ "./stateManagement/toolColors.js");
    		/* harmony import */ var _drawing_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../drawing/index.js */ "./drawing/index.js");
    		/* harmony import */ var _drawing_drawTextBox_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../drawing/drawTextBox.js */ "./drawing/drawTextBox.js");
    		/* harmony import */ var _drawing_drawHandles_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../drawing/drawHandles.js */ "./drawing/drawHandles.js");
    		/* harmony import */ var _util_getRGBPixels_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../util/getRGBPixels.js */ "./util/getRGBPixels.js");
    		/* harmony import */ var _util_calculateSUV_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../util/calculateSUV.js */ "./util/calculateSUV.js");
    		/* harmony import */ var _cursors_index_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../cursors/index.js */ "./tools/cursors/index.js");
    		/* harmony import */ var _util_logger_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../util/logger.js */ "./util/logger.js");
    		/* harmony import */ var _util_throttle__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../util/throttle */ "./util/throttle.js");






    		 // State



    		 // Drawing



    		 // Utilities






    		var logger = Object(_util_logger_js__WEBPACK_IMPORTED_MODULE_16__["getLogger"])('tools:annotation:ProbeTool');
    		/**
    		 * @public
    		 * @class ProbeTool
    		 * @memberof Tools.Annotation
    		 * @classdesc Tool which provides a probe of the image data at the
    		 * desired position.
    		 * @extends Tools.Base.BaseAnnotationTool
    		 */

    		var ProbeTool =
    		/*#__PURE__*/
    		function (_BaseAnnotationTool) {
    		  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default()(ProbeTool, _BaseAnnotationTool);

    		  function ProbeTool() {
    		    var _this;

    		    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    		    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, ProbeTool);

    		    var defaultProps = {
    		      name: 'Probe',
    		      supportedInteractionTypes: ['Mouse', 'Touch'],
    		      svgCursor: _cursors_index_js__WEBPACK_IMPORTED_MODULE_15__["probeCursor"]
    		    };
    		    _this = _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(ProbeTool).call(this, props, defaultProps));
    		    _this.throttledUpdateCachedStats = Object(_util_throttle__WEBPACK_IMPORTED_MODULE_17__["default"])(_this.updateCachedStats, 110);
    		    return _this;
    		  }

    		  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(ProbeTool, [{
    		    key: "createNewMeasurement",
    		    value: function createNewMeasurement(eventData) {
    		      var goodEventData = eventData && eventData.currentPoints && eventData.currentPoints.image;

    		      if (!goodEventData) {
    		        logger.error("required eventData not supplied to tool ".concat(this.name, "'s createNewMeasurement"));
    		        return;
    		      }

    		      return {
    		        visible: true,
    		        active: true,
    		        color: undefined,
    		        invalidated: true,
    		        handles: {
    		          end: {
    		            x: eventData.currentPoints.image.x,
    		            y: eventData.currentPoints.image.y,
    		            highlight: true,
    		            active: true
    		          }
    		        }
    		      };
    		    }
    		    /**
    		     *
    		     *
    		     * @param {*} element
    		     * @param {*} data
    		     * @param {*} coords
    		     * @returns {Boolean}
    		     */

    		  }, {
    		    key: "pointNearTool",
    		    value: function pointNearTool(element, data, coords) {
    		      var hasEndHandle = data && data.handles && data.handles.end;
    		      var validParameters = hasEndHandle;

    		      if (!validParameters) {
    		        logger.warn("invalid parameters supplied to tool ".concat(this.name, "'s pointNearTool"));
    		      }

    		      if (!validParameters || data.visible === false) {
    		        return false;
    		      }

    		      var probeCoords = _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.pixelToCanvas(element, data.handles.end);
    		      return _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstoneMath.point.distance(probeCoords, coords) < 5;
    		    }
    		  }, {
    		    key: "updateCachedStats",
    		    value: function updateCachedStats(image, element, data) {
    		      var x = Math.round(data.handles.end.x);
    		      var y = Math.round(data.handles.end.y);
    		      var stats = {};

    		      if (x >= 0 && y >= 0 && x < image.columns && y < image.rows) {
    		        stats.x = x;
    		        stats.y = y;

    		        if (image.color) {
    		          stats.storedPixels = Object(_util_getRGBPixels_js__WEBPACK_IMPORTED_MODULE_13__["default"])(element, x, y, 1, 1);
    		        } else {
    		          stats.storedPixels = _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.getStoredPixels(element, x, y, 1, 1);
    		          stats.sp = stats.storedPixels[0];
    		          stats.mo = stats.sp * image.slope + image.intercept;
    		          stats.suv = Object(_util_calculateSUV_js__WEBPACK_IMPORTED_MODULE_14__["default"])(image, stats.sp);
    		        }
    		      }

    		      data.cachedStats = stats;
    		      data.invalidated = false;
    		    }
    		  }, {
    		    key: "renderToolData",
    		    value: function renderToolData(evt) {
    		      var _this2 = this;

    		      var eventData = evt.detail;
    		      var handleRadius = this.configuration.handleRadius;
    		      var toolData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_7__["getToolState"])(evt.currentTarget, this.name);

    		      if (!toolData) {
    		        return;
    		      } // We have tool data for this element - iterate over each one and draw it


    		      var context = Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_10__["getNewContext"])(eventData.canvasContext.canvas);
    		      var image = eventData.image,
    		          element = eventData.element;
    		      var fontHeight = _stateManagement_textStyle_js__WEBPACK_IMPORTED_MODULE_8__["default"].getFontSize();

    		      var _loop = function _loop(i) {
    		        var data = toolData.data[i];

    		        if (data.visible === false) {
    		          return "continue";
    		        }

    		        Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_10__["draw"])(context, function (context) {
    		          var color = _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_9__["default"].getColorIfActive(data); // Draw the handles

    		          Object(_drawing_drawHandles_js__WEBPACK_IMPORTED_MODULE_12__["default"])(context, eventData, data.handles, {
    		            handleRadius: handleRadius,
    		            color: color
    		          }); // Update textbox stats

    		          if (data.invalidated === true) {
    		            if (data.cachedStats) {
    		              _this2.throttledUpdateCachedStats(image, element, data);
    		            } else {
    		              _this2.updateCachedStats(image, element, data);
    		            }
    		          }

    		          var text, str;
    		          var _data$cachedStats = data.cachedStats,
    		              x = _data$cachedStats.x,
    		              y = _data$cachedStats.y,
    		              storedPixels = _data$cachedStats.storedPixels,
    		              sp = _data$cachedStats.sp,
    		              mo = _data$cachedStats.mo,
    		              suv = _data$cachedStats.suv;

    		          if (x >= 0 && y >= 0 && x < image.columns && y < image.rows) {
    		            text = "".concat(x, ", ").concat(y);

    		            if (image.color) {
    		              str = "R: ".concat(storedPixels[0], " G: ").concat(storedPixels[1], " B: ").concat(storedPixels[2]);
    		            } else {
    		              // Draw text
    		              str = "SP: ".concat(sp, " MO: ").concat(parseFloat(mo.toFixed(3)));

    		              if (suv) {
    		                str += " SUV: ".concat(parseFloat(suv.toFixed(3)));
    		              }
    		            } // Coords for text


    		            var coords = {
    		              // Translate the x/y away from the cursor
    		              x: data.handles.end.x + 3,
    		              y: data.handles.end.y - 3
    		            };
    		            var textCoords = _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.pixelToCanvas(eventData.element, coords);
    		            Object(_drawing_drawTextBox_js__WEBPACK_IMPORTED_MODULE_11__["default"])(context, str, textCoords.x, textCoords.y + fontHeight + 5, color);
    		            Object(_drawing_drawTextBox_js__WEBPACK_IMPORTED_MODULE_11__["default"])(context, text, textCoords.x, textCoords.y, color);
    		          }
    		        });
    		      };

    		      for (var i = 0; i < toolData.data.length; i++) {
    		        var _ret = _loop(i);

    		        if (_ret === "continue") continue;
    		      }
    		    }
    		  }]);

    		  return ProbeTool;
    		}(_base_BaseAnnotationTool_js__WEBPACK_IMPORTED_MODULE_6__["default"]);



    		/***/ }),

    		/***/ "./tools/annotation/RectangleRoiTool.js":
    		/*!**********************************************!*\
    		  !*** ./tools/annotation/RectangleRoiTool.js ***!
    		  \**********************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return RectangleRoiTool; });
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__);
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__);
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _base_BaseAnnotationTool_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../base/BaseAnnotationTool.js */ "./tools/base/BaseAnnotationTool.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _stateManagement_toolStyle_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./../../stateManagement/toolStyle.js */ "./stateManagement/toolStyle.js");
    		/* harmony import */ var _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./../../stateManagement/toolColors.js */ "./stateManagement/toolColors.js");
    		/* harmony import */ var _drawing_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./../../drawing/index.js */ "./drawing/index.js");
    		/* harmony import */ var _util_calculateSUV_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./../../util/calculateSUV.js */ "./util/calculateSUV.js");
    		/* harmony import */ var _util_getROITextBoxCoords_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../util/getROITextBoxCoords.js */ "./util/getROITextBoxCoords.js");
    		/* harmony import */ var _util_numbersWithCommas_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./../../util/numbersWithCommas.js */ "./util/numbersWithCommas.js");
    		/* harmony import */ var _util_throttle_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./../../util/throttle.js */ "./util/throttle.js");
    		/* harmony import */ var _cursors_index_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../cursors/index.js */ "./tools/cursors/index.js");
    		/* harmony import */ var _util_logger_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../util/logger.js */ "./util/logger.js");
    		/* harmony import */ var _util_getPixelSpacing__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../util/getPixelSpacing */ "./util/getPixelSpacing.js");






    		 // State



    		 // Drawing

    		 // Util








    		var logger = Object(_util_logger_js__WEBPACK_IMPORTED_MODULE_16__["getLogger"])('tools:annotation:RectangleRoiTool');
    		/**
    		 * @public
    		 * @class RectangleRoiTool
    		 * @memberof Tools.Annotation
    		 * @classdesc Tool for drawing rectangular regions of interest, and measuring
    		 * the statistics of the enclosed pixels.
    		 * @extends Tools.Base.BaseAnnotationTool
    		 */

    		var RectangleRoiTool =
    		/*#__PURE__*/
    		function (_BaseAnnotationTool) {
    		  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default()(RectangleRoiTool, _BaseAnnotationTool);

    		  function RectangleRoiTool() {
    		    var _this;

    		    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    		    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, RectangleRoiTool);

    		    var defaultProps = {
    		      name: 'RectangleRoi',
    		      supportedInteractionTypes: ['Mouse', 'Touch'],
    		      configuration: {// showMinMax: false,
    		        // showHounsfieldUnits: true
    		      },
    		      svgCursor: _cursors_index_js__WEBPACK_IMPORTED_MODULE_15__["rectangleRoiCursor"]
    		    };
    		    _this = _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(RectangleRoiTool).call(this, props, defaultProps));
    		    _this.throttledUpdateCachedStats = Object(_util_throttle_js__WEBPACK_IMPORTED_MODULE_14__["default"])(_this.updateCachedStats, 110);
    		    return _this;
    		  }

    		  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(RectangleRoiTool, [{
    		    key: "createNewMeasurement",
    		    value: function createNewMeasurement(eventData) {
    		      var goodEventData = eventData && eventData.currentPoints && eventData.currentPoints.image;

    		      if (!goodEventData) {
    		        logger.error("required eventData not supplied to tool ".concat(this.name, "'s createNewMeasurement"));
    		        return;
    		      }

    		      return {
    		        visible: true,
    		        active: true,
    		        color: undefined,
    		        invalidated: true,
    		        handles: {
    		          start: {
    		            x: eventData.currentPoints.image.x,
    		            y: eventData.currentPoints.image.y,
    		            highlight: true,
    		            active: false
    		          },
    		          end: {
    		            x: eventData.currentPoints.image.x,
    		            y: eventData.currentPoints.image.y,
    		            highlight: true,
    		            active: true
    		          },
    		          initialRotation: eventData.viewport.rotation,
    		          textBox: {
    		            active: false,
    		            hasMoved: false,
    		            movesIndependently: false,
    		            drawnIndependently: true,
    		            allowedOutsideImage: true,
    		            hasBoundingBox: true
    		          }
    		        }
    		      };
    		    }
    		  }, {
    		    key: "pointNearTool",
    		    value: function pointNearTool(element, data, coords, interactionType) {
    		      var hasStartAndEndHandles = data && data.handles && data.handles.start && data.handles.end;
    		      var validParameters = hasStartAndEndHandles;

    		      if (!validParameters) {
    		        logger.warn("invalid parameters supplied to tool ".concat(this.name, "'s pointNearTool"));
    		      }

    		      if (!validParameters || data.visible === false) {
    		        return false;
    		      }

    		      var distance = interactionType === 'mouse' ? 15 : 25;
    		      var startCanvas = _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.pixelToCanvas(element, data.handles.start);
    		      var endCanvas = _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.pixelToCanvas(element, data.handles.end);
    		      var rect = {
    		        left: Math.min(startCanvas.x, endCanvas.x),
    		        top: Math.min(startCanvas.y, endCanvas.y),
    		        width: Math.abs(startCanvas.x - endCanvas.x),
    		        height: Math.abs(startCanvas.y - endCanvas.y)
    		      };
    		      var distanceToPoint = _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstoneMath.rect.distanceToPoint(rect, coords);
    		      return distanceToPoint < distance;
    		    }
    		  }, {
    		    key: "updateCachedStats",
    		    value: function updateCachedStats(image, element, data) {
    		      var seriesModule = _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.metaData.get('generalSeriesModule', image.imageId) || {};
    		      var modality = seriesModule.modality;
    		      var pixelSpacing = Object(_util_getPixelSpacing__WEBPACK_IMPORTED_MODULE_17__["default"])(image);

    		      var stats = _calculateStats(image, element, data.handles, modality, pixelSpacing);

    		      data.cachedStats = stats;
    		      data.invalidated = false;
    		    }
    		  }, {
    		    key: "renderToolData",
    		    value: function renderToolData(evt) {
    		      var _this2 = this;

    		      var toolData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_7__["getToolState"])(evt.currentTarget, this.name);

    		      if (!toolData) {
    		        return;
    		      }

    		      var eventData = evt.detail;
    		      var image = eventData.image,
    		          element = eventData.element;
    		      var lineWidth = _stateManagement_toolStyle_js__WEBPACK_IMPORTED_MODULE_8__["default"].getToolWidth();
    		      var _this$configuration = this.configuration,
    		          handleRadius = _this$configuration.handleRadius,
    		          drawHandlesOnHover = _this$configuration.drawHandlesOnHover;
    		      var context = Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_10__["getNewContext"])(eventData.canvasContext.canvas);

    		      var _getPixelSpacing = Object(_util_getPixelSpacing__WEBPACK_IMPORTED_MODULE_17__["default"])(image),
    		          rowPixelSpacing = _getPixelSpacing.rowPixelSpacing,
    		          colPixelSpacing = _getPixelSpacing.colPixelSpacing; // Meta


    		      var seriesModule = _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.metaData.get('generalSeriesModule', image.imageId) || {}; // Pixel Spacing

    		      var modality = seriesModule.modality;
    		      var hasPixelSpacing = rowPixelSpacing && colPixelSpacing;
    		      Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_10__["draw"])(context, function (context) {
    		        // If we have tool data for this element - iterate over each set and draw it
    		        for (var i = 0; i < toolData.data.length; i++) {
    		          var data = toolData.data[i];

    		          if (data.visible === false) {
    		            continue;
    		          } // Configure


    		          var color = _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_9__["default"].getColorIfActive(data);
    		          var handleOptions = {
    		            color: color,
    		            handleRadius: handleRadius,
    		            drawHandlesIfActive: drawHandlesOnHover
    		          };
    		          Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_10__["setShadow"])(context, _this2.configuration); // Draw

    		          Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_10__["drawRect"])(context, element, data.handles.start, data.handles.end, {
    		            color: color
    		          }, 'pixel', data.handles.initialRotation);
    		          Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_10__["drawHandles"])(context, eventData, data.handles, handleOptions); // Update textbox stats

    		          if (data.invalidated === true) {
    		            if (data.cachedStats) {
    		              _this2.throttledUpdateCachedStats(image, element, data);
    		            } else {
    		              _this2.updateCachedStats(image, element, data);
    		            }
    		          } // Default to textbox on right side of ROI


    		          if (!data.handles.textBox.hasMoved) {
    		            var defaultCoords = Object(_util_getROITextBoxCoords_js__WEBPACK_IMPORTED_MODULE_12__["default"])(eventData.viewport, data.handles);
    		            Object.assign(data.handles.textBox, defaultCoords);
    		          }

    		          var textBoxAnchorPoints = function textBoxAnchorPoints(handles) {
    		            return _findTextBoxAnchorPoints(handles.start, handles.end);
    		          };

    		          var textBoxContent = _createTextBoxContent(context, image.color, data.cachedStats, modality, hasPixelSpacing, _this2.configuration);

    		          data.unit = _getUnit(modality, _this2.configuration.showHounsfieldUnits);
    		          Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_10__["drawLinkedTextBox"])(context, element, data.handles.textBox, textBoxContent, data.handles, textBoxAnchorPoints, color, lineWidth, 10, true);
    		        }
    		      });
    		    }
    		  }]);

    		  return RectangleRoiTool;
    		}(_base_BaseAnnotationTool_js__WEBPACK_IMPORTED_MODULE_6__["default"]);
    		/**
    		 * TODO: This is the same method (+ GetPixels) for the other ROIs
    		 * TODO: The pixel filtering is the unique bit
    		 *
    		 * @param {*} startHandle
    		 * @param {*} endHandle
    		 * @returns {{ left: number, top: number, width: number, height: number}}
    		 */




    		function _getRectangleImageCoordinates(startHandle, endHandle) {
    		  return {
    		    left: Math.min(startHandle.x, endHandle.x),
    		    top: Math.min(startHandle.y, endHandle.y),
    		    width: Math.abs(startHandle.x - endHandle.x),
    		    height: Math.abs(startHandle.y - endHandle.y)
    		  };
    		}
    		/**
    		 *
    		 *
    		 * @param {*} image
    		 * @param {*} element
    		 * @param {*} handles
    		 * @param {*} modality
    		 * @param {*} pixelSpacing
    		 * @returns {Object} The Stats object
    		 */


    		function _calculateStats(image, element, handles, modality, pixelSpacing) {
    		  // Retrieve the bounds of the rectangle in image coordinates
    		  var roiCoordinates = _getRectangleImageCoordinates(handles.start, handles.end); // Retrieve the array of pixels that the rectangle bounds cover


    		  var pixels = _externalModules_js__WEBPACK_IMPORTED_MODULE_5__["default"].cornerstone.getPixels(element, roiCoordinates.left, roiCoordinates.top, roiCoordinates.width, roiCoordinates.height); // Calculate the mean & standard deviation from the pixels and the rectangle details

    		  var roiMeanStdDev = _calculateRectangleStats(pixels, roiCoordinates);

    		  var meanStdDevSUV;

    		  if (modality === 'PT') {
    		    meanStdDevSUV = {
    		      mean: Object(_util_calculateSUV_js__WEBPACK_IMPORTED_MODULE_11__["default"])(image, roiMeanStdDev.mean, true) || 0,
    		      stdDev: Object(_util_calculateSUV_js__WEBPACK_IMPORTED_MODULE_11__["default"])(image, roiMeanStdDev.stdDev, true) || 0
    		    };
    		  } // Calculate the image area from the rectangle dimensions and pixel spacing


    		  var area = roiCoordinates.width * (pixelSpacing.colPixelSpacing || 1) * (roiCoordinates.height * (pixelSpacing.rowPixelSpacing || 1));
    		  return {
    		    area: area || 0,
    		    count: roiMeanStdDev.count || 0,
    		    mean: roiMeanStdDev.mean || 0,
    		    variance: roiMeanStdDev.variance || 0,
    		    stdDev: roiMeanStdDev.stdDev || 0,
    		    min: roiMeanStdDev.min || 0,
    		    max: roiMeanStdDev.max || 0,
    		    meanStdDevSUV: meanStdDevSUV
    		  };
    		}
    		/**
    		 *
    		 *
    		 * @param {*} sp
    		 * @param {*} rectangle
    		 * @returns {{ count, number, mean: number,  variance: number,  stdDev: number,  min: number,  max: number }}
    		 */


    		function _calculateRectangleStats(sp, rectangle) {
    		  var sum = 0;
    		  var sumSquared = 0;
    		  var count = 0;
    		  var index = 0;
    		  var min = sp ? sp[0] : null;
    		  var max = sp ? sp[0] : null;

    		  for (var y = rectangle.top; y < rectangle.top + rectangle.height; y++) {
    		    for (var x = rectangle.left; x < rectangle.left + rectangle.width; x++) {
    		      sum += sp[index];
    		      sumSquared += sp[index] * sp[index];
    		      min = Math.min(min, sp[index]);
    		      max = Math.max(max, sp[index]);
    		      count++; // TODO: Wouldn't this just be sp.length?

    		      index++;
    		    }
    		  }

    		  if (count === 0) {
    		    return {
    		      count: count,
    		      mean: 0.0,
    		      variance: 0.0,
    		      stdDev: 0.0,
    		      min: 0.0,
    		      max: 0.0
    		    };
    		  }

    		  var mean = sum / count;
    		  var variance = sumSquared / count - mean * mean;
    		  return {
    		    count: count,
    		    mean: mean,
    		    variance: variance,
    		    stdDev: Math.sqrt(variance),
    		    min: min,
    		    max: max
    		  };
    		}
    		/**
    		 *
    		 *
    		 * @param {*} startHandle
    		 * @param {*} endHandle
    		 * @returns {Array.<{x: number, y: number}>}
    		 */


    		function _findTextBoxAnchorPoints(startHandle, endHandle) {
    		  var _getRectangleImageCoo = _getRectangleImageCoordinates(startHandle, endHandle),
    		      left = _getRectangleImageCoo.left,
    		      top = _getRectangleImageCoo.top,
    		      width = _getRectangleImageCoo.width,
    		      height = _getRectangleImageCoo.height;

    		  return [{
    		    // Top middle point of rectangle
    		    x: left + width / 2,
    		    y: top
    		  }, {
    		    // Left middle point of rectangle
    		    x: left,
    		    y: top + height / 2
    		  }, {
    		    // Bottom middle point of rectangle
    		    x: left + width / 2,
    		    y: top + height
    		  }, {
    		    // Right middle point of rectangle
    		    x: left + width,
    		    y: top + height / 2
    		  }];
    		}
    		/**
    		 *
    		 *
    		 * @param {*} area
    		 * @param {*} hasPixelSpacing
    		 * @returns {string} The formatted label for showing area
    		 */


    		function _formatArea(area, hasPixelSpacing) {
    		  // This uses Char code 178 for a superscript 2
    		  var suffix = hasPixelSpacing ? " mm".concat(String.fromCharCode(178)) : " px".concat(String.fromCharCode(178));
    		  return "Area: ".concat(Object(_util_numbersWithCommas_js__WEBPACK_IMPORTED_MODULE_13__["default"])(area.toFixed(2))).concat(suffix);
    		}

    		function _getUnit(modality, showHounsfieldUnits) {
    		  return modality === 'CT' && showHounsfieldUnits !== false ? 'HU' : '';
    		}
    		/**
    		 * TODO: This is identical to EllipticalROI's same fn
    		 * TODO: We may want to make this a utility for ROIs with these values?
    		 *
    		 * @param {*} context
    		 * @param {*} isColorImage
    		 * @param {*} { area, mean, stdDev, min, max, meanStdDevSUV }
    		 * @param {*} modality
    		 * @param {*} hasPixelSpacing
    		 * @param {*} [options={}]
    		 * @returns {string[]}
    		 */


    		function _createTextBoxContent(context, isColorImage, _ref, modality, hasPixelSpacing) {
    		  var area = _ref.area,
    		      mean = _ref.mean,
    		      stdDev = _ref.stdDev,
    		      min = _ref.min,
    		      max = _ref.max,
    		      meanStdDevSUV = _ref.meanStdDevSUV;
    		  var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};
    		  var showMinMax = options.showMinMax || false;
    		  var textLines = [];
    		  var otherLines = [];

    		  if (!isColorImage) {
    		    var hasStandardUptakeValues = meanStdDevSUV && meanStdDevSUV.mean !== 0;

    		    var unit = _getUnit(modality, options.showHounsfieldUnits);

    		    var meanString = "Mean: ".concat(Object(_util_numbersWithCommas_js__WEBPACK_IMPORTED_MODULE_13__["default"])(mean.toFixed(2)), " ").concat(unit);
    		    var stdDevString = "Std Dev: ".concat(Object(_util_numbersWithCommas_js__WEBPACK_IMPORTED_MODULE_13__["default"])(stdDev.toFixed(2)), " ").concat(unit); // If this image has SUV values to display, concatenate them to the text line

    		    if (hasStandardUptakeValues) {
    		      var SUVtext = ' SUV: ';
    		      var meanSuvString = "".concat(SUVtext).concat(Object(_util_numbersWithCommas_js__WEBPACK_IMPORTED_MODULE_13__["default"])(meanStdDevSUV.mean.toFixed(2)));
    		      var stdDevSuvString = "".concat(SUVtext).concat(Object(_util_numbersWithCommas_js__WEBPACK_IMPORTED_MODULE_13__["default"])(meanStdDevSUV.stdDev.toFixed(2)));
    		      var targetStringLength = Math.floor(context.measureText("".concat(stdDevString, "     ")).width);

    		      while (context.measureText(meanString).width < targetStringLength) {
    		        meanString += ' ';
    		      }

    		      otherLines.push("".concat(meanString).concat(meanSuvString));
    		      otherLines.push("".concat(stdDevString, "     ").concat(stdDevSuvString));
    		    } else {
    		      otherLines.push("".concat(meanString, "     ").concat(stdDevString));
    		    }

    		    if (showMinMax) {
    		      var minString = "Min: ".concat(min, " ").concat(unit);
    		      var maxString = "Max: ".concat(max, " ").concat(unit);

    		      var _targetStringLength = hasStandardUptakeValues ? Math.floor(context.measureText("".concat(stdDevString, "     ")).width) : Math.floor(context.measureText("".concat(meanString, "     ")).width);

    		      while (context.measureText(minString).width < _targetStringLength) {
    		        minString += ' ';
    		      }

    		      otherLines.push("".concat(minString).concat(maxString));
    		    }
    		  }

    		  textLines.push(_formatArea(area, hasPixelSpacing));
    		  otherLines.forEach(function (x) {
    		    return textLines.push(x);
    		  });
    		  return textLines;
    		}

    		/***/ }),

    		/***/ "./tools/annotation/TextMarkerTool.js":
    		/*!********************************************!*\
    		  !*** ./tools/annotation/TextMarkerTool.js ***!
    		  \********************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return TextMarkerTool; });
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__);
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__);
    		/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "../node_modules/@babel/runtime/helpers/assertThisInitialized.js");
    		/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__);
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__);
    		/* harmony import */ var _base_BaseAnnotationTool_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../base/BaseAnnotationTool.js */ "./tools/base/BaseAnnotationTool.js");
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _util_pointInsideBoundingBox_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./../../util/pointInsideBoundingBox.js */ "./util/pointInsideBoundingBox.js");
    		/* harmony import */ var _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./../../stateManagement/toolColors.js */ "./stateManagement/toolColors.js");
    		/* harmony import */ var _drawing_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./../../drawing/index.js */ "./drawing/index.js");
    		/* harmony import */ var _drawing_drawTextBox_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./../../drawing/drawTextBox.js */ "./drawing/drawTextBox.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./../../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _cursors_index_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../cursors/index.js */ "./tools/cursors/index.js");














    		/**
    		 * @public
    		 * @class TextMarkerTool
    		 * @memberof Tools.Annotation
    		 *
    		 * @classdesc Tool for annotating an image with text markers.
    		 * @extends Tools.Base.BaseAnnotationTool
    		 */

    		var TextMarkerTool =
    		/*#__PURE__*/
    		function (_BaseAnnotationTool) {
    		  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5___default()(TextMarkerTool, _BaseAnnotationTool);

    		  function TextMarkerTool() {
    		    var _this;

    		    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    		    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, TextMarkerTool);

    		    var defaultProps = {
    		      name: 'TextMarker',
    		      supportedInteractionTypes: ['Mouse', 'Touch'],
    		      configuration: {
    		        markers: [],
    		        current: '',
    		        ascending: true,
    		        loop: false,
    		        changeTextCallback: changeTextCallback
    		      },
    		      svgCursor: _cursors_index_js__WEBPACK_IMPORTED_MODULE_13__["textMarkerCursor"]
    		    };
    		    _this = _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(TextMarkerTool).call(this, props, defaultProps));
    		    _this.touchPressCallback = _this._changeText.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    _this.doubleClickCallback = _this._changeText.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    return _this;
    		  }

    		  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(TextMarkerTool, [{
    		    key: "createNewMeasurement",
    		    value: function createNewMeasurement(eventData) {
    		      var config = this.configuration;

    		      if (!config.current) {
    		        return;
    		      } // Create the measurement data for this tool with the end handle activated


    		      var measurementData = {
    		        visible: true,
    		        active: true,
    		        text: config.current,
    		        color: undefined,
    		        handles: {
    		          end: {
    		            x: eventData.currentPoints.image.x,
    		            y: eventData.currentPoints.image.y,
    		            highlight: true,
    		            active: true,
    		            hasBoundingBox: true
    		          }
    		        }
    		      }; // Create a rectangle representing the image

    		      var imageRect = {
    		        left: 0,
    		        top: 0,
    		        width: eventData.image.width,
    		        height: eventData.image.height
    		      }; // Check if the current handle is outside the image,
    		      // If it is, prevent the handle creation

    		      if (!_externalModules_js__WEBPACK_IMPORTED_MODULE_7__["default"].cornerstoneMath.point.insideRect(measurementData.handles.end, imageRect)) {
    		        return;
    		      } // Update the current marker for the next marker


    		      var currentIndex = config.markers.indexOf(config.current);
    		      var increment = config.ascending ? 1 : -1;
    		      currentIndex += increment;

    		      if (currentIndex >= config.markers.length) {
    		        currentIndex = config.loop ? 0 : -1;
    		      } else if (currentIndex < 0) {
    		        currentIndex = config.loop ? config.markers.length : -1;
    		      }

    		      config.current = config.markers[currentIndex];
    		      return measurementData;
    		    }
    		  }, {
    		    key: "pointNearTool",
    		    value: function pointNearTool(element, data, coords) {
    		      if (data.visible === false) {
    		        return false;
    		      }

    		      if (!data.handles.end.boundingBox) {
    		        return;
    		      }

    		      var distanceToPoint = _externalModules_js__WEBPACK_IMPORTED_MODULE_7__["default"].cornerstoneMath.rect.distanceToPoint(data.handles.end.boundingBox, coords);
    		      var insideBoundingBox = Object(_util_pointInsideBoundingBox_js__WEBPACK_IMPORTED_MODULE_8__["default"])(data.handles.end, coords);
    		      return distanceToPoint < 10 || insideBoundingBox;
    		    }
    		  }, {
    		    key: "updateCachedStats",
    		    value: function updateCachedStats() {// Implementing to satisfy BaseAnnotationTool
    		    }
    		  }, {
    		    key: "renderToolData",
    		    value: function renderToolData(evt) {
    		      var eventData = evt.detail;
    		      var config = this.configuration; // If we have no toolData for this element, return immediately as there is nothing to do

    		      var toolData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_12__["getToolState"])(eventData.element, this.name);

    		      if (!toolData) {
    		        return;
    		      } // We have tool data for this element - iterate over each one and draw it


    		      var context = Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_10__["getNewContext"])(eventData.canvasContext.canvas);

    		      var _loop = function _loop(i) {
    		        var data = toolData.data[i];

    		        if (data.visible === false) {
    		          return "continue";
    		        }

    		        var color = _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_9__["default"].getColorIfActive(data);
    		        Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_10__["draw"])(context, function (context) {
    		          Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_10__["setShadow"])(context, config);
    		          var textCoords = _externalModules_js__WEBPACK_IMPORTED_MODULE_7__["default"].cornerstone.pixelToCanvas(eventData.element, data.handles.end);
    		          var options = {
    		            centering: {
    		              x: true,
    		              y: true
    		            }
    		          };
    		          data.handles.end.boundingBox = Object(_drawing_drawTextBox_js__WEBPACK_IMPORTED_MODULE_11__["default"])(context, data.text, textCoords.x, textCoords.y - 10, color, options);
    		        });
    		      };

    		      for (var i = 0; i < toolData.data.length; i++) {
    		        var _ret = _loop(i);

    		        if (_ret === "continue") continue;
    		      }
    		    }
    		  }, {
    		    key: "_changeText",
    		    value: function _changeText(evt) {
    		      var eventData = evt.detail;
    		      var element = eventData.element,
    		          currentPoints = eventData.currentPoints;
    		      var data;

    		      function doneChangingTextCallback(data, updatedText, deleteTool) {
    		        if (deleteTool === true) {
    		          Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_12__["removeToolState"])(element, this.name, data);
    		        } else {
    		          data.text = updatedText;
    		        }

    		        data.active = false;
    		        _externalModules_js__WEBPACK_IMPORTED_MODULE_7__["default"].cornerstone.updateImage(element);
    		      }

    		      var config = this.configuration;
    		      var coords = currentPoints.canvas;
    		      var toolData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_12__["getToolState"])(element, this.name); // Now check to see if there is a handle we can move

    		      if (!toolData) {
    		        return;
    		      }

    		      for (var i = 0; i < toolData.data.length; i++) {
    		        data = toolData.data[i];

    		        if (this.pointNearTool(element, data, coords)) {
    		          data.active = true;
    		          _externalModules_js__WEBPACK_IMPORTED_MODULE_7__["default"].cornerstone.updateImage(element); // Allow relabelling via a callback

    		          config.changeTextCallback(data, eventData, doneChangingTextCallback);
    		          evt.stopImmediatePropagation();
    		          evt.preventDefault();
    		          evt.stopPropagation();
    		          return;
    		        }
    		      }
    		    }
    		  }]);

    		  return TextMarkerTool;
    		}(_base_BaseAnnotationTool_js__WEBPACK_IMPORTED_MODULE_6__["default"]);
    		/**
    		 * This function is a callback to be overwriten in order to provide the wanted feature
    		 * modal, overlay, popup or any kind of interaction with the user to be able to update
    		 * the text marker label.
    		 *
    		 * @param  {Object} data
    		 * @param  {Object} eventData
    		 * @param  {doneChangingTextCallback} doneChangingTextCallback
    		 * @returns {void}
    		 */




    		var changeTextCallback = function changeTextCallback(data, eventData, doneChangingTextCallback) {
    		  // eslint-disable-next-line no-alert
    		  doneChangingTextCallback(data, prompt('Change your annotation:'));
    		};
    		/**
    		 * @callback doneChangingTextCallback
    		 * @param {Object} data
    		 * @param {string} text - The new text
    		 */

    		/***/ }),

    		/***/ "./tools/annotation/bidirectionalTool/addNewMeasurement.js":
    		/*!*****************************************************************!*\
    		  !*** ./tools/annotation/bidirectionalTool/addNewMeasurement.js ***!
    		  \*****************************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../../events.js */ "./events.js");
    		/* harmony import */ var _manipulators_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../../manipulators/index.js */ "./manipulators/index.js");
    		/* harmony import */ var _manipulators_anyHandlesOutsideImage_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../../manipulators/anyHandlesOutsideImage.js */ "./manipulators/anyHandlesOutsideImage.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../../../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../util/triggerEvent.js */ "./util/triggerEvent.js");
    		/* harmony import */ var _util_getActiveTool__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../util/getActiveTool */ "./util/getActiveTool.js");
    		/* harmony import */ var _base_BaseAnnotationTool__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../base/BaseAnnotationTool */ "./tools/base/BaseAnnotationTool.js");








    		/* harmony default export */ __webpack_exports__["default"] = (function (evt, interactionType) {
    		  var _this = this;

    		  var eventData = evt.detail;
    		  var element = eventData.element,
    		      image = eventData.image,
    		      buttons = eventData.buttons;
    		  var config = this.configuration;

    		  if (checkPixelSpacing(image)) {
    		    return;
    		  }

    		  var measurementData = this.createNewMeasurement(eventData);

    		  var doneCallback = function doneCallback() {
    		    measurementData.active = false;
    		    _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.updateImage(element);
    		  }; // Associate this data with this imageId so we can render it and manipulate it


    		  Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_4__["addToolState"])(element, this.name, measurementData);
    		  _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.updateImage(element);
    		  var timestamp = new Date().getTime();
    		  var _measurementData$hand = measurementData.handles,
    		      end = _measurementData$hand.end,
    		      perpendicularStart = _measurementData$hand.perpendicularStart;
    		  Object(_manipulators_index_js__WEBPACK_IMPORTED_MODULE_2__["moveNewHandle"])(eventData, this.name, measurementData, end, {
    		    doneMovingCallback: function doneMovingCallback() {
    		      var handles = measurementData.handles,
    		          longestDiameter = measurementData.longestDiameter,
    		          shortestDiameter = measurementData.shortestDiameter;
    		      var hasHandlesOutside = Object(_manipulators_anyHandlesOutsideImage_js__WEBPACK_IMPORTED_MODULE_3__["default"])(eventData, handles);
    		      var longestDiameterSize = parseFloat(longestDiameter) || 0;
    		      var shortestDiameterSize = parseFloat(shortestDiameter) || 0;
    		      var isTooSmal = longestDiameterSize < 1 || shortestDiameterSize < 1;
    		      var isTooFast = new Date().getTime() - timestamp < 150;

    		      if (hasHandlesOutside || isTooSmal || isTooFast) {
    		        // Delete the measurement
    		        measurementData.cancelled = true;
    		        Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_4__["removeToolState"])(element, _this.name, measurementData);
    		      } else {
    		        // Set lesionMeasurementData Session
    		        config.getMeasurementLocationCallback(measurementData, eventData, doneCallback);
    		      } // Perpendicular line is not connected to long-line


    		      perpendicularStart.locked = false;
    		      measurementData.invalidated = true;
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.updateImage(element);
    		      var activeTool = Object(_util_getActiveTool__WEBPACK_IMPORTED_MODULE_6__["default"])(element, buttons, interactionType);

    		      if (activeTool instanceof _base_BaseAnnotationTool__WEBPACK_IMPORTED_MODULE_7__["default"]) {
    		        activeTool.updateCachedStats(image, element, measurementData);
    		      }

    		      var modifiedEventData = {
    		        toolType: _this.name,
    		        element: element,
    		        measurementData: measurementData
    		      };
    		      Object(_util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_5__["default"])(element, _events_js__WEBPACK_IMPORTED_MODULE_1__["default"].MEASUREMENT_MODIFIED, modifiedEventData);
    		      Object(_util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_5__["default"])(element, _events_js__WEBPACK_IMPORTED_MODULE_1__["default"].MEASUREMENT_COMPLETED, modifiedEventData);
    		    }
    		  }, interactionType);
    		});

    		var checkPixelSpacing = function checkPixelSpacing(image) {
    		  var imagePlane = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.metaData.get('imagePlaneModule', image.imageId);
    		  var rowPixelSpacing = image.rowPixelSpacing;
    		  var colPixelSpacing = image.columnPixelSpacing;

    		  if (imagePlane) {
    		    rowPixelSpacing = imagePlane.rowPixelSpacing || imagePlane.rowImagePixelSpacing;
    		    colPixelSpacing = imagePlane.columnPixelSpacing || imagePlane.colImagePixelSpacing;
    		  } // LT-29 Disable Target Measurements when pixel spacing is not available


    		  return !rowPixelSpacing || !colPixelSpacing;
    		};

    		/***/ }),

    		/***/ "./tools/annotation/bidirectionalTool/createNewMeasurement.js":
    		/*!********************************************************************!*\
    		  !*** ./tools/annotation/bidirectionalTool/createNewMeasurement.js ***!
    		  \********************************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		var getHandle = function getHandle(x, y, index) {
    		  var extraAttributes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
    		  return Object.assign({
    		    x: x,
    		    y: y,
    		    index: index,
    		    drawnIndependently: false,
    		    allowedOutsideImage: false,
    		    highlight: true,
    		    active: false
    		  }, extraAttributes);
    		};

    		/* harmony default export */ __webpack_exports__["default"] = (function (mouseEventData) {
    		  var _mouseEventData$curre = mouseEventData.currentPoints.image,
    		      x = _mouseEventData$curre.x,
    		      y = _mouseEventData$curre.y; // Create the measurement data for this tool with the end handle activated

    		  var measurementData = {
    		    toolType: this.name,
    		    isCreating: true,
    		    visible: true,
    		    active: true,
    		    invalidated: true,
    		    handles: {
    		      start: getHandle(x, y, 0),
    		      end: getHandle(x, y, 1, {
    		        active: true
    		      }),
    		      perpendicularStart: getHandle(x, y, 2, {
    		        locked: true
    		      }),
    		      perpendicularEnd: getHandle(x, y, 3),
    		      textBox: getHandle(x - 50, y - 70, null, {
    		        highlight: false,
    		        hasMoved: true,
    		        active: false,
    		        movesIndependently: false,
    		        drawnIndependently: true,
    		        allowedOutsideImage: true,
    		        hasBoundingBox: true
    		      })
    		    },
    		    longestDiameter: 0,
    		    shortestDiameter: 0
    		  };
    		  return measurementData;
    		});

    		/***/ }),

    		/***/ "./tools/annotation/bidirectionalTool/handleSelectedCallback.js":
    		/*!**********************************************************************!*\
    		  !*** ./tools/annotation/bidirectionalTool/handleSelectedCallback.js ***!
    		  \**********************************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony default export */ __webpack_exports__["default"] = (function (evt, toolData, handle) {
    		  var interactionType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'mouse';

    		  if (interactionType === 'touch') {
    		    this.handleSelectedTouchCallback(evt);
    		  } else {
    		    this.handleSelectedMouseCallback(evt);
    		  }
    		});

    		/***/ }),

    		/***/ "./tools/annotation/bidirectionalTool/handleSelectedMouseCallback.js":
    		/*!***************************************************************************!*\
    		  !*** ./tools/annotation/bidirectionalTool/handleSelectedMouseCallback.js ***!
    		  \***************************************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "../node_modules/@babel/runtime/helpers/typeof.js");
    		/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _store_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../store/index.js */ "./store/index.js");
    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../../events.js */ "./events.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../../../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _manipulators_anyHandlesOutsideImage_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../../../manipulators/anyHandlesOutsideImage.js */ "./manipulators/anyHandlesOutsideImage.js");
    		/* harmony import */ var _manipulators_getHandleNearImagePoint_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../../../manipulators/getHandleNearImagePoint.js */ "./manipulators/getHandleNearImagePoint.js");
    		/* harmony import */ var _manipulators_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../../../manipulators/index.js */ "./manipulators/index.js");
    		/* harmony import */ var _moveHandle_moveHandle_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./moveHandle/moveHandle.js */ "./tools/annotation/bidirectionalTool/moveHandle/moveHandle.js");
    		/* harmony import */ var _invertHandles_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./invertHandles.js */ "./tools/annotation/bidirectionalTool/invertHandles.js");
    		/* harmony import */ var _store_setToolCursor_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../store/setToolCursor.js */ "./store/setToolCursor.js");


    		/* jshint -W083 */










    		/* harmony default export */ __webpack_exports__["default"] = (function (evt) {
    		  var _this = this;

    		  var eventData = evt.detail;
    		  var element = eventData.element;
    		  var data;
    		  var distanceThreshold = _store_index_js__WEBPACK_IMPORTED_MODULE_2__["state"].clickProximity;

    		  var handleDoneMove = function handleDoneMove(handle) {
    		    data.invalidated = true;

    		    if (Object(_manipulators_anyHandlesOutsideImage_js__WEBPACK_IMPORTED_MODULE_5__["default"])(eventData, data.handles)) {
    		      // Delete the measurement
    		      Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_4__["removeToolState"])(element, _this.name, data);
    		    } // Update the handles to keep selected state


    		    if (handle) {
    		      handle.moving = false;
    		      handle.selected = true;
    		    }

    		    Object(_store_setToolCursor_js__WEBPACK_IMPORTED_MODULE_10__["setToolCursor"])(_this.element, _this.svgCursor);
    		    _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.updateImage(element);
    		    element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_3__["default"].MOUSE_MOVE, _this._moveCallback);
    		    element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_3__["default"].TOUCH_START, _this._moveCallback);
    		  };

    		  var coords = eventData.startPoints.canvas;
    		  var toolData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_4__["getToolState"])(evt.currentTarget, this.name);

    		  if (!toolData) {
    		    return;
    		  } // Now check to see if there is a handle we can move


    		  var _loop = function _loop(i) {
    		    data = toolData.data[i];
    		    var handleParams = [element, data.handles, coords, distanceThreshold];
    		    var handle = _manipulators_getHandleNearImagePoint_js__WEBPACK_IMPORTED_MODULE_6__["default"].apply(void 0, handleParams);

    		    if (handle) {
    		      element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_3__["default"].MOUSE_MOVE, _this._moveCallback);
    		      element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_3__["default"].TOUCH_START, _this._moveCallback);
    		      data.active = true;
    		      unselectAllHandles(data.handles);
    		      handle.moving = true; // Invert handles if needed

    		      handle = Object(_invertHandles_js__WEBPACK_IMPORTED_MODULE_9__["default"])(eventData, data, handle);
    		      /* Hide the cursor to improve precision while resizing the line or set to move
    		         if dragging text box
    		      */

    		      if (!handle.hasBoundingBox) {
    		        Object(_store_setToolCursor_js__WEBPACK_IMPORTED_MODULE_10__["hideToolCursor"])(_this.element);
    		      }

    		      Object(_moveHandle_moveHandle_js__WEBPACK_IMPORTED_MODULE_8__["default"])(eventData, _this.name, data, handle, function () {
    		        return handleDoneMove(handle);
    		      });
    		      preventPropagation(evt);
    		      return {
    		        v: true
    		      };
    		    }
    		  };

    		  for (var i = 0; i < toolData.data.length; i++) {
    		    var _ret = _loop(i);

    		    if (_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(_ret) === "object") return _ret.v;
    		  }

    		  var getDoneMovingCallback = function getDoneMovingCallback(handles) {
    		    return function () {
    		      setHandlesMovingState(handles, false);
    		      handleDoneMove();
    		    };
    		  };

    		  for (var i = 0; i < toolData.data.length; i++) {
    		    data = toolData.data[i];

    		    if (this.pointNearTool(element, data, coords, 'mouse')) {
    		      element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_3__["default"].MOUSE_MOVE, this._moveCallback);
    		      element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_3__["default"].TOUCH_START, this._moveCallback);
    		      data.active = true;
    		      unselectAllHandles(data.handles);
    		      setHandlesMovingState(data.handles, true);
    		      var doneMovingCallback = getDoneMovingCallback(data.handles);
    		      Object(_manipulators_index_js__WEBPACK_IMPORTED_MODULE_7__["moveAllHandles"])(eventData, this.name, data, null, {
    		        deleteIfHandleOutsideImage: true,
    		        preventHandleOutsideImage: false,
    		        doneMovingCallback: doneMovingCallback
    		      }, 'mouse');
    		      preventPropagation(evt);
    		      return true;
    		    }
    		  }
    		}); // Clear the selected state for the given handles object

    		var unselectAllHandles = function unselectAllHandles(handles) {
    		  var imageNeedsUpdate = false;
    		  Object.keys(handles).forEach(function (handleKey) {
    		    if (handleKey === 'textBox') {
    		      return;
    		    }

    		    handles[handleKey].selected = false;
    		    imageNeedsUpdate = handles[handleKey].active || imageNeedsUpdate;
    		    handles[handleKey].active = false;
    		  });
    		  return imageNeedsUpdate;
    		};

    		var setHandlesMovingState = function setHandlesMovingState(handles, state) {
    		  Object.keys(handles).forEach(function (handleKey) {
    		    if (handleKey === 'textBox') {
    		      return;
    		    }

    		    handles[handleKey].moving = state;
    		  });
    		};

    		var preventPropagation = function preventPropagation(evt) {
    		  evt.stopImmediatePropagation();
    		  evt.stopPropagation();
    		  evt.preventDefault();
    		};

    		/***/ }),

    		/***/ "./tools/annotation/bidirectionalTool/handleSelectedTouchCallback.js":
    		/*!***************************************************************************!*\
    		  !*** ./tools/annotation/bidirectionalTool/handleSelectedTouchCallback.js ***!
    		  \***************************************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "../node_modules/@babel/runtime/helpers/typeof.js");
    		/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _store_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../store/index.js */ "./store/index.js");
    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../../events.js */ "./events.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../../../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _manipulators_anyHandlesOutsideImage_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../../../manipulators/anyHandlesOutsideImage.js */ "./manipulators/anyHandlesOutsideImage.js");
    		/* harmony import */ var _manipulators_getHandleNearImagePoint_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../../../manipulators/getHandleNearImagePoint.js */ "./manipulators/getHandleNearImagePoint.js");
    		/* harmony import */ var _manipulators_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../../../manipulators/index.js */ "./manipulators/index.js");
    		/* harmony import */ var _moveHandle_touchMoveHandle_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./moveHandle/touchMoveHandle.js */ "./tools/annotation/bidirectionalTool/moveHandle/touchMoveHandle.js");


    		/* jshint -W083 */








    		/* harmony default export */ __webpack_exports__["default"] = (function (evt) {
    		  var _this = this;

    		  var eventData = evt.detail;
    		  var element = eventData.element;
    		  var data;
    		  var distanceThreshold = _store_index_js__WEBPACK_IMPORTED_MODULE_2__["state"].touchProximity;

    		  var handleDoneMove = function handleDoneMove(handle) {
    		    data.invalidated = true;

    		    if (Object(_manipulators_anyHandlesOutsideImage_js__WEBPACK_IMPORTED_MODULE_5__["default"])(eventData, data.handles)) {
    		      // Delete the measurement
    		      Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_4__["removeToolState"])(element, _this.name, data);
    		    } // Update the handles to keep selected state


    		    if (handle) {
    		      handle.moving = false;
    		      handle.selected = true;
    		    }

    		    _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone.updateImage(element);
    		    element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_3__["default"].TOUCH_DRAG, _this._moveCallback);
    		  };

    		  var coords = eventData.startPoints.canvas;
    		  var toolData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_4__["getToolState"])(evt.currentTarget, this.name);

    		  if (!toolData) {
    		    return;
    		  } // Now check to see if there is a handle we can move


    		  var _loop = function _loop(i) {
    		    data = toolData.data[i];
    		    var handleParams = [element, data.handles, coords, distanceThreshold];
    		    var handle = _manipulators_getHandleNearImagePoint_js__WEBPACK_IMPORTED_MODULE_6__["default"].apply(void 0, handleParams);

    		    if (handle) {
    		      element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_3__["default"].TOUCH_DRAG, _this._moveCallback);
    		      data.active = true;
    		      unselectAllHandles(data.handles);
    		      handle.moving = true;
    		      Object(_moveHandle_touchMoveHandle_js__WEBPACK_IMPORTED_MODULE_8__["default"])(eventData, _this.name, data, handle, function () {
    		        return handleDoneMove(handle);
    		      });
    		      preventPropagation(evt);
    		      return {
    		        v: true
    		      };
    		    }
    		  };

    		  for (var i = 0; i < toolData.data.length; i++) {
    		    var _ret = _loop(i);

    		    if (_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(_ret) === "object") return _ret.v;
    		  }

    		  var getDoneMovingCallback = function getDoneMovingCallback(handles) {
    		    return function () {
    		      setHandlesMovingState(handles, false);
    		      handleDoneMove();
    		    };
    		  };

    		  for (var i = 0; i < toolData.data.length; i++) {
    		    data = toolData.data[i];

    		    if (this.pointNearTool(element, data, coords, 'touch')) {
    		      element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_3__["default"].TOUCH_DRAG, this._moveCallback);
    		      data.active = true;
    		      unselectAllHandles(data.handles);
    		      setHandlesMovingState(data.handles, true);
    		      var doneMovingCallback = getDoneMovingCallback(data.handles);
    		      Object(_manipulators_index_js__WEBPACK_IMPORTED_MODULE_7__["moveAllHandles"])(eventData, this.name, data, null, {
    		        deleteIfHandleOutsideImage: true,
    		        preventHandleOutsideImage: false,
    		        doneMovingCallback: doneMovingCallback
    		      }, 'touch');
    		      preventPropagation(evt);
    		      return true;
    		    }
    		  }
    		}); // Clear the selected state for the given handles object

    		var unselectAllHandles = function unselectAllHandles(handles) {
    		  var imageNeedsUpdate = false;
    		  Object.keys(handles).forEach(function (handleKey) {
    		    if (handleKey === 'textBox') {
    		      return;
    		    }

    		    handles[handleKey].selected = false;
    		    imageNeedsUpdate = handles[handleKey].active || imageNeedsUpdate;
    		    handles[handleKey].active = false;
    		  });
    		  return imageNeedsUpdate;
    		};

    		var setHandlesMovingState = function setHandlesMovingState(handles, state) {
    		  Object.keys(handles).forEach(function (handleKey) {
    		    if (handleKey === 'textBox') {
    		      return;
    		    }

    		    handles[handleKey].moving = state;
    		  });
    		};

    		var preventPropagation = function preventPropagation(evt) {
    		  evt.stopImmediatePropagation();
    		  evt.stopPropagation();
    		  evt.preventDefault();
    		};

    		/***/ }),

    		/***/ "./tools/annotation/bidirectionalTool/invertHandles.js":
    		/*!*************************************************************!*\
    		  !*** ./tools/annotation/bidirectionalTool/invertHandles.js ***!
    		  \*************************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return invertHandles; });
    		var swapAttribute = function swapAttribute(a, b, attribute) {
    		  var originalA = a[attribute];
    		  var originalB = b[attribute];
    		  a[attribute] = originalB;
    		  b[attribute] = originalA;
    		};

    		var swapHandles = function swapHandles(a, b) {
    		  swapAttribute(a, b, 'x');
    		  swapAttribute(a, b, 'y');
    		  swapAttribute(a, b, 'moving');
    		  swapAttribute(a, b, 'hover');
    		  swapAttribute(a, b, 'active');
    		  swapAttribute(a, b, 'selected');
    		};

    		function invertHandles(eventData, measurementData, handle) {
    		  var _eventData$image = eventData.image,
    		      rowPixelSpacing = _eventData$image.rowPixelSpacing,
    		      columnPixelSpacing = _eventData$image.columnPixelSpacing;
    		  var handles = measurementData.handles;
    		  var start = handles.start,
    		      end = handles.end,
    		      perpendicularStart = handles.perpendicularStart,
    		      perpendicularEnd = handles.perpendicularEnd; // Calculate the long axis length

    		  var dx = (start.x - end.x) * (columnPixelSpacing || 1);
    		  var dy = (start.y - end.y) * (rowPixelSpacing || 1);
    		  var length = Math.sqrt(dx * dx + dy * dy); // Calculate the short axis length

    		  var wx = (perpendicularStart.x - perpendicularEnd.x) * (columnPixelSpacing || 1);
    		  var wy = (perpendicularStart.y - perpendicularEnd.y) * (rowPixelSpacing || 1);
    		  var width = Math.sqrt(wx * wx + wy * wy) || 0;

    		  if (width > length) {
    		    swapHandles(start, end);
    		    swapHandles(start, perpendicularStart);
    		    swapHandles(end, perpendicularEnd);
    		    return Object.values(handles).find(function (h) {
    		      return h.moving === true;
    		    });
    		  }

    		  return handle;
    		}

    		/***/ }),

    		/***/ "./tools/annotation/bidirectionalTool/mouseMoveCallback.js":
    		/*!*****************************************************************!*\
    		  !*** ./tools/annotation/bidirectionalTool/mouseMoveCallback.js ***!
    		  \*****************************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _stateManagement_toolCoordinates_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../../stateManagement/toolCoordinates.js */ "./stateManagement/toolCoordinates.js");
    		/* harmony import */ var _manipulators_getHandleNearImagePoint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../../manipulators/getHandleNearImagePoint.js */ "./manipulators/getHandleNearImagePoint.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../../stateManagement/toolState.js */ "./stateManagement/toolState.js");



    		 // Replaces the cornerstoneTools.handleActivator function by skiping the active handle comparison

    		var handleActivator = function handleActivator(element, handles, canvasPoint) {
    		  var distanceThreshold = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 6;
    		  var nearbyHandle = Object(_manipulators_getHandleNearImagePoint_js__WEBPACK_IMPORTED_MODULE_2__["default"])(element, handles, canvasPoint, distanceThreshold);
    		  var handleActivatorChanged = false;
    		  Object.keys(handles).forEach(function (handleKey) {
    		    if (handleKey === 'textBox') {
    		      return;
    		    }

    		    var handle = handles[handleKey];
    		    var newActiveState = handle === nearbyHandle;

    		    if (handle.active !== newActiveState) {
    		      handleActivatorChanged = true;
    		    }

    		    handle.active = newActiveState;
    		  });
    		  return handleActivatorChanged;
    		}; // MouseMoveCallback is used to hide handles when mouse is away


    		/* harmony default export */ __webpack_exports__["default"] = (function (event) {
    		  var _this = this;

    		  var eventData = event.detail;
    		  var element = eventData.element;
    		  _stateManagement_toolCoordinates_js__WEBPACK_IMPORTED_MODULE_1__["default"].setCoords(eventData); // If we have no tool data for this element, do nothing

    		  var toolData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_3__["getToolState"])(element, this.name);

    		  if (!toolData) {
    		    return;
    		  } // We have tool data, search through all data and see if we can activate a handle


    		  var imageNeedsUpdate = false;

    		  var _loop = function _loop(i) {
    		    // Get the cursor position in canvas coordinates
    		    var coords = eventData.currentPoints.canvas;
    		    var data = toolData.data[i];
    		    var handleActivatorChanged = handleActivator(element, data.handles, coords);
    		    Object.keys(data.handles).forEach(function (handleKey) {
    		      if (handleKey === 'textBox') {
    		        return;
    		      }

    		      var handle = data.handles[handleKey];
    		      handle.hover = handle.active;
    		    });

    		    if (handleActivatorChanged) {
    		      imageNeedsUpdate = true;
    		    }

    		    var nearTool = _this.pointNearTool(element, data, coords, 'mouse');

    		    var nearToolAndInactive = nearTool && !data.active;
    		    var notNearToolAndActive = !nearTool && data.active;

    		    if (nearToolAndInactive || notNearToolAndActive) {
    		      data.active = !data.active;
    		      imageNeedsUpdate = true;
    		    }
    		  };

    		  for (var i = 0; i < toolData.data.length; i++) {
    		    _loop(i);
    		  } // Handle activation status changed, redraw the image


    		  if (imageNeedsUpdate === true) {
    		    _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.updateImage(element);
    		  }
    		});

    		/***/ }),

    		/***/ "./tools/annotation/bidirectionalTool/moveHandle/moveHandle.js":
    		/*!*********************************************************************!*\
    		  !*** ./tools/annotation/bidirectionalTool/moveHandle/moveHandle.js ***!
    		  \*********************************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../../../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _store_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../store/index.js */ "./store/index.js");
    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../../../events.js */ "./events.js");
    		/* harmony import */ var _setHandlesPosition_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./setHandlesPosition.js */ "./tools/annotation/bidirectionalTool/moveHandle/setHandlesPosition.js");
    		/* harmony import */ var _util_getActiveTool__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../util/getActiveTool */ "./util/getActiveTool.js");
    		/* harmony import */ var _base_BaseAnnotationTool__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../base/BaseAnnotationTool */ "./tools/base/BaseAnnotationTool.js");






    		/* harmony default export */ __webpack_exports__["default"] = (function (mouseEventData, toolType, data, handle, doneMovingCallback, preventHandleOutsideImage) {
    		  var element = mouseEventData.element,
    		      image = mouseEventData.image,
    		      buttons = mouseEventData.buttons;
    		  var distanceFromTool = {
    		    x: handle.x - mouseEventData.currentPoints.image.x,
    		    y: handle.y - mouseEventData.currentPoints.image.y
    		  };

    		  var _dragCallback = function _dragCallback(event) {
    		    var eventData = event.detail;
    		    handle.hasMoved = true;

    		    if (handle.index === undefined || handle.index === null) {
    		      handle.x = eventData.currentPoints.image.x + distanceFromTool.x;
    		      handle.y = eventData.currentPoints.image.y + distanceFromTool.y;
    		    } else {
    		      Object(_setHandlesPosition_js__WEBPACK_IMPORTED_MODULE_3__["default"])(handle, eventData, data, distanceFromTool);
    		    }

    		    if (preventHandleOutsideImage) {
    		      handle.x = Math.max(handle.x, 0);
    		      handle.x = Math.min(handle.x, eventData.image.width);
    		      handle.y = Math.max(handle.y, 0);
    		      handle.y = Math.min(handle.y, eventData.image.height);
    		    }

    		    data.invalidated = true;
    		    _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.updateImage(element);
    		    var activeTool = Object(_util_getActiveTool__WEBPACK_IMPORTED_MODULE_4__["default"])(element, buttons, 'mouse');

    		    if (activeTool instanceof _base_BaseAnnotationTool__WEBPACK_IMPORTED_MODULE_5__["default"]) {
    		      activeTool.updateCachedStats(image, element, data);
    		    }

    		    var modifiedEventData = {
    		      toolType: toolType,
    		      element: element,
    		      measurementData: data
    		    };
    		    _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.triggerEvent(element, _events_js__WEBPACK_IMPORTED_MODULE_2__["default"].MEASUREMENT_MODIFIED, modifiedEventData);
    		  };

    		  handle.active = true;
    		  _store_index_js__WEBPACK_IMPORTED_MODULE_1__["state"].isToolLocked = true;
    		  element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_2__["default"].MOUSE_DRAG, _dragCallback);
    		  element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_2__["default"].TOUCH_DRAG, _dragCallback);
    		  var currentImage = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.getImage(element);

    		  var imageRenderedHandler = function imageRenderedHandler() {
    		    var newImage = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.getImage(element); // Check if the rendered image changed during measurement modifying and stop it if so

    		    if (newImage.imageId !== currentImage.imageId) {
    		      interactionEndCallback();
    		    }
    		  }; // Bind the event listener for image rendering


    		  element.addEventListener(_externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.EVENTS.IMAGE_RENDERED, imageRenderedHandler);

    		  var interactionEndCallback = function interactionEndCallback() {
    		    handle.active = false;
    		    _store_index_js__WEBPACK_IMPORTED_MODULE_1__["state"].isToolLocked = false;
    		    element.removeEventListener(_externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.EVENTS.IMAGE_RENDERED, imageRenderedHandler);
    		    element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_2__["default"].MOUSE_DRAG, _dragCallback);
    		    element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_2__["default"].MOUSE_UP, interactionEndCallback);
    		    element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_2__["default"].MOUSE_CLICK, interactionEndCallback);
    		    element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_2__["default"].TOUCH_DRAG, _dragCallback);
    		    element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_2__["default"].TOUCH_DRAG_END, interactionEndCallback);
    		    element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_2__["default"].TAP, interactionEndCallback);
    		    _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.updateImage(element);

    		    if (typeof doneMovingCallback === 'function') {
    		      doneMovingCallback();
    		    }
    		  };

    		  element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_2__["default"].MOUSE_UP, interactionEndCallback);
    		  element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_2__["default"].MOUSE_CLICK, interactionEndCallback);
    		  element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_2__["default"].TOUCH_DRAG_END, interactionEndCallback);
    		  element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_2__["default"].TAP, interactionEndCallback);
    		});

    		/***/ }),

    		/***/ "./tools/annotation/bidirectionalTool/moveHandle/perpendicularBothFixedLeft.js":
    		/*!*************************************************************************************!*\
    		  !*** ./tools/annotation/bidirectionalTool/moveHandle/perpendicularBothFixedLeft.js ***!
    		  \*************************************************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../../../externalModules.js */ "./externalModules.js");
    		 // Move long-axis start point

    		/* harmony default export */ __webpack_exports__["default"] = (function (proposedPoint, data) {
    		  var distance = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstoneMath.point.distance;
    		  var _data$handles = data.handles,
    		      start = _data$handles.start,
    		      end = _data$handles.end,
    		      perpendicularStart = _data$handles.perpendicularStart,
    		      perpendicularEnd = _data$handles.perpendicularEnd;
    		  var longLine = {
    		    start: {
    		      x: start.x,
    		      y: start.y
    		    },
    		    end: {
    		      x: end.x,
    		      y: end.y
    		    }
    		  };
    		  var perpendicularLine = {
    		    start: {
    		      x: perpendicularStart.x,
    		      y: perpendicularStart.y
    		    },
    		    end: {
    		      x: perpendicularEnd.x,
    		      y: perpendicularEnd.y
    		    }
    		  };
    		  var intersection = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstoneMath.lineSegment.intersectLine(longLine, perpendicularLine);
    		  var distanceFromPerpendicularP1 = distance(perpendicularStart, intersection);
    		  var distanceFromPerpendicularP2 = distance(perpendicularEnd, intersection);
    		  var distanceToLineP2 = distance(end, intersection);
    		  var newLineLength = distance(end, proposedPoint);

    		  if (newLineLength <= distanceToLineP2) {
    		    return false;
    		  }

    		  var dx = (end.x - proposedPoint.x) / newLineLength;
    		  var dy = (end.y - proposedPoint.y) / newLineLength;
    		  var k = distanceToLineP2 / newLineLength;
    		  var newIntersection = {
    		    x: end.x + (proposedPoint.x - end.x) * k,
    		    y: end.y + (proposedPoint.y - end.y) * k
    		  };
    		  perpendicularStart.x = newIntersection.x - distanceFromPerpendicularP1 * dy;
    		  perpendicularStart.y = newIntersection.y + distanceFromPerpendicularP1 * dx;
    		  perpendicularEnd.x = newIntersection.x + distanceFromPerpendicularP2 * dy;
    		  perpendicularEnd.y = newIntersection.y - distanceFromPerpendicularP2 * dx;
    		  return true;
    		});

    		/***/ }),

    		/***/ "./tools/annotation/bidirectionalTool/moveHandle/perpendicularBothFixedRight.js":
    		/*!**************************************************************************************!*\
    		  !*** ./tools/annotation/bidirectionalTool/moveHandle/perpendicularBothFixedRight.js ***!
    		  \**************************************************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../../../externalModules.js */ "./externalModules.js");
    		 // Move long-axis end point

    		/* harmony default export */ __webpack_exports__["default"] = (function (proposedPoint, data) {
    		  var distance = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstoneMath.point.distance;
    		  var _data$handles = data.handles,
    		      start = _data$handles.start,
    		      end = _data$handles.end,
    		      perpendicularStart = _data$handles.perpendicularStart,
    		      perpendicularEnd = _data$handles.perpendicularEnd;
    		  var longLine = {
    		    start: {
    		      x: start.x,
    		      y: start.y
    		    },
    		    end: {
    		      x: end.x,
    		      y: end.y
    		    }
    		  };
    		  var perpendicularLine = {
    		    start: {
    		      x: perpendicularStart.x,
    		      y: perpendicularStart.y
    		    },
    		    end: {
    		      x: perpendicularEnd.x,
    		      y: perpendicularEnd.y
    		    }
    		  };
    		  var intersection = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstoneMath.lineSegment.intersectLine(longLine, perpendicularLine);
    		  var distanceFromPerpendicularP1 = distance(perpendicularStart, intersection);
    		  var distanceFromPerpendicularP2 = distance(perpendicularEnd, intersection);
    		  var distanceToLineP2 = distance(start, intersection);
    		  var newLineLength = distance(start, proposedPoint);

    		  if (newLineLength <= distanceToLineP2) {
    		    return false;
    		  }

    		  var dx = (start.x - proposedPoint.x) / newLineLength;
    		  var dy = (start.y - proposedPoint.y) / newLineLength;
    		  var k = distanceToLineP2 / newLineLength;
    		  var newIntersection = {
    		    x: start.x + (proposedPoint.x - start.x) * k,
    		    y: start.y + (proposedPoint.y - start.y) * k
    		  };
    		  perpendicularStart.x = newIntersection.x + distanceFromPerpendicularP1 * dy;
    		  perpendicularStart.y = newIntersection.y - distanceFromPerpendicularP1 * dx;
    		  perpendicularEnd.x = newIntersection.x - distanceFromPerpendicularP2 * dy;
    		  perpendicularEnd.y = newIntersection.y + distanceFromPerpendicularP2 * dx;
    		  return true;
    		});

    		/***/ }),

    		/***/ "./tools/annotation/bidirectionalTool/moveHandle/perpendicularLeftFixedPoint.js":
    		/*!**************************************************************************************!*\
    		  !*** ./tools/annotation/bidirectionalTool/moveHandle/perpendicularLeftFixedPoint.js ***!
    		  \**************************************************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../../../externalModules.js */ "./externalModules.js");
    		 // Move perpendicular line start point

    		/* harmony default export */ __webpack_exports__["default"] = (function (movedPoint, data) {
    		  var distance = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstoneMath.point.distance;
    		  var _data$handles = data.handles,
    		      start = _data$handles.start,
    		      end = _data$handles.end,
    		      perpendicularStart = _data$handles.perpendicularStart,
    		      perpendicularEnd = _data$handles.perpendicularEnd;
    		  var fudgeFactor = 1;
    		  var fixedPoint = perpendicularEnd;
    		  var distanceFromFixed = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstoneMath.lineSegment.distanceToPoint(data.handles, fixedPoint);
    		  var distanceFromMoved = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstoneMath.lineSegment.distanceToPoint(data.handles, movedPoint);
    		  var distanceBetweenPoints = distance(fixedPoint, movedPoint);
    		  var total = distanceFromFixed + distanceFromMoved;

    		  if (distanceBetweenPoints <= distanceFromFixed) {
    		    return false;
    		  }

    		  var length = distance(start, end);

    		  if (length === 0) {
    		    return false;
    		  }

    		  var dx = (start.x - end.x) / length;
    		  var dy = (start.y - end.y) / length;
    		  var adjustedLineP1 = {
    		    x: start.x - fudgeFactor * dx,
    		    y: start.y - fudgeFactor * dy
    		  };
    		  var adjustedLineP2 = {
    		    x: end.x + fudgeFactor * dx,
    		    y: end.y + fudgeFactor * dy
    		  };
    		  perpendicularStart.x = movedPoint.x;
    		  perpendicularStart.y = movedPoint.y;
    		  perpendicularEnd.x = movedPoint.x - total * dy;
    		  perpendicularEnd.y = movedPoint.y + total * dx;
    		  var longLine = {
    		    start: {
    		      x: start.x,
    		      y: start.y
    		    },
    		    end: {
    		      x: end.x,
    		      y: end.y
    		    }
    		  };
    		  var perpendicularLine = {
    		    start: {
    		      x: perpendicularStart.x,
    		      y: perpendicularStart.y
    		    },
    		    end: {
    		      x: perpendicularEnd.x,
    		      y: perpendicularEnd.y
    		    }
    		  };
    		  var intersection = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstoneMath.lineSegment.intersectLine(longLine, perpendicularLine);

    		  if (!intersection) {
    		    if (distance(movedPoint, start) > distance(movedPoint, end)) {
    		      perpendicularStart.x = adjustedLineP2.x + distanceFromMoved * dy;
    		      perpendicularStart.y = adjustedLineP2.y - distanceFromMoved * dx;
    		      perpendicularEnd.x = perpendicularStart.x - total * dy;
    		      perpendicularEnd.y = perpendicularStart.y + total * dx;
    		    } else {
    		      perpendicularStart.x = adjustedLineP1.x + distanceFromMoved * dy;
    		      perpendicularStart.y = adjustedLineP1.y - distanceFromMoved * dx;
    		      perpendicularEnd.x = perpendicularStart.x - total * dy;
    		      perpendicularEnd.y = perpendicularStart.y + total * dx;
    		    }
    		  }

    		  return true;
    		});

    		/***/ }),

    		/***/ "./tools/annotation/bidirectionalTool/moveHandle/perpendicularRightFixedPoint.js":
    		/*!***************************************************************************************!*\
    		  !*** ./tools/annotation/bidirectionalTool/moveHandle/perpendicularRightFixedPoint.js ***!
    		  \***************************************************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../../../externalModules.js */ "./externalModules.js");
    		 // Move perpendicular line end point

    		/* harmony default export */ __webpack_exports__["default"] = (function (movedPoint, data) {
    		  var distance = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstoneMath.point.distance;
    		  var _data$handles = data.handles,
    		      start = _data$handles.start,
    		      end = _data$handles.end,
    		      perpendicularStart = _data$handles.perpendicularStart,
    		      perpendicularEnd = _data$handles.perpendicularEnd;
    		  var fudgeFactor = 1;
    		  var fixedPoint = perpendicularStart;
    		  var distanceFromFixed = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstoneMath.lineSegment.distanceToPoint(data.handles, fixedPoint);
    		  var distanceFromMoved = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstoneMath.lineSegment.distanceToPoint(data.handles, movedPoint);
    		  var distanceBetweenPoints = distance(fixedPoint, movedPoint);
    		  var total = distanceFromFixed + distanceFromMoved;

    		  if (distanceBetweenPoints <= distanceFromFixed) {
    		    return false;
    		  }

    		  var length = distance(start, end);
    		  var dx = (start.x - end.x) / length;
    		  var dy = (start.y - end.y) / length;
    		  var adjustedLineP1 = {
    		    x: start.x - fudgeFactor * dx,
    		    y: start.y - fudgeFactor * dy
    		  };
    		  var adjustedLineP2 = {
    		    x: end.x + fudgeFactor * dx,
    		    y: end.y + fudgeFactor * dy
    		  };
    		  perpendicularStart.x = movedPoint.x + total * dy;
    		  perpendicularStart.y = movedPoint.y - total * dx;
    		  perpendicularEnd.x = movedPoint.x;
    		  perpendicularEnd.y = movedPoint.y;
    		  perpendicularEnd.locked = false;
    		  perpendicularStart.locked = false;
    		  var longLine = {
    		    start: {
    		      x: start.x,
    		      y: start.y
    		    },
    		    end: {
    		      x: end.x,
    		      y: end.y
    		    }
    		  };
    		  var perpendicularLine = {
    		    start: {
    		      x: perpendicularStart.x,
    		      y: perpendicularStart.y
    		    },
    		    end: {
    		      x: perpendicularEnd.x,
    		      y: perpendicularEnd.y
    		    }
    		  };
    		  var intersection = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstoneMath.lineSegment.intersectLine(longLine, perpendicularLine);

    		  if (!intersection) {
    		    if (distance(movedPoint, start) > distance(movedPoint, end)) {
    		      perpendicularEnd.x = adjustedLineP2.x - distanceFromMoved * dy;
    		      perpendicularEnd.y = adjustedLineP2.y + distanceFromMoved * dx;
    		      perpendicularStart.x = perpendicularEnd.x + total * dy;
    		      perpendicularStart.y = perpendicularEnd.y - total * dx;
    		    } else {
    		      perpendicularEnd.x = adjustedLineP1.x - distanceFromMoved * dy;
    		      perpendicularEnd.y = adjustedLineP1.y + distanceFromMoved * dx;
    		      perpendicularStart.x = perpendicularEnd.x + total * dy;
    		      perpendicularStart.y = perpendicularEnd.y - total * dx;
    		    }
    		  }

    		  return true;
    		});

    		/***/ }),

    		/***/ "./tools/annotation/bidirectionalTool/moveHandle/setHandlesPosition.js":
    		/*!*****************************************************************************!*\
    		  !*** ./tools/annotation/bidirectionalTool/moveHandle/setHandlesPosition.js ***!
    		  \*****************************************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../../../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _perpendicularBothFixedLeft_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./perpendicularBothFixedLeft.js */ "./tools/annotation/bidirectionalTool/moveHandle/perpendicularBothFixedLeft.js");
    		/* harmony import */ var _perpendicularBothFixedRight_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./perpendicularBothFixedRight.js */ "./tools/annotation/bidirectionalTool/moveHandle/perpendicularBothFixedRight.js");
    		/* harmony import */ var _perpendicularLeftFixedPoint_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./perpendicularLeftFixedPoint.js */ "./tools/annotation/bidirectionalTool/moveHandle/perpendicularLeftFixedPoint.js");
    		/* harmony import */ var _perpendicularRightFixedPoint_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./perpendicularRightFixedPoint.js */ "./tools/annotation/bidirectionalTool/moveHandle/perpendicularRightFixedPoint.js");




    		 // Sets position of handles(start, end, perpendicularStart, perpendicularEnd)

    		/* harmony default export */ __webpack_exports__["default"] = (function (handle, eventData, data, distanceFromTool) {
    		  var movedPoint;
    		  var outOfBounds;
    		  var result;
    		  var intersection;
    		  var d1;
    		  var d2;
    		  var longLine = {};
    		  var perpendicularLine = {};
    		  var proposedPoint = {
    		    x: eventData.currentPoints.image.x + distanceFromTool.x,
    		    y: eventData.currentPoints.image.y + distanceFromTool.y
    		  };

    		  if (handle.index === 0) {
    		    // If long-axis start point is moved
    		    result = Object(_perpendicularBothFixedLeft_js__WEBPACK_IMPORTED_MODULE_1__["default"])(proposedPoint, data);

    		    if (result) {
    		      handle.x = proposedPoint.x;
    		      handle.y = proposedPoint.y;
    		    } else {
    		      eventData.currentPoints.image.x = handle.x;
    		      eventData.currentPoints.image.y = handle.y;
    		    }
    		  } else if (handle.index === 1) {
    		    // If long-axis end point is moved
    		    result = Object(_perpendicularBothFixedRight_js__WEBPACK_IMPORTED_MODULE_2__["default"])(proposedPoint, data);

    		    if (result) {
    		      handle.x = proposedPoint.x;
    		      handle.y = proposedPoint.y;
    		    } else {
    		      eventData.currentPoints.image.x = handle.x;
    		      eventData.currentPoints.image.y = handle.y;
    		    }
    		  } else if (handle.index === 2) {
    		    outOfBounds = false; // If perpendicular start point is moved

    		    longLine.start = {
    		      x: data.handles.start.x,
    		      y: data.handles.start.y
    		    };
    		    longLine.end = {
    		      x: data.handles.end.x,
    		      y: data.handles.end.y
    		    };
    		    perpendicularLine.start = {
    		      x: data.handles.perpendicularEnd.x,
    		      y: data.handles.perpendicularEnd.y
    		    };
    		    perpendicularLine.end = {
    		      x: proposedPoint.x,
    		      y: proposedPoint.y
    		    };
    		    intersection = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstoneMath.lineSegment.intersectLine(longLine, perpendicularLine);

    		    if (!intersection) {
    		      perpendicularLine.end = {
    		        x: data.handles.perpendicularStart.x,
    		        y: data.handles.perpendicularStart.y
    		      };
    		      intersection = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstoneMath.lineSegment.intersectLine(longLine, perpendicularLine);
    		      d1 = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstoneMath.point.distance(intersection, data.handles.start);
    		      d2 = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstoneMath.point.distance(intersection, data.handles.end);

    		      if (!intersection || d1 < 3 || d2 < 3) {
    		        outOfBounds = true;
    		      }
    		    }

    		    movedPoint = false;

    		    if (!outOfBounds) {
    		      movedPoint = Object(_perpendicularLeftFixedPoint_js__WEBPACK_IMPORTED_MODULE_3__["default"])(proposedPoint, data);

    		      if (!movedPoint) {
    		        eventData.currentPoints.image.x = data.handles.perpendicularStart.x;
    		        eventData.currentPoints.image.y = data.handles.perpendicularStart.y;
    		      }
    		    }
    		  } else if (handle.index === 3) {
    		    outOfBounds = false; // If perpendicular end point is moved

    		    longLine.start = {
    		      x: data.handles.start.x,
    		      y: data.handles.start.y
    		    };
    		    longLine.end = {
    		      x: data.handles.end.x,
    		      y: data.handles.end.y
    		    };
    		    perpendicularLine.start = {
    		      x: data.handles.perpendicularStart.x,
    		      y: data.handles.perpendicularStart.y
    		    };
    		    perpendicularLine.end = {
    		      x: proposedPoint.x,
    		      y: proposedPoint.y
    		    };
    		    intersection = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstoneMath.lineSegment.intersectLine(longLine, perpendicularLine);

    		    if (!intersection) {
    		      perpendicularLine.end = {
    		        x: data.handles.perpendicularEnd.x,
    		        y: data.handles.perpendicularEnd.y
    		      };
    		      intersection = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstoneMath.lineSegment.intersectLine(longLine, perpendicularLine);
    		      d1 = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstoneMath.point.distance(intersection, data.handles.start);
    		      d2 = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstoneMath.point.distance(intersection, data.handles.end);

    		      if (!intersection || d1 < 3 || d2 < 3) {
    		        outOfBounds = true;
    		      }
    		    }

    		    movedPoint = false;

    		    if (!outOfBounds) {
    		      movedPoint = Object(_perpendicularRightFixedPoint_js__WEBPACK_IMPORTED_MODULE_4__["default"])(proposedPoint, data);

    		      if (!movedPoint) {
    		        eventData.currentPoints.image.x = data.handles.perpendicularEnd.x;
    		        eventData.currentPoints.image.y = data.handles.perpendicularEnd.y;
    		      }
    		    }
    		  }
    		});

    		/***/ }),

    		/***/ "./tools/annotation/bidirectionalTool/moveHandle/touchMoveHandle.js":
    		/*!**************************************************************************!*\
    		  !*** ./tools/annotation/bidirectionalTool/moveHandle/touchMoveHandle.js ***!
    		  \**************************************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../../../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _store_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../store/index.js */ "./store/index.js");
    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../../../events.js */ "./events.js");
    		/* harmony import */ var _setHandlesPosition_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./setHandlesPosition.js */ "./tools/annotation/bidirectionalTool/moveHandle/setHandlesPosition.js");
    		/* harmony import */ var _util_getActiveTool__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../util/getActiveTool */ "./util/getActiveTool.js");
    		/* harmony import */ var _base_BaseAnnotationTool__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../base/BaseAnnotationTool */ "./tools/base/BaseAnnotationTool.js");






    		var touchEndEvents = [_events_js__WEBPACK_IMPORTED_MODULE_2__["default"].TOUCH_END, _events_js__WEBPACK_IMPORTED_MODULE_2__["default"].TOUCH_DRAG_END, _events_js__WEBPACK_IMPORTED_MODULE_2__["default"].TOUCH_PINCH, _events_js__WEBPACK_IMPORTED_MODULE_2__["default"].TOUCH_PRESS, _events_js__WEBPACK_IMPORTED_MODULE_2__["default"].TAP];
    		/* harmony default export */ __webpack_exports__["default"] = (function (mouseEventData, toolType, data, handle, doneMovingCallback, preventHandleOutsideImage) {
    		  var element = mouseEventData.element,
    		      image = mouseEventData.image,
    		      buttons = mouseEventData.buttons;
    		  var distanceFromTool = {
    		    x: handle.x - mouseEventData.currentPoints.image.x,
    		    y: handle.y - mouseEventData.currentPoints.image.y
    		  };

    		  var touchDragCallback = function touchDragCallback(event) {
    		    var eventData = event.detail;
    		    handle.hasMoved = true;

    		    if (handle.index === undefined || handle.index === null) {
    		      handle.x = eventData.currentPoints.image.x + distanceFromTool.x;
    		      handle.y = eventData.currentPoints.image.y + distanceFromTool.y;
    		    } else {
    		      Object(_setHandlesPosition_js__WEBPACK_IMPORTED_MODULE_3__["default"])(handle, eventData, data, distanceFromTool);
    		    }

    		    if (preventHandleOutsideImage) {
    		      handle.x = Math.max(handle.x, 0);
    		      handle.x = Math.min(handle.x, eventData.image.width);
    		      handle.y = Math.max(handle.y, 0);
    		      handle.y = Math.min(handle.y, eventData.image.height);
    		    }

    		    data.invalidated = true;
    		    _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.updateImage(element);
    		    var activeTool = Object(_util_getActiveTool__WEBPACK_IMPORTED_MODULE_4__["default"])(element, buttons, 'touch');

    		    if (activeTool instanceof _base_BaseAnnotationTool__WEBPACK_IMPORTED_MODULE_5__["default"]) {
    		      activeTool.updateCachedStats(image, element, data);
    		    }

    		    var modifiedEventData = {
    		      toolType: toolType,
    		      element: element,
    		      measurementData: data
    		    };
    		    _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.triggerEvent(element, _events_js__WEBPACK_IMPORTED_MODULE_2__["default"].MEASUREMENT_MODIFIED, modifiedEventData);
    		  };

    		  handle.active = true;
    		  _store_index_js__WEBPACK_IMPORTED_MODULE_1__["state"].isToolLocked = true;
    		  element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_2__["default"].TOUCH_DRAG, touchDragCallback);

    		  var touchEndCallback = function touchEndCallback() {
    		    handle.active = false;
    		    _store_index_js__WEBPACK_IMPORTED_MODULE_1__["state"].isToolLocked = false;
    		    element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_2__["default"].TOUCH_DRAG, touchDragCallback);
    		    touchEndEvents.forEach(function (eventType) {
    		      element.removeEventListener(eventType, touchEndCallback);
    		    });
    		    _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.updateImage(element);

    		    if (typeof doneMovingCallback === 'function') {
    		      doneMovingCallback();
    		    }
    		  };

    		  touchEndEvents.forEach(function (eventType) {
    		    element.addEventListener(eventType, touchEndCallback);
    		  });
    		});

    		/***/ }),

    		/***/ "./tools/annotation/bidirectionalTool/pointNearTool.js":
    		/*!*************************************************************!*\
    		  !*** ./tools/annotation/bidirectionalTool/pointNearTool.js ***!
    		  \*************************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _store_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../store/index.js */ "./store/index.js");
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _util_pointInsideBoundingBox_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../../util/pointInsideBoundingBox.js */ "./util/pointInsideBoundingBox.js");




    		var pointNearPerpendicular = function pointNearPerpendicular(element, handles, coords, distanceThreshold) {
    		  var cornerstone = _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone;
    		  var cornerstoneMath = _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstoneMath;
    		  var lineSegment = {
    		    start: cornerstone.pixelToCanvas(element, handles.perpendicularStart),
    		    end: cornerstone.pixelToCanvas(element, handles.perpendicularEnd)
    		  };
    		  var distanceToPoint = cornerstoneMath.lineSegment.distanceToPoint(lineSegment, coords);
    		  return distanceToPoint < distanceThreshold;
    		};

    		/* harmony default export */ __webpack_exports__["default"] = (function (element, data, coords) {
    		  var interactionType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'mouse';
    		  var cornerstone = _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone;
    		  var cornerstoneMath = _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstoneMath;
    		  var handles = data.handles;
    		  var lineSegment = {
    		    start: cornerstone.pixelToCanvas(element, handles.start),
    		    end: cornerstone.pixelToCanvas(element, handles.end)
    		  };
    		  var distanceToPoint = cornerstoneMath.lineSegment.distanceToPoint(lineSegment, coords);

    		  if (Object(_util_pointInsideBoundingBox_js__WEBPACK_IMPORTED_MODULE_2__["default"])(handles.textBox, coords)) {
    		    return true;
    		  }

    		  var distanceThreshold = interactionType === 'mouse' ? _store_index_js__WEBPACK_IMPORTED_MODULE_0__["state"].clickProximity : _store_index_js__WEBPACK_IMPORTED_MODULE_0__["state"].touchProximity;

    		  if (pointNearPerpendicular(element, handles, coords, distanceThreshold)) {
    		    return true;
    		  }

    		  return distanceToPoint < distanceThreshold;
    		});

    		/***/ }),

    		/***/ "./tools/annotation/bidirectionalTool/renderToolData.js":
    		/*!**************************************************************!*\
    		  !*** ./tools/annotation/bidirectionalTool/renderToolData.js ***!
    		  \**************************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js");
    		/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _drawing_drawHandles_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../../drawing/drawHandles.js */ "./drawing/drawHandles.js");
    		/* harmony import */ var _utils_updatePerpendicularLineHandles_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/updatePerpendicularLineHandles.js */ "./tools/annotation/bidirectionalTool/utils/updatePerpendicularLineHandles.js");
    		/* harmony import */ var _stateManagement_toolStyle_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../../stateManagement/toolStyle.js */ "./stateManagement/toolStyle.js");
    		/* harmony import */ var _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../../../stateManagement/toolColors.js */ "./stateManagement/toolColors.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../../../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _drawing_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../../../drawing/index.js */ "./drawing/index.js");
    		/* harmony import */ var _drawing_drawLinkedTextBox_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../../../drawing/drawLinkedTextBox.js */ "./drawing/drawLinkedTextBox.js");
    		/* harmony import */ var _util_getPixelSpacing__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../util/getPixelSpacing */ "./util/getPixelSpacing.js");


    		/* eslint no-loop-func: 0 */
    		// --> OFF








    		/* harmony default export */ __webpack_exports__["default"] = (function (evt) {
    		  var _this = this;

    		  var eventData = evt.detail;
    		  var element = eventData.element,
    		      canvasContext = eventData.canvasContext,
    		      image = eventData.image;
    		  var _this$configuration = this.configuration,
    		      handleRadius = _this$configuration.handleRadius,
    		      drawHandlesOnHover = _this$configuration.drawHandlesOnHover; // If we have no toolData for this element, return immediately as there is nothing to do

    		  var toolData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_5__["getToolState"])(element, this.name);

    		  if (!toolData) {
    		    return;
    		  }

    		  var _getPixelSpacing = Object(_util_getPixelSpacing__WEBPACK_IMPORTED_MODULE_8__["default"])(image),
    		      rowPixelSpacing = _getPixelSpacing.rowPixelSpacing,
    		      colPixelSpacing = _getPixelSpacing.colPixelSpacing; // LT-29 Disable Target Measurements when pixel spacing is not available


    		  if (!rowPixelSpacing || !colPixelSpacing) {
    		    return;
    		  } // We have tool data for this element - iterate over each one and draw it


    		  var context = Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_6__["getNewContext"])(canvasContext.canvas);
    		  var color;
    		  var activeColor = _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_4__["default"].getActiveColor();
    		  var lineWidth = _stateManagement_toolStyle_js__WEBPACK_IMPORTED_MODULE_3__["default"].getToolWidth();

    		  var _loop = function _loop(i) {
    		    var data = toolData.data[i];

    		    if (data.visible === false) {
    		      return "continue";
    		    }

    		    color = data.active ? activeColor : _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_4__["default"].getToolColor(); // Calculate the data measurements

    		    if (data.invalidated === true) {
    		      if (data.longestDiameter && data.shortestDiameter) {
    		        _this.throttledUpdateCachedStats(image, element, data);
    		      } else {
    		        _this.updateCachedStats(image, element, data);
    		      }
    		    }

    		    Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_6__["draw"])(context, function (context) {
    		      // Configurable shadow
    		      Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_6__["setShadow"])(context, _this.configuration);
    		      var _data$handles = data.handles,
    		          start = _data$handles.start,
    		          end = _data$handles.end,
    		          perpendicularStart = _data$handles.perpendicularStart,
    		          perpendicularEnd = _data$handles.perpendicularEnd,
    		          textBox = _data$handles.textBox; // Draw the measurement line

    		      Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_6__["drawLine"])(context, element, start, end, {
    		        color: color
    		      }); // Draw perpendicular line

    		      var strokeWidth = lineWidth;
    		      Object(_utils_updatePerpendicularLineHandles_js__WEBPACK_IMPORTED_MODULE_2__["default"])(eventData, data);
    		      Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_6__["drawLine"])(context, element, perpendicularStart, perpendicularEnd, {
    		        color: color,
    		        strokeWidth: strokeWidth
    		      }); // Draw the handles

    		      var handleOptions = {
    		        color: color,
    		        handleRadius: handleRadius,
    		        drawHandlesIfActive: drawHandlesOnHover
    		      }; // Draw the handles

    		      Object(_drawing_drawHandles_js__WEBPACK_IMPORTED_MODULE_1__["default"])(context, eventData, data.handles, handleOptions); // Draw the textbox
    		      // Move the textbox slightly to the right and upwards
    		      // So that it sits beside the length tool handle

    		      var xOffset = 10;

    		      var textBoxAnchorPoints = function textBoxAnchorPoints(handles) {
    		        return [handles.start, handles.end, handles.perpendicularStart, handles.perpendicularEnd];
    		      };

    		      var textLines = getTextBoxText(data, rowPixelSpacing, colPixelSpacing);
    		      Object(_drawing_drawLinkedTextBox_js__WEBPACK_IMPORTED_MODULE_7__["default"])(context, element, textBox, textLines, data.handles, textBoxAnchorPoints, color, lineWidth, xOffset, true);
    		    });
    		  };

    		  for (var i = 0; i < toolData.data.length; i++) {
    		    var _ret = _loop(i);

    		    if (_ret === "continue") continue;
    		  }
    		});

    		var getTextBoxText = function getTextBoxText(data, rowPixelSpacing, colPixelSpacing) {
    		  var suffix = ' mm';

    		  if (!rowPixelSpacing || !colPixelSpacing) {
    		    suffix = ' pixels';
    		  }

    		  var lengthText = " L ".concat(data.longestDiameter).concat(suffix);
    		  var widthText = " W ".concat(data.shortestDiameter).concat(suffix);
    		  var labels = data.labels;

    		  if (labels && Array.isArray(labels)) {
    		    return [].concat(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(labels), [lengthText, widthText]);
    		  }

    		  return [lengthText, widthText];
    		};

    		/***/ }),

    		/***/ "./tools/annotation/bidirectionalTool/utils/calculateLongestAndShortestDiameters.js":
    		/*!******************************************************************************************!*\
    		  !*** ./tools/annotation/bidirectionalTool/utils/calculateLongestAndShortestDiameters.js ***!
    		  \******************************************************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return calculateLongestAndShortestDiameters; });
    		/**
    		 * Calculates longest and shortest diameters using measurement handles and pixelSpacing
    		 * @param  {Object} measurementData
    		 * @param {Object} pixelSpacing pixelSpacing
    		 *
    		 *@returns {Object} longestDiameter and shortestDiameter
    		 */
    		function calculateLongestAndShortestDiameters(measurementData, pixelSpacing) {
    		  var rowPixelSpacing = pixelSpacing.rowPixelSpacing,
    		      colPixelSpacing = pixelSpacing.colPixelSpacing;
    		  var _measurementData$hand = measurementData.handles,
    		      start = _measurementData$hand.start,
    		      end = _measurementData$hand.end,
    		      perpendicularStart = _measurementData$hand.perpendicularStart,
    		      perpendicularEnd = _measurementData$hand.perpendicularEnd; // Calculate the long axis length

    		  var dx = (start.x - end.x) * (colPixelSpacing || 1);
    		  var dy = (start.y - end.y) * (rowPixelSpacing || 1);
    		  var length = Math.sqrt(dx * dx + dy * dy); // Calculate the short axis length

    		  var wx = (perpendicularStart.x - perpendicularEnd.x) * (colPixelSpacing || 1);
    		  var wy = (perpendicularStart.y - perpendicularEnd.y) * (rowPixelSpacing || 1);
    		  var width = Math.sqrt(wx * wx + wy * wy);

    		  if (!width) {
    		    width = 0;
    		  } // Length is always longer than width


    		  if (width > length) {
    		    var tempW = width;
    		    var tempL = length;
    		    length = tempW;
    		    width = tempL;
    		  }

    		  return {
    		    longestDiameter: length.toFixed(1),
    		    shortestDiameter: width.toFixed(1)
    		  };
    		}

    		/***/ }),

    		/***/ "./tools/annotation/bidirectionalTool/utils/updatePerpendicularLineHandles.js":
    		/*!************************************************************************************!*\
    		  !*** ./tools/annotation/bidirectionalTool/utils/updatePerpendicularLineHandles.js ***!
    		  \************************************************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		// Update the  perpendicular line handles
    		/* harmony default export */ __webpack_exports__["default"] = (function (eventData, data) {
    		  if (!data.handles.perpendicularStart.locked) {
    		    return;
    		  }

    		  var startX, startY, endX, endY;
    		  var _data$handles = data.handles,
    		      start = _data$handles.start,
    		      end = _data$handles.end;

    		  if (start.x === end.x && start.y === end.y) {
    		    startX = start.x;
    		    startY = start.y;
    		    endX = end.x;
    		    endY = end.y;
    		  } else {
    		    // Mid point of long-axis line
    		    var mid = {
    		      x: (start.x + end.x) / 2,
    		      y: (start.y + end.y) / 2
    		    }; // Length of long-axis

    		    var dx = (start.x - end.x) * (eventData.image.columnPixelSpacing || 1);
    		    var dy = (start.y - end.y) * (eventData.image.rowPixelSpacing || 1);
    		    var length = Math.sqrt(dx * dx + dy * dy);
    		    var vectorX = (start.x - end.x) / length;
    		    var vectorY = (start.y - end.y) / length;
    		    var perpendicularLineLength = length / 2;
    		    startX = mid.x + perpendicularLineLength / 2 * vectorY;
    		    startY = mid.y - perpendicularLineLength / 2 * vectorX;
    		    endX = mid.x - perpendicularLineLength / 2 * vectorY;
    		    endY = mid.y + perpendicularLineLength / 2 * vectorX;
    		  }

    		  data.handles.perpendicularStart.x = startX;
    		  data.handles.perpendicularStart.y = startY;
    		  data.handles.perpendicularEnd.x = endX;
    		  data.handles.perpendicularEnd.y = endY;
    		});

    		/***/ }),

    		/***/ "./tools/annotation/index.js":
    		/*!***********************************!*\
    		  !*** ./tools/annotation/index.js ***!
    		  \***********************************/
    		/*! exports provided: AngleTool, ArrowAnnotateTool, BidirectionalTool, CircleRoiTool, CobbAngleTool, EllipticalRoiTool, FreehandMouseTool, LengthTool, ProbeTool, RectangleRoiTool, TextMarkerTool, default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _AngleTool_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AngleTool.js */ "./tools/annotation/AngleTool.js");
    		/* harmony import */ var _ArrowAnnotateTool_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ArrowAnnotateTool.js */ "./tools/annotation/ArrowAnnotateTool.js");
    		/* harmony import */ var _BidirectionalTool_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./BidirectionalTool.js */ "./tools/annotation/BidirectionalTool.js");
    		/* harmony import */ var _CircleRoiTool_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./CircleRoiTool.js */ "./tools/annotation/CircleRoiTool.js");
    		/* harmony import */ var _CobbAngleTool_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./CobbAngleTool.js */ "./tools/annotation/CobbAngleTool.js");
    		/* harmony import */ var _EllipticalRoiTool_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./EllipticalRoiTool.js */ "./tools/annotation/EllipticalRoiTool.js");
    		/* harmony import */ var _FreehandMouseTool_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./FreehandMouseTool.js */ "./tools/annotation/FreehandMouseTool.js");
    		/* harmony import */ var _LengthTool_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./LengthTool.js */ "./tools/annotation/LengthTool.js");
    		/* harmony import */ var _ProbeTool_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ProbeTool.js */ "./tools/annotation/ProbeTool.js");
    		/* harmony import */ var _RectangleRoiTool_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./RectangleRoiTool.js */ "./tools/annotation/RectangleRoiTool.js");
    		/* harmony import */ var _TextMarkerTool_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./TextMarkerTool.js */ "./tools/annotation/TextMarkerTool.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AngleTool", function() { return _AngleTool_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ArrowAnnotateTool", function() { return _ArrowAnnotateTool_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BidirectionalTool", function() { return _BidirectionalTool_js__WEBPACK_IMPORTED_MODULE_2__["default"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CircleRoiTool", function() { return _CircleRoiTool_js__WEBPACK_IMPORTED_MODULE_3__["default"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CobbAngleTool", function() { return _CobbAngleTool_js__WEBPACK_IMPORTED_MODULE_4__["default"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EllipticalRoiTool", function() { return _EllipticalRoiTool_js__WEBPACK_IMPORTED_MODULE_5__["default"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FreehandMouseTool", function() { return _FreehandMouseTool_js__WEBPACK_IMPORTED_MODULE_6__["default"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LengthTool", function() { return _LengthTool_js__WEBPACK_IMPORTED_MODULE_7__["default"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ProbeTool", function() { return _ProbeTool_js__WEBPACK_IMPORTED_MODULE_8__["default"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RectangleRoiTool", function() { return _RectangleRoiTool_js__WEBPACK_IMPORTED_MODULE_9__["default"]; });

    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TextMarkerTool", function() { return _TextMarkerTool_js__WEBPACK_IMPORTED_MODULE_10__["default"]; });











    		 // Named Exports











    		 // Namespace, default export

    		/* harmony default export */ __webpack_exports__["default"] = ({
    		  AngleTool: _AngleTool_js__WEBPACK_IMPORTED_MODULE_0__["default"],
    		  ArrowAnnotateTool: _ArrowAnnotateTool_js__WEBPACK_IMPORTED_MODULE_1__["default"],
    		  BidirectionalTool: _BidirectionalTool_js__WEBPACK_IMPORTED_MODULE_2__["default"],
    		  CircleRoiTool: _CircleRoiTool_js__WEBPACK_IMPORTED_MODULE_3__["default"],
    		  CobbAngleTool: _CobbAngleTool_js__WEBPACK_IMPORTED_MODULE_4__["default"],
    		  EllipticalRoiTool: _EllipticalRoiTool_js__WEBPACK_IMPORTED_MODULE_5__["default"],
    		  FreehandMouseTool: _FreehandMouseTool_js__WEBPACK_IMPORTED_MODULE_6__["default"],
    		  LengthTool: _LengthTool_js__WEBPACK_IMPORTED_MODULE_7__["default"],
    		  ProbeTool: _ProbeTool_js__WEBPACK_IMPORTED_MODULE_8__["default"],
    		  RectangleRoiTool: _RectangleRoiTool_js__WEBPACK_IMPORTED_MODULE_9__["default"],
    		  TextMarkerTool: _TextMarkerTool_js__WEBPACK_IMPORTED_MODULE_10__["default"]
    		});

    		/***/ }),

    		/***/ "./tools/base/BaseAnnotationTool.js":
    		/*!******************************************!*\
    		  !*** ./tools/base/BaseAnnotationTool.js ***!
    		  \******************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__);
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__);
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__);
    		/* harmony import */ var _BaseTool_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./BaseTool.js */ "./tools/base/BaseTool.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _manipulators_handleActivator_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../../manipulators/handleActivator.js */ "./manipulators/handleActivator.js");
    		/* harmony import */ var _util_findAndMoveHelpers_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./../../util/findAndMoveHelpers.js */ "./util/findAndMoveHelpers.js");
    		/* harmony import */ var _util_logger__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../util/logger */ "./util/logger.js");










    		var logger = Object(_util_logger__WEBPACK_IMPORTED_MODULE_9__["getLogger"])('baseAnnotationTool');
    		/**
    		 * @memberof Tools.Base
    		 * @classdesc Abstract class for tools which create and display annotations on the
    		 * cornerstone canvas.
    		 * @extends Tools.Base.BaseTool
    		 */

    		var BaseAnnotationTool =
    		/*#__PURE__*/
    		function (_BaseTool) {
    		  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default()(BaseAnnotationTool, _BaseTool);

    		  function BaseAnnotationTool() {
    		    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, BaseAnnotationTool);

    		    return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(BaseAnnotationTool).apply(this, arguments));
    		  }

    		  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(BaseAnnotationTool, [{
    		    key: "createNewMeasurement",
    		    // ===================================================================
    		    // Abstract Methods - Must be implemented.
    		    // ===================================================================

    		    /**
    		     * Creates a new annotation.
    		     *
    		     * @method createNewMeasurement
    		     * @memberof Tools.Base.BaseAnnotationTool
    		     *
    		     * @param  {type} evt description
    		     * @returns {type}     description
    		     */
    		    // eslint-disable-next-line no-unused-vars
    		    value: function createNewMeasurement(evt) {
    		      throw new Error("Method createNewMeasurement not implemented for ".concat(this.name, "."));
    		    }
    		    /**
    		     *
    		     * Returns true if the given coords are need the tool.
    		     *
    		     * @method pointNearTool
    		     * @memberof Tools.Base.BaseAnnotationTool
    		     *
    		     * @param {*} element
    		     * @param {*} data
    		     * @param {*} coords
    		     * @param {string} [interactionType=mouse]
    		     * @returns {boolean} If the point is near the tool
    		     */
    		    // eslint-disable-next-line no-unused-vars

    		  }, {
    		    key: "pointNearTool",
    		    value: function pointNearTool(element, data, coords) {
    		      throw new Error("Method pointNearTool not implemented for ".concat(this.name, "."));
    		    }
    		    /**
    		     * Returns the distance in px from the given coords to the closest handle of the annotation.
    		     *
    		     * @method distanceFromPoint
    		     * @memberof Tools.Base.BaseAnnotationTool
    		     *
    		     * @param {*} element
    		     * @param {*} data
    		     * @param {*} coords
    		     * @returns {number} -  the distance in px from the provided coordinates to the
    		     * closest rendered portion of the annotation. -1 if the distance cannot be
    		     * calculated.
    		     */
    		    // eslint-disable-next-line no-unused-vars

    		  }, {
    		    key: "distanceFromPoint",
    		    value: function distanceFromPoint(element, data, coords) {
    		      throw new Error("Method distanceFromPoint not implemented for ".concat(this.name, "."));
    		    }
    		    /**
    		     * Used to redraw the tool's annotation data per render
    		     *
    		     * @abstract
    		     * @param {*} evt
    		     * @returns {void}
    		     */
    		    // eslint-disable-next-line no-unused-vars

    		  }, {
    		    key: "renderToolData",
    		    value: function renderToolData(evt) {
    		      throw new Error("renderToolData not implemented for ".concat(this.name, "."));
    		    } // ===================================================================
    		    // Virtual Methods - Have default behavior but may be overriden.
    		    // ===================================================================

    		    /**
    		     * Event handler for MOUSE_MOVE event.
    		     *
    		     * @abstract
    		     * @event
    		     * @param {Object} evt - The event.
    		     * @returns {boolean} - True if the image needs to be updated
    		     */

    		  }, {
    		    key: "mouseMoveCallback",
    		    value: function mouseMoveCallback(evt) {
    		      var _evt$detail = evt.detail,
    		          element = _evt$detail.element,
    		          currentPoints = _evt$detail.currentPoints;
    		      var coords = currentPoints.canvas;
    		      var toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_6__["getToolState"])(element, this.name);
    		      var imageNeedsUpdate = false;

    		      for (var d = 0; d < toolState.data.length; d++) {
    		        var data = toolState.data[d]; // Hovering a handle?

    		        if (Object(_manipulators_handleActivator_js__WEBPACK_IMPORTED_MODULE_7__["default"])(element, data.handles, coords) === true) {
    		          imageNeedsUpdate = true;
    		        } // Tool data's 'active' does not match coordinates
    		        // TODO: can't we just do an if/else and save on a pointNearTool check?


    		        var nearToolAndNotMarkedActive = this.pointNearTool(element, data, coords, 'mouse') && !data.active;
    		        var notNearToolAndMarkedActive = !this.pointNearTool(element, data, coords, 'mouse') && data.active;

    		        if (nearToolAndNotMarkedActive || notNearToolAndMarkedActive) {
    		          data.active = !data.active;
    		          imageNeedsUpdate = true;
    		        }
    		      }

    		      return imageNeedsUpdate;
    		    }
    		    /**
    		     * Custom callback for when a handle is selected.
    		     * @method handleSelectedCallback
    		     * @memberof Tools.Base.BaseAnnotationTool
    		     *
    		     * @param  {*} evt    -
    		     * @param  {*} toolData   -
    		     * @param  {*} handle - The selected handle.
    		     * @param  {String} interactionType -
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "handleSelectedCallback",
    		    value: function handleSelectedCallback(evt, toolData, handle) {
    		      var interactionType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'mouse';
    		      Object(_util_findAndMoveHelpers_js__WEBPACK_IMPORTED_MODULE_8__["moveHandleNearImagePoint"])(evt, this, toolData, handle, interactionType);
    		    }
    		    /**
    		     * Custom callback for when a tool is selected.
    		     *
    		     * @method toolSelectedCallback
    		     * @memberof Tools.Base.BaseAnnotationTool
    		     *
    		     * @param  {*} evt
    		     * @param  {*} annotation
    		     * @param  {string} [interactionType=mouse]
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "toolSelectedCallback",
    		    value: function toolSelectedCallback(evt, annotation) {
    		      var interactionType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'mouse';
    		      Object(_util_findAndMoveHelpers_js__WEBPACK_IMPORTED_MODULE_8__["moveAnnotation"])(evt, this, annotation, interactionType);
    		    }
    		    /**
    		     * Updates cached statistics for the tool's annotation data on the element
    		     *
    		     * @param {*} image
    		     * @param {*} element
    		     * @param {*} data
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "updateCachedStats",
    		    value: function updateCachedStats(image, element, data) {
    		      // eslint-disable-line
    		      logger.warn("updateCachedStats not implemented for ".concat(this.name, "."));
    		    }
    		  }]);

    		  return BaseAnnotationTool;
    		}(_BaseTool_js__WEBPACK_IMPORTED_MODULE_5__["default"]);

    		/* harmony default export */ __webpack_exports__["default"] = (BaseAnnotationTool);

    		/***/ }),

    		/***/ "./tools/base/BaseBrushTool.js":
    		/*!*************************************!*\
    		  !*** ./tools/base/BaseBrushTool.js ***!
    		  \*************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__);
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__);
    		/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "../node_modules/@babel/runtime/helpers/assertThisInitialized.js");
    		/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__);
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__);
    		/* harmony import */ var _BaseTool_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./BaseTool.js */ "./tools/base/BaseTool.js");
    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../../events.js */ "./events.js");
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./../../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _stateManagement_imageIdSpecificStateManager_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../stateManagement/imageIdSpecificStateManager.js */ "./stateManagement/imageIdSpecificStateManager.js");
    		/* harmony import */ var _store_isToolActive_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./../../store/isToolActive.js */ "./store/isToolActive.js");
    		/* harmony import */ var _store_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./../../store/index.js */ "./store/index.js");
    		/* harmony import */ var _util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./../../util/triggerEvent.js */ "./util/triggerEvent.js");














    		var _store$modules$brush = _store_index_js__WEBPACK_IMPORTED_MODULE_12__["default"].modules.brush,
    		    state = _store$modules$brush.state,
    		    getters = _store$modules$brush.getters,
    		    setters = _store$modules$brush.setters;
    		/**
    		 * @abstract
    		 * @memberof Tools.Base
    		 * @classdesc Abstract class for tools which manipulate the mask data to be displayed on
    		 * the cornerstone canvas.
    		 * @extends Tools.Base.BaseTool
    		 */

    		var BaseBrushTool =
    		/*#__PURE__*/
    		function (_BaseTool) {
    		  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5___default()(BaseBrushTool, _BaseTool);

    		  function BaseBrushTool(props) {
    		    var _this;

    		    var defaultProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    		    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, BaseBrushTool);

    		    if (!defaultProps.configuration) {
    		      defaultProps.configuration = {
    		        skipPaintForInvisibleSegmentations: false
    		      };
    		    }

    		    defaultProps.configuration.referencedToolData = 'brush';
    		    _this = _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(BaseBrushTool).call(this, props, defaultProps));
    		    _this.updateOnMouseMove = true;
    		    _this.hideDefaultCursor = true;
    		    _this._drawing = false;
    		    _this._drawingMouseUpCallback = _this._drawingMouseUpCallback.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    return _this;
    		  } // ===================================================================
    		  // Abstract Methods - Must be implemented.
    		  // ===================================================================

    		  /**
    		   * Helper function for rendering the brush.
    		   *
    		   * @abstract
    		   * @param {Object} evt - The event.
    		   * @returns {void}
    		   */
    		  // eslint-disable-next-line no-unused-vars


    		  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(BaseBrushTool, [{
    		    key: "renderBrush",
    		    value: function renderBrush(evt) {
    		      throw new Error("Method renderBrush not implemented for ".concat(this.name, "."));
    		    }
    		    /**
    		     * Paints the data to the canvas.
    		     *
    		     * @protected
    		     * @abstract
    		     * @param  {Object} evt The event.
    		     * @returns {void}
    		     */
    		    // eslint-disable-next-line no-unused-vars

    		  }, {
    		    key: "_paint",
    		    value: function _paint(evt) {
    		      throw new Error("Method _paint not implemented for ".concat(this.name, "."));
    		    } // ===================================================================
    		    // Virtual Methods - Have default behavior but may be overriden.
    		    // ===================================================================

    		    /**
    		     * Event handler for MOUSE_DRAG event.
    		     *
    		     * @override
    		     * @event
    		     * @param {Object} evt - The event.
    		     */

    		  }, {
    		    key: "mouseDragCallback",
    		    value: function mouseDragCallback(evt) {
    		      this._startPainting(evt);
    		    }
    		    /**
    		     * Event handler for MOUSE_DOWN event.
    		     *
    		     * @override
    		     * @event
    		     * @param {Object} evt - The event.
    		     */

    		  }, {
    		    key: "preMouseDownCallback",
    		    value: function preMouseDownCallback(evt) {
    		      this._startPainting(evt);

    		      return true;
    		    }
    		    /**
    		     * Initialise painting with baseBrushTool
    		     *
    		     * @protected
    		     * @event
    		     * @param {Object} evt - The event.
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "_startPainting",
    		    value: function _startPainting(evt) {
    		      var eventData = evt.detail;
    		      var element = eventData.element;

    		      this._paint(evt);

    		      this._drawing = true;

    		      this._startListeningForMouseUp(element);

    		      this._lastImageCoords = eventData.currentPoints.image;
    		    }
    		    /**
    		     * Event handler for MOUSE_MOVE event.
    		     *
    		     * @override
    		     * @event
    		     * @param {Object} evt - The event.
    		     */

    		  }, {
    		    key: "mouseMoveCallback",
    		    value: function mouseMoveCallback(evt) {
    		      var currentPoints = evt.detail.currentPoints;
    		      this._lastImageCoords = currentPoints.image;
    		    }
    		    /**
    		     * Event handler for switching mode to passive;
    		     *
    		     * @override
    		     * @event
    		     * @param {Object} evt - The event.
    		     */
    		    // eslint-disable-next-line no-unused-vars

    		  }, {
    		    key: "passiveCallback",
    		    value: function passiveCallback(evt) {
    		      try {
    		        _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.updateImage(this.element);
    		      } catch (error) {
    		        // It is possible that the image has not been loaded
    		        // when this is called.
    		        return;
    		      }
    		    }
    		    /**
    		     * Used to redraw the tool's annotation data per render.
    		     *
    		     * @override
    		     * @param {Object} evt - The event.
    		     */

    		  }, {
    		    key: "renderToolData",
    		    value: function renderToolData(evt) {
    		      var eventData = evt.detail;
    		      var element = eventData.element; // Only brush needs to render.

    		      if (Object(_store_isToolActive_js__WEBPACK_IMPORTED_MODULE_11__["default"])(element, this.name)) {
    		        // Call the hover event for the brush
    		        this.renderBrush(evt);
    		      }
    		    } // ===================================================================
    		    // Implementation interface
    		    // ===================================================================

    		    /**
    		     * Get the draw color (segmentation) of the tool.
    		     *
    		     * @protected
    		     * @param  {Number} drawId The id of the color (segmentation) to switch to.
    		     * @returns {string} The brush color in rgba format
    		     */

    		  }, {
    		    key: "_getBrushColor",
    		    value: function _getBrushColor(drawId) {
    		      var colormap = _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.colors.getColormap(state.colorMapId);
    		      var colorArray = colormap.getColor(drawId);

    		      if (this._drawing) {
    		        return "rgba(".concat(colorArray[[0]], ", ").concat(colorArray[[1]], ", ").concat(colorArray[[2]], ", 1.0 )");
    		      }

    		      return "rgba(".concat(colorArray[[0]], ", ").concat(colorArray[[1]], ", ").concat(colorArray[[2]], ", 0.8 )");
    		    }
    		    /**
    		     * Event handler for MOUSE_UP during the drawing event loop.
    		     *
    		     * @protected
    		     * @event
    		     * @param {Object} evt - The event.
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "_drawingMouseUpCallback",
    		    value: function _drawingMouseUpCallback(evt) {
    		      this._drawing = false;
    		      this._mouseUpRender = true;
    		      var element = evt.detail.element;
    		      var toolData = (Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_9__["getToolState"])(element, this.name) || Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_9__["getToolState"])(element, 'brush') || {}).data;
    		      var segmentationIndex = state.drawColorId;

    		      if (!this.configuration.skipPaintForInvisibleSegmentations || _isSegmentationVisibleForElement(element, segmentationIndex, toolData)) {
    		        var measurementData = null;

    		        if (toolData && toolData.length > segmentationIndex) {
    		          measurementData = toolData[segmentationIndex];
    		        }

    		        var eventData = {
    		          toolName: this.name,
    		          element: element,
    		          measurementData: measurementData,
    		          evtDetail: evt.detail
    		        };
    		        Object(_util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_13__["default"])(element, _events_js__WEBPACK_IMPORTED_MODULE_7__["default"].MEASUREMENT_COMPLETED, eventData);
    		      }

    		      this._stopListeningForMouseUp(element);
    		    }
    		    /**
    		     * Adds modify loop event listeners.
    		     *
    		     * @protected
    		     * @param {Object} element - The viewport element to add event listeners to.
    		     * @modifies {element}
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "_startListeningForMouseUp",
    		    value: function _startListeningForMouseUp(element) {
    		      element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_7__["default"].MOUSE_UP, this._drawingMouseUpCallback);
    		      element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_7__["default"].MOUSE_CLICK, this._drawingMouseUpCallback);
    		      element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_7__["default"].MOUSE_UP, this._drawingMouseUpCallback);
    		      element.addEventListener(_events_js__WEBPACK_IMPORTED_MODULE_7__["default"].MOUSE_CLICK, this._drawingMouseUpCallback);
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.updateImage(element);
    		    }
    		    /**
    		     * Adds modify loop event listeners.
    		     *
    		     * @protected
    		     * @param {Object} element - The viewport element to add event listeners to.
    		     * @modifies {element}
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "_stopListeningForMouseUp",
    		    value: function _stopListeningForMouseUp(element) {
    		      element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_7__["default"].MOUSE_UP, this._drawingMouseUpCallback);
    		      element.removeEventListener(_events_js__WEBPACK_IMPORTED_MODULE_7__["default"].MOUSE_CLICK, this._drawingMouseUpCallback);
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.updateImage(element);
    		    } // ===================================================================
    		    // Segmentation API. This is effectively a wrapper around the store.
    		    // ===================================================================

    		    /**
    		     * Switches to the next segmentation color.
    		     *
    		     * @public
    		     * @api
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "nextSegmentation",
    		    value: function nextSegmentation() {
    		      var numberOfColors = this.constructor.getNumberOfColors();
    		      var drawId = state.drawColorId + 1;

    		      if (drawId === numberOfColors) {
    		        drawId = 0;
    		      }

    		      state.drawColorId = drawId;
    		    }
    		    /**
    		     * Switches to the previous segmentation color.
    		     *
    		     * @public
    		     * @api
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "previousSegmentation",
    		    value: function previousSegmentation() {
    		      var numberOfColors = this.constructor.getNumberOfColors();
    		      var drawId = state.drawColorId - 1;

    		      if (drawId < 0) {
    		        drawId = numberOfColors - 1;
    		      }

    		      state.drawColorId = drawId;
    		    }
    		    /**
    		     * Increases the brush size
    		     *
    		     * @public
    		     * @api
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "increaseBrushSize",
    		    value: function increaseBrushSize() {
    		      var oldRadius = state.radius;
    		      var newRadius = Math.floor(oldRadius * 1.2); // If e.g. only 2 pixels big. Math.floor(2*1.2) = 2.
    		      // Hence, have minimum increment of 1 pixel.

    		      if (newRadius === oldRadius) {
    		        newRadius += 1;
    		      }

    		      setters.radius(newRadius);
    		    }
    		    /**
    		     * Decreases the brush size
    		     *
    		     * @public
    		     * @api
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "decreaseBrushSize",
    		    value: function decreaseBrushSize() {
    		      var oldRadius = state.radius;
    		      var newRadius = Math.floor(oldRadius * 0.8);
    		      setters.radius(newRadius);
    		    }
    		    /**
    		     * Displays a segmentation on the element.
    		     *
    		     * @public
    		     * @api
    		     * @param  {Number} segIndex        The index of the segmentation.
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "showSegmentationOnElement",
    		    value: function showSegmentationOnElement(segIndex) {
    		      var enabledElement = this._getEnabledElement();

    		      var enabledElementUID = enabledElement.uuid;
    		      setters.brushVisibilityForElement(enabledElementUID, segIndex, true);
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.updateImage(enabledElement.element);
    		    }
    		    /**
    		     * Hides a segmentation on an element.
    		     *
    		     * @public
    		     * @api
    		     * @param  {Number} segIndex        The index of the segmentation.
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "hideSegmentationOnElement",
    		    value: function hideSegmentationOnElement(segIndex) {
    		      var enabledElement = this._getEnabledElement();

    		      var enabledElementUID = enabledElement.uuid;
    		      setters.brushVisibilityForElement(enabledElementUID, segIndex, false);
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.updateImage(enabledElement.element);
    		    }
    		    /**
    		     * Displays all segmentations on an element.
    		     *
    		     * @public
    		     * @api
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "showAllSegmentationsOnElement",
    		    value: function showAllSegmentationsOnElement() {
    		      var enabledElement = this._getEnabledElement();

    		      var enabledElementUID = enabledElement.uuid;
    		      var colormap = _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.colors.getColormap(state.colorMapId);
    		      var numberOfColors = colormap.getNumberOfColors();

    		      for (var segIndex = 0; segIndex < numberOfColors; segIndex++) {
    		        setters.brushVisibilityForElement(enabledElementUID, segIndex, true);
    		      }

    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.updateImage(enabledElement.element);
    		    }
    		    /**
    		     * Hides all segmentations on an element.
    		     *
    		     * @public
    		     * @api
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "hideAllSegmentationsOnElement",
    		    value: function hideAllSegmentationsOnElement() {
    		      var enabledElement = this._getEnabledElement();

    		      var enabledElementUID = enabledElement.uuid;
    		      var colormap = _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.colors.getColormap(state.colorMapId);
    		      var numberOfColors = colormap.getNumberOfColors();

    		      for (var segIndex = 0; segIndex < numberOfColors; segIndex++) {
    		        setters.brushVisibilityForElement(enabledElementUID, segIndex, false);
    		      }

    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.updateImage(enabledElement.element);
    		    }
    		    /**
    		     * Returns the number of colors in the colormap.
    		     *
    		     * @static
    		     * @public
    		     * @api
    		     * @returns {Number} The number of colors in the color map.
    		     */

    		  }, {
    		    key: "_getEnabledElement",
    		    value: function _getEnabledElement() {
    		      return _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.getEnabledElement(this.element);
    		    }
    		    /**
    		     * Returns the toolData type assoicated with this type of tool.
    		     *
    		     * @static
    		     * @public
    		     * @returns {String} The number of colors in the color map.
    		     */

    		  }, {
    		    key: "alpha",
    		    get: function get() {
    		      return state.alpha;
    		    },
    		    set: function set(value) {
    		      var enabledElement = this._getEnabledElement();

    		      state.alpha = value;
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.updateImage(enabledElement.element);
    		    }
    		  }, {
    		    key: "hiddenButActiveAlpha",
    		    get: function get() {
    		      return state.hiddenButActiveAlpha;
    		    },
    		    set: function set(value) {
    		      var enabledElement = this._getEnabledElement();

    		      state.hiddenButActiveAlpha = value;
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.updateImage(enabledElement.element);
    		    }
    		  }], [{
    		    key: "getNumberOfColors",
    		    value: function getNumberOfColors() {
    		      var colormap = _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.colors.getColormap(state.colorMapId);
    		      return colormap.getNumberOfColors();
    		    }
    		  }, {
    		    key: "getReferencedToolDataName",
    		    value: function getReferencedToolDataName() {
    		      return 'brush';
    		    }
    		    /**
    		     * Invalidate all the brush data.
    		     *
    		     * @static
    		     * @public
    		     * @param {string} enabledElementUID - This identifier for the enabled element.
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "invalidateBrushOnEnabledElement",
    		    value: function invalidateBrushOnEnabledElement(enabledElementUID) {
    		      /** WIP **/
    		      var element = _store_index_js__WEBPACK_IMPORTED_MODULE_12__["default"].getters.enabledElementByUID(enabledElementUID);
    		      var stackToolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_9__["getToolState"])(element, 'stack');

    		      if (!stackToolState) {
    		        return;
    		      }

    		      var imageIds = stackToolState.data[0].imageIds;
    		      var toolState = _stateManagement_imageIdSpecificStateManager_js__WEBPACK_IMPORTED_MODULE_10__["globalImageIdSpecificToolStateManager"].saveToolState();

    		      for (var i = 0; i < imageIds.length; i++) {
    		        var imageId = imageIds[i];

    		        if (toolState[imageId] && toolState[imageId].brush) {
    		          var brushData = toolState[imageId].brush.data;

    		          for (var j = 0; j < brushData.length; j++) {
    		            if (brushData[j].pixelData) {
    		              brushData[j].invalidated = true;
    		            }
    		          }
    		        }
    		      }

    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.updateImage(element, true);
    		    }
    		    /**
    		     * Returns a datacube for the segmentation.
    		     *
    		     * @static
    		     * @param {string} enabledElementUID - This identifier for the enabled element.
    		     * @returns {type}  description
    		     */

    		  }, {
    		    key: "getDataAsVolume",
    		    value: function getDataAsVolume(enabledElementUID) {
    		      /** WIP **/
    		      var element = _store_index_js__WEBPACK_IMPORTED_MODULE_12__["default"].getters.enabledElementByUID(enabledElementUID);
    		      var stackToolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_9__["getToolState"])(element, 'stack');

    		      if (!stackToolState) {
    		        return;
    		      }

    		      var imageIds = stackToolState.data[0].imageIds;
    		      var toolState = _stateManagement_imageIdSpecificStateManager_js__WEBPACK_IMPORTED_MODULE_10__["globalImageIdSpecificToolStateManager"].saveToolState();

    		      for (var i = 0; i < imageIds.length; i++) {
    		        var imageId = imageIds[i]; // TODO -> Workout HTF we will do this for multiple colors etc.

    		        if (toolState[imageId] && toolState[imageId].brush && toolState[imageId].brush.data[0].pixelData) ;
    		      }
    		    }
    		  }]);

    		  return BaseBrushTool;
    		}(_BaseTool_js__WEBPACK_IMPORTED_MODULE_6__["default"]);

    		function _isSegmentationVisibleForElement(element, segmentationIndex, toolData) {
    		  var enabledElement = _externalModules_js__WEBPACK_IMPORTED_MODULE_8__["default"].cornerstone.getEnabledElement(element);
    		  var visibleSegmentationsForElement = getters.visibleSegmentationsForElement(enabledElement.uuid);
    		  return (// Global alpha for active segmentation
    		    state.alpha > 0.001 && // Master isVisible toggle per seg + element
    		    // TODO: If false, should we check the secondary alpha that's applied to segmentions that aren't visible?
    		    visibleSegmentationsForElement[segmentationIndex] === true && ( // Does not have alpha, or alpha is > 1 (0 to 255)
    		    toolData[segmentationIndex] === undefined || toolData[segmentationIndex].alpha === undefined || toolData[segmentationIndex].alpha > 0.001)
    		  );
    		}

    		/* harmony default export */ __webpack_exports__["default"] = (BaseBrushTool);

    		/***/ }),

    		/***/ "./tools/base/BaseTool.js":
    		/*!********************************!*\
    		  !*** ./tools/base/BaseTool.js ***!
    		  \********************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "../node_modules/@babel/runtime/helpers/typeof.js");
    		/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__);
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__);
    		/* harmony import */ var _mixins_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../mixins/index.js */ "./mixins/index.js");
    		/* harmony import */ var _util_logger_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../util/logger.js */ "./util/logger.js");
    		/* harmony import */ var _util_deepmerge_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../../util/deepmerge.js */ "./util/deepmerge.js");






    		var logger = Object(_util_logger_js__WEBPACK_IMPORTED_MODULE_4__["getLogger"])('tools:base:BaseTool');
    		/**
    		 * @typedef ToolConfiguration
    		 * @param {String} name
    		 * @param {object} strategies - Named strategy functions
    		 * @param {String} defaultStrategy - The name of the strategy to use by default
    		 * @param {Object} configuration
    		 * @param {String[]} mixins - A list of mixin names to apply to the tool
    		 */

    		/**
    		 * @memberof Tools.Base
    		 * @classdesc BaseTool Class description
    		 * @property {String[]} supportedInteractionTypes - A string list of ways the tool can interact with the user
    		 */

    		var BaseTool =
    		/*#__PURE__*/
    		function () {
    		  /**
    		   * Constructor description
    		   * @param {props} [props={}] Tool properties set on instantiation of a tool
    		   * @param {defaultProps} [defaultProps={}] Tools Default properties
    		   */
    		  function BaseTool(props, defaultProps) {
    		    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, BaseTool);

    		    /**
    		     * Merge default props with custom props
    		     */
    		    this.initialConfiguration = Object(_util_deepmerge_js__WEBPACK_IMPORTED_MODULE_5__["default"])(defaultProps, props);
    		    var _this$initialConfigur = this.initialConfiguration,
    		        name = _this$initialConfigur.name,
    		        strategies = _this$initialConfigur.strategies,
    		        defaultStrategy = _this$initialConfigur.defaultStrategy,
    		        configuration = _this$initialConfigur.configuration,
    		        supportedInteractionTypes = _this$initialConfigur.supportedInteractionTypes,
    		        mixins = _this$initialConfigur.mixins,
    		        svgCursor = _this$initialConfigur.svgCursor;
    		    /**
    		     * A unique, identifying tool name
    		     * @type {String}
    		     */

    		    this.name = name;
    		    /** @type {String} */

    		    this.mode = 'disabled';
    		    this.element = undefined;
    		    this.supportedInteractionTypes = supportedInteractionTypes || [];
    		    this.strategies = strategies || {};
    		    this.defaultStrategy = defaultStrategy || Object.keys(this.strategies)[0] || undefined;
    		    this.activeStrategy = this.defaultStrategy;

    		    if (svgCursor) {
    		      this.svgCursor = svgCursor;
    		    } // Options are set when a tool is added, during a "mode" change,
    		    // or via a tool's option's setter


    		    this._options = {}; // Configuration is set at tool initalization

    		    this._configuration = Object.assign({}, configuration); // `updateOnMouseMove` causes the frame to render on every mouse move when
    		    // the tool is active. This is useful for tools that render large/dynamic
    		    // items to the canvas which can't easily be respresented with an SVG Cursor.

    		    this.updateOnMouseMove = false;
    		    this.hideDefaultCursor = false; // Apply mixins if mixinsArray is not empty.

    		    if (mixins && mixins.length) {
    		      this._applyMixins(mixins);
    		    }
    		  } //
    		  // CONFIGURATION
    		  //

    		  /**
    		   * Config...
    		   * @public
    		   * @type {Object}
    		   * @instance
    		   */


    		  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(BaseTool, [{
    		    key: "mergeOptions",

    		    /**
    		     * Merges provided options with existing options.
    		     *
    		     * @public
    		     * @instance
    		     * @param {Object} options - options object to merge with existing options.
    		     * @returns {undefined}
    		     */
    		    value: function mergeOptions(options) {
    		      this._options = Object.assign({}, this._options, options);
    		    }
    		    /**
    		     * Clears the tools options.
    		     *
    		     * @public
    		     * @instance
    		     * @memberof Tools.Base.BaseTool
    		     * @returns {undefined}
    		     */

    		  }, {
    		    key: "clearOptions",
    		    value: function clearOptions() {
    		      this._options = {};
    		    }
    		    /**
    		     * Apply the currently set/active strategy.
    		     *
    		     * @public
    		     * @instance
    		     * @method applyActiveStrategy
    		     * @memberof Tools.Base.BaseTool
    		     *
    		     * @param {*} evt The event that triggered the strategies application
    		     * @returns {*} strategies vary widely; check each specific strategy to find expected return value
    		     */

    		  }, {
    		    key: "applyActiveStrategy",
    		    value: function applyActiveStrategy(evt) {
    		      return this.strategies[this.activeStrategy](evt, this.configuration);
    		    }
    		    /**
    		     * Iterates over registered mixins; any matching names in the provided `mixinsArray` will
    		     * be merged with this instance.
    		     *
    		     * @private
    		     * @method _applyMixins
    		     * @param {string[]} mixinsArray An array of mixin identifiers (strings).
    		     * @returns {undefined}
    		     */

    		  }, {
    		    key: "_applyMixins",
    		    value: function _applyMixins(mixinsArray) {
    		      for (var i = 0; i < mixinsArray.length; i++) {
    		        var mixin = _mixins_index_js__WEBPACK_IMPORTED_MODULE_3__["default"]["".concat(mixinsArray[i])];

    		        if (_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(mixin) === 'object') {
    		          Object.assign(this, mixin);
    		        } else {
    		          logger.warn("".concat(this.name, ": mixin ").concat(_mixins_index_js__WEBPACK_IMPORTED_MODULE_3__["default"][i], " does not exist."));
    		        }
    		      }
    		    } // ===================================================================
    		    // Virtual Methods - Have default behavior but may be overriden.
    		    // ===================================================================
    		    //
    		    // MOUSE
    		    //

    		    /**
    		     * Callback that takes priority if the tool is active, before `MOUSE_DOWN`
    		     * events are processed. Does nothing by default.
    		     *
    		     * @callback BaseTool~preMouseDownCallback
    		     * @param  {CornerstoneTools.event:cornerstonetoolsmousedown} evt
    		     * @returns {boolean} consumedEvent - True if function consumed the event.
    		     */

    		    /**
    		     * Callback that takes priority if the tool is active, after `MOUSE_DOWN`
    		     * events are processed. Does nothing by default.
    		     *
    		     * @callback BaseTool~postMouseDownCallback
    		     * @param  {CornerstoneTools.event:cornerstonetoolsmousedown} evt
    		     * @returns {boolean} consumedEvent - True if function consumed the event.
    		     */

    		    /**
    		     * Callback that is called if the tool is active, after `MOUSE_DOWN`
    		     * events are processed. Does nothing by default.
    		     *
    		     * @virtual
    		     * @param  {type} evt
    		     * @returns {boolean} consumedEvent - True if function consumed the event.
    		     */

    		    /**
    		     * Example implementation:
    		     *
    		     * postMouseDownCallback(evt) {
    		     *    return false;
    		     * }
    		     */

    		    /**
    		     * Callback that takes priority if the tool is active, before `TOUCH_START`
    		     * events are processed. Does nothing by default.
    		     *
    		     * @virtual
    		     * @param  {type} evt
    		     * @returns {boolean} consumedEvent - True if function consumed the event.
    		     */

    		    /**
    		     * Example implementation:
    		     *
    		     * preTouchStartCallback(evt) {
    		     *    return false;
    		     * }
    		     */

    		    /**
    		     * Callback that is called if the tool is active, after `TOUCH_START`
    		     * events are processed. Does nothing by default.
    		     *
    		     * @virtual
    		     * @param  {type} evt
    		     * @returns {boolean} consumedEvent - True if function consumed the event.
    		     */

    		    /**
    		     * Example implementation:
    		     *
    		     * postTouchStartCallback(evt) {
    		     *    return false;
    		     * }
    		     */

    		  }, {
    		    key: "configuration",
    		    get: function get() {
    		      return this._configuration;
    		    },
    		    set: function set(configuration) {
    		      this._configuration = configuration;
    		    } //
    		    // OPTIONS
    		    //

    		    /**
    		     * Options...
    		     * @readonly
    		     * @instance
    		     */

    		  }, {
    		    key: "options",
    		    get: function get() {
    		      return this._options;
    		    }
    		  }], [{
    		    key: "configuration",
    		    get: function get() {}
    		  }]);

    		  return BaseTool;
    		}();

    		/* harmony default export */ __webpack_exports__["default"] = (BaseTool);

    		/***/ }),

    		/***/ "./tools/brush/BrushTool.js":
    		/*!**********************************!*\
    		  !*** ./tools/brush/BrushTool.js ***!
    		  \**********************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return BrushTool; });
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
    		/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__);
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
    		/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__);
    		/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "../node_modules/@babel/runtime/helpers/assertThisInitialized.js");
    		/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__);
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
    		/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _base_BaseBrushTool_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../base/BaseBrushTool.js */ "./tools/base/BaseBrushTool.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./../../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _store_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./../../store/index.js */ "./store/index.js");
    		/* harmony import */ var _util_brush_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./../../util/brush/index.js */ "./util/brush/index.js");
    		/* harmony import */ var _util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./../../util/triggerEvent.js */ "./util/triggerEvent.js");
    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../events.js */ "./events.js");













    		var drawBrushPixels = _util_brush_index_js__WEBPACK_IMPORTED_MODULE_10__["default"].drawBrushPixels,
    		    getCircle = _util_brush_index_js__WEBPACK_IMPORTED_MODULE_10__["default"].getCircle;
    		var brushModule = _store_index_js__WEBPACK_IMPORTED_MODULE_9__["default"].modules.brush;
    		/**
    		 * @public
    		 * @class BrushTool
    		 * @memberof Tools.Brush
    		 * @classdesc Tool for drawing segmentations on an image.
    		 * @extends Tools.Base.BaseBrushTool
    		 */

    		var BrushTool =
    		/*#__PURE__*/
    		function (_BaseBrushTool) {
    		  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5___default()(BrushTool, _BaseBrushTool);

    		  function BrushTool() {
    		    var _this;

    		    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    		    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, BrushTool);

    		    var defaultProps = {
    		      name: 'Brush',
    		      supportedInteractionTypes: ['Mouse', 'Touch'],
    		      strategies: {
    		        overlapping: _overlappingStrategy,
    		        nonOverlapping: _nonOverlappingStrategy
    		      },
    		      defaultStrategy: 'overlapping',
    		      configuration: {
    		        alwaysEraseOnClick: false,
    		        skipPaintForInvisibleSegmentations: false
    		      }
    		    };
    		    _this = _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(BrushTool).call(this, props, defaultProps));
    		    _this.touchDragCallback = _this._paint.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this));
    		    return _this;
    		  }
    		  /**
    		   * Called by the event dispatcher to render the image.
    		   *
    		   * @param {Object} evt - The event.
    		   * @returns {void}
    		   */


    		  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(BrushTool, [{
    		    key: "renderBrush",
    		    value: function renderBrush(evt) {
    		      var eventData = evt.detail;
    		      var viewport = eventData.viewport;
    		      var mousePosition;

    		      if (this._drawing) {
    		        mousePosition = this._lastImageCoords;
    		      } else if (this._mouseUpRender) {
    		        mousePosition = this._lastImageCoords;
    		        this._mouseUpRender = false;
    		      } else {
    		        mousePosition = _store_index_js__WEBPACK_IMPORTED_MODULE_9__["default"].state.mousePositionImage;
    		      }

    		      if (!mousePosition) {
    		        return;
    		      }

    		      var _eventData$image = eventData.image,
    		          rows = _eventData$image.rows,
    		          columns = _eventData$image.columns;
    		      var _mousePosition = mousePosition,
    		          x = _mousePosition.x,
    		          y = _mousePosition.y;

    		      if (x < 0 || x > columns || y < 0 || y > rows) {
    		        return;
    		      } // Draw the hover overlay on top of the pixel data


    		      var radius = brushModule.state.radius;
    		      var context = eventData.canvasContext;
    		      var element = eventData.element;
    		      var drawId = brushModule.state.drawColorId;

    		      var color = this._getBrushColor(drawId);

    		      context.setTransform(1, 0, 0, 1, 0, 0);
    		      var cornerstone = _externalModules_js__WEBPACK_IMPORTED_MODULE_6__["default"].cornerstone;
    		      var circleRadius = radius * viewport.scale;
    		      var mouseCoordsCanvas = cornerstone.pixelToCanvas(element, mousePosition);
    		      context.beginPath();
    		      context.strokeStyle = color;
    		      context.ellipse(mouseCoordsCanvas.x, mouseCoordsCanvas.y, circleRadius, circleRadius, 0, 0, 2 * Math.PI);
    		      context.stroke();
    		    }
    		    /**
    		     * Paints the data to the canvas.
    		     *
    		     * @private
    		     * @param  {Object} evt The data object associated with the event.
    		     * @returns {void}
    		     */

    		  }, {
    		    key: "_paint",
    		    value: function _paint(evt) {
    		      var element = evt.detail.element;

    		      var toolData = _getBaseBrushToolStateForElement(element).data;

    		      var segmentationIndex = brushModule.state.drawColorId;

    		      var shouldErase = this.configuration.alwaysEraseOnClick || _isCtrlDown(evt.detail);

    		      var isErasingNothing = shouldErase && !toolData[segmentationIndex];

    		      if (isErasingNothing || this.configuration.skipPaintForInvisibleSegmentations && !_isSegmentationVisibleForElement(element, segmentationIndex, toolData)) {
    		        return;
    		      }

    		      this.applyActiveStrategy(evt, this.configuration);
    		      Object(_util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_11__["default"])(evt.detail.element, _events_js__WEBPACK_IMPORTED_MODULE_12__["default"].MEASUREMENT_MODIFIED, evt.detail);
    		      _externalModules_js__WEBPACK_IMPORTED_MODULE_6__["default"].cornerstone.updateImage(evt.detail.element);
    		    }
    		  }]);

    		  return BrushTool;
    		}(_base_BaseBrushTool_js__WEBPACK_IMPORTED_MODULE_7__["default"]);



    		function _overlappingStrategy(evt, configuration) {
    		  var eventData = evt.detail;
    		  var element = eventData.element;
    		  var _eventData$image2 = eventData.image,
    		      rows = _eventData$image2.rows,
    		      columns = _eventData$image2.columns;
    		  var _eventData$currentPoi = eventData.currentPoints.image,
    		      x = _eventData$currentPoi.x,
    		      y = _eventData$currentPoi.y;
    		  var toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_8__["getToolState"])(element, _base_BaseBrushTool_js__WEBPACK_IMPORTED_MODULE_7__["default"].getReferencedToolDataName());
    		  var toolData = toolState.data;

    		  if (x < 0 || x > columns || y < 0 || y > rows) {
    		    return;
    		  }

    		  var radius = brushModule.state.radius;
    		  var pointerArray = getCircle(radius, rows, columns, x, y);

    		  _drawMainColor(eventData, toolData, pointerArray, configuration);
    		}

    		function _nonOverlappingStrategy(evt, configuration) {
    		  var eventData = evt.detail;
    		  var element = eventData.element;
    		  var _eventData$image3 = eventData.image,
    		      rows = _eventData$image3.rows,
    		      columns = _eventData$image3.columns;
    		  var _eventData$currentPoi2 = eventData.currentPoints.image,
    		      x = _eventData$currentPoi2.x,
    		      y = _eventData$currentPoi2.y;
    		  var toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_8__["getToolState"])(element, _base_BaseBrushTool_js__WEBPACK_IMPORTED_MODULE_7__["default"].getReferencedToolDataName());
    		  var toolData = toolState.data;
    		  var segmentationIndex = brushModule.state.drawColorId;

    		  if (x < 0 || x > columns || y < 0 || y > rows) {
    		    return;
    		  }

    		  var radius = brushModule.state.radius;
    		  var pointerArray = getCircle(radius, rows, columns, x, y);
    		  var numberOfColors = _base_BaseBrushTool_js__WEBPACK_IMPORTED_MODULE_7__["default"].getNumberOfColors(); // If there is brush data in this region for other colors, delete it.

    		  for (var i = 0; i < numberOfColors; i++) {
    		    if (i === segmentationIndex) {
    		      continue;
    		    }

    		    if (toolData[i] && toolData[i].pixelData) {
    		      drawBrushPixels(pointerArray, toolData[i], columns, true);
    		      toolData[i].invalidated = true;
    		    }
    		  }

    		  _drawMainColor(eventData, toolData, pointerArray, configuration);
    		}

    		function _drawMainColor(eventData, toolData, pointerArray, configuration) {
    		  var shouldErase = configuration.alwaysEraseOnClick || _isCtrlDown(eventData);

    		  var segmentationIndex = brushModule.state.drawColorId;
    		  var hasNoDataForSegmentation = !toolData[segmentationIndex];

    		  if (hasNoDataForSegmentation) {
    		    toolData[segmentationIndex] = {};
    		  }

    		  if (!toolData[segmentationIndex].pixelData) {
    		    var enabledElement = _externalModules_js__WEBPACK_IMPORTED_MODULE_6__["default"].cornerstone.getEnabledElement(eventData.element);
    		    var enabledElementUID = enabledElement.uuid; // Clear cache for this color to avoid flickering.

    		    var imageBitmapCacheForElement = brushModule.getters.imageBitmapCacheForElement(enabledElementUID);

    		    if (imageBitmapCacheForElement) {
    		      imageBitmapCacheForElement[segmentationIndex] = null;
    		    } // Add a new pixelData array.


    		    toolData[segmentationIndex].pixelData = new Uint8ClampedArray(eventData.image.width * eventData.image.height);
    		  }

    		  var toolDataI = toolData[segmentationIndex];
    		  var columns = eventData.image.columns; // Draw / Erase the active color.

    		  drawBrushPixels(pointerArray, toolDataI, columns, shouldErase);
    		  toolDataI.invalidated = true;
    		}

    		function _isCtrlDown(eventData) {
    		  return eventData.event && eventData.event.ctrlKey || eventData.ctrlKey;
    		}

    		function _getBaseBrushToolStateForElement(element) {
    		  var toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_8__["getToolState"])(element, _base_BaseBrushTool_js__WEBPACK_IMPORTED_MODULE_7__["default"].getReferencedToolDataName());

    		  if (!toolState) {
    		    Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_8__["addToolState"])(element, _base_BaseBrushTool_js__WEBPACK_IMPORTED_MODULE_7__["default"].getReferencedToolDataName(), {});
    		    toolState = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_8__["getToolState"])(element, _base_BaseBrushTool_js__WEBPACK_IMPORTED_MODULE_7__["default"].getReferencedToolDataName());
    		  }

    		  return toolState;
    		}

    		function _isSegmentationVisibleForElement(element, segmentationIndex, toolData) {
    		  var enabledElement = _externalModules_js__WEBPACK_IMPORTED_MODULE_6__["default"].cornerstone.getEnabledElement(element);
    		  var visibleSegmentationsForElement = brushModule.getters.visibleSegmentationsForElement(enabledElement.uuid);
    		  return (// Global alpha for active segmentation
    		    brushModule.state.alpha > 0.001 && // Master isVisible toggle per seg + element
    		    // TODO: If false, should we check the secondary alpha that's applied to segmentions that aren't visible?
    		    visibleSegmentationsForElement[segmentationIndex] === true && ( // Does not have alpha, or alpha is > 1 (0 to 255)
    		    toolData[segmentationIndex] === undefined || toolData[segmentationIndex].alpha === undefined || toolData[segmentationIndex].alpha > 0.001)
    		  );
    		}

    		/***/ }),

    		/***/ "./tools/brush/index.js":
    		/*!******************************!*\
    		  !*** ./tools/brush/index.js ***!
    		  \******************************/
    		/*! exports provided: BrushTool, default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _BrushTool_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BrushTool.js */ "./tools/brush/BrushTool.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BrushTool", function() { return _BrushTool_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

    		 // Named Exports

    		 // Namespace, default export

    		/* harmony default export */ __webpack_exports__["default"] = ({
    		  BrushTool: _BrushTool_js__WEBPACK_IMPORTED_MODULE_0__["default"]
    		});

    		/***/ }),

    		/***/ "./tools/cursors/MouseCursor.js":
    		/*!**************************************!*\
    		  !*** ./tools/cursors/MouseCursor.js ***!
    		  \**************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return MouseCursor; });
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
    		/* harmony import */ var _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../stateManagement/toolColors.js */ "./stateManagement/toolColors.js");
    		/* harmony import */ var _store_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../store/index.js */ "./store/index.js");




    		var cursorModule = _store_index_js__WEBPACK_IMPORTED_MODULE_3__["modules"].cursor;
    		/* eslint-disable valid-jsdoc */

    		/*
    		MACROS - The following keys will have the appropriate value injected when
    		an SVG is requested:

    		- ACTIVE_COLOR  => options.activeColor || toolColors.getActiveColor();
    		- TOOL_COLOR    => options.toolColor || toolColors.getToolColor();
    		- FILL_COLOR    => options.fillColor || toolColors.getFillColor();
    		*/

    		var MouseCursor =
    		/*#__PURE__*/
    		function () {
    		  function MouseCursor(iconGroupString, options) {
    		    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, MouseCursor);

    		    this.iconGroupString = iconGroupString;
    		    this.options = Object.assign({}, cursorModule.getters.defaultOptions(), options);
    		  }
    		  /**
    		   * Returns an SVG of the icon only.
    		   *
    		   * @param  {Object} options - An object which overrides default properties of the returned SVG.
    		   * @returns {Blob} The SVG of the icon.
    		   */


    		  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(MouseCursor, [{
    		    key: "getIconSVG",
    		    value: function getIconSVG() {
    		      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    		      var svgString = this._generateIconSVGString(options);

    		      return new Blob([svgString], {
    		        type: 'image/svg+xml'
    		      });
    		    }
    		    /**
    		     *  Returns a string representation of the SVG of the icon only.
    		     *
    		     * @param  {Object} options - An object which overrides default properties of the returned SVG.
    		     * @returns {string} The stringified SVG of the icon.
    		     */

    		  }, {
    		    key: "getIconSVGString",
    		    value: function getIconSVGString() {
    		      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    		      return this._generateIconSVGString(options);
    		    }
    		    /**
    		     * Returns an SVG of the icon + pointer.
    		     *
    		     * @param  {Object} options - An object which overrides default properties of the returned SVG.
    		     * @returns {Blob} The SVG of the icon + pointer..
    		     */

    		  }, {
    		    key: "getIconWithPointerSVG",
    		    value: function getIconWithPointerSVG() {
    		      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    		      var svgString = this._generateIconWithPointerSVGString(options);

    		      return new Blob([svgString], {
    		        type: 'image/svg+xml'
    		      });
    		    }
    		    /**
    		     * Returns a string representation of the SVG of the icon + pointer.
    		     *
    		     * @param  {Object} options - An object which overrides default properties of the returned SVG.
    		     * @returns {string} The stringified SVG of the icon + pointer.
    		     */

    		  }, {
    		    key: "getIconWithPointerString",
    		    value: function getIconWithPointerString() {
    		      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    		      return this._generateIconWithPointerSVGString(options);
    		    }
    		    /**
    		     * Returns the mousePoint as a space seperated string.
    		     *
    		     * @returns {string} The mousePoint.
    		     */

    		  }, {
    		    key: "_generateIconWithPointerSVGString",

    		    /**
    		     * Generates a string representation of the icon + pointer.
    		     *
    		     * @param  {Object} options - An object which overrides default properties of the returned string.
    		     * @returns {string} The SVG as a string.
    		     */
    		    value: function _generateIconWithPointerSVGString() {
    		      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    		      var svgOptions = Object.assign({}, this.options, options);
    		      var mousePointerGroupString = svgOptions.mousePointerGroupString,
    		          iconSize = svgOptions.iconSize,
    		          viewBox = svgOptions.viewBox;
    		      var scale = iconSize / Math.max(viewBox.x, viewBox.y);
    		      var svgSize = 16 + iconSize;
    		      var svgString = "\n        <svg\n        data-icon=\"cursor\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"".concat(svgSize, "\" height=\"").concat(svgSize, "\" viewBox=\"0 0 ").concat(svgSize, " ").concat(svgSize, "\"\n      >\n        <g>\n          ").concat(mousePointerGroupString, "\n        </g>\n        <g transform=\"translate(16, 16) scale(").concat(scale, ")\">\n          ").concat(this.iconGroupString, "\n        </g>\n      </svg>");
    		      return this._injectColors(svgString, svgOptions);
    		    }
    		    /**
    		     * Generates a string representation of the icon.
    		     *
    		     * @param  {Object} options - An object which overrides default properties of the returned string.
    		     * @returns {string} The SVG as a string.
    		     */

    		  }, {
    		    key: "_generateIconSVGString",
    		    value: function _generateIconSVGString() {
    		      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    		      var svgOptions = Object.assign({}, this.options, options);
    		      var iconSize = svgOptions.iconSize,
    		          viewBox = svgOptions.viewBox;
    		      var svgString = "\n      <svg\n        data-icon=\"cursor\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"".concat(iconSize, "\" height=\"").concat(iconSize, "\" viewBox=\"0 0\n        ").concat(viewBox.x, " ").concat(viewBox.y, "\"\n      >\n        ").concat(this.iconGroupString, "\n      </svg>");
    		      return this._injectColors(svgString, svgOptions);
    		    }
    		    /**
    		     * Replaces ACTIVE_COLOR, TOOL_COLOR and FILL_COLOR in svgString with their appropriate values.
    		     *
    		     * @param  {string} svgString - The string to modify.
    		     * @param  {Object} options - Optional overrides for the colors.
    		     * @returns {string} The string with color values injected.
    		     */

    		  }, {
    		    key: "_injectColors",
    		    value: function _injectColors(svgString) {
    		      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    		      var activeColor = options.activeColor || _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_2__["default"].getActiveColor();
    		      var toolColor = options.toolColor || _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_2__["default"].getToolColor();
    		      var fillColor = options.fillColor || _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_2__["default"].getFillColor();
    		      return svgString.replace(/ACTIVE_COLOR/g, "".concat(activeColor)).replace(/TOOL_COLOR/g, "".concat(toolColor)).replace(/FILL_COLOR/g, "".concat(fillColor));
    		    }
    		  }, {
    		    key: "mousePoint",
    		    get: function get() {
    		      var mousePoint = this.options.mousePoint;
    		      return "".concat(mousePoint.x, " ").concat(mousePoint.y);
    		    }
    		  }]);

    		  return MouseCursor;
    		}();



    		/***/ }),

    		/***/ "./tools/cursors/index.js":
    		/*!********************************!*\
    		  !*** ./tools/cursors/index.js ***!
    		  \********************************/
    		/*! exports provided: angleCursor, arrowAnnotateCursor, bidirectionalCursor, cobbAngleCursor, circleRoiCursor, ellipticalRoiCursor, freehandMouseCursor, freehandSculpterMouseCursor, lengthCursor, probeCursor, rectangleRoiCursor, textMarkerCursor, crosshairsCursor, eraserCursor, magnifyCursor, panCursor, rotateCursor, stackScrollCursor, wwwcRegionCursor, wwwcCursor, zoomCursor */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "angleCursor", function() { return angleCursor; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "arrowAnnotateCursor", function() { return arrowAnnotateCursor; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bidirectionalCursor", function() { return bidirectionalCursor; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cobbAngleCursor", function() { return cobbAngleCursor; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "circleRoiCursor", function() { return circleRoiCursor; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ellipticalRoiCursor", function() { return ellipticalRoiCursor; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "freehandMouseCursor", function() { return freehandMouseCursor; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "freehandSculpterMouseCursor", function() { return freehandSculpterMouseCursor; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lengthCursor", function() { return lengthCursor; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "probeCursor", function() { return probeCursor; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rectangleRoiCursor", function() { return rectangleRoiCursor; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "textMarkerCursor", function() { return textMarkerCursor; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "crosshairsCursor", function() { return crosshairsCursor; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "eraserCursor", function() { return eraserCursor; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "magnifyCursor", function() { return magnifyCursor; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "panCursor", function() { return panCursor; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateCursor", function() { return rotateCursor; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stackScrollCursor", function() { return stackScrollCursor; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wwwcRegionCursor", function() { return wwwcRegionCursor; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wwwcCursor", function() { return wwwcCursor; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zoomCursor", function() { return zoomCursor; });
    		/* harmony import */ var _MouseCursor_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MouseCursor.js */ "./tools/cursors/MouseCursor.js");

    		/*
    		MACROS:

    		The following keys will have the appropriate value injected by the MouseCursor
    		class when an SVG is requested:

    		- ACTIVE_COLOR  => options.activeColor || toolColors.getActiveColor();
    		- TOOL_COLOR    => options.toolColor || toolColors.getToolColor();
    		- FILL_COLOR    => options.fillColor || toolColors.getFillColor();
    		*/

    		var angleCursor = new _MouseCursor_js__WEBPACK_IMPORTED_MODULE_0__["default"]("<path fill=\"ACTIVE_COLOR\" d=\"M1203 544q0 13-10 23l-393 393 393 393q10 10 10 23t-10 23l-50\n        50q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l466-466q10-10 23-10t23\n        10l50 50q10 10 10 23z\"\n      />", {
    		  viewBox: {
    		    x: 1792,
    		    y: 1792
    		  }
    		});
    		var arrowAnnotateCursor = new _MouseCursor_js__WEBPACK_IMPORTED_MODULE_0__["default"]("<g id=\"arrowAnnotate-group\" fill=\"none\" stroke-width=\"1\" stroke=\"ACTIVE_COLOR\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n    <path id=\"arrowAnnotate-arrow\" d=\"M23,7 l-15,15 M7,17 l0,6 6,0\" stroke-width=\"2\" />\n  </g>", {
    		  viewBox: {
    		    x: 24,
    		    y: 24
    		  }
    		});
    		var bidirectionalCursor = new _MouseCursor_js__WEBPACK_IMPORTED_MODULE_0__["default"]("<g fill=\"ACTIVE_COLOR\" stroke-width=\"3\" stroke=\"ACTIVE_COLOR\">\n    <path d=\"M27.63 3.21L3.12 28.81\"></path>\n    <path d=\"M27.63 15.75L15.27 4.43\"></path>\n    <path d=\"M16.5 4.28C16.5 4.96 15.95 5.51 15.27 5.51C14.59 5.51 14.03 4.96 14.03 4.28C14.03 3.59 14.59 3.04 15.27 3.04C15.95 3.04 16.5 3.59 16.5 4.28Z\" ></path>\n    <path d=\"M28.87 3.19C28.87 3.87 28.31 4.43 27.63 4.43C26.95 4.43 26.4 3.87 26.4 3.19C26.4 2.51 26.95 1.95 27.63 1.95C28.31 1.95 28.87 2.51 28.87 3.19Z\"></path>\n    <path d=\"M28.87 15.75C28.87 16.43 28.31 16.99 27.63 16.99C26.95 16.99 26.4 16.43 26.4 15.75C26.4 15.07 26.95 14.51 27.63 14.51C28.31 14.51 28.87 15.07 28.87 15.75Z\"></path>\n    <path d=\"M4.73 28.44C4.73 29.12 4.17 29.68 3.49 29.68C2.81 29.68 2.25 29.12 2.25 28.44C2.25 27.76 2.81 27.2 3.49 27.2C4.17 27.2 4.73 27.76 4.73 28.44Z\"></path>\n  </g>", {
    		  viewBox: {
    		    x: 48,
    		    y: 48
    		  }
    		});
    		var cobbAngleCursor = new _MouseCursor_js__WEBPACK_IMPORTED_MODULE_0__["default"]("<g stroke=\"ACTIVE_COLOR\" stroke-width=\"3\">\n    <path d=\"M28.59 2.34L3.82 12.32\"></path>\n    <path d=\"M28.59 29.66L3.82 19.68\"></path>\n    <path stroke-dasharray=\"2\" fill-opacity=\"0\" d=\"M12.37\n      23.06C12.67 22.36 12.85 21.93 12.92 21.76C14.6 17.8 14.68 13.35 13.15\n      9.33C13.11 9.24 13.02 9 12.88 8.63\">\n    </path>\n  </g>", {
    		  viewBox: {
    		    x: 32,
    		    y: 32
    		  }
    		});
    		var circleRoiCursor = new _MouseCursor_js__WEBPACK_IMPORTED_MODULE_0__["default"]("<circle stroke=\"ACTIVE_COLOR\" fill=\"none\" stroke-width=\"3\" cx=\"16\" cy=\"16\" r=\"14\" />", {
    		  viewBox: {
    		    x: 32,
    		    y: 32
    		  }
    		});
    		var ellipticalRoiCursor = new _MouseCursor_js__WEBPACK_IMPORTED_MODULE_0__["default"]("<path stroke=\"ACTIVE_COLOR\" fill=\"none\" stroke-width=\"3\" d=\"M30.74 15.76C30.74 20.99 24.14 25.23 16\n    25.23C7.86 25.23 1.26 20.99 1.26 15.76C1.26 10.54 7.86 6.3 16 6.3C24.14\n    6.3 30.74 10.54 30.74 15.76Z\"\n    />", {
    		  viewBox: {
    		    x: 32,
    		    y: 32
    		  }
    		});
    		var freehandMouseCursor = new _MouseCursor_js__WEBPACK_IMPORTED_MODULE_0__["default"]("\n  <g fill=\"ACTIVE_COLOR\" stroke=\"ACTIVE_COLOR\" stroke-width=\"2\">\n    <ellipse ry=\"1\" rx=\"1\" id=\"svg_3\" cy=\"4.240343\" cx=\"14.306499\"/>\n    <line id=\"svg_4\" y2=\"3.58462\" x2=\"12.242186\" y1=\"3.997482\" x1=\"13.432202\"/>\n    <line id=\"svg_5\" y2=\"3.268901\" x2=\"10.857882\" y1=\"3.608906\" x1=\"12.387902\"/>\n    <line id=\"svg_6\" y2=\"3.147471\" x2=\"9.740724\" y1=\"3.293187\" x1=\"10.955026\"/>\n    <line id=\"svg_7\" y2=\"3.147471\" x2=\"8.089274\" y1=\"3.196043\" x1=\"9.983585\"/>\n    <line id=\"svg_8\" y2=\"3.268901\" x2=\"6.874972\" y1=\"3.123185\" x1=\"8.307848\"/>\n    <line id=\"svg_9\" y2=\"3.657478\" x2=\"5.587812\" y1=\"3.220329\" x1=\"7.020688\"/>\n    <line id=\"svg_10\" y2=\"4.046054\" x2=\"4.737801\" y1=\"3.560334\" x1=\"5.854959\"/>\n    <line id=\"svg_11\" y2=\"4.337487\" x2=\"4.300652\" y1=\"3.997482\" x1=\"4.834945\"/>\n    <line id=\"svg_12\" y2=\"4.726063\" x2=\"3.88779\" y1=\"4.191771\" x1=\"4.470655\"/>\n    <line id=\"svg_15\" y2=\"5.3575\" x2=\"3.377783\" y1=\"4.604633\" x1=\"3.960648\"/>\n    <line id=\"svg_16\" y2=\"6.183226\" x2=\"2.916348\" y1=\"5.138926\" x1=\"3.547785\"/>\n    <line id=\"svg_17\" y2=\"6.960379\" x2=\"2.770632\" y1=\"5.867507\" x1=\"3.037779\"/>\n    <line id=\"svg_18\" y2=\"7.713246\" x2=\"2.673488\" y1=\"6.741804\" x1=\"2.819204\"/>\n    <line id=\"svg_19\" y2=\"8.684687\" x2=\"2.697774\" y1=\"7.616102\" x1=\"2.673488\"/>\n    <line id=\"svg_20\" y2=\"9.753273\" x2=\"2.892062\" y1=\"8.611829\" x1=\"2.697774\"/>\n    <line id=\"svg_21\" y2=\"10.724714\" x2=\"3.134923\" y1=\"9.534698\" x1=\"2.84349\"/>\n    <line id=\"svg_23\" y2=\"11.647583\" x2=\"3.596357\" y1=\"10.578998\" x1=\"3.086351\"/>\n    <line id=\"svg_25\" y2=\"12.521881\" x2=\"4.276366\" y1=\"11.501867\" x1=\"3.499213\"/>\n    <line id=\"svg_26\" y2=\"13.930471\" x2=\"5.830673\" y1=\"12.376165\" x1=\"4.13065\"/>\n    <line id=\"svg_28\" y2=\"14.707624\" x2=\"7.263549\" y1=\"13.881899\" x1=\"5.733528\"/>\n    <line id=\"svg_29\" y2=\"15.339061\" x2=\"8.963571\" y1=\"14.61048\" x1=\"7.06926\"/>\n    <line id=\"svg_30\" y2=\"15.581921\" x2=\"10.882168\" y1=\"15.314775\" x1=\"8.817855\"/>\n    <line id=\"svg_31\" y2=\"15.460491\" x2=\"12.023612\" y1=\"15.581921\" x1=\"10.785024\"/>\n    <line id=\"svg_33\" y2=\"15.120487\" x2=\"13.092197\" y1=\"15.484777\" x1=\"11.877895\"/>\n    <line id=\"svg_34\" y2=\"14.586194\" x2=\"13.86935\" y1=\"15.217631\" x1=\"12.897909\"/>\n    <line id=\"svg_35\" y2=\"13.833327\" x2=\"14.597931\" y1=\"14.756196\" x1=\"13.699348\"/>\n    <line id=\"svg_37\" y2=\"12.716169\" x2=\"15.180796\" y1=\"13.881899\" x1=\"14.549359\"/>\n    <line id=\"svg_39\" y2=\"11.429009\" x2=\"15.520801\" y1=\"12.813313\" x1=\"15.15651\"/>\n    <ellipse ry=\"1\" rx=\"1\" id=\"svg_40\" cy=\"10.967574\" cx=\"15.520801\"/>\n  </g>", {
    		  viewBox: {
    		    x: 18,
    		    y: 18
    		  }
    		});
    		var freehandSculpterMouseCursor = new _MouseCursor_js__WEBPACK_IMPORTED_MODULE_0__["default"]("<g id=\"icon-freehand-sculpt\" fill=\"none\" stroke-width=\"1.5\" stroke=\"ACTIVE_COLOR\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n      <line id=\"svg_1\" y2=\"2.559367\" x2=\"10.184807\" y1=\"4.467781\" x1=\"8.81711\"/>\n      <line id=\"svg_4\" y2=\"1.493836\" x2=\"11.727442\" y1=\"2.766112\" x1=\"10.089386\"/>\n      <line id=\"svg_7\" y2=\"1.080346\" x2=\"13.047428\" y1=\"1.748291\" x1=\"11.345759\"/>\n      <line id=\"svg_8\" y2=\"1.000829\" x2=\"14.351511\" y1=\"1.112153\" x1=\"12.77707\"/>\n      <line id=\"svg_9\" y2=\"1.350705\" x2=\"15.242104\" y1=\"0.905408\" x1=\"13.969828\"/>\n      <line id=\"svg_10\" y2=\"2.098167\" x2=\"15.862339\" y1=\"1.14396\" x1=\"14.955842\"/>\n      <line id=\"svg_11\" y2=\"3.195505\" x2=\"16.41896\" y1=\"1.939133\" x1=\"15.766918\"/>\n      <line id=\"svg_12\" y2=\"4.292843\" x2=\"16.530284\" y1=\"2.925147\" x1=\"16.387153\"/>\n      <line id=\"svg_16\" y2=\"5.644637\" x2=\"16.196311\" y1=\"3.831643\" x1=\"16.593898\"/>\n      <line id=\"svg_18\" y2=\"7.266789\" x2=\"15.623787\" y1=\"5.19934\" x1=\"16.275829\"/>\n      <line id=\"svg_19\" y2=\"10.813258\" x2=\"14.526449\" y1=\"6.726071\" x1=\"15.766918\"/>\n      <line id=\"svg_20\" y2=\"5.056209\" x2=\"8.085552\" y1=\"4.181519\" x1=\"8.976145\"/>\n      <line id=\"svg_23\" y2=\"5.326568\" x2=\"7.481221\" y1=\"4.78585\" x1=\"8.403621\"/>\n      <line id=\"svg_24\" y2=\"5.565119\" x2=\"6.749662\" y1=\"5.294761\" x1=\"7.624352\"/>\n      <line id=\"svg_25\" y2=\"5.994512\" x2=\"5.429675\" y1=\"5.533312\" x1=\"6.956407\"/>\n      <line id=\"svg_27\" y2=\"6.551133\" x2=\"4.284627\" y1=\"5.962706\" x1=\"5.572807\"/>\n      <line id=\"svg_28\" y2=\"7.584858\" x2=\"3.044158\" y1=\"6.392099\" x1=\"4.427758\"/>\n      <line id=\"svg_29\" y2=\"8.84123\" x2=\"2.185372\" y1=\"7.489437\" x1=\"3.219096\"/>\n      <line id=\"svg_31\" y2=\"10.606513\" x2=\"1.644654\" y1=\"8.602678\" x1=\"2.280792\"/>\n      <line id=\"svg_32\" y2=\"13.214679\" x2=\"1.48562\" y1=\"10.352058\" x1=\"1.724171\"/>\n      <line id=\"svg_33\" y2=\"14.375631\" x2=\"1.676461\" y1=\"12.992031\" x1=\"1.453813\"/>\n      <line id=\"svg_34\" y2=\"15.298031\" x2=\"2.264889\" y1=\"14.152983\" x1=\"1.517427\"/>\n      <line id=\"svg_35\" y2=\"16.172721\" x2=\"3.521261\" y1=\"14.948155\" x1=\"1.915013\"/>\n      <line id=\"svg_36\" y2=\"16.824762\" x2=\"5.207027\" y1=\"15.997783\" x1=\"3.28271\"/>\n      <line id=\"svg_38\" y2=\"17.063314\" x2=\"7.035924\" y1=\"16.745245\" x1=\"4.968475\"/>\n      <line id=\"svg_39\" y2=\"16.888376\" x2=\"9.278311\" y1=\"17.047411\" x1=\"6.733758\"/>\n      <line id=\"svg_40\" y2=\"16.284045\" x2=\"10.661911\" y1=\"16.983797\" x1=\"8.992048\"/>\n      <line id=\"svg_41\" y2=\"15.313934\" x2=\"11.647925\" y1=\"16.395369\" x1=\"10.455166\"/>\n      <line id=\"svg_44\" y2=\"13.898527\" x2=\"12.82478\" y1=\"15.425259\" x1=\"11.504794\"/>\n      <line id=\"svg_45\" y2=\"12.037824\" x2=\"14.144766\" y1=\"14.312017\" x1=\"12.522614\"/>\n      <line id=\"svg_47\" y2=\"10.59061\" x2=\"14.605966\" y1=\"12.228665\" x1=\"13.953925\"/>\n      <ellipse ry=\"1\" rx=\"1\" id=\"svg_48\" cy=\"3.982726\" cx=\"13.460918\"/>\n    </g>", {
    		  viewBox: {
    		    x: 18,
    		    y: 18
    		  }
    		});
    		var lengthCursor = new _MouseCursor_js__WEBPACK_IMPORTED_MODULE_0__["default"]("<g id=\"length-group\" fill=\"none\" stroke-width=\"1\" stroke=\"ACTIVE_COLOR\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n    <path id=\"length-dashes\" d=\"m22.5,6 -16.5,16.5\" stroke-width=\"3\" stroke-dasharray=\"0.6666,5\" />\n  </g>", {
    		  viewBox: {
    		    x: 24,
    		    y: 24
    		  }
    		});
    		var probeCursor = new _MouseCursor_js__WEBPACK_IMPORTED_MODULE_0__["default"]("<path fill=\"ACTIVE_COLOR\" d=\"M1152 896q0 106-75 181t-181 75-181-75-75-181 75-181 181-75 181 75\n    75 181zm-256-544q-148 0-273 73t-198 198-73 273 73 273 198 198 273 73 273-73\n    198-198 73-273-73-273-198-198-273-73zm768 544q0 209-103 385.5t-279.5\n    279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5\n    385.5-103 385.5 103 279.5 279.5 103 385.5z\"\n  />", {
    		  viewBox: {
    		    x: 1792,
    		    y: 1792
    		  }
    		});
    		var rectangleRoiCursor = new _MouseCursor_js__WEBPACK_IMPORTED_MODULE_0__["default"]("<path fill=\"ACTIVE_COLOR\" d=\"M1312 256h-832q-66 0-113 47t-47 113v832q0 66 47\n    113t113 47h832q66 0 113-47t47-113v-832q0-66-47-113t-113-47zm288 160v832q0\n    119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119\n    84.5-203.5t203.5-84.5h832q119 0 203.5 84.5t84.5 203.5z\"\n  />", {
    		  viewBox: {
    		    x: 1792,
    		    y: 1792
    		  }
    		});
    		var textMarkerCursor = new _MouseCursor_js__WEBPACK_IMPORTED_MODULE_0__["default"]("<path fill=\"ACTIVE_COLOR\" d=\"M789 559l-170 450q33 0 136.5 2t160.5 2q19 0\n    57-2-87-253-184-452zm-725 1105l2-79q23-7 56-12.5t57-10.5 49.5-14.5 44.5-29\n    31-50.5l237-616 280-724h128q8 14 11 21l205 480q33 78 106 257.5t114 274.5q15\n    34 58 144.5t72 168.5q20 45 35 57 19 15 88 29.5t84 20.5q6 38 6 57 0 5-.5\n    13.5t-.5 12.5q-63 0-190-8t-191-8q-76 0-215 7t-178 8q0-43 4-78l131-28q1 0\n    12.5-2.5t15.5-3.5 14.5-4.5 15-6.5 11-8 9-11\n    2.5-14q0-16-31-96.5t-72-177.5-42-100l-450-2q-26 58-76.5 195.5t-50.5 162.5q0\n    22 14 37.5t43.5 24.5 48.5 13.5 57 8.5 41 4q1 19 1 58 0 9-2 27-58\n    0-174.5-10t-174.5-10q-8 0-26.5 4t-21.5 4q-80 14-188 14z\"\n  />", {
    		  viewBox: {
    		    x: 1792,
    		    y: 1792
    		  }
    		});
    		var crosshairsCursor = new _MouseCursor_js__WEBPACK_IMPORTED_MODULE_0__["default"]("<path fill=\"ACTIVE_COLOR\" d=\"M1325 1024h-109q-26 0-45-19t-19-45v-128q0-26\n    19-45t45-19h109q-32-108-112.5-188.5t-188.5-112.5v109q0 26-19 45t-45\n    19h-128q-26 0-45-19t-19-45v-109q-108 32-188.5 112.5t-112.5 188.5h109q26\n    0 45 19t19 45v128q0 26-19 45t-45 19h-109q32 108 112.5 188.5t188.5\n    112.5v-109q0-26 19-45t45-19h128q26 0 45 19t19 45v109q108-32\n    188.5-112.5t112.5-188.5zm339-192v128q0 26-19 45t-45 19h-143q-37 161-154.5\n    278.5t-278.5 154.5v143q0 26-19 45t-45 19h-128q-26\n    0-45-19t-19-45v-143q-161-37-278.5-154.5t-154.5-278.5h-143q-26\n    0-45-19t-19-45v-128q0-26 19-45t45-19h143q37-161\n    154.5-278.5t278.5-154.5v-143q0-26 19-45t45-19h128q26 0 45 19t19 45v143q161\n    37 278.5 154.5t154.5 278.5h143q26 0 45 19t19 45z\"\n  />", {
    		  viewBox: {
    		    x: 1792,
    		    y: 1792
    		  }
    		});
    		var eraserCursor = new _MouseCursor_js__WEBPACK_IMPORTED_MODULE_0__["default"]("<path transform=\"translate(0,1792) scale(1,-1)\" fill=\"ACTIVE_COLOR\" d=\"M960 1408l336-384h-768l-336 384h768zm1013-1077q15\n      34 9.5 71.5t-30.5 65.5l-896 1024q-38 44-96 44h-768q-38\n      0-69.5-20.5t-47.5-54.5q-15-34-9.5-71.5t30.5-65.5l896-1024q38-44 96-44h768q38\n      0 69.5 20.5t47.5 54.5z\"\n    />", {
    		  viewBox: {
    		    x: 2048,
    		    y: 1792
    		  }
    		});
    		var magnifyCursor = new _MouseCursor_js__WEBPACK_IMPORTED_MODULE_0__["default"]("<path fill=\"ACTIVE_COLOR\" d=\"M508.5 481.6l-129-129c-2.3-2.3-5.3-3.5-8.5-3.5h-10.3C395\n      312 416 262.5 416 208 416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c54.5\n      0 104-21 141.1-55.2V371c0 3.2 1.3 6.2 3.5 8.5l129 129c4.7 4.7 12.3 4.7 17\n      0l9.9-9.9c4.7-4.7 4.7-12.3 0-17zM208 384c-97.3 0-176-78.7-176-176S110.7 32 208\n      32s176 78.7 176 176-78.7 176-176 176z\"\n    />", {
    		  viewBox: {
    		    x: 512,
    		    y: 512
    		  }
    		});
    		var panCursor = new _MouseCursor_js__WEBPACK_IMPORTED_MODULE_0__["default"]("<path fill=\"ACTIVE_COLOR\" d=\"M1411 541l-355 355 355 355 144-144q29-31 70-14 39 17\n      39 59v448q0 26-19 45t-45 19h-448q-42 0-59-40-17-39 14-69l144-144-355-355-355\n      355 144 144q31 30 14 69-17 40-59 40h-448q-26 0-45-19t-19-45v-448q0-42 40-59\n      39-17 69 14l144 144 355-355-355-355-144 144q-19 19-45 19-12\n      0-24-5-40-17-40-59v-448q0-26 19-45t45-19h448q42 0 59 40 17 39-14 69l-144\n      144 355 355 355-355-144-144q-31-30-14-69 17-40 59-40h448q26 0 45 19t19\n      45v448q0 42-39 59-13 5-25 5-26 0-45-19z\"\n    />", {
    		  viewBox: {
    		    x: 1792,
    		    y: 1792
    		  }
    		});
    		var rotateCursor = new _MouseCursor_js__WEBPACK_IMPORTED_MODULE_0__["default"]("<path fill=\"ACTIVE_COLOR\" d=\"M1664 256v448q0 26-19 45t-45 19h-448q-42 0-59-40-17-39\n      14-69l138-138q-148-137-349-137-104 0-198.5 40.5t-163.5 109.5-109.5\n      163.5-40.5 198.5 40.5 198.5 109.5 163.5 163.5 109.5 198.5 40.5q119 0\n      225-52t179-147q7-10 23-12 15 0 25 9l137 138q9 8 9.5 20.5t-7.5 22.5q-109\n      132-264 204.5t-327 72.5q-156 0-298-61t-245-164-164-245-61-298 61-298\n      164-245 245-164 298-61q147 0 284.5 55.5t244.5 156.5l130-129q29-31 70-14\n      39 17 39 59z\"\n    />", {
    		  viewBox: {
    		    x: 1792,
    		    y: 1792
    		  }
    		});
    		var stackScrollCursor = new _MouseCursor_js__WEBPACK_IMPORTED_MODULE_0__["default"]("<path fill=\"ACTIVE_COLOR\" d=\"M24 21v2c0 0.547-0.453 1-1 1h-22c-0.547\n      0-1-0.453-1-1v-2c0-0.547 0.453-1 1-1h22c0.547 0 1 0.453 1 1zM24 13v2c0\n      0.547-0.453 1-1 1h-22c-0.547 0-1-0.453-1-1v-2c0-0.547 0.453-1 1-1h22c0.547\n      0 1 0.453 1 1zM24 5v2c0 0.547-0.453 1-1 1h-22c-0.547\n      0-1-0.453-1-1v-2c0-0.547 0.453-1 1-1h22c0.547 0 1 0.453 1 1z\"\n      />", {
    		  viewBox: {
    		    x: 24,
    		    y: 28
    		  }
    		});
    		var wwwcRegionCursor = new _MouseCursor_js__WEBPACK_IMPORTED_MODULE_0__["default"]("<path fill=\"ACTIVE_COLOR\" d=\"M1664 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119\n    0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5\n    84.5t84.5 203.5z\"\n  />", {
    		  viewBox: {
    		    x: 1792,
    		    y: 1792
    		  }
    		});
    		var wwwcCursor = new _MouseCursor_js__WEBPACK_IMPORTED_MODULE_0__["default"]("<path fill=\"ACTIVE_COLOR\" d=\"M14.5,3.5 a1 1 0 0 1 -11,11 Z\" stroke=\"none\" opacity=\"0.8\" />\n    <circle cx=\"9\" cy=\"9\" r=\"8\" fill=\"none\" stroke-width=\"2\" stroke=\"ACTIVE_COLOR\" />", {
    		  viewBox: {
    		    x: 18,
    		    y: 18
    		  }
    		});
    		var zoomCursor = new _MouseCursor_js__WEBPACK_IMPORTED_MODULE_0__["default"]("<path fill=\"ACTIVE_COLOR\" d=\"M508.5 481.6l-129-129c-2.3-2.3-5.3-3.5-8.5-3.5h-10.3C395\n      312 416 262.5 416 208 416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c54.5\n      0 104-21 141.1-55.2V371c0 3.2 1.3 6.2 3.5 8.5l129 129c4.7 4.7 12.3 4.7 17\n      0l9.9-9.9c4.7-4.7 4.7-12.3 0-17zM208 384c-97.3 0-176-78.7-176-176S110.7 32 208\n      32s176 78.7 176 176-78.7 176-176 176z\"\n    />\n    <path fill=\"ACTIVE_COLOR\" transform=\"scale(0.22,0.22) translate(1400,0)\" d=\"M1216\n      320q0 26-19 45t-45 19h-128v1024h128q26 0 45 19t19 45-19 45l-256 256q-19\n      19-45 19t-45-19l-256-256q-19-19-19-45t19-45 45-19h128v-1024h-128q-26\n      0-45-19t-19-45 19-45l256-256q19-19 45-19t45 19l256 256q19 19 19 45z\"\n    />", {
    		  viewBox: {
    		    x: 640,
    		    y: 512
    		  }
    		});

    		/***/ }),

    		/***/ "./tools/index.js":
    		/*!************************!*\
    		  !*** ./tools/index.js ***!
    		  \************************/
    		/*! exports provided: CrosshairsTool, DoubleTapFitToWindowTool, DragProbeTool, EraserTool, FreehandSculpterMouseTool, MagnifyTool, PanMultiTouchTool, PanTool, ReferenceLinesTool, RotateTool, RotateTouchTool, ScaleOverlayTool, StackScrollMouseWheelTool, StackScrollMultiTouchTool, StackScrollTool, WwwcRegionTool, WwwcTool, ZoomMouseWheelTool, ZoomTool, ZoomTouchPinchTool, default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _CrosshairsTool_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CrosshairsTool.js */ "./tools/CrosshairsTool.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CrosshairsTool", function() { return _CrosshairsTool_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

    		/* harmony import */ var _DoubleTapFitToWindowTool_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DoubleTapFitToWindowTool.js */ "./tools/DoubleTapFitToWindowTool.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DoubleTapFitToWindowTool", function() { return _DoubleTapFitToWindowTool_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });

    		/* harmony import */ var _DragProbeTool_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DragProbeTool.js */ "./tools/DragProbeTool.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DragProbeTool", function() { return _DragProbeTool_js__WEBPACK_IMPORTED_MODULE_2__["default"]; });

    		/* harmony import */ var _EraserTool_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./EraserTool.js */ "./tools/EraserTool.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EraserTool", function() { return _EraserTool_js__WEBPACK_IMPORTED_MODULE_3__["default"]; });

    		/* harmony import */ var _FreehandSculpterMouseTool_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./FreehandSculpterMouseTool.js */ "./tools/FreehandSculpterMouseTool.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FreehandSculpterMouseTool", function() { return _FreehandSculpterMouseTool_js__WEBPACK_IMPORTED_MODULE_4__["default"]; });

    		/* harmony import */ var _MagnifyTool_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./MagnifyTool.js */ "./tools/MagnifyTool.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MagnifyTool", function() { return _MagnifyTool_js__WEBPACK_IMPORTED_MODULE_5__["default"]; });

    		/* harmony import */ var _PanMultiTouchTool_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./PanMultiTouchTool.js */ "./tools/PanMultiTouchTool.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PanMultiTouchTool", function() { return _PanMultiTouchTool_js__WEBPACK_IMPORTED_MODULE_6__["default"]; });

    		/* harmony import */ var _PanTool_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./PanTool.js */ "./tools/PanTool.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PanTool", function() { return _PanTool_js__WEBPACK_IMPORTED_MODULE_7__["default"]; });

    		/* harmony import */ var _ReferenceLinesTool_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ReferenceLinesTool.js */ "./tools/ReferenceLinesTool.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ReferenceLinesTool", function() { return _ReferenceLinesTool_js__WEBPACK_IMPORTED_MODULE_8__["default"]; });

    		/* harmony import */ var _RotateTool_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./RotateTool.js */ "./tools/RotateTool.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RotateTool", function() { return _RotateTool_js__WEBPACK_IMPORTED_MODULE_9__["default"]; });

    		/* harmony import */ var _RotateTouchTool_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./RotateTouchTool.js */ "./tools/RotateTouchTool.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RotateTouchTool", function() { return _RotateTouchTool_js__WEBPACK_IMPORTED_MODULE_10__["default"]; });

    		/* harmony import */ var _ScaleOverlayTool_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./ScaleOverlayTool.js */ "./tools/ScaleOverlayTool.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ScaleOverlayTool", function() { return _ScaleOverlayTool_js__WEBPACK_IMPORTED_MODULE_11__["default"]; });

    		/* harmony import */ var _StackScrollMouseWheelTool_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./StackScrollMouseWheelTool.js */ "./tools/StackScrollMouseWheelTool.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StackScrollMouseWheelTool", function() { return _StackScrollMouseWheelTool_js__WEBPACK_IMPORTED_MODULE_12__["default"]; });

    		/* harmony import */ var _StackScrollMultiTouchTool_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./StackScrollMultiTouchTool.js */ "./tools/StackScrollMultiTouchTool.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StackScrollMultiTouchTool", function() { return _StackScrollMultiTouchTool_js__WEBPACK_IMPORTED_MODULE_13__["default"]; });

    		/* harmony import */ var _StackScrollTool_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./StackScrollTool.js */ "./tools/StackScrollTool.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StackScrollTool", function() { return _StackScrollTool_js__WEBPACK_IMPORTED_MODULE_14__["default"]; });

    		/* harmony import */ var _WwwcRegionTool_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./WwwcRegionTool.js */ "./tools/WwwcRegionTool.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WwwcRegionTool", function() { return _WwwcRegionTool_js__WEBPACK_IMPORTED_MODULE_15__["default"]; });

    		/* harmony import */ var _WwwcTool_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./WwwcTool.js */ "./tools/WwwcTool.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WwwcTool", function() { return _WwwcTool_js__WEBPACK_IMPORTED_MODULE_16__["default"]; });

    		/* harmony import */ var _ZoomMouseWheelTool_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./ZoomMouseWheelTool.js */ "./tools/ZoomMouseWheelTool.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ZoomMouseWheelTool", function() { return _ZoomMouseWheelTool_js__WEBPACK_IMPORTED_MODULE_17__["default"]; });

    		/* harmony import */ var _ZoomTool_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./ZoomTool.js */ "./tools/ZoomTool.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ZoomTool", function() { return _ZoomTool_js__WEBPACK_IMPORTED_MODULE_18__["default"]; });

    		/* harmony import */ var _ZoomTouchPinchTool_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./ZoomTouchPinchTool.js */ "./tools/ZoomTouchPinchTool.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ZoomTouchPinchTool", function() { return _ZoomTouchPinchTool_js__WEBPACK_IMPORTED_MODULE_19__["default"]; });




















    		 // Named Exports

    		 // Namespace, default export

    		/* harmony default export */ __webpack_exports__["default"] = ({
    		  CrosshairsTool: _CrosshairsTool_js__WEBPACK_IMPORTED_MODULE_0__["default"],
    		  DoubleTapFitToWindowTool: _DoubleTapFitToWindowTool_js__WEBPACK_IMPORTED_MODULE_1__["default"],
    		  DragProbeTool: _DragProbeTool_js__WEBPACK_IMPORTED_MODULE_2__["default"],
    		  EraserTool: _EraserTool_js__WEBPACK_IMPORTED_MODULE_3__["default"],
    		  FreehandSculpterMouseTool: _FreehandSculpterMouseTool_js__WEBPACK_IMPORTED_MODULE_4__["default"],
    		  MagnifyTool: _MagnifyTool_js__WEBPACK_IMPORTED_MODULE_5__["default"],
    		  PanMultiTouchTool: _PanMultiTouchTool_js__WEBPACK_IMPORTED_MODULE_6__["default"],
    		  PanTool: _PanTool_js__WEBPACK_IMPORTED_MODULE_7__["default"],
    		  ReferenceLinesTool: _ReferenceLinesTool_js__WEBPACK_IMPORTED_MODULE_8__["default"],
    		  RotateTool: _RotateTool_js__WEBPACK_IMPORTED_MODULE_9__["default"],
    		  RotateTouchTool: _RotateTouchTool_js__WEBPACK_IMPORTED_MODULE_10__["default"],
    		  ScaleOverlayTool: _ScaleOverlayTool_js__WEBPACK_IMPORTED_MODULE_11__["default"],
    		  StackScrollMouseWheelTool: _StackScrollMouseWheelTool_js__WEBPACK_IMPORTED_MODULE_12__["default"],
    		  StackScrollMultiTouchTool: _StackScrollMultiTouchTool_js__WEBPACK_IMPORTED_MODULE_13__["default"],
    		  StackScrollTool: _StackScrollTool_js__WEBPACK_IMPORTED_MODULE_14__["default"],
    		  WwwcRegionTool: _WwwcRegionTool_js__WEBPACK_IMPORTED_MODULE_15__["default"],
    		  WwwcTool: _WwwcTool_js__WEBPACK_IMPORTED_MODULE_16__["default"],
    		  ZoomMouseWheelTool: _ZoomMouseWheelTool_js__WEBPACK_IMPORTED_MODULE_17__["default"],
    		  ZoomTool: _ZoomTool_js__WEBPACK_IMPORTED_MODULE_18__["default"],
    		  ZoomTouchPinchTool: _ZoomTouchPinchTool_js__WEBPACK_IMPORTED_MODULE_19__["default"]
    		});

    		/***/ }),

    		/***/ "./tools/referenceLines/calculateReferenceLine.js":
    		/*!********************************************************!*\
    		  !*** ./tools/referenceLines/calculateReferenceLine.js ***!
    		  \********************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _util_pointProjector_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../util/pointProjector.js */ "./util/pointProjector.js");

    		/**
    		 * Calculates a reference line between two planes by projecting the top left hand corner and bottom right hand corner
    		 * Of the reference image onto the target image.  Ideally we would calculate the intersection between the planes but
    		 * That requires a bit more math and this works fine for most cases.
    		 *
    		 * @export
    		 * @public
    		 * @method
    		 * @name calculateReferenceLine
    		 * @param  {Object} targetImagePlane    The imagePlane on which the reference line will be drawn.
    		 * @param  {Object} referenceImagePlane The imagePlane being referenced.
    		 * @returns {Object}  The start and end points of the line to be drawn.
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (targetImagePlane, referenceImagePlane) {
    		  var points = Object(_util_pointProjector_js__WEBPACK_IMPORTED_MODULE_0__["planePlaneIntersection"])(targetImagePlane, referenceImagePlane);

    		  if (!points) {
    		    return;
    		  }

    		  return {
    		    start: Object(_util_pointProjector_js__WEBPACK_IMPORTED_MODULE_0__["projectPatientPointToImagePlane"])(points.start, targetImagePlane),
    		    end: Object(_util_pointProjector_js__WEBPACK_IMPORTED_MODULE_0__["projectPatientPointToImagePlane"])(points.end, targetImagePlane)
    		  };
    		});

    		/***/ }),

    		/***/ "./tools/referenceLines/renderActiveReferenceLine.js":
    		/*!***********************************************************!*\
    		  !*** ./tools/referenceLines/renderActiveReferenceLine.js ***!
    		  \***********************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _calculateReferenceLine_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./calculateReferenceLine.js */ "./tools/referenceLines/calculateReferenceLine.js");
    		/* harmony import */ var _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../stateManagement/toolColors.js */ "./stateManagement/toolColors.js");
    		/* harmony import */ var _util_convertToVector3_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../util/convertToVector3.js */ "./util/convertToVector3.js");
    		/* harmony import */ var _drawing_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../../drawing/index.js */ "./drawing/index.js");





    		/**
    		 * Renders the active reference line.
    		 *
    		 * @export @public @method
    		 * @name renderActiveReferenceLine
    		 * @param  {Object} context        The canvas context.
    		 * @param  {Object} eventData      The data associated with the event.
    		 * @param  {HTMLElement} targetElement    The element on which to render the reference line.
    		 * @param  {HTMLElement} referenceElement The element referenced by the line.
    		 * @returns {void}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (context, eventData, targetElement, referenceElement) {
    		  var cornerstone = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone;
    		  var targetImage = cornerstone.getEnabledElement(targetElement).image;
    		  var referenceImage = cornerstone.getEnabledElement(referenceElement).image; // Make sure the images are actually loaded for the target and reference

    		  if (!targetImage || !referenceImage) {
    		    return;
    		  }

    		  var targetImagePlane = cornerstone.metaData.get('imagePlaneModule', targetImage.imageId);
    		  var referenceImagePlane = cornerstone.metaData.get('imagePlaneModule', referenceImage.imageId); // Make sure the target and reference actually have image plane metadata

    		  if (!targetImagePlane || !referenceImagePlane || !targetImagePlane.rowCosines || !targetImagePlane.columnCosines || !targetImagePlane.imagePositionPatient || !referenceImagePlane.rowCosines || !referenceImagePlane.columnCosines || !referenceImagePlane.imagePositionPatient) {
    		    return;
    		  } // The image planes must be in the same frame of reference


    		  if (targetImagePlane.frameOfReferenceUID !== referenceImagePlane.frameOfReferenceUID) {
    		    return;
    		  }

    		  targetImagePlane.rowCosines = Object(_util_convertToVector3_js__WEBPACK_IMPORTED_MODULE_3__["default"])(targetImagePlane.rowCosines);
    		  targetImagePlane.columnCosines = Object(_util_convertToVector3_js__WEBPACK_IMPORTED_MODULE_3__["default"])(targetImagePlane.columnCosines);
    		  targetImagePlane.imagePositionPatient = Object(_util_convertToVector3_js__WEBPACK_IMPORTED_MODULE_3__["default"])(targetImagePlane.imagePositionPatient);
    		  referenceImagePlane.rowCosines = Object(_util_convertToVector3_js__WEBPACK_IMPORTED_MODULE_3__["default"])(referenceImagePlane.rowCosines);
    		  referenceImagePlane.columnCosines = Object(_util_convertToVector3_js__WEBPACK_IMPORTED_MODULE_3__["default"])(referenceImagePlane.columnCosines);
    		  referenceImagePlane.imagePositionPatient = Object(_util_convertToVector3_js__WEBPACK_IMPORTED_MODULE_3__["default"])(referenceImagePlane.imagePositionPatient); // The image plane normals must be > 30 degrees apart

    		  var targetNormal = targetImagePlane.rowCosines.clone().cross(targetImagePlane.columnCosines);
    		  var referenceNormal = referenceImagePlane.rowCosines.clone().cross(referenceImagePlane.columnCosines);
    		  var angleInRadians = targetNormal.angleTo(referenceNormal);
    		  angleInRadians = Math.abs(angleInRadians);

    		  if (angleInRadians < 0.5) {
    		    // 0.5 radians = ~30 degrees
    		    return;
    		  }

    		  var referenceLine = Object(_calculateReferenceLine_js__WEBPACK_IMPORTED_MODULE_1__["default"])(targetImagePlane, referenceImagePlane);

    		  if (!referenceLine) {
    		    return;
    		  }

    		  var color = _stateManagement_toolColors_js__WEBPACK_IMPORTED_MODULE_2__["default"].getActiveColor(); // Draw the referenceLines

    		  context.setTransform(1, 0, 0, 1, 0, 0);
    		  Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_4__["draw"])(context, function (context) {
    		    Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_4__["drawLine"])(context, eventData.element, referenceLine.start, referenceLine.end, {
    		      color: color
    		    });
    		  });
    		});

    		/***/ }),

    		/***/ "./util/SaveAs.js":
    		/*!************************!*\
    		  !*** ./util/SaveAs.js ***!
    		  \************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/**
    		 * Exports an image of the canvas.
    		 * @export @public @method
    		 * @name saveAs
    		 *
    		 * @param {HTMLElement} element The element to export.
    		 * @param {string} filename The name of the exported image.
    		 * @param {string} [mimetype = 'image/png'] The mimetype of the exported image.
    		 * @returns {void}
    		 */
    		/* harmony default export */ __webpack_exports__["default"] = (function (element, filename) {
    		  var mimetype = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'image/png';
    		  var canvas = element.querySelector('canvas'); // If we are using IE, use canvas.msToBlob

    		  if (canvas.msToBlob) {
    		    var blob = canvas.msToBlob();
    		    return window.navigator.msSaveBlob(blob, filename);
    		  } // Thanks to Ken Fyrstenber
    		  // http://stackoverflow.com/questions/18480474/how-to-save-an-image-from-canvas


    		  var lnk = document.createElement('a'); // The key here is to set the download attribute of the a tag

    		  lnk.download = filename; // Convert canvas content to data-uri for link. When download
    		  // Attribute is set the content pointed to by link will be
    		  // Pushed as 'download' in HTML5 capable browsers

    		  lnk.href = canvas.toDataURL(mimetype, 1); // Create a 'fake' click-event to trigger the download

    		  if (document.createEvent) {
    		    var e = document.createEvent('MouseEvents');
    		    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
    		    lnk.dispatchEvent(e);
    		  } else if (lnk.fireEvent) {
    		    lnk.fireEvent('onclick');
    		  }
    		});

    		/***/ }),

    		/***/ "./util/angleBetweenPoints.js":
    		/*!************************************!*\
    		  !*** ./util/angleBetweenPoints.js ***!
    		  \************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/**
    		 * Calculates the (interior) angle in degrees from the initial mouse location
    		 * to the current mouse location in relation to the center point.
    		 * @public
    		 * @function angleBetweenPoints
    		 *
    		 * @param  {Object} p0  The center point.
    		 * @param  {Object} p1  The initial point.
    		 * @param  {Object} p2  The final point.
    		 * @returns {Object} { angle, direction }
    		 */
    		/* harmony default export */ __webpack_exports__["default"] = (function (p0, p1, p2) {
    		  var p12 = Math.sqrt(Math.pow(p0.x - p1.x, 2) + Math.pow(p0.y - p1.y, 2));
    		  var p13 = Math.sqrt(Math.pow(p0.x - p2.x, 2) + Math.pow(p0.y - p2.y, 2));
    		  var p23 = Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));
    		  var angle = Math.acos((Math.pow(p12, 2) + Math.pow(p13, 2) - Math.pow(p23, 2)) / (2 * p12 * p13)) * 180 / Math.PI; // The direction of the angle (> 0 clockwise, < 0 anti-clockwise)

    		  var direction = (p1.x - p0.x) * (p2.y - p0.y) - (p1.y - p0.y) * (p2.x - p0.x);
    		  return {
    		    angle: angle,
    		    direction: direction
    		  };
    		});

    		/***/ }),

    		/***/ "./util/brush/drawBrush.js":
    		/*!*********************************!*\
    		  !*** ./util/brush/drawBrush.js ***!
    		  \*********************************/
    		/*! exports provided: drawBrushPixels, drawBrushOnCanvas */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "drawBrushPixels", function() { return drawBrushPixels; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "drawBrushOnCanvas", function() { return drawBrushOnCanvas; });
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _drawing_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../drawing/index.js */ "./drawing/index.js");


    		/**
    		 * Fills in the brush mask data with new data.
    		 * @export @public @method
    		 * @name drawBrushPixels
    		 *
    		 * @param  {Object[]} pointerArray        The array of points to draw.
    		 * @param  {number[]} toolData            The cornerstoneTools annotation to modify.
    		 * @param  {number} columns               The number of columns in the mask.
    		 * @param  {boolean} [shouldErase = false] If true the modified mask pixels will be set to 0, rather than 1.
    		 * @returns {void}
    		 */

    		function drawBrushPixels(pointerArray, toolData, columns) {
    		  var shouldErase = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

    		  var getPixelIndex = function getPixelIndex(x, y) {
    		    return y * columns + x;
    		  };

    		  var pixelData = toolData.pixelData;
    		  pointerArray.forEach(function (point) {
    		    var spIndex = getPixelIndex(point[0], point[1]);
    		    pixelData[spIndex] = shouldErase ? 0 : 1;
    		  }); // If Erased the last pixel, delete the pixelData array.

    		  if (shouldErase && !pixelData.some(function (element) {
    		    return element !== 0;
    		  })) {
    		    delete toolData.pixelData;
    		  }
    		}
    		/**
    		 * Draws the brush data to the canvas.
    		 * @export @public @method
    		 *
    		 * @param  {Object[]} pointerArray Array of points to draw.
    		 * @param  {Object} context      The canvas context.
    		 * @param  {string} color        The color to draw the pixels.
    		 * @param  {HTMLElement} element      The element on which the canvas resides.
    		 * @returns {void}
    		 */


    		function drawBrushOnCanvas(pointerArray, context, color, element) {
    		  var canvasPtTL = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.pixelToCanvas(element, {
    		    x: 0,
    		    y: 0
    		  });
    		  var canvasPtBR = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.pixelToCanvas(element, {
    		    x: 1,
    		    y: 1
    		  });
    		  var sizeX = canvasPtBR.x - canvasPtTL.x;
    		  var sizeY = canvasPtBR.y - canvasPtTL.y;
    		  Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_1__["draw"])(context, function (context) {
    		    pointerArray.forEach(function (point) {
    		      var canvasPt = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.pixelToCanvas(element, {
    		        x: point[0],
    		        y: point[1]
    		      });
    		      var boundingBox = {
    		        left: canvasPt.x,
    		        top: canvasPt.y,
    		        width: sizeX,
    		        height: sizeY
    		      };
    		      Object(_drawing_index_js__WEBPACK_IMPORTED_MODULE_1__["fillBox"])(context, boundingBox, color);
    		    });
    		  });
    		}



    		/***/ }),

    		/***/ "./util/brush/getCircle.js":
    		/*!*********************************!*\
    		  !*** ./util/brush/getCircle.js ***!
    		  \*********************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getCircle; });
    		/**
    		 * Gets the pixels within the circle.
    		 * @export @public @method
    		 * @name getCircle
    		 *
    		 * @param  {number} radius     The radius of the circle.
    		 * @param  {number} rows       The number of rows.
    		 * @param  {number} columns    The number of columns.
    		 * @param  {number} [xCoord = 0] The x-location of the center of the circle.
    		 * @param  {number} [yCoord = 0] The y-location of the center of the circle.
    		 * @returns {Array.number[]}        Array of pixels contained within the circle.
    		 */
    		function getCircle(radius, rows, columns) {
    		  var xCoord = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
    		  var yCoord = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;
    		  var x0 = Math.floor(xCoord);
    		  var y0 = Math.floor(yCoord);

    		  if (radius === 1) {
    		    return [[x0, y0]];
    		  }

    		  var circleArray = [];
    		  var index = 0;

    		  for (var y = -radius; y <= radius; y++) {
    		    var _yCoord = y0 + y;

    		    if (_yCoord > rows || _yCoord < 0) {
    		      continue;
    		    }

    		    for (var x = -radius; x <= radius; x++) {
    		      var _xCoord = x0 + x;

    		      if (_xCoord >= columns || _xCoord < 0) {
    		        continue;
    		      }

    		      if (x * x + y * y < radius * radius) {
    		        circleArray[index++] = [x0 + x, y0 + y];
    		      }
    		    }
    		  }

    		  return circleArray;
    		}

    		/***/ }),

    		/***/ "./util/brush/index.js":
    		/*!*****************************!*\
    		  !*** ./util/brush/index.js ***!
    		  \*****************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _drawBrush_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./drawBrush.js */ "./util/brush/drawBrush.js");
    		/* harmony import */ var _getCircle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getCircle.js */ "./util/brush/getCircle.js");


    		/* harmony default export */ __webpack_exports__["default"] = ({
    		  drawBrushPixels: _drawBrush_js__WEBPACK_IMPORTED_MODULE_0__["drawBrushPixels"],
    		  drawBrushOnCanvas: _drawBrush_js__WEBPACK_IMPORTED_MODULE_0__["drawBrushOnCanvas"],
    		  getCircle: _getCircle_js__WEBPACK_IMPORTED_MODULE_1__["default"]
    		});

    		/***/ }),

    		/***/ "./util/calculateSUV.js":
    		/*!******************************!*\
    		  !*** ./util/calculateSUV.js ***!
    		  \******************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");

    		/**
    		 * Calculates a Standardized Uptake Value.
    		 * @export @public @method
    		 * @name calculateSUV
    		 *
    		 * @param  {Object} image            The image.
    		 * @param  {number} storedPixelValue The raw pixel value.
    		 * @param  {bool} [skipRescale=fale]
    		 * @returns {number}                  The SUV.
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (image, storedPixelValue) {
    		  var skipRescale = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    		  var cornerstone = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone;
    		  var patientStudyModule = cornerstone.metaData.get('patientStudyModule', image.imageId);
    		  var seriesModule = cornerstone.metaData.get('generalSeriesModule', image.imageId);

    		  if (!patientStudyModule || !seriesModule) {
    		    return;
    		  }

    		  var modality = seriesModule.modality; // Image must be PET

    		  if (modality !== 'PT') {
    		    return;
    		  }

    		  var modalityPixelValue = skipRescale ? storedPixelValue : storedPixelValue * image.slope + image.intercept;
    		  var patientWeight = patientStudyModule.patientWeight; // In kg

    		  if (!patientWeight) {
    		    return;
    		  }

    		  var petSequenceModule = cornerstone.metaData.get('petIsotopeModule', image.imageId);

    		  if (!petSequenceModule) {
    		    return;
    		  }

    		  var radiopharmaceuticalInfo = petSequenceModule.radiopharmaceuticalInfo;
    		  var startTime = radiopharmaceuticalInfo.radiopharmaceuticalStartTime;
    		  var totalDose = radiopharmaceuticalInfo.radionuclideTotalDose;
    		  var halfLife = radiopharmaceuticalInfo.radionuclideHalfLife;
    		  var seriesAcquisitionTime = seriesModule.seriesTime;

    		  if (!startTime || !totalDose || !halfLife || !seriesAcquisitionTime) {
    		    return;
    		  }

    		  var acquisitionTimeInSeconds = fracToDec(seriesAcquisitionTime.fractionalSeconds || 0) + seriesAcquisitionTime.seconds + seriesAcquisitionTime.minutes * 60 + seriesAcquisitionTime.hours * 60 * 60;
    		  var injectionStartTimeInSeconds = fracToDec(startTime.fractionalSeconds) + startTime.seconds + startTime.minutes * 60 + startTime.hours * 60 * 60;
    		  var durationInSeconds = acquisitionTimeInSeconds - injectionStartTimeInSeconds;
    		  var correctedDose = totalDose * Math.exp(-durationInSeconds * Math.log(2) / halfLife);
    		  var suv = modalityPixelValue * patientWeight / correctedDose * 1000;
    		  return suv;
    		});
    		/**
    		 * Returns a decimal value given a fractional value.
    		 * @private
    		 * @method
    		 * @name fracToDec
    		 *
    		 * @param  {number} fractionalValue The value to convert.
    		 * @returns {number}                 The value converted to decimal.
    		 */

    		function fracToDec(fractionalValue) {
    		  return parseFloat(".".concat(fractionalValue));
    		}

    		/***/ }),

    		/***/ "./util/clip.js":
    		/*!**********************!*\
    		  !*** ./util/clip.js ***!
    		  \**********************/
    		/*! exports provided: default, clipToBox */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return clip; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clipToBox", function() { return clipToBox; });
    		/**
    		 * Clips a value to an upper and lower bound.
    		 * @export @public @method
    		 * @name clip
    		 *
    		 * @param  {number} val  The value to clip.
    		 * @param  {number} low  The lower bound.
    		 * @param  {number} high The upper bound.
    		 * @returns {number}      The clipped value.
    		 */
    		function clip(val, low, high) {
    		  return Math.min(Math.max(low, val), high);
    		}
    		/**
    		 * Clips a value within a box.
    		 * @export @public @method
    		 * @name clipToBox
    		 *
    		 * @param  {Object} point The point to clip
    		 * @param  {Object} box   The bounding box to clip to.
    		 * @returns {Object}       The clipped point.
    		 */

    		function clipToBox(point, box) {
    		  // Clip an {x, y} point to a box of size {width, height}
    		  point.x = clip(point.x, 0, box.width);
    		  point.y = clip(point.y, 0, box.height);
    		}

    		/***/ }),

    		/***/ "./util/convertToVector3.js":
    		/*!**********************************!*\
    		  !*** ./util/convertToVector3.js ***!
    		  \**********************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return convertToVector3; });
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");

    		/**
    		 * Convert an Array to a cornerstoneMath.Vector3
    		 * @export @public @method
    		 * @name convertToVector3
    		 *
    		 * @param {Array|cornerstoneMath.Vector3} arrayOrVector3 Input array or Vector3
    		 * @returns {cornerstoneMath.Vector3}
    		 */

    		function convertToVector3(arrayOrVector3) {
    		  var cornerstoneMath = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstoneMath;

    		  if (arrayOrVector3 instanceof cornerstoneMath.Vector3) {
    		    return arrayOrVector3;
    		  }

    		  return new cornerstoneMath.Vector3(arrayOrVector3[0], arrayOrVector3[1], arrayOrVector3[2]);
    		}

    		/***/ }),

    		/***/ "./util/copyPoints.js":
    		/*!****************************!*\
    		  !*** ./util/copyPoints.js ***!
    		  \****************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/**
    		 * Returns a copy of the points object.
    		 * @public
    		 * @function copyPoints
    		 *
    		 * @param  {Object} points - The object to copy.
    		 * @returns {Object} - The copy.
    		 */
    		/* harmony default export */ __webpack_exports__["default"] = (function (points) {
    		  var page = _copy(points.page);

    		  var image = _copy(points.image);

    		  var client = _copy(points.client);

    		  var canvas = _copy(points.canvas);

    		  return {
    		    page: page,
    		    image: image,
    		    client: client,
    		    canvas: canvas
    		  };
    		});
    		/**
    		 *
    		 * @private
    		 * @function _copy
    		 *
    		 * @param {Object} point - { x, y }
    		 * @returns {Object} { x, y }
    		 */

    		function _copy() {
    		  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
    		      x = _ref.x,
    		      y = _ref.y;

    		  return {
    		    x: x,
    		    y: y
    		  };
    		}

    		/***/ }),

    		/***/ "./util/debounce.js":
    		/*!**************************!*\
    		  !*** ./util/debounce.js ***!
    		  \**************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _isObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isObject.js */ "./util/isObject.js");

    		/**
    		 * Creates a debounced function that delays invoking `func` until after `wait`
    		 * milliseconds have elapsed since the last time the debounced function was
    		 * invoked, or until the next browser frame is drawn. The debounced function
    		 * comes with a `cancel` method to cancel delayed `func` invocations and a
    		 * `flush` method to immediately invoke them. Provide `options` to indicate
    		 * whether `func` should be invoked on the leading and/or trailing edge of the
    		 * `wait` timeout. The `func` is invoked with the last arguments provided to the
    		 * debounced function. Subsequent calls to the debounced function return the
    		 * result of the last `func` invocation.
    		 *
    		 * **Note:** If `leading` and `trailing` options are `true`, `func` is
    		 * invoked on the trailing edge of the timeout only if the debounced function
    		 * is invoked more than once during the `wait` timeout.
    		 *
    		 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
    		 * until the next tick, similar to `setTimeout` with a timeout of `0`.
    		 *
    		 * If `wait` is omitted in an environment with `requestAnimationFrame`, `func`
    		 * invocation will be deferred until the next frame is drawn (typically about
    		 * 16ms).
    		 *
    		 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
    		 * for details over the differences between `debounce` and `throttle`.
    		 *
    		 * @since 0.1.0
    		 * @category Function
    		 * @param {Function} func The function to debounce.
    		 * @param {number} [wait=0]
    		 *  The number of milliseconds to delay; if omitted, `requestAnimationFrame` is
    		 *  used (if available).
    		 * @param {Object} [options={}] The options object.
    		 * @param {boolean} [options.leading=false]
    		 *  Specify invoking on the leading edge of the timeout.
    		 * @param {number} [options.maxWait]
    		 *  The maximum time `func` is allowed to be delayed before it's invoked.
    		 * @param {boolean} [options.trailing=true]
    		 *  Specify invoking on the trailing edge of the timeout.
    		 * @returns {Function} Returns the new debounced function.
    		 * @example
    		 *
    		 * // Avoid costly calculations while the window size is in flux.
    		 * jQuery(window).on('resize', debounce(calculateLayout, 150))
    		 *
    		 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
    		 * jQuery(element).on('click', debounce(sendMail, 300, {
    		 *   'leading': true,
    		 *   'trailing': false
    		 * }))
    		 *
    		 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
    		 * const debounced = debounce(batchLog, 250, { 'maxWait': 1000 })
    		 * const source = new EventSource('/stream')
    		 * jQuery(source).on('message', debounced)
    		 *
    		 * // Cancel the trailing debounced invocation.
    		 * jQuery(window).on('popstate', debounced.cancel)
    		 *
    		 * // Check for pending invocations.
    		 * const status = debounced.pending() ? "Pending..." : "Ready"
    		 */

    		function debounce(func, wait, options) {
    		  var lastArgs, lastThis, maxWait, result, timerId, lastCallTime;
    		  var lastInvokeTime = 0;
    		  var leading = false;
    		  var maxing = false;
    		  var trailing = true; // Bypass `requestAnimationFrame` by explicitly setting `wait=0`.

    		  var useRAF = !wait && wait !== 0 && typeof window.requestAnimationFrame === 'function';

    		  if (typeof func !== 'function') {
    		    throw new TypeError('Expected a function');
    		  }

    		  wait = Number(wait) || 0;

    		  if (Object(_isObject_js__WEBPACK_IMPORTED_MODULE_0__["default"])(options)) {
    		    leading = Boolean(options.leading);
    		    maxing = 'maxWait' in options;
    		    maxWait = maxing ? Math.max(Number(options.maxWait) || 0, wait) : maxWait;
    		    trailing = 'trailing' in options ? Boolean(options.trailing) : trailing;
    		  }

    		  function invokeFunc(time) {
    		    var args = lastArgs;
    		    var thisArg = lastThis;
    		    lastArgs = lastThis = undefined;
    		    lastInvokeTime = time;
    		    result = func.apply(thisArg, args);
    		    return result;
    		  }

    		  function startTimer(pendingFunc, wait) {
    		    if (useRAF) {
    		      return window.requestAnimationFrame(pendingFunc);
    		    }

    		    return setTimeout(pendingFunc, wait);
    		  }

    		  function cancelTimer(id) {
    		    if (useRAF) {
    		      return window.cancelAnimationFrame(id);
    		    }

    		    clearTimeout(id);
    		  }

    		  function leadingEdge(time) {
    		    // Reset any `maxWait` timer.
    		    lastInvokeTime = time; // Start the timer for the trailing edge.

    		    timerId = startTimer(timerExpired, wait); // Invoke the leading edge.

    		    return leading ? invokeFunc(time) : result;
    		  }

    		  function remainingWait(time) {
    		    var timeSinceLastCall = time - lastCallTime;
    		    var timeSinceLastInvoke = time - lastInvokeTime;
    		    var timeWaiting = wait - timeSinceLastCall;
    		    return maxing ? Math.min(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
    		  }

    		  function shouldInvoke(time) {
    		    var timeSinceLastCall = time - lastCallTime;
    		    var timeSinceLastInvoke = time - lastInvokeTime; // Either this is the first call, activity has stopped and we're at the
    		    // trailing edge, the system time has gone backwards and we're treating
    		    // it as the trailing edge, or we've hit the `maxWait` limit.

    		    return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
    		  }

    		  function timerExpired() {
    		    var time = Date.now();

    		    if (shouldInvoke(time)) {
    		      return trailingEdge(time);
    		    } // Restart the timer.


    		    timerId = startTimer(timerExpired, remainingWait(time));
    		  }

    		  function trailingEdge(time) {
    		    timerId = undefined; // Only invoke if we have `lastArgs` which means `func` has been
    		    // debounced at least once.

    		    if (trailing && lastArgs) {
    		      return invokeFunc(time);
    		    }

    		    lastArgs = lastThis = undefined;
    		    return result;
    		  }

    		  function cancel() {
    		    if (timerId !== undefined) {
    		      cancelTimer(timerId);
    		    }

    		    lastInvokeTime = 0;
    		    lastArgs = lastCallTime = lastThis = timerId = undefined;
    		  }

    		  function flush() {
    		    return timerId === undefined ? result : trailingEdge(Date.now());
    		  }

    		  function pending() {
    		    return timerId !== undefined;
    		  }

    		  function debounced() {
    		    var time = Date.now();
    		    var isInvoking = shouldInvoke(time);

    		    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    		      args[_key] = arguments[_key];
    		    }

    		    lastArgs = args;
    		    lastThis = this; // eslint-disable-line consistent-this

    		    lastCallTime = time;

    		    if (isInvoking) {
    		      if (timerId === undefined) {
    		        return leadingEdge(lastCallTime);
    		      }

    		      if (maxing) {
    		        // Handle invocations in a tight loop.
    		        timerId = startTimer(timerExpired, wait);
    		        return invokeFunc(lastCallTime);
    		      }
    		    }

    		    if (timerId === undefined) {
    		      timerId = startTimer(timerExpired, wait);
    		    }

    		    return result;
    		  }

    		  debounced.cancel = cancel;
    		  debounced.flush = flush;
    		  debounced.pending = pending;
    		  return debounced;
    		}

    		/* harmony default export */ __webpack_exports__["default"] = (debounce);

    		/***/ }),

    		/***/ "./util/debugLib/common.js":
    		/*!*********************************!*\
    		  !*** ./util/debugLib/common.js ***!
    		  \*********************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js");
    		/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);


    		/**
    		 * This is the common logic for both the Node.js and web browser
    		 * implementations of `debug()`.
    		 */
    		function setup(env) {
    		  createDebug.debug = createDebug;
    		  createDebug.default = createDebug;
    		  createDebug.coerce = coerce;
    		  createDebug.disable = disable;
    		  createDebug.enable = enable;
    		  createDebug.enabled = enabled;
    		  createDebug.humanize = __webpack_require__(/*! ms */ "../node_modules/ms/index.js");
    		  Object.keys(env).forEach(function (key) {
    		    createDebug[key] = env[key];
    		  });
    		  /**
    		   * Active `debug` instances.
    		   */

    		  createDebug.instances = [];
    		  /**
    		   * The currently active debug mode names, and names to skip.
    		   */

    		  createDebug.names = [];
    		  createDebug.skips = [];
    		  /**
    		   * Map of special "%n" handling functions, for the debug "format" argument.
    		   *
    		   * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
    		   */

    		  createDebug.formatters = {};
    		  /**
    		   * Selects a color for a debug namespace
    		   * @param {String} namespace The namespace string for the for the debug instance to be colored
    		   * @return {Number|String} An ANSI color code for the given namespace
    		   * @api private
    		   */

    		  function selectColor(namespace) {
    		    var hash = 0;

    		    for (var i = 0; i < namespace.length; i++) {
    		      hash = (hash << 5) - hash + namespace.charCodeAt(i);
    		      hash |= 0; // Convert to 32bit integer
    		    }

    		    return createDebug.colors[Math.abs(hash) % createDebug.colors.length];
    		  }

    		  createDebug.selectColor = selectColor;
    		  /**
    		   * Create a debugger with the given `namespace`.
    		   *
    		   * @param {String} namespace
    		   * @return {Function}
    		   * @api public
    		   */

    		  function createDebug(namespace) {
    		    var prevTime;

    		    function debug() {
    		      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    		        args[_key] = arguments[_key];
    		      }

    		      // Disabled?
    		      if (!debug.enabled) {
    		        return;
    		      }

    		      var self = debug; // Set `diff` timestamp

    		      var curr = Number(new Date());
    		      var ms = curr - (prevTime || curr);
    		      self.diff = ms;
    		      self.prev = prevTime;
    		      self.curr = curr;
    		      prevTime = curr;
    		      args[0] = createDebug.coerce(args[0]);

    		      if (typeof args[0] !== 'string') {
    		        // Anything else let's inspect with %O
    		        args.unshift('%O');
    		      } // Apply any `formatters` transformations


    		      var index = 0;
    		      args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {
    		        // If we encounter an escaped % then don't increase the array index
    		        if (match === '%%') {
    		          return match;
    		        }

    		        index++;
    		        var formatter = createDebug.formatters[format];

    		        if (typeof formatter === 'function') {
    		          var val = args[index];
    		          match = formatter.call(self, val); // Now we need to remove `args[index]` since it's inlined in the `format`

    		          args.splice(index, 1);
    		          index--;
    		        }

    		        return match;
    		      }); // Apply env-specific formatting (colors, etc.)

    		      createDebug.formatArgs.call(self, args);
    		      var logFn = self.log || createDebug.log;
    		      logFn.apply(self, args);
    		    }

    		    debug.namespace = namespace;
    		    debug.enabled = createDebug.enabled(namespace);
    		    debug.useColors = createDebug.useColors();
    		    debug.color = selectColor(namespace);
    		    debug.destroy = destroy;
    		    debug.extend = extend; // Debug.formatArgs = formatArgs;
    		    // debug.rawLog = rawLog;
    		    // env-specific initialization logic for debug instances

    		    if (typeof createDebug.init === 'function') {
    		      createDebug.init(debug);
    		    }

    		    createDebug.instances.push(debug);
    		    return debug;
    		  }

    		  function destroy() {
    		    var index = createDebug.instances.indexOf(this);

    		    if (index !== -1) {
    		      createDebug.instances.splice(index, 1);
    		      return true;
    		    }

    		    return false;
    		  }

    		  function extend(namespace, delimiter) {
    		    var newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);
    		    newDebug.log = this.log;
    		    return newDebug;
    		  }
    		  /**
    		   * Enables a debug mode by namespaces. This can include modes
    		   * separated by a colon and wildcards.
    		   *
    		   * @param {String} namespaces
    		   * @api public
    		   */


    		  function enable(namespaces) {
    		    createDebug.save(namespaces);
    		    createDebug.names = [];
    		    createDebug.skips = [];
    		    var i;
    		    var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
    		    var len = split.length;

    		    for (i = 0; i < len; i++) {
    		      if (!split[i]) {
    		        // ignore empty strings
    		        continue;
    		      }

    		      namespaces = split[i].replace(/\*/g, '.*?');

    		      if (namespaces[0] === '-') {
    		        createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
    		      } else {
    		        createDebug.names.push(new RegExp('^' + namespaces + '$'));
    		      }
    		    }

    		    for (i = 0; i < createDebug.instances.length; i++) {
    		      var instance = createDebug.instances[i];
    		      instance.enabled = createDebug.enabled(instance.namespace);
    		    }
    		  }
    		  /**
    		   * Disable debug output.
    		   *
    		   * @return {String} namespaces
    		   * @api public
    		   */


    		  function disable() {
    		    var namespaces = [].concat(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(createDebug.names.map(toNamespace)), _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(createDebug.skips.map(toNamespace).map(function (namespace) {
    		      return '-' + namespace;
    		    }))).join(',');
    		    createDebug.enable('');
    		    return namespaces;
    		  }
    		  /**
    		   * Returns true if the given mode name is enabled, false otherwise.
    		   *
    		   * @param {String} name
    		   * @return {Boolean}
    		   * @api public
    		   */


    		  function enabled(name) {
    		    if (name[name.length - 1] === '*') {
    		      return true;
    		    }

    		    var i;
    		    var len;

    		    for (i = 0, len = createDebug.skips.length; i < len; i++) {
    		      if (createDebug.skips[i].test(name)) {
    		        return false;
    		      }
    		    }

    		    for (i = 0, len = createDebug.names.length; i < len; i++) {
    		      if (createDebug.names[i].test(name)) {
    		        return true;
    		      }
    		    }

    		    return false;
    		  }
    		  /**
    		   * Convert regexp to namespace
    		   *
    		   * @param {RegExp} regxep
    		   * @return {String} namespace
    		   * @api private
    		   */


    		  function toNamespace(regexp) {
    		    return regexp.toString().substring(2, regexp.toString().length - 2).replace(/\.\*\?$/, '*');
    		  }
    		  /**
    		   * Coerce `val`.
    		   *
    		   * @param {Mixed} val
    		   * @return {Mixed}
    		   * @api private
    		   */


    		  function coerce(val) {
    		    if (val instanceof Error) {
    		      return val.stack || val.message;
    		    }

    		    return val;
    		  }

    		  createDebug.enable(createDebug.load());
    		  return createDebug;
    		}

    		/* harmony default export */ __webpack_exports__["default"] = (setup);

    		/***/ }),

    		/***/ "./util/debugLib/index.js":
    		/*!********************************!*\
    		  !*** ./util/debugLib/index.js ***!
    		  \********************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* WEBPACK VAR INJECTION */(function(process) {/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ "./util/debugLib/common.js");
    		/* eslint-env browser */

    		/**
    		 * This is the web browser implementation of `debug()`.
    		 */

    		var storage = localstorage();
    		var debugLib = {
    		  formatArgs: formatArgs,
    		  save: save,
    		  load: load,
    		  useColors: useColors,
    		  storage: storage
    		};
    		/**
    		 * Colors.
    		 */

    		debugLib.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];
    		/**
    		 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
    		 * and the Firebug extension (any Firefox version) are known
    		 * to support "%c" CSS customizations.
    		 *
    		 * TODO: add a `localStorage` variable to explicitly enable/disable colors
    		 */
    		// eslint-disable-next-line complexity

    		function useColors() {
    		  // NB: In an Electron preload script, document will be defined but not fully
    		  // initialized. Since we know we're in Chrome, we'll just detect this case
    		  // explicitly
    		  if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {
    		    return true;
    		  } // Internet Explorer and Edge do not support colors.


    		  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
    		    return false;
    		  } // Is webkit? http://stackoverflow.com/a/16459606/376773
    		  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632


    		  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773
    		  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?
    		  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
    		  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker
    		  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
    		}
    		/**
    		 * Colorize log arguments if enabled.
    		 *
    		 * @api public
    		 */


    		function formatArgs(args) {
    		  args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + debugLib.humanize(this.diff);

    		  if (!this.useColors) {
    		    return;
    		  }

    		  var c = 'color: ' + this.color;
    		  args.splice(1, 0, c, 'color: inherit'); // The final "%c" is somewhat tricky, because there could be other
    		  // arguments passed either before or after the %c, so we need to
    		  // figure out the correct index to insert the CSS into

    		  var index = 0;
    		  var lastC = 0;
    		  args[0].replace(/%[a-zA-Z%]/g, function (match) {
    		    if (match === '%%') {
    		      return;
    		    }

    		    index++;

    		    if (match === '%c') {
    		      // We only are interested in the *last* %c
    		      // (the user may have provided their own)
    		      lastC = index;
    		    }
    		  });
    		  args.splice(lastC, 0, c);
    		}
    		/**
    		 * Invokes `console.debug()` when available.
    		 * No-op when `console.debug` is not a "function".
    		 * If `console.debug` is not available, falls back
    		 * to `console.log`.
    		 *
    		 * @api public
    		 */


    		debugLib.log = console.debug || console.log || function () {};
    		/**
    		 * Save `namespaces`.
    		 *
    		 * @param {String} namespaces
    		 * @api private
    		 */


    		function save(namespaces) {
    		  try {
    		    if (namespaces) {
    		      debugLib.storage.setItem('debug', namespaces);
    		    } else {
    		      debugLib.storage.removeItem('debug');
    		    }
    		  } catch (error) {// Swallow
    		    // XXX (@Qix-) should we be logging these?
    		  }
    		}
    		/**
    		 * Load `namespaces`.
    		 *
    		 * @return {String} returns the previously persisted debug modes
    		 * @api private
    		 */


    		function load() {
    		  var r;

    		  try {
    		    r = debugLib.storage.getItem('debug');
    		  } catch (error) {
    		    console.warn(error);
    		  } // Swallow
    		  // XXX (@Qix-) should we be logging these?
    		  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG


    		  if (!r && typeof process !== 'undefined' && 'env' in process) {
    		    r = process.env.DEBUG;
    		  }

    		  return r;
    		}
    		/**
    		 * Localstorage attempts to return the localstorage.
    		 *
    		 * This is necessary because safari throws
    		 * when a user disables cookies/localstorage
    		 * and you attempt to access it.
    		 *
    		 * @return {LocalStorage}
    		 * @api private
    		 */


    		function localstorage() {
    		  try {
    		    // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context
    		    // The Browser also has localStorage in the global context.
    		    return localStorage;
    		  } catch (error) {// Swallow
    		    // XXX (@Qix-) should we be logging these?
    		  }
    		}

    		var setupDebug = Object(_common_js__WEBPACK_IMPORTED_MODULE_0__["default"])(debugLib);
    		var formatters = setupDebug.formatters;
    		/**
    		 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
    		 */

    		formatters.j = function (v) {
    		  try {
    		    return JSON.stringify(v);
    		  } catch (error) {
    		    return '[UnexpectedJSONParseError]: ' + error.message;
    		  }
    		};

    		/* harmony default export */ __webpack_exports__["default"] = (setupDebug);
    		/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/process/browser.js */ "../node_modules/process/browser.js")));

    		/***/ }),

    		/***/ "./util/deepmerge.js":
    		/*!***************************!*\
    		  !*** ./util/deepmerge.js ***!
    		  \***************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "../node_modules/@babel/runtime/helpers/typeof.js");
    		/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__);


    		var isMergeableObject = function isMergeableObject(val) {
    		  var nonNullObject = val && _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(val) === 'object';
    		  return nonNullObject && Object.prototype.toString.call(val) !== '[object RegExp]' && Object.prototype.toString.call(val) !== '[object Date]';
    		};

    		var emptyTarget = function emptyTarget(val) {
    		  var isEmpty = Array.isArray(val) ? [] : {};
    		  return isEmpty;
    		};

    		var cloneIfNecessary = function cloneIfNecessary(value, optionsArgument) {
    		  var clone = optionsArgument && optionsArgument.clone === true;
    		  return clone && isMergeableObject(value) ? deepmerge(emptyTarget(value), value, optionsArgument) : value;
    		};

    		var defaultArrayMerge = function defaultArrayMerge(target, source, optionsArgument) {
    		  var destination = target.slice();
    		  source.forEach(function (e, i) {
    		    if (typeof destination[i] === 'undefined') {
    		      destination[i] = cloneIfNecessary(e, optionsArgument);
    		    } else if (isMergeableObject(e)) {
    		      destination[i] = deepmerge(target[i], e, optionsArgument);
    		    } else if (target.indexOf(e) === -1) {
    		      destination.push(cloneIfNecessary(e, optionsArgument));
    		    }
    		  });
    		  return destination;
    		};

    		var mergeObject = function mergeObject(target, source, optionsArgument) {
    		  var destination = {};

    		  if (isMergeableObject(target)) {
    		    Object.keys(target).forEach(function (key) {
    		      destination[key] = cloneIfNecessary(target[key], optionsArgument);
    		    });
    		  }

    		  Object.keys(source).forEach(function (key) {
    		    if (!isMergeableObject(source[key]) || !target[key]) {
    		      destination[key] = cloneIfNecessary(source[key], optionsArgument);
    		    } else {
    		      destination[key] = deepmerge(target[key], source[key], optionsArgument);
    		    }
    		  });
    		  return destination;
    		};

    		var deepmerge = function deepmerge() {
    		  var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    		  var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    		  var optionsArgument = arguments.length > 2 ? arguments[2] : undefined;
    		  var array = Array.isArray(source);
    		  var options = optionsArgument || {
    		    arrayMerge: defaultArrayMerge
    		  };
    		  var arrayMerge = options.arrayMerge || defaultArrayMerge;

    		  if (array) {
    		    return Array.isArray(target) ? arrayMerge(target, source, optionsArgument) : cloneIfNecessary(source, optionsArgument);
    		  }

    		  return mergeObject(target, source, optionsArgument);
    		};

    		/* harmony default export */ __webpack_exports__["default"] = (deepmerge);

    		/***/ }),

    		/***/ "./util/ellipse/calculateEllipseStatistics.js":
    		/*!****************************************************!*\
    		  !*** ./util/ellipse/calculateEllipseStatistics.js ***!
    		  \****************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _pointInEllipse_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pointInEllipse.js */ "./util/ellipse/pointInEllipse.js");

    		/**
    		 * Calculates the statistics of an elliptical region of interest.
    		 *
    		 * @private
    		 * @function calculateEllipseStatistics
    		 *
    		 * @param {number[]} sp - Array of the image data's pixel values.
    		 * @param {Object} ellipse - { top, left, height, width } - An object describing the ellipse.
    		 * @returns {Object} { count, mean, variance, stdDev, min, max }
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (sp, ellipse) {
    		  var sum = 0;
    		  var sumSquared = 0;
    		  var count = 0;
    		  var index = 0;
    		  var min = null;
    		  var max = null;

    		  for (var y = ellipse.top; y < ellipse.top + ellipse.height; y++) {
    		    for (var x = ellipse.left; x < ellipse.left + ellipse.width; x++) {
    		      var point = {
    		        x: x,
    		        y: y
    		      };

    		      if (Object(_pointInEllipse_js__WEBPACK_IMPORTED_MODULE_0__["default"])(ellipse, point)) {
    		        if (min === null) {
    		          min = sp[index];
    		          max = sp[index];
    		        }

    		        sum += sp[index];
    		        sumSquared += sp[index] * sp[index];
    		        min = Math.min(min, sp[index]);
    		        max = Math.max(max, sp[index]);
    		        count++;
    		      }

    		      index++;
    		    }
    		  }

    		  if (count === 0) {
    		    return {
    		      count: count,
    		      mean: 0.0,
    		      variance: 0.0,
    		      stdDev: 0.0,
    		      min: 0.0,
    		      max: 0.0
    		    };
    		  }

    		  var mean = sum / count;
    		  var variance = sumSquared / count - mean * mean;
    		  return {
    		    count: count,
    		    mean: mean,
    		    variance: variance,
    		    stdDev: Math.sqrt(variance),
    		    min: min,
    		    max: max
    		  };
    		});

    		/***/ }),

    		/***/ "./util/ellipse/index.js":
    		/*!*******************************!*\
    		  !*** ./util/ellipse/index.js ***!
    		  \*******************************/
    		/*! exports provided: calculateEllipseStatistics, pointInEllipse, default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _calculateEllipseStatistics_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./calculateEllipseStatistics.js */ "./util/ellipse/calculateEllipseStatistics.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "calculateEllipseStatistics", function() { return _calculateEllipseStatistics_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

    		/* harmony import */ var _pointInEllipse_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pointInEllipse.js */ "./util/ellipse/pointInEllipse.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pointInEllipse", function() { return _pointInEllipse_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });


    		 // Named

    		 // Default

    		/* harmony default export */ __webpack_exports__["default"] = ({
    		  calculateEllipseStatistics: _calculateEllipseStatistics_js__WEBPACK_IMPORTED_MODULE_0__["default"],
    		  pointInEllipse: _pointInEllipse_js__WEBPACK_IMPORTED_MODULE_1__["default"]
    		});

    		/***/ }),

    		/***/ "./util/ellipse/pointInEllipse.js":
    		/*!****************************************!*\
    		  !*** ./util/ellipse/pointInEllipse.js ***!
    		  \****************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/**
    		 * Returns true if a point is within an ellipse
    		 * @export @public @method
    		 * @name pointInEllipse
    		 *
    		 * @param  {Object} ellipse  Object defining the ellipse.
    		 * @param  {Object} location The location of the point.
    		 * @returns {boolean} True if the point is within the ellipse.
    		 */
    		/* harmony default export */ __webpack_exports__["default"] = (function (ellipse, location) {
    		  var xRadius = ellipse.width / 2;
    		  var yRadius = ellipse.height / 2;

    		  if (xRadius <= 0.0 || yRadius <= 0.0) {
    		    return false;
    		  }

    		  var center = {
    		    x: ellipse.left + xRadius,
    		    y: ellipse.top + yRadius
    		  };
    		  /* This is a more general form of the circle equation
    		   *
    		   * X^2/a^2 + Y^2/b^2 <= 1
    		   */

    		  var normalized = {
    		    x: location.x - center.x,
    		    y: location.y - center.y
    		  };
    		  var inEllipse = normalized.x * normalized.x / (xRadius * xRadius) + normalized.y * normalized.y / (yRadius * yRadius) <= 1.0;
    		  return inEllipse;
    		});

    		/***/ }),

    		/***/ "./util/findAndMoveHelpers.js":
    		/*!************************************!*\
    		  !*** ./util/findAndMoveHelpers.js ***!
    		  \************************************/
    		/*! exports provided: moveHandleNearImagePoint, findHandleDataNearImagePoint, moveAnnotation */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moveHandleNearImagePoint", function() { return moveHandleNearImagePoint; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findHandleDataNearImagePoint", function() { return findHandleDataNearImagePoint; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moveAnnotation", function() { return moveAnnotation; });
    		/* harmony import */ var _store_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../store/index.js */ "./store/index.js");
    		/* harmony import */ var _manipulators_getHandleNearImagePoint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../manipulators/getHandleNearImagePoint.js */ "./manipulators/getHandleNearImagePoint.js");
    		/* harmony import */ var _manipulators_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../manipulators/index.js */ "./manipulators/index.js");


    		 // TODO this should just be in manipulators? They are just manipulator wrappers anyway.

    		/**
    		 * Moves a handle near the image point.
    		 * @public
    		 * @function moveHandleNearImagePoint
    		 * @memberof Util
    		 *
    		 * @param  {Event} evt      The event.
    		 * @param  {*} tool The tool
    		 * @param  {Object} toolData     The toolData that corresponds to the handle.
    		 * @param  {Object} handle  The handle to be moved.
    		 * @param  {string} interactionType
    		 * @returns {undefined}
    		 */

    		var moveHandleNearImagePoint = function moveHandleNearImagePoint(evt, tool, toolData, handle, interactionType) {
    		  toolData.active = true;
    		  _store_index_js__WEBPACK_IMPORTED_MODULE_0__["state"].isToolLocked = true;
    		  Object(_manipulators_index_js__WEBPACK_IMPORTED_MODULE_2__["moveHandle"])(evt.detail, tool.name, toolData, handle, tool.options, interactionType);
    		  evt.stopImmediatePropagation();
    		  evt.stopPropagation();
    		  evt.preventDefault();
    		  return;
    		};
    		/**
    		 * Finds the handle near the image point and its corresponding data.
    		 *
    		 * @public
    		 * @function findHandleDataNearImagePoint
    		 * @memberof Util
    		 *
    		 * @param  {HTMLElement} element  The elment.
    		 * @param  {Object} toolState     The state of the tool.
    		 * @param  {string} toolName The name of the tool the handle corrosponds to.
    		 * @param  {Object} coords The coordinates that need to be checked.
    		 * @param  {String} [interactionType=mouse]
    		 * @returns {*}
    		 */


    		var findHandleDataNearImagePoint = function findHandleDataNearImagePoint(element, toolState, toolName, coords) {
    		  var interactionType = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'mouse';

    		  for (var i = 0; i < toolState.data.length; i++) {
    		    var data = toolState.data[i];
    		    var handle = Object(_manipulators_getHandleNearImagePoint_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element, data.handles, coords, interactionType === 'mouse' ? _store_index_js__WEBPACK_IMPORTED_MODULE_0__["state"].clickProximity : _store_index_js__WEBPACK_IMPORTED_MODULE_0__["state"].touchProximity);

    		    if (handle) {
    		      return {
    		        handle: handle,
    		        data: data
    		      };
    		    }
    		  }
    		};
    		/**
    		 * Moves an entire annotation near the click.
    		 *
    		 * @public
    		 * @function moveAnnotation
    		 * @memberof Util
    		 *
    		 * @param  {Event}   evt           The event.
    		 * @param  {Object}  tool The tool that the annotation belongs to.
    		 * @param  {string}  tool.name
    		 * @param  {Object}  [tool.options={}]
    		 * @param  {Boolean} [tool.options.preventHandleOutsideImage]
    		 * @param  {Boolean} [tool.options.deleteIfHandleOutsideImage]
    		 * @param  {Object}  annotation The toolData that corresponds to the annotation.
    		 * @param  {String}  [interactionType=mouse]
    		 * @returns {undefined}
    		 */


    		var moveAnnotation = function moveAnnotation(evt, tool, annotation) {
    		  var interactionType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'mouse';
    		  var toolOptions = Object.assign({}, {
    		    doneMovingCallback: function doneMovingCallback() {
    		      annotation.active = false;
    		      _store_index_js__WEBPACK_IMPORTED_MODULE_0__["state"].isToolLocked = false;
    		    }
    		  }, tool.options);
    		  annotation.active = true;
    		  _store_index_js__WEBPACK_IMPORTED_MODULE_0__["state"].isToolLocked = true;
    		  Object(_manipulators_index_js__WEBPACK_IMPORTED_MODULE_2__["moveAllHandles"])(evt.detail, tool.name, annotation, null, toolOptions, interactionType);
    		  evt.stopImmediatePropagation();
    		  evt.stopPropagation();
    		  evt.preventDefault();
    		  return;
    		};



    		/***/ }),

    		/***/ "./util/freehand/ClickedLineData.js":
    		/*!******************************************!*\
    		  !*** ./util/freehand/ClickedLineData.js ***!
    		  \******************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ClickedLineData; });
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);


    		/**
    		 * @public
    		 * @name ClickedLineData
    		 * @classdesc Creates an object containing information about the clicked line.
    		 * @property {number} toolIndex ID of the tool that the line corresponds to.
    		 * @property {Object} handleIndexArray An array of the handle indicies that correspond to the line segment.
    		 */
    		var ClickedLineData =
    		/**
    		 * Constructs an object containing information about the clicked line.
    		 * @param {number} toolIndex - The ID of the tool the line corresponds to.
    		 * @param {Object} handleIndexArray - An array of the handle indicies that correspond to the line segment.
    		 */
    		function ClickedLineData(toolIndex, handleIndexArray) {
    		  _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, ClickedLineData);

    		  this.toolIndex = toolIndex;
    		  this.handleIndexArray = handleIndexArray;
    		};



    		/***/ }),

    		/***/ "./util/freehand/FreehandHandleData.js":
    		/*!*********************************************!*\
    		  !*** ./util/freehand/FreehandHandleData.js ***!
    		  \*********************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return FreehandHandleData; });
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);


    		/**
    		 * @public
    		 * @name FreehandHandleData
    		 * @classdesc Creates a single handle for the freehand tool.
    		 *
    		 * @property {number} x The x position.
    		 * @property {number} y The y position.
    		 * @property {boolean} highlight Whether the handle should be rendered as the highlighted color.
    		 * @property {boolean} active Whether the handle is active.
    		 * @property {Object} lines An array of lines associated with the handle.
    		 */
    		var FreehandHandleData =
    		/**
    		 * Constructs a a single handle for the freehand tool
    		 *
    		 * @param {Object} position - The position of the handle.
    		 * @param {boolean} highlight - whether the handle should be rendered as the highlighted color.
    		 * @param {boolean} active - whether the handle is active.
    		 */
    		function FreehandHandleData(position) {
    		  var highlight = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
    		  var active = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

    		  _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, FreehandHandleData);

    		  this.x = position.x;
    		  this.y = position.y;
    		  this.highlight = highlight;
    		  this.active = active;
    		  this.lines = [];
    		};



    		/***/ }),

    		/***/ "./util/freehand/FreehandLineFinder.js":
    		/*!*********************************************!*\
    		  !*** ./util/freehand/FreehandLineFinder.js ***!
    		  \*********************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return FreehandLineFinder; });
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
    		/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
    		/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _ClickedLineData_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ClickedLineData.js */ "./util/freehand/ClickedLineData.js");





    		var distanceThreshold = 10;
    		/**
    		 * @public
    		 * @class FreehandLineFinder
    		 * @classdesc Class that finds lines of freehand ROIs based on click proximity.
    		 */

    		var FreehandLineFinder =
    		/*#__PURE__*/
    		function () {
    		  /**
    		   * Creates an instance of FreehandLineFinder.
    		   * @param {*} eventData - Data object associated with the event.
    		   * @param {string} toolName - The tool name
    		   * @memberof FreehandLineFinder
    		   */
    		  function FreehandLineFinder(eventData, toolName) {
    		    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, FreehandLineFinder);

    		    this._eventData = eventData;
    		    this._toolName = toolName;
    		  }
    		  /**
    		   * Looks for lines near the mouse cursor.
    		   *
    		   * @public
    		   * @method
    		   * @returns {ClickedLineData} Data object corresponding to the clicked line.
    		   */


    		  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(FreehandLineFinder, [{
    		    key: "findLine",
    		    value: function findLine() {
    		      var closestToolIndex = this.findTool();

    		      if (closestToolIndex === null) {
    		        return null;
    		      }

    		      var closeLines = this._getCloseLinesInTool(closestToolIndex);

    		      if (closeLines) {
    		        var clickedLineData = this._findCorrectLine(closestToolIndex, closeLines); // Note: clickedLineData may be null if no valid projections are found.


    		        return clickedLineData;
    		      } // Return null if no valid close lines found.


    		      return null;
    		    }
    		    /**
    		     * Looks for tools near the mouse cursor.
    		     *
    		     * @public
    		     * @method
    		     *
    		     * @returns {ClickedLineData} Data object corresponding to the clicked line.
    		     */

    		  }, {
    		    key: "findTool",
    		    value: function findTool() {
    		      this._toolData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_2__["getToolState"])(this._eventData.element, this._toolName);
    		      this._mousePoint = this._eventData.currentPoints.canvas;

    		      if (!this._toolData) {
    		        return null;
    		      }

    		      var closestHandle = this._nearestHandleToPointAllTools();

    		      return closestHandle.toolIndex;
    		    }
    		    /**
    		     * Finds the nearest handle to the mouse cursor for all tools.
    		     * @private
    		     * @method
    		     * @returns {Object} The handle closest to the point.
    		     */

    		  }, {
    		    key: "_nearestHandleToPointAllTools",
    		    value: function _nearestHandleToPointAllTools() {
    		      var toolData = this._toolData;
    		      var closestHandle = {
    		        toolIndex: null,
    		        handleIndex: null,
    		        distance: Infinity // Some large number

    		      };

    		      for (var toolIndex = 0; toolIndex < toolData.data.length; toolIndex++) {
    		        var closestHandleForToolI = this._nearestHandleToPoint(toolIndex);

    		        if (closestHandleForToolI === null) {
    		          continue;
    		        }

    		        if (closestHandleForToolI.distance < closestHandle.distance) {
    		          closestHandle = closestHandleForToolI;
    		        }
    		      }

    		      return closestHandle;
    		    }
    		    /**
    		     * Finds the nearest handle to the mouse cursor for a specific tool.
    		     * @private
    		     * @method
    		     *
    		     * @param {number} toolIndex The index of the particular freehand tool.
    		     * @returns {Object} An object containing information about the closest handle.
    		     */

    		  }, {
    		    key: "_nearestHandleToPoint",
    		    value: function _nearestHandleToPoint(toolIndex) {
    		      var eventData = this._eventData;
    		      var toolData = this._toolData;
    		      var data = toolData.data[toolIndex];
    		      var points = data.handles.points;

    		      if (points === undefined) {
    		        return null;
    		      }

    		      if (data.visible === false) {
    		        return null;
    		      }

    		      var closest = {
    		        toolIndex: toolIndex,
    		        handleIndex: null,
    		        distance: Infinity // Some large number

    		      };

    		      for (var i = 0; i < points.length; i++) {
    		        var handleCanvas = _externalModules_js__WEBPACK_IMPORTED_MODULE_3__["default"].cornerstone.pixelToCanvas(eventData.element, points[i]);
    		        var handleDistanceFromMousePoint = _externalModules_js__WEBPACK_IMPORTED_MODULE_3__["default"].cornerstoneMath.point.distance(handleCanvas, this._mousePoint);

    		        if (handleDistanceFromMousePoint < closest.distance) {
    		          closest.handleIndex = i;
    		          closest.distance = handleDistanceFromMousePoint;
    		        }
    		      }

    		      return closest;
    		    }
    		    /**
    		     * Finds all the lines close to the mouse point for a particular tool.
    		     * @private
    		     * @method
    		     *
    		     * @param {number} toolIndex The index of the particular freehand tool.
    		     * @returns {Object} An array of lines close to the mouse point.
    		     */

    		  }, {
    		    key: "_getCloseLinesInTool",
    		    value: function _getCloseLinesInTool(toolIndex) {
    		      var toolData = this._toolData;
    		      var points = toolData.data[toolIndex].handles.points;
    		      var closeLines = [];

    		      for (var i = 0; i < points.length; i++) {
    		        var nextIndex = FreehandLineFinder.getNextHandleIndex(i, points.length);

    		        var d = this._distanceOfPointfromLine(points[i], points[nextIndex]);

    		        if (d < distanceThreshold) {
    		          closeLines.push([i, nextIndex]);
    		        }
    		      }

    		      return closeLines;
    		    }
    		    /**
    		     * Finds the line the user clicked on from an array of close lines.\
    		     * @private
    		     * @method
    		     *
    		     * @param {number} toolIndex The index of the particular freehand tool.
    		     * @param {Object} closeLines An array of lines close to the mouse point.
    		     * @returns {ClickedLineData|null} An instance of ClickedLineData containing information about the line, or null if no line is correct.
    		     */

    		  }, {
    		    key: "_findCorrectLine",
    		    value: function _findCorrectLine(toolIndex, closeLines) {
    		      // Test if any candidate lines can be projected onto by the mousePoint
    		      for (var i = 0; i < closeLines.length; i++) {
    		        if (this._pointProjectsToLineSegment(toolIndex, closeLines[i])) {
    		          return new _ClickedLineData_js__WEBPACK_IMPORTED_MODULE_4__["default"](toolIndex, closeLines[i]);
    		        }
    		      } // No valid line found


    		      return null;
    		    }
    		    /**
    		     * Returns true if the mouse point projects onto the line segment.
    		     * @private
    		     * @method
    		     *
    		     * @param {number} toolIndex The index of the particular freehand tool.
    		     * @param {Object} handleIndexArray An array of indicies corresponding to the line segment.
    		     * @returns {boolean} True if the mouse point projects onto the line segment
    		     */

    		  }, {
    		    key: "_pointProjectsToLineSegment",
    		    value: function _pointProjectsToLineSegment(toolIndex, handleIndexArray) {
    		      var eventData = this._eventData;
    		      var toolData = this._toolData;
    		      var data = toolData.data[toolIndex];
    		      var points = data.handles.points;

    		      if (data.handles.points === undefined) {
    		        return;
    		      }

    		      if (data.visible === false) {
    		        return false;
    		      }

    		      var handle1 = points[handleIndexArray[0]];
    		      var handle2 = points[handleIndexArray[1]];
    		      var p = FreehandLineFinder.getCanvasPointsFromHandles(handle1, handle2, eventData.element);
    		      var r = FreehandLineFinder.getLineAsVector(p);

    		      var m = this._getLineOriginToMouseAsVector(p); // Project vector m onto r to see if the point is within bounds of line segment


    		      var mProj = (m[0] * r[0] + m[1] * r[1]) / r.magnitude;

    		      if (mProj > 0 && mProj < r.magnitude) {
    		        return true;
    		      }

    		      return false;
    		    }
    		    /**
    		     * Returns the canvas positions from the handle's pixel positions.
    		     *
    		     * @static
    		     * @public
    		     * @method
    		     * @param {FreehandHandleData} handle1 The first handle.
    		     * @param {FreehandHandleData} handle2 The second handle.
    		     * @param {Object} element The element on which the handles reside.
    		     * @returns {Object} An array contsining the handle positions in canvas coordinates.
    		     */

    		  }, {
    		    key: "_getLineOriginToMouseAsVector",

    		    /**
    		     * Constructs a vector from the direction and magnitude of the line from the the line origin to the mouse cursor.
    		     * @private
    		     * @method
    		     *
    		     * @param {Object} p An array of two points respresenting the line segment.
    		     * @returns {Object} An array containing the x and y components of the vector.
    		     */
    		    value: function _getLineOriginToMouseAsVector(p) {
    		      var m = [this._mousePoint.x - p[0].x, this._mousePoint.y - p[0].y];
    		      return m;
    		    }
    		    /**
    		     * Calculates the perpendicular distance of the mouse cursor from a line segment.
    		     * @private
    		     * @method
    		     *
    		     * @param {FreehandHandleData} handle1 The first handle.
    		     * @param {FreehandHandleData} handle2 The first handle.
    		     * @returns {number} The perpendicular distance of the mouse cursor from the line segment.
    		     */

    		  }, {
    		    key: "_distanceOfPointfromLine",
    		    value: function _distanceOfPointfromLine(handle1, handle2) {
    		      var eventData = this._eventData;
    		      var p1 = _externalModules_js__WEBPACK_IMPORTED_MODULE_3__["default"].cornerstone.pixelToCanvas(eventData.element, handle1);
    		      var p2 = _externalModules_js__WEBPACK_IMPORTED_MODULE_3__["default"].cornerstone.pixelToCanvas(eventData.element, handle2);
    		      var pMouse = this._mousePoint; // Perpendicular distance of point from line:
    		      // = 2* area of triangle(p1,p2,pm) / length of triangle's base |p2 - p1|

    		      var twiceAreaOfTriangle = Math.abs((p2.y - p1.y) * pMouse.x - (p2.x - p1.x) * pMouse.y + p2.x * p1.y - p2.y * p1.x);
    		      var rMagnitude = _externalModules_js__WEBPACK_IMPORTED_MODULE_3__["default"].cornerstoneMath.point.distance(p1, p2);
    		      var d = twiceAreaOfTriangle / rMagnitude;
    		      return d;
    		    }
    		    /**
    		     * Gets the next handl index from a cyclical array of points.
    		     *
    		     * @static
    		     * @public
    		     * @method
    		     *
    		     * @param {number} currentIndex The current index.
    		     * @param {number} length The number of handles in the polygon.
    		     * @returns {number} The index of the next handle.
    		     */

    		  }], [{
    		    key: "getCanvasPointsFromHandles",
    		    value: function getCanvasPointsFromHandles(handle1, handle2, element) {
    		      var p = []; // Point r from left to right so that we only have one orientation to test.

    		      if (handle1.x < handle2.x) {
    		        p.push(_externalModules_js__WEBPACK_IMPORTED_MODULE_3__["default"].cornerstone.pixelToCanvas(element, handle1));
    		        p.push(_externalModules_js__WEBPACK_IMPORTED_MODULE_3__["default"].cornerstone.pixelToCanvas(element, handle2));
    		      } else {
    		        p.push(_externalModules_js__WEBPACK_IMPORTED_MODULE_3__["default"].cornerstone.pixelToCanvas(element, handle2));
    		        p.push(_externalModules_js__WEBPACK_IMPORTED_MODULE_3__["default"].cornerstone.pixelToCanvas(element, handle1));
    		      }

    		      return p;
    		    }
    		    /**
    		     * Converts a line segment to a vector.
    		     *
    		     * @static
    		     * @public
    		     * @method
    		     * @param {Object} p An array of two points respresenting the line segment.
    		     * @returns {Object} An array containing the x and y components of the vector, as well as a magnitude property.
    		     */

    		  }, {
    		    key: "getLineAsVector",
    		    value: function getLineAsVector(p) {
    		      var r = [p[1].x - p[0].x, p[1].y - p[0].y];
    		      r.magnitude = _externalModules_js__WEBPACK_IMPORTED_MODULE_3__["default"].cornerstoneMath.point.distance(p[0], p[1]);
    		      return r;
    		    }
    		  }, {
    		    key: "getNextHandleIndex",
    		    value: function getNextHandleIndex(currentIndex, length) {
    		      var nextIndex;

    		      if (currentIndex < length - 1) {
    		        nextIndex = currentIndex + 1;
    		      } else {
    		        nextIndex = 0;
    		      }

    		      return nextIndex;
    		    }
    		  }]);

    		  return FreehandLineFinder;
    		}();



    		/***/ }),

    		/***/ "./util/freehand/addLine.js":
    		/*!**********************************!*\
    		  !*** ./util/freehand/addLine.js ***!
    		  \**********************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/**
    		 * AddLine - Adds a line to a specifc index of a freehand tool points array.
    		 *
    		 * @param  {Object[]} points      The array of points.
    		 * @param  {Number} insertIndex The index to insert the line.
    		 * @returns {Null}             description
    		 */
    		/* harmony default export */ __webpack_exports__["default"] = (function (points, insertIndex) {
    		  // Add the line from the inserted handle to the handle after
    		  if (insertIndex === points.length - 1) {
    		    points[insertIndex].lines.push(points[0]);
    		  } else {
    		    points[insertIndex].lines.push(points[insertIndex + 1]);
    		  }
    		});

    		/***/ }),

    		/***/ "./util/freehand/calculateFreehandStatistics.js":
    		/*!******************************************************!*\
    		  !*** ./util/freehand/calculateFreehandStatistics.js ***!
    		  \******************************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _pointInFreehand_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pointInFreehand.js */ "./util/freehand/pointInFreehand.js");

    		/**
    		 * Calculates the statistics of all the pixels within the freehand object.
    		 * @export @public @method
    		 * @name calculateFreehandStatistics
    		 *
    		 * @param {Object} sp An array of the pixel data.
    		 * @param {Object} boundingBox Rectangular box enclosing the polygon.
    		 * @param {Object} dataHandles Data object associated with the tool.
    		 * @returns {Object} Object containing the derived statistics.
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (sp, boundingBox, dataHandles) {
    		  var statisticsObj = {
    		    count: 0,
    		    mean: 0.0,
    		    variance: 0.0,
    		    stdDev: 0.0
    		  };
    		  var sum = getSum(sp, boundingBox, dataHandles);

    		  if (sum.count === 0) {
    		    return statisticsObj;
    		  }

    		  statisticsObj.count = sum.count;
    		  statisticsObj.mean = sum.value / sum.count;
    		  statisticsObj.variance = sum.squared / sum.count - statisticsObj.mean * statisticsObj.mean;
    		  statisticsObj.stdDev = Math.sqrt(statisticsObj.variance);
    		  return statisticsObj;
    		});
    		/**
    		 * Calculates the sum, squared sum and count of all pixels within the polygon.
    		 * @private
    		 * @method
    		 * @name getSum
    		 *
    		 * @param {Object} sp An array of the pixel data.
    		 * @param {Object} boundingBox Rectangular box enclosing the polygon.
    		 * @param {Object} dataHandles Data object associated with the tool.
    		 * @returns {Object} Object containing the sum, squared sum and pixel count.
    		 */

    		function getSum(sp, boundingBox, dataHandles) {
    		  var sum = {
    		    value: 0,
    		    squared: 0,
    		    count: 0
    		  };
    		  var index = 0;

    		  for (var y = boundingBox.top; y < boundingBox.top + boundingBox.height; y++) {
    		    for (var x = boundingBox.left; x < boundingBox.left + boundingBox.width; x++) {
    		      var point = {
    		        x: x,
    		        y: y
    		      };
    		      sumPointIfInFreehand(dataHandles, point, sum, sp[index]);
    		      index++;
    		    }
    		  }

    		  return sum;
    		}
    		/**
    		 * Adds the pixel to the workingSum if it is within the polygon.
    		 * @private
    		 * @method sumPointIfInFreehand
    		 *
    		 * @param {Object} dataHandles Data object associated with the tool.
    		 * @param {Object} point The pixel coordinates.
    		 * @param {Object} workingSum The working sum, squared sum and pixel count.
    		 * @param {Object} pixelValue The pixel value. // @modifies {workingSum}
    		 * @returns {undefined}
    		 */


    		function sumPointIfInFreehand(dataHandles, point, workingSum, pixelValue) {
    		  if (Object(_pointInFreehand_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dataHandles, point)) {
    		    workingSum.value += pixelValue;
    		    workingSum.squared += pixelValue * pixelValue;
    		    workingSum.count++;
    		  }
    		}

    		/***/ }),

    		/***/ "./util/freehand/freehandArea.js":
    		/*!***************************************!*\
    		  !*** ./util/freehand/freehandArea.js ***!
    		  \***************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/**
    		 * Calculates the area of a freehand tool polygon.
    		 * @export @public @method
    		 * @name freehandArea
    		 *
    		 * @param {Object} dataHandles Data object associated with the tool.
    		 * @param {Object} scaling Area scaling of image.
    		 * @returns {number} The area of the polygon.
    		 */
    		/* harmony default export */ __webpack_exports__["default"] = (function (dataHandles, scaling) {
    		  var freeHandArea = 0;
    		  var j = dataHandles.length - 1; // The last vertex is the previous one to the first

    		  scaling = scaling || 1; // If scaling is falsy, set scaling to 1

    		  for (var i = 0; i < dataHandles.length; i++) {
    		    freeHandArea += (dataHandles[j].x + dataHandles[i].x) * (dataHandles[j].y - dataHandles[i].y);
    		    j = i; // Here j is previous vertex to i
    		  }

    		  return Math.abs(freeHandArea * scaling / 2.0);
    		});

    		/***/ }),

    		/***/ "./util/freehand/freehandIntersect.js":
    		/*!********************************************!*\
    		  !*** ./util/freehand/freehandIntersect.js ***!
    		  \********************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/**
    		 * Orientation algoritm to determine if two lines cross.
    		 * Credit and details: geeksforgeeks.org/check-if-two-given-line-segments-intersect/
    		 */

    		/**
    		 * Determines whether a new handle causes an intersection of the lines of the polygon.
    		 * @public
    		 * @function newHandle
    		 *
    		 * @param {Object} candidateHandle The new handle to check.
    		 * @param {Object} dataHandles data object associated with the tool.
    		 * @returns {boolean} - Whether the new line intersects with any other lines of the polygon.
    		 */
    		function newHandle(candidateHandle, dataHandles) {
    		  // Check if the proposed line will intersect any existent line
    		  var lastHandleId = dataHandles.length - 1;
    		  var lastHandle = getCoords(dataHandles[lastHandleId]);
    		  var newHandle = getCoords(candidateHandle);
    		  return doesIntersectOtherLines(dataHandles, lastHandle, newHandle, [lastHandleId]);
    		}
    		/**
    		 * Checks if the last line of a polygon will intersect the other lines of the polgyon.
    		 * @public
    		 * @function end
    		 *
    		 * @param {Object} dataHandles data object associated with the tool.
    		 * @returns {boolean} Whether the last line intersects with any other lines of the polygon.
    		 */


    		function end(dataHandles) {
    		  var lastHandleId = dataHandles.length - 1;
    		  var lastHandle = getCoords(dataHandles[lastHandleId]);
    		  var firstHandle = getCoords(dataHandles[0]);
    		  return doesIntersectOtherLines(dataHandles, lastHandle, firstHandle, [lastHandleId, 0]);
    		}
    		/**
    		 * Checks whether the modification of a handle's position causes intersection of the lines of the polygon.
    		 * @public
    		 * @method modify
    		 *
    		 * @param {Object} dataHandles Data object associated with the tool.
    		 * @param {number} modifiedHandleId The id of the handle being modified.
    		 * @returns {boolean} Whether the modfication causes any intersections.
    		 */


    		function modify(dataHandles, modifiedHandleId) {
    		  // Check if the modifiedHandle's previous and next lines will intersect any other line in the polygon
    		  var modifiedHandle = getCoords(dataHandles[modifiedHandleId]); // Previous neightbor handle

    		  var neighborHandleId = modifiedHandleId - 1;

    		  if (modifiedHandleId === 0) {
    		    neighborHandleId = dataHandles.length - 1;
    		  }

    		  var neighborHandle = getCoords(dataHandles[neighborHandleId]);

    		  if (doesIntersectOtherLines(dataHandles, modifiedHandle, neighborHandle, [modifiedHandleId, neighborHandleId])) {
    		    return true;
    		  } // Next neightbor handle


    		  if (modifiedHandleId === dataHandles.length - 1) {
    		    neighborHandleId = 0;
    		  } else {
    		    neighborHandleId = modifiedHandleId + 1;
    		  }

    		  neighborHandle = getCoords(dataHandles[neighborHandleId]);
    		  return doesIntersectOtherLines(dataHandles, modifiedHandle, neighborHandle, [modifiedHandleId, neighborHandleId]);
    		}
    		/**
    		 * Checks whether the line (p1,q1) intersects any of the other lines in the polygon.
    		 * @private
    		 * @function doesIntersectOtherLines
    		 *
    		 * @param {Object} dataHandles Data object associated with the tool.
    		 * @param {Object} p1 Coordinates of the start of the line.
    		 * @param {Object} q1 Coordinates of the end of the line.
    		 * @param {Object} ignoredHandleIds Ids of handles to ignore (i.e. lines that share a vertex with the line being tested).
    		 * @returns {boolean} Whether the line intersects any of the other lines in the polygon.
    		 */


    		function doesIntersectOtherLines(dataHandles, p1, q1, ignoredHandleIds) {
    		  var j = dataHandles.length - 1;

    		  for (var i = 0; i < dataHandles.length; i++) {
    		    if (ignoredHandleIds.indexOf(i) !== -1 || ignoredHandleIds.indexOf(j) !== -1) {
    		      j = i;
    		      continue;
    		    }

    		    var p2 = getCoords(dataHandles[j]);
    		    var q2 = getCoords(dataHandles[i]);

    		    if (doesIntersect(p1, q1, p2, q2)) {
    		      return true;
    		    }

    		    j = i;
    		  }

    		  return false;
    		}
    		/**
    		 * Checks whether the line (p1,q1) intersects the line (p2,q2) via an orientation algorithm.
    		 * @private
    		 * @function doesIntersect
    		 *
    		 * @param {Object} p1 Coordinates of the start of the line 1.
    		 * @param {Object} q1 Coordinates of the end of the line 1.
    		 * @param {Object} p2 Coordinates of the start of the line 2.
    		 * @param {Object} q2 Coordinates of the end of the line 2.
    		 * @returns {boolean} Whether lines (p1,q1) and (p2,q2) intersect.
    		 */


    		function doesIntersect(p1, q1, p2, q2) {
    		  var result = false;
    		  var orient = [orientation(p1, q1, p2), orientation(p1, q1, q2), orientation(p2, q2, p1), orientation(p2, q2, q1)]; // General Case

    		  if (orient[0] !== orient[1] && orient[2] !== orient[3]) {
    		    return true;
    		  } // Special Cases


    		  if (orient[0] === 0 && onSegment(p1, p2, q1)) {
    		    // If p1, q1 and p2 are colinear and p2 lies on segment p1q1
    		    result = true;
    		  } else if (orient[1] === 0 && onSegment(p1, q2, q1)) {
    		    // If p1, q1 and p2 are colinear and q2 lies on segment p1q1
    		    result = true;
    		  } else if (orient[2] === 0 && onSegment(p2, p1, q2)) {
    		    // If p2, q2 and p1 are colinear and p1 lies on segment p2q2
    		    result = true;
    		  } else if (orient[3] === 0 && onSegment(p2, q1, q2)) {
    		    // If p2, q2 and q1 are colinear and q1 lies on segment p2q2
    		    result = true;
    		  }

    		  return result;
    		}
    		/**
    		 * Returns an object with two properties, x and y, from a heavier FreehandHandleData object.
    		 * @private
    		 * @function getCoords
    		 *
    		 * @param {Object} dataHandle Data object associated with a single handle in the freehand tool.
    		 * @returns {Object} An object containing position propeties x and y.
    		 */


    		function getCoords(dataHandle) {
    		  return {
    		    x: dataHandle.x,
    		    y: dataHandle.y
    		  };
    		}
    		/**
    		 * Checks the orientation of 3 points.
    		 * @private
    		 * @function orientation
    		 *
    		 * @param {Object} p First point.
    		 * @param {Object} q Second point.
    		 * @param {Object} r Third point.
    		 * @returns {number} - 0: Colinear, 1: Clockwise, 2: Anticlockwise
    		 */


    		function orientation(p, q, r) {
    		  var orientationValue = (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);

    		  if (orientationValue === 0) {
    		    return 0; // Colinear
    		  }

    		  return orientationValue > 0 ? 1 : 2;
    		}
    		/**
    		 * Checks if point q lines on the segment (p,r).
    		 * @private
    		 * @function onSegment
    		 *
    		 * @param {Object} p Point p.
    		 * @param {Object} q Point q.
    		 * @param {Object} r Point r.
    		 * @returns {boolean} - If q lies on line segment (p,r).
    		 */


    		function onSegment(p, q, r) {
    		  if (q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y)) {
    		    return true;
    		  }

    		  return false;
    		}

    		/* harmony default export */ __webpack_exports__["default"] = ({
    		  newHandle: newHandle,
    		  end: end,
    		  modify: modify
    		});

    		/***/ }),

    		/***/ "./util/freehand/index.js":
    		/*!********************************!*\
    		  !*** ./util/freehand/index.js ***!
    		  \********************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _calculateFreehandStatistics_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./calculateFreehandStatistics.js */ "./util/freehand/calculateFreehandStatistics.js");
    		/* harmony import */ var _ClickedLineData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ClickedLineData.js */ "./util/freehand/ClickedLineData.js");
    		/* harmony import */ var _freehandArea_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./freehandArea.js */ "./util/freehand/freehandArea.js");
    		/* harmony import */ var _FreehandHandleData_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./FreehandHandleData.js */ "./util/freehand/FreehandHandleData.js");
    		/* harmony import */ var _freehandIntersect_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./freehandIntersect.js */ "./util/freehand/freehandIntersect.js");
    		/* harmony import */ var _FreehandLineFinder_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./FreehandLineFinder.js */ "./util/freehand/FreehandLineFinder.js");
    		/* harmony import */ var _insertOrDelete_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./insertOrDelete.js */ "./util/freehand/insertOrDelete.js");
    		/* harmony import */ var _pointInFreehand_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./pointInFreehand.js */ "./util/freehand/pointInFreehand.js");
    		/* harmony import */ var _addLine_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./addLine.js */ "./util/freehand/addLine.js");









    		/* harmony default export */ __webpack_exports__["default"] = ({
    		  calculateFreehandStatistics: _calculateFreehandStatistics_js__WEBPACK_IMPORTED_MODULE_0__["default"],
    		  ClickedLineData: _ClickedLineData_js__WEBPACK_IMPORTED_MODULE_1__["default"],
    		  freehandArea: _freehandArea_js__WEBPACK_IMPORTED_MODULE_2__["default"],
    		  FreehandHandleData: _FreehandHandleData_js__WEBPACK_IMPORTED_MODULE_3__["default"],
    		  freehandIntersect: _freehandIntersect_js__WEBPACK_IMPORTED_MODULE_4__["default"],
    		  FreehandLineFinder: _FreehandLineFinder_js__WEBPACK_IMPORTED_MODULE_5__["default"],
    		  insertOrDelete: _insertOrDelete_js__WEBPACK_IMPORTED_MODULE_6__["default"],
    		  pointInFreehand: _pointInFreehand_js__WEBPACK_IMPORTED_MODULE_7__["default"],
    		  addLine: _addLine_js__WEBPACK_IMPORTED_MODULE_8__["default"]
    		});

    		/***/ }),

    		/***/ "./util/freehand/insertOrDelete.js":
    		/*!*****************************************!*\
    		  !*** ./util/freehand/insertOrDelete.js ***!
    		  \*****************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _FreehandLineFinder_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FreehandLineFinder.js */ "./util/freehand/FreehandLineFinder.js");
    		/* harmony import */ var _FreehandHandleData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FreehandHandleData.js */ "./util/freehand/FreehandHandleData.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _addLine_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./addLine.js */ "./util/freehand/addLine.js");





    		/**
    		 * Inserts or deletes a point from a freehand tool.
    		 * @export @public @method
    		 * @name insertOrDelete
    		 *
    		 * @param {Object} evt The event.
    		 * @param {Object} nearby Object containing information about a nearby handle.
    		 * @returns {void}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (evt, nearby) {
    		  var eventData = evt.detail;

    		  if (nearby && nearby.handleNearby !== null) {
    		    var deleteInfo = {
    		      toolIndex: nearby.toolIndex,
    		      handleIndex: nearby.handleNearby
    		    };

    		    _deletePoint.call(this, eventData, deleteInfo);
    		  } else {
    		    var freehandLineFinder = new _FreehandLineFinder_js__WEBPACK_IMPORTED_MODULE_0__["default"](eventData, this.name);
    		    var insertInfo = freehandLineFinder.findLine();

    		    if (insertInfo) {
    		      _insertPoint.call(this, eventData, insertInfo);
    		    }
    		  }
    		});
    		/**
    		 * Deletes a point from a freehand tool.
    		 * @private
    		 * @method
    		 *
    		 * @param {Object} eventData The data object associated with the event.
    		 * @param {Object} deleteInfo Object containing information about which point to delete.
    		 * @returns {void}
    		 */

    		function _deletePoint(eventData, deleteInfo) {
    		  var toolData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_2__["getToolState"])(eventData.element, this.name);

    		  if (toolData === undefined) {
    		    return;
    		  }

    		  var deleteHandle = deleteInfo.handleIndex;
    		  var toolIndex = deleteInfo.toolIndex; // Get the toolData from insertInfo

    		  var data = toolData.data[toolIndex];
    		  var points = data.handles.points; // Only allow delete if > 3 points

    		  if (points.length <= 3) {
    		    return;
    		  } // Link the line of the previous handle to the one after handles[deleteHandle];


    		  if (deleteHandle === points.length - 1) {
    		    points[deleteHandle - 1].lines.pop();
    		    points[deleteHandle - 1].lines.push(points[0]);
    		  } else if (deleteHandle === 0) {
    		    points[points.length - 1].lines.pop();
    		    points[points.length - 1].lines.push(points[deleteHandle + 1]);
    		  } else {
    		    points[deleteHandle - 1].lines.pop();
    		    points[deleteHandle - 1].lines.push(points[deleteHandle + 1]);
    		  } // Remove the handle


    		  points.splice(deleteHandle, 1);
    		  data.invalidated = true;
    		  data.active = true;
    		  data.highlight = true; // Force onImageRendered to fire

    		  _externalModules_js__WEBPACK_IMPORTED_MODULE_3__["default"].cornerstone.updateImage(eventData.element);
    		}
    		/**
    		 * Inserts a new point into a freehand tool.
    		 * @private
    		 * @method
    		 *
    		 * @param {Object} eventData - The data object associated with the event.
    		 * @param {Object} insertInfo - Object containing information about where to insert the point.
    		 * @returns {void}
    		 */


    		function _insertPoint(eventData, insertInfo) {
    		  var toolData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_2__["getToolState"])(eventData.element, this.name);

    		  if (toolData === undefined) {
    		    return;
    		  } // Get the toolData from insertInfo


    		  var data = toolData.data[insertInfo.toolIndex];

    		  var insertIndex = _getInsertionIndex(insertInfo);

    		  if (insertIndex === Infinity) {
    		    return;
    		  }

    		  var handleData = new _FreehandHandleData_js__WEBPACK_IMPORTED_MODULE_1__["default"](eventData.currentPoints.image);
    		  var points = data.handles.points; // Add the new handle

    		  points.splice(insertIndex, 0, handleData); // Add the line from the previous handle to the inserted handle (note the tool is now one increment longer)

    		  points[insertIndex - 1].lines.pop();
    		  points[insertIndex - 1].lines.push(eventData.currentPoints.image);
    		  Object(_addLine_js__WEBPACK_IMPORTED_MODULE_4__["default"])(points, insertIndex);
    		  data.active = true;
    		  data.highlight = true; // Force onImageRendered to fire

    		  data.invalidated = true;
    		  _externalModules_js__WEBPACK_IMPORTED_MODULE_3__["default"].cornerstone.updateImage(eventData.element);
    		}
    		/**
    		 * Gets the handle index of a tool in which to insert the new point.
    		 * @private
    		 * @method
    		 *
    		 * @param {Object} insertInfo - Object containing information about where to insert the point.
    		 * @returns {void}
    		 */


    		function _getInsertionIndex(insertInfo) {
    		  // Get lowest index that isn't zero
    		  var handleIndexArray = insertInfo.handleIndexArray;
    		  var insertIndex = Infinity;
    		  var arrayContainsZero = handleIndexArray.includes(0);

    		  for (var i = 0; i < handleIndexArray.length; i++) {
    		    var index = handleIndexArray[i];

    		    if (index !== 0 && index < insertIndex) {
    		      insertIndex = index;
    		    }
    		  } // Treat the special case of handleIndexArray === [0,1] || [1,0]


    		  if (arrayContainsZero && insertIndex === 1) {
    		    insertIndex = 0;
    		  } // The insertion index shall be just after the lower index


    		  insertIndex++;
    		  return insertIndex;
    		}

    		/***/ }),

    		/***/ "./util/freehand/pointInFreehand.js":
    		/*!******************************************!*\
    		  !*** ./util/freehand/pointInFreehand.js ***!
    		  \******************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/**
    		 * Calculates whether "location" is inside the polygon defined by dataHandles
    		 * by counting the number of times a ray originating from "point" crosses the
    		 * edges of the polygon. Odd === inside, Even === outside.
    		 * @export @public @method
    		 * @name pointInFreehand
    		 *
    		 * @param {Object} dataHandles Data object associated with the tool.
    		 * @param {Object} location The coordinates being queried.
    		 * @returns {boolean} True if the location is inside the polygon defined by dataHandles.
    		 */
    		/* harmony default export */ __webpack_exports__["default"] = (function (dataHandles, location) {
    		  var inROI = false; // Cycle round pairs of points

    		  var j = dataHandles.length - 1; // The last vertex is the previous one to the first

    		  for (var i = 0; i < dataHandles.length; i++) {
    		    if (rayFromPointCrosssesLine(location, dataHandles[i], dataHandles[j])) {
    		      inROI = !inROI;
    		    }

    		    j = i; // Here j is previous vertex to i
    		  }

    		  return inROI;
    		});
    		/**
    		 * Returns true if the y-position yp is enclosed within y-positions y1 and y2.
    		 * @private
    		 * @method
    		 * @name isEnclosedY
    		 *
    		 * @param {number} yp The y position of point p.
    		 * @param {number} y1 The y position of point 1.
    		 * @param {number} y2 The y position of point 2.
    		 * @returns {boolean} True if the y-position yp is enclosed within y-positions y1 and y2.
    		 */

    		function isEnclosedY(yp, y1, y2) {
    		  if (y1 < yp && yp < y2 || y2 < yp && yp < y1) {
    		    return true;
    		  }

    		  return false;
    		}
    		/**
    		 * Returns true if the line segment is to the right of the point.
    		 * @private
    		 * @method
    		 * @name isLineRightOfPoint
    		 *
    		 * @param {Object} point The point being queried.
    		 * @param {Object} lp1 The first point of the line segment.
    		 * @param {Object} lp2 The second point of the line segment.
    		 * @returns {boolean} True if the line is to the right of the point.
    		 */


    		function isLineRightOfPoint(point, lp1, lp2) {
    		  // If both right of point return true
    		  if (lp1.x > point.x && lp2.x > point.x) {
    		    return true;
    		  } // Catch when line is vertical.


    		  if (lp1.x === lp2.x) {
    		    return point.x < lp1.x;
    		  } // Put leftmost point in lp1


    		  if (lp1.x > lp2.x) {
    		    var lptemp = lp1;
    		    lp1 = lp2;
    		    lp2 = lptemp;
    		  }

    		  var lPointY = lineSegmentAtPoint(point, lp1, lp2); // If the lp1.x and lp2.x enclose point.x check gradient of line and see if
    		  // Point is above or below the line to calculate if it inside.

    		  if (Math.sign(lPointY.gradient) * point.y > lPointY.value) {
    		    return true;
    		  }

    		  return false;
    		}
    		/**
    		 * Returns the y value of the line segment at the x value of the point.
    		 * @private
    		 * @method
    		 * @name lineSegmentAtPoint
    		 *
    		 * @param {Object} point The point being queried.
    		 * @param {Object} lp1 The first point of the line segment.
    		 * @param {Object} lp2 The second point of the line segment.
    		 * @returns {Object} An object containing the y value as well as the gradient of the line segment.
    		 */


    		function lineSegmentAtPoint(point, lp1, lp2) {
    		  var dydx = (lp2.y - lp1.y) / (lp2.x - lp1.x);
    		  var fx = {
    		    value: lp1.x + dydx * (point.x - lp1.x),
    		    gradient: dydx
    		  };
    		  return fx;
    		}
    		/**
    		 * Returns true if a rightwards ray originating from the point crosses the line defined by handleI and handleJ.
    		 * @private
    		 * @method
    		 * @name rayFromPointCrosssesLine
    		 *
    		 * @param {Object} point The point being queried.
    		 * @param {Object} handleI The first handle of the line segment.
    		 * @param {Object} handleJ The second handle of the line segment.
    		 * @returns {boolean} True if a rightwards ray originating from the point crosses the line defined by handleI and handleJ.
    		 */


    		function rayFromPointCrosssesLine(point, handleI, handleJ) {
    		  if (isEnclosedY(point.y, handleI.y, handleJ.y) && isLineRightOfPoint(point, handleI, handleJ)) {
    		    return true;
    		  }

    		  return false;
    		}

    		/***/ }),

    		/***/ "./util/getActiveTool.js":
    		/*!*******************************!*\
    		  !*** ./util/getActiveTool.js ***!
    		  \*******************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getActiveTool; });
    		/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../store */ "./store/index.js");
    		/* harmony import */ var _store_getActiveToolsForElement__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../store/getActiveToolsForElement */ "./store/getActiveToolsForElement.js");
    		/* harmony import */ var _store_filterToolsUsableWithMultiPartTools__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../store/filterToolsUsableWithMultiPartTools */ "./store/filterToolsUsableWithMultiPartTools.js");


    		 // Todo: We could simplify this if we only allow one active
    		// Tool per mouse button mask?

    		function getActiveTool(element, buttons) {
    		  var interactionType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'mouse';
    		  var tools;

    		  if (interactionType === 'touch') {
    		    tools = Object(_store_getActiveToolsForElement__WEBPACK_IMPORTED_MODULE_1__["default"])(element, _store__WEBPACK_IMPORTED_MODULE_0__["getters"].touchTools());
    		    tools = tools.filter(function (tool) {
    		      return tool.options.isTouchActive;
    		    });
    		  } else {
    		    // Filter out disabled, enabled, and passive
    		    tools = Object(_store_getActiveToolsForElement__WEBPACK_IMPORTED_MODULE_1__["default"])(element, _store__WEBPACK_IMPORTED_MODULE_0__["getters"].mouseTools()); // Filter out tools that do not match mouseButtonMask

    		    tools = tools.filter(function (tool) {
    		      return Array.isArray(tool.options.mouseButtonMask) && buttons && tool.options.mouseButtonMask.includes(buttons) && tool.options.isMouseActive;
    		    });

    		    if (_store__WEBPACK_IMPORTED_MODULE_0__["state"].isMultiPartToolActive) {
    		      tools = Object(_store_filterToolsUsableWithMultiPartTools__WEBPACK_IMPORTED_MODULE_2__["default"])(tools);
    		    }
    		  }

    		  if (tools.length === 0) {
    		    return;
    		  }

    		  return tools[0];
    		}

    		/***/ }),

    		/***/ "./util/getDefault.js":
    		/*!****************************!*\
    		  !*** ./util/getDefault.js ***!
    		  \****************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/**
    		 * Returns the first argument if defined, otherwise returns the second
    		 *
    		 * @param {*} value
    		 * @param {*} defaultValue
    		 * @returns {*}
    		 */
    		/* harmony default export */ __webpack_exports__["default"] = (function (value, defaultValue) {
    		  return value === undefined ? defaultValue : value;
    		});

    		/***/ }),

    		/***/ "./util/getKeyFromKeyCode.js":
    		/*!***********************************!*\
    		  !*** ./util/getKeyFromKeyCode.js ***!
    		  \***********************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/**
    		 * Returns a string representation of the a key, given a keycode. Useful for
    		 * hooking up api calls to buttons using external libraries.
    		 * @export @public @method
    		 * @name getKeyFromKeyCode
    		 *
    		 * @param  {number} keyCode The keycode to look up.
    		 * @returns {string} The corresponding character.
    		 */
    		/* harmony default export */ __webpack_exports__["default"] = (function (keyCode) {
    		  return KEY_CODES[keyCode];
    		});
    		var KEY_CODES = {
    		  // Numbers - above letter keys
    		  48: '0',
    		  49: '1',
    		  50: '2',
    		  51: '3',
    		  52: '4',
    		  53: '5',
    		  54: '6',
    		  55: '7',
    		  56: '8',
    		  57: '9',
    		  // Numbers - numpad
    		  96: '0',
    		  97: '1',
    		  98: '2',
    		  99: '3',
    		  100: '4',
    		  101: '5',
    		  102: '6',
    		  103: '7',
    		  104: '8',
    		  105: '9',
    		  // Letters
    		  65: 'a',
    		  66: 'b',
    		  67: 'c',
    		  68: 'd',
    		  69: 'e',
    		  70: 'f',
    		  71: 'g',
    		  72: 'h',
    		  73: 'i',
    		  74: 'j',
    		  75: 'k',
    		  76: 'l',
    		  77: 'm',
    		  78: 'n',
    		  79: 'o',
    		  80: 'p',
    		  81: 'q',
    		  82: 'r',
    		  83: 's',
    		  84: 't',
    		  85: 'u',
    		  86: 'v',
    		  87: 'w',
    		  88: 'x',
    		  89: 'y',
    		  90: 'z',
    		  // Function keys
    		  112: 'F1',
    		  113: 'F2',
    		  114: 'F3',
    		  115: 'F4',
    		  116: 'F5',
    		  // Command keys
    		  13: 'RETURN',
    		  8: 'BACKSPACE',
    		  9: 'TAB',
    		  46: 'DELETE',
    		  12: 'DELETE',
    		  27: 'ESCAPE',
    		  20: 'CAPSLOCK',
    		  // Misc - NOTE: There are multiple keycodes for certain characters due to browsers having different mappings.
    		  173: '-',
    		  189: '-',
    		  109: '-',
    		  61: '+',
    		  187: '+',
    		  107: '+',
    		  219: '[',
    		  221: ']',
    		  59: ';',
    		  186: ';',
    		  188: ',',
    		  190: '.',
    		  199: '/'
    		};

    		/***/ }),

    		/***/ "./util/getLuminance.js":
    		/*!******************************!*\
    		  !*** ./util/getLuminance.js ***!
    		  \******************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");

    		/**
    		 * Returns the luminance of a region.
    		 * @public
    		 * @function getLuminance
    		 *
    		 * @param  {HTMLElement} element The element.
    		 * @param  {number} x       The x position of the top-left corner of the region.
    		 * @param  {number} y       The y position of the top-left corner of the region.
    		 * @param  {number} width   The width of the region.
    		 * @param  {number} height  The height of the region
    		 * @returns {number[]}         The luminance.
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (element, x, y, width, height) {
    		  if (!element) {
    		    throw new Error('getLuminance: parameter element must not be undefined');
    		  }

    		  x = Math.round(x);
    		  y = Math.round(y);
    		  var enabledElement = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.getEnabledElement(element);
    		  var image = enabledElement.image;
    		  var luminance = [];
    		  var index = 0;
    		  var pixelData = image.getPixelData();
    		  var spIndex, row, column;

    		  if (image.color) {
    		    for (row = 0; row < height; row++) {
    		      for (column = 0; column < width; column++) {
    		        spIndex = ((row + y) * image.columns + (column + x)) * 4;
    		        var red = pixelData[spIndex];
    		        var green = pixelData[spIndex + 1];
    		        var blue = pixelData[spIndex + 2];
    		        luminance[index++] = 0.2126 * red + 0.7152 * green + 0.0722 * blue;
    		      }
    		    }
    		  } else {
    		    for (row = 0; row < height; row++) {
    		      for (column = 0; column < width; column++) {
    		        spIndex = (row + y) * image.columns + (column + x);
    		        luminance[index++] = pixelData[spIndex] * image.slope + image.intercept;
    		      }
    		    }
    		  }

    		  return luminance;
    		});

    		/***/ }),

    		/***/ "./util/getMaxSimultaneousRequests.js":
    		/*!********************************************!*\
    		  !*** ./util/getMaxSimultaneousRequests.js ***!
    		  \********************************************/
    		/*! exports provided: getDefaultSimultaneousRequests, getMaxSimultaneousRequests, setMaxSimultaneousRequests, getBrowserInfo, isMobileDevice */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDefaultSimultaneousRequests", function() { return getDefaultSimultaneousRequests; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMaxSimultaneousRequests", function() { return getMaxSimultaneousRequests; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setMaxSimultaneousRequests", function() { return setMaxSimultaneousRequests; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getBrowserInfo", function() { return getBrowserInfo; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isMobileDevice", function() { return isMobileDevice; });
    		var configMaxSimultaneousRequests; // Maximum concurrent connections to the same server
    		// Information from http://sgdev-blog.blogspot.fr/2014/01/maximum-concurrent-connection-to-same.html

    		var maxSimultaneousRequests = {
    		  default: 6,
    		  IE: {
    		    9: 6,
    		    10: 8,
    		    default: 8
    		  },
    		  Firefox: {
    		    default: 6
    		  },
    		  Opera: {
    		    10: 8,
    		    11: 6,
    		    12: 6,
    		    default: 6
    		  },
    		  Chrome: {
    		    default: 6
    		  },
    		  Safari: {
    		    default: 6
    		  }
    		}; // Browser name / version detection
    		//
    		//

    		/**
    		 * Browser name / version detection
    		 * http://stackoverflow.com/questions/2400935/browser-detection-in-javascript
    		 * @export @public @method
    		 * @name getBrowserInfo
    		 *
    		 * @returns {string} The name and version of the browser.
    		 */

    		function getBrowserInfo() {
    		  var ua = navigator.userAgent;
    		  var M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || [];
    		  var tem;

    		  if (/trident/i.test(M[1])) {
    		    tem = /\brv[ :]+(\d+)/g.exec(ua) || [];
    		    return "IE ".concat(tem[1] || '');
    		  }

    		  if (M[1] === 'Chrome') {
    		    tem = ua.match(/\b(OPR|Edge)\/(\d+)/);

    		    if (tem !== null) {
    		      return tem.slice(1).join(' ').replace('OPR', 'Opera');
    		    }
    		  }

    		  M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, '-?'];

    		  if ((tem = ua.match(/version\/(\d+)/i)) !== null) {
    		    M.splice(1, 1, tem[1]);
    		  }

    		  return M.join(' ');
    		}
    		/**
    		 * Sets the maximum number of simultaneous requests.
    		 * @export @public @method
    		 * @name setMaxSimultaneousRequests
    		 *
    		 * @param  {number} newMaxSimultaneousRequests The value.
    		 * @returns {void}
    		 */


    		function setMaxSimultaneousRequests(newMaxSimultaneousRequests) {
    		  configMaxSimultaneousRequests = newMaxSimultaneousRequests;
    		}
    		/**
    		 * Returns the maximum number of simultaneous requests.
    		 * @export @public @method
    		 * @name getMaxSimultaneousRequests
    		 *
    		 * @returns {number} The maximum number of simultaneous requests
    		 */


    		function getMaxSimultaneousRequests() {
    		  if (configMaxSimultaneousRequests) {
    		    return configMaxSimultaneousRequests;
    		  }

    		  return getDefaultSimultaneousRequests();
    		}
    		/**
    		 * Returns the default number of simultaneous requests.
    		 * @export @public @method
    		 * @name getDefaultSimultaneousRequests
    		 *
    		 * @returns {number} The default number of simultaneous requests.
    		 */


    		function getDefaultSimultaneousRequests() {
    		  var infoString = getBrowserInfo();
    		  var info = infoString.split(' ');
    		  var browserName = info[0];
    		  var browserVersion = info[1];
    		  var browserData = maxSimultaneousRequests[browserName];

    		  if (!browserData) {
    		    return maxSimultaneousRequests.default;
    		  }

    		  if (!browserData[browserVersion]) {
    		    return browserData.default;
    		  }

    		  return browserData[browserVersion];
    		}
    		/**
    		 * Checks if cornerstoneTools is operating on a mobile device.
    		 * @export @public @method
    		 * @name isMobileDevice
    		 *
    		 * @returns {boolean} True if running on a mobile device.
    		 */


    		function isMobileDevice() {
    		  var pattern = new RegExp('Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini');
    		  return pattern.test(navigator.userAgent);
    		}



    		/***/ }),

    		/***/ "./util/getPixelSpacing.js":
    		/*!*********************************!*\
    		  !*** ./util/getPixelSpacing.js ***!
    		  \*********************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getPixelSpacing; });
    		/* harmony import */ var _externalModules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../externalModules */ "./externalModules.js");

    		function getPixelSpacing(image) {
    		  var imagePlane = _externalModules__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.metaData.get('imagePlaneModule', image.imageId);

    		  if (imagePlane) {
    		    return {
    		      rowPixelSpacing: imagePlane.rowPixelSpacing || imagePlane.rowImagePixelSpacing,
    		      colPixelSpacing: imagePlane.columnPixelSpacing || imagePlane.colImagePixelSpacing
    		    };
    		  }

    		  return {
    		    rowPixelSpacing: image.rowPixelSpacing,
    		    colPixelSpacing: image.columnPixelSpacing
    		  };
    		}

    		/***/ }),

    		/***/ "./util/getRGBPixels.js":
    		/*!******************************!*\
    		  !*** ./util/getRGBPixels.js ***!
    		  \******************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");

    		/**
    		 * Gets pixels of an RGB image.
    		 * @export @public @method
    		 * @name getRGBPixels
    		 *
    		 * @param  {HTMLElement} element The element.
    		 * @param  {number} x       The x position of the top-left corner of the region.
    		 * @param  {number} y       The y position of the top-left corner of the region.
    		 * @param  {number} width   The width of the region.
    		 * @param  {number} height  The height of the region
    		 * @returns {number[]}       The pixel data.
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (element, x, y, width, height) {
    		  if (!element) {
    		    throw new Error('getRGBPixels: parameter element must not be undefined');
    		  }

    		  x = Math.round(x);
    		  y = Math.round(y);
    		  var enabledElement = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.getEnabledElement(element);
    		  var storedPixelData = [];
    		  var index = 0;
    		  var pixelData = enabledElement.image.getPixelData();
    		  var spIndex, row, column;

    		  if (enabledElement.image.color) {
    		    for (row = 0; row < height; row++) {
    		      for (column = 0; column < width; column++) {
    		        spIndex = ((row + y) * enabledElement.image.columns + (column + x)) * 4;
    		        var red = pixelData[spIndex];
    		        var green = pixelData[spIndex + 1];
    		        var blue = pixelData[spIndex + 2];
    		        var alpha = pixelData[spIndex + 3];
    		        storedPixelData[index++] = red;
    		        storedPixelData[index++] = green;
    		        storedPixelData[index++] = blue;
    		        storedPixelData[index++] = alpha;
    		      }
    		    }
    		  }

    		  return storedPixelData;
    		});

    		/***/ }),

    		/***/ "./util/getROITextBoxCoords.js":
    		/*!*************************************!*\
    		  !*** ./util/getROITextBoxCoords.js ***!
    		  \*************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getROITextBoxCoords; });
    		/**
    		 * Determine the coordinates that will place the textbox to the right of the
    		 * annotation, taking rotation, hflip, and vflip into account.
    		 *
    		 * @param {Object} viewport - The object that stores rotation, hflip, and vflip.
    		 * @param {Object} handles - The handles of the annotation.
    		 * @returns {Object} - The coordinates for default placement of the textbox
    		 */
    		function getROITextBoxCoords(viewport, handles) {
    		  var corners = _determineCorners(handles);

    		  var centerX = (corners.left.x + corners.right.x) / 2;
    		  var centerY = (corners.top.y + corners.bottom.y) / 2;
    		  var textBox = {};

    		  if (viewport.rotation >= 0 && viewport.rotation < 90) {
    		    textBox.x = viewport.hflip ? corners.left.x : corners.right.x;
    		    textBox.y = centerY;
    		  }

    		  if (viewport.rotation >= 90 && viewport.rotation < 180) {
    		    textBox.x = centerX;
    		    textBox.y = viewport.vflip ? corners.bottom.y : corners.top.y;
    		  }

    		  if (viewport.rotation >= 180 && viewport.rotation < 270) {
    		    textBox.x = viewport.hflip ? corners.right.x : corners.left.x;
    		    textBox.y = centerY;
    		  }

    		  if (viewport.rotation >= 270 && viewport.rotation < 360) {
    		    textBox.x = centerX;
    		    textBox.y = viewport.vflip ? corners.top.y : corners.bottom.y;
    		  }

    		  return textBox;
    		}
    		/**
    		 * Determine the handles that have the min/max x and y values.
    		 *
    		 * @param {Object} handles - The handles of the annotation.
    		 * @returns {Object} - The top, left, bottom, and right handles
    		 */

    		function _determineCorners(handles) {
    		  var handlesLeftToRight = [handles.start, handles.end].sort(_compareX);
    		  var handlesTopToBottom = [handles.start, handles.end].sort(_compareY);
    		  var left = handlesLeftToRight[0];
    		  var right = handlesLeftToRight[handlesLeftToRight.length - 1];
    		  var top = handlesTopToBottom[0];
    		  var bottom = handlesTopToBottom[handlesTopToBottom.length - 1];
    		  return {
    		    top: top,
    		    left: left,
    		    bottom: bottom,
    		    right: right
    		  };

    		  function _compareX(a, b) {
    		    return a.x < b.x ? -1 : 1;
    		  }

    		  function _compareY(a, b) {
    		    return a.y < b.y ? -1 : 1;
    		  }
    		}

    		/***/ }),

    		/***/ "./util/isObject.js":
    		/*!**************************!*\
    		  !*** ./util/isObject.js ***!
    		  \**************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "../node_modules/@babel/runtime/helpers/typeof.js");
    		/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__);


    		/**
    		 * Checks if `value` is the
    		 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
    		 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
    		 *
    		 * @since 0.1.0
    		 * @category Lang
    		 * @param {*} value The value to check.
    		 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
    		 * @example
    		 *
    		 * isObject({})
    		 * // => true
    		 *
    		 * isObject([1, 2, 3])
    		 * // => true
    		 *
    		 * isObject(Function)
    		 * // => true
    		 *
    		 * isObject(null)
    		 * // => false
    		 */
    		function isObject(value) {
    		  var type = _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(value);

    		  return value !== null && (type === 'object' || type === 'function');
    		}

    		/* harmony default export */ __webpack_exports__["default"] = (isObject);

    		/***/ }),

    		/***/ "./util/lineSegDistance.js":
    		/*!*********************************!*\
    		  !*** ./util/lineSegDistance.js ***!
    		  \*********************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");

    		/**
    		 * Calculates the distance of a line segment from a point.
    		 * @export @public @method
    		 * @name lineSegDistance
    		 *
    		 * @param  {HTMLElement} element The element.
    		 * @param  {Object} start   The starting position of the line.
    		 * @param  {Object} end     The end position of the line.
    		 * @param  {Object} coords  The coordinates of the point.
    		 * @returns {name}         The distance between the line and the point.
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (element, start, end, coords) {
    		  var cornerstone = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone;
    		  var lineSegment = {
    		    start: cornerstone.pixelToCanvas(element, start),
    		    end: cornerstone.pixelToCanvas(element, end)
    		  };
    		  return _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstoneMath.lineSegment.distanceToPoint(lineSegment, coords);
    		});

    		/***/ }),

    		/***/ "./util/logger.js":
    		/*!************************!*\
    		  !*** ./util/logger.js ***!
    		  \************************/
    		/*! exports provided: getLogger, enable, disable */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLogger", function() { return getLogger; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "enable", function() { return enable; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "disable", function() { return disable; });
    		/* harmony import */ var _debugLib_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./debugLib/index.js */ "./util/debugLib/index.js");

    		var BASE_SCOPE = 'cornerstoneTools';
    		var baseLogger = Object(_debugLib_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(BASE_SCOPE); // eslint-disable-next-line no-process-env

    		var devMode = "development" === 'development'; // If we're in dev-mode, tell the user how to get logs

    		if (!baseLogger.enabled) {
    		  // eslint-disable-next-line no-console
    		  console.log('%cCornerstone Tools', 'background: #339955; padding: 4px; font-weight: bold; color: white'); // eslint-disable-next-line no-console

    		  console.info('run %clocalStorage.setItem("debug", "cornerstoneTools")%c to see console output', 'background: #eaeaea; color: #333; font-family: monospace', '');
    		}
    		/**
    		 * @method debug
    		 * Create's a scoped debuging logger
    		 */


    		var getLogger = function getLogger(scope) {
    		  var log = baseLogger.extend(scope);
    		  return {
    		    log: log,
    		    // eslint-disable-next-line no-console
    		    warn: devMode ? console.warn.bind(console) : log,
    		    // eslint-disable-next-line no-console
    		    error: console.error.bind(console)
    		  };
    		};
    		/**
    		 * @method enable
    		 * @param {string} scope The scope to enabled
    		 * @returns {void}
    		 */

    		var enable = function enable() {
    		  var scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "".concat(BASE_SCOPE, ":*");
    		  return _debugLib_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].enable(scope);
    		};
    		/**
    		 * @method disable
    		 * @param {string} scope
    		 * @returns {string} The previously enabled scope
    		 */

    		var disable = function disable() {
    		  return _debugLib_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].disable();
    		};

    		/***/ }),

    		/***/ "./util/makeUnselectable.js":
    		/*!**********************************!*\
    		  !*** ./util/makeUnselectable.js ***!
    		  \**********************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/**
    		 * A helper function to make an element (and its content) being non selectable.
    		 * @export @public @method
    		 * @name makeUnselectable
    		 *
    		 * @param {HTMLElement} element The element to make unselectable
    		 * @param {Boolean} ignorePointerEvents  true to make this element also
    		 * ignore events (e.g. mouse click), false otherwise.
    		 * @returns {void}
    		 */
    		/* harmony default export */ __webpack_exports__["default"] = (function (element, ignorePointerEvents) {
    		  element.style.webkitUserSelect = 'none';
    		  element.style.webkitTouchCallout = 'none';
    		  element.style.mozUserSelect = 'none';
    		  element.style.msUserSelect = 'none';
    		  element.style.oUserSelect = 'none';
    		  element.style.khtmlUserSelect = 'none';
    		  element.style.userSelect = 'none';
    		  element.unselectable = 'on';

    		  element.oncontextmenu = function () {
    		    return false;
    		  };

    		  if (ignorePointerEvents === true) {
    		    element.style.pointerEvents = 'none';
    		  }
    		});

    		/***/ }),

    		/***/ "./util/numbersWithCommas.js":
    		/*!***********************************!*\
    		  !*** ./util/numbersWithCommas.js ***!
    		  \***********************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/**
    		 * Converts a number to a string with comma separators.
    		 * http://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript
    		 * @export @public @method
    		 * @name numbersWithCommas
    		 *
    		 * @param  {number} x The number to convert.
    		 * @returns {string}   The pretty-printed number as a string.
    		 */
    		/* harmony default export */ __webpack_exports__["default"] = (function (x) {
    		  var parts = x.toString().split('.');
    		  parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ',');
    		  return parts.join('.');
    		});

    		/***/ }),

    		/***/ "./util/pointInsideBoundingBox.js":
    		/*!****************************************!*\
    		  !*** ./util/pointInsideBoundingBox.js ***!
    		  \****************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");

    		/**
    		 * Returns true if a point is enclosed within a bounding box.
    		 * @export @public @method
    		 * @name pointInsideBoundingBox
    		 *
    		 * @param  {Object} handle The handle containing the boundingBox.
    		 * @param  {Object} coords The coordinate to check.
    		 * @returns {boolean} True if the point is enclosed within the bounding box.
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (handle, coords) {
    		  if (!handle.boundingBox) {
    		    return;
    		  }

    		  return _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstoneMath.point.insideRect(coords, handle.boundingBox);
    		});

    		/***/ }),

    		/***/ "./util/pointProjector.js":
    		/*!********************************!*\
    		  !*** ./util/pointProjector.js ***!
    		  \********************************/
    		/*! exports provided: projectPatientPointToImagePlane, imagePointToPatientPoint, planePlaneIntersection, rotatePoint */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "projectPatientPointToImagePlane", function() { return projectPatientPointToImagePlane; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "imagePointToPatientPoint", function() { return imagePointToPatientPoint; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "planePlaneIntersection", function() { return planePlaneIntersection; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotatePoint", function() { return rotatePoint; });
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _util_convertToVector3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/convertToVector3.js */ "./util/convertToVector3.js");


    		/**
    		 * Projects a patient point to an image point
    		 * @export @public @method
    		 * @name projectPatientPointToImagePlane
    		 *
    		 * @param  {Object} patientPoint The patient point.
    		 * @param  {Object} imagePlane   The image plane used for projection.
    		 * @returns {Object}              The projected coordinates.
    		 */

    		function projectPatientPointToImagePlane(patientPoint, imagePlane) {
    		  var rowCosines = Object(_util_convertToVector3_js__WEBPACK_IMPORTED_MODULE_1__["default"])(imagePlane.rowCosines);
    		  var columnCosines = Object(_util_convertToVector3_js__WEBPACK_IMPORTED_MODULE_1__["default"])(imagePlane.columnCosines);
    		  var imagePositionPatient = Object(_util_convertToVector3_js__WEBPACK_IMPORTED_MODULE_1__["default"])(imagePlane.imagePositionPatient);
    		  var point = patientPoint.clone().sub(imagePositionPatient);
    		  var x = rowCosines.dot(point) / imagePlane.columnPixelSpacing;
    		  var y = columnCosines.dot(point) / imagePlane.rowPixelSpacing;
    		  return {
    		    x: x,
    		    y: y
    		  };
    		} //

    		/**
    		 * Projects an image point to a patient point
    		 * @export @public @method
    		 * @name imagePointToPatientPoint
    		 *
    		 * @param  {Object} imagePoint   The image point.
    		 * @param  {Object} imagePlane   The image plane used for projection.
    		 * @returns {Object}              The projected coordinates.
    		 */

    		function imagePointToPatientPoint(imagePoint, imagePlane) {
    		  var rowCosines = Object(_util_convertToVector3_js__WEBPACK_IMPORTED_MODULE_1__["default"])(imagePlane.rowCosines);
    		  var columnCosines = Object(_util_convertToVector3_js__WEBPACK_IMPORTED_MODULE_1__["default"])(imagePlane.columnCosines);
    		  var imagePositionPatient = Object(_util_convertToVector3_js__WEBPACK_IMPORTED_MODULE_1__["default"])(imagePlane.imagePositionPatient);
    		  var x = rowCosines.clone().multiplyScalar(imagePoint.x);
    		  x.multiplyScalar(imagePlane.columnPixelSpacing);
    		  var y = columnCosines.clone().multiplyScalar(imagePoint.y);
    		  y.multiplyScalar(imagePlane.rowPixelSpacing);
    		  var patientPoint = x.add(y);
    		  patientPoint.add(imagePositionPatient);
    		  return patientPoint;
    		}
    		/**
    		 * Returns a rectangle from the imagePlane.
    		 * @export @public @method
    		 * @name getRectangleFromImagePlane
    		 *
    		 * @param  {Object} imagePlane The imagePlane.
    		 * @returns {Object} The rect.
    		 */

    		function getRectangleFromImagePlane(imagePlane) {
    		  // Get the points
    		  var topLeft = imagePointToPatientPoint({
    		    x: 0,
    		    y: 0
    		  }, imagePlane);
    		  var topRight = imagePointToPatientPoint({
    		    x: imagePlane.columns,
    		    y: 0
    		  }, imagePlane);
    		  var bottomLeft = imagePointToPatientPoint({
    		    x: 0,
    		    y: imagePlane.rows
    		  }, imagePlane);
    		  var bottomRight = imagePointToPatientPoint({
    		    x: imagePlane.columns,
    		    y: imagePlane.rows
    		  }, imagePlane); // Get each side as a vector

    		  var rect = {
    		    top: new _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstoneMath.Line3(topLeft, topRight),
    		    left: new _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstoneMath.Line3(topLeft, bottomLeft),
    		    right: new _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstoneMath.Line3(topRight, bottomRight),
    		    bottom: new _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstoneMath.Line3(bottomLeft, bottomRight)
    		  };
    		  return rect;
    		}
    		/**
    		 * Gets all the intersections of a line with a rect.
    		 * @private
    		 * @method
    		 * @name lineRectangleIntersection
    		 *
    		 * @param  {Object} line The line to check.
    		 * @param  {Object} rect The rect being intersected.
    		 * @returns {Object[]} An array of the intersections.
    		 */


    		function lineRectangleIntersection(line, rect) {
    		  var intersections = [];
    		  Object.keys(rect).forEach(function (side) {
    		    var segment = rect[side];
    		    var intersection = line.intersectLine(segment);

    		    if (intersection) {
    		      intersections.push(intersection);
    		    }
    		  });
    		  return intersections;
    		}
    		/**
    		 * Gets the line of intersection between two planes in patient space.
    		 * @export @public @method
    		 * @name planePlaneIntersection
    		 *
    		 * @param  {Object} targetImagePlane    The target plane.
    		 * @param  {Object} referenceImagePlane The reference plane
    		 * @returns {Object}                   The intersections.
    		 */


    		function planePlaneIntersection(targetImagePlane, referenceImagePlane) {
    		  var targetRowCosines = Object(_util_convertToVector3_js__WEBPACK_IMPORTED_MODULE_1__["default"])(targetImagePlane.rowCosines);
    		  var targetColumnCosines = Object(_util_convertToVector3_js__WEBPACK_IMPORTED_MODULE_1__["default"])(targetImagePlane.columnCosines);
    		  var targetImagePositionPatient = Object(_util_convertToVector3_js__WEBPACK_IMPORTED_MODULE_1__["default"])(targetImagePlane.imagePositionPatient);
    		  var referenceRowCosines = Object(_util_convertToVector3_js__WEBPACK_IMPORTED_MODULE_1__["default"])(referenceImagePlane.rowCosines);
    		  var referenceColumnCosines = Object(_util_convertToVector3_js__WEBPACK_IMPORTED_MODULE_1__["default"])(referenceImagePlane.columnCosines);
    		  var referenceImagePositionPatient = Object(_util_convertToVector3_js__WEBPACK_IMPORTED_MODULE_1__["default"])(referenceImagePlane.imagePositionPatient); // First, get the normals of each image plane

    		  var targetNormal = targetRowCosines.clone().cross(targetColumnCosines);
    		  var targetPlane = new _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstoneMath.Plane();
    		  targetPlane.setFromNormalAndCoplanarPoint(targetNormal, targetImagePositionPatient);
    		  var referenceNormal = referenceRowCosines.clone().cross(referenceColumnCosines);
    		  var referencePlane = new _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstoneMath.Plane();
    		  referencePlane.setFromNormalAndCoplanarPoint(referenceNormal, referenceImagePositionPatient);
    		  var originDirection = referencePlane.clone().intersectPlane(targetPlane);
    		  var origin = originDirection.origin;
    		  var direction = originDirection.direction; // Calculate the longest possible length in the reference image plane (the length of the diagonal)

    		  var bottomRight = imagePointToPatientPoint({
    		    x: referenceImagePlane.columns,
    		    y: referenceImagePlane.rows
    		  }, referenceImagePlane);
    		  var distance = referenceImagePositionPatient.distanceTo(bottomRight); // Use this distance to bound the ray intersecting the two planes

    		  var line = new _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstoneMath.Line3();
    		  line.start = origin;
    		  line.end = origin.clone().add(direction.multiplyScalar(distance)); // Find the intersections between this line and the reference image plane's four sides

    		  var rect = getRectangleFromImagePlane(referenceImagePlane);
    		  var intersections = lineRectangleIntersection(line, rect); // Return the intersections between this line and the reference image plane's sides
    		  // In order to draw the reference line from the target image.

    		  if (intersections.length !== 2) {
    		    return;
    		  }

    		  return {
    		    start: intersections[0],
    		    end: intersections[1]
    		  };
    		}
    		/**
    		 * Translate a point using a rotation angle.
    		 * @export @public @method
    		 * @name rotatePoint
    		 *
    		 * @param {Object} point - `{ x, y }` in either pixel or canvas coordinates.
    		 * @param {Object} center - `{ x, y }` in either pixel or canvas coordinates.
    		 * @param {Number} angle - angle in degrees
    		 * @returns {Object} - `{ x, y }` new point translated
    		 */

    		function rotatePoint(point, center, angle) {
    		  var angleRadians = angle * (Math.PI / 180); // Convert to radians

    		  var rotatedX = Math.cos(angleRadians) * (point.x - center.x) - Math.sin(angleRadians) * (point.y - center.y) + center.x;
    		  var rotatedY = Math.sin(angleRadians) * (point.x - center.x) + Math.cos(angleRadians) * (point.y - center.y) + center.y;
    		  return {
    		    x: rotatedX,
    		    y: rotatedY
    		  };
    		}

    		/***/ }),

    		/***/ "./util/roundToDecimal.js":
    		/*!********************************!*\
    		  !*** ./util/roundToDecimal.js ***!
    		  \********************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/**
    		 * Rounds a number to the specified precision.
    		 * @export @public @method
    		 * @name roundToDecimal
    		 *
    		 * @param  {number} value     The value to round.
    		 * @param  {number} precision The required precision.
    		 * @returns {number}           The rounded number.
    		 */
    		/* harmony default export */ __webpack_exports__["default"] = (function (value, precision) {
    		  var multiplier = Math.pow(10, precision);
    		  return Math.round(value * multiplier) / multiplier;
    		});

    		/***/ }),

    		/***/ "./util/scroll.js":
    		/*!************************!*\
    		  !*** ./util/scroll.js ***!
    		  \************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _scrollToIndex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scrollToIndex.js */ "./util/scrollToIndex.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _clip_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./clip.js */ "./util/clip.js");
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../externalModules.js */ "./externalModules.js");




    		/**
    		 * Scrolls through the stack.
    		 * @export @public @method
    		 * @name scroll
    		 *
    		 * @param  {HTMLElement} element          The element to scroll.
    		 * @param  {number} images                The number of images to scroll through.
    		 * @param  {type} [loop = false]          Whether to loop the scrolling.
    		 * @param  {type} [allowSkipping = true]  Whether frames can be skipped.
    		 * @returns {void}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (element, images) {
    		  var loop = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    		  var allowSkipping = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;
    		  var toolData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_1__["getToolState"])(element, 'stack');

    		  if (!toolData || !toolData.data || !toolData.data.length) {
    		    return;
    		  }

    		  var stackData = toolData.data[0];

    		  if (!stackData.pending) {
    		    stackData.pending = [];
    		  }

    		  var newImageIdIndex = stackData.currentImageIdIndex + images;

    		  if (loop) {
    		    var nbImages = stackData.imageIds.length;
    		    newImageIdIndex %= nbImages;
    		  } else {
    		    newImageIdIndex = Object(_clip_js__WEBPACK_IMPORTED_MODULE_2__["default"])(newImageIdIndex, 0, stackData.imageIds.length - 1);
    		  }

    		  if (allowSkipping) {
    		    Object(_scrollToIndex_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element, newImageIdIndex);
    		  } else {
    		    var pendingEvent = {
    		      index: newImageIdIndex
    		    };
    		    stackData.pending.push(pendingEvent);
    		    scrollWithoutSkipping(stackData, pendingEvent, element);
    		  }
    		});
    		/**
    		 * Recursively scrolls the stack until the desired image is reached.
    		 * @private
    		 * @method
    		 * @name scrollWithoutSkipping
    		 *
    		 * @param  {type} stackData    Data object containing information about the stack.
    		 * @param  {Object} pendingEvent The event to process next.
    		 * @param  {HTMLElement} element      The element being scrolled through.
    		 * @returns {void}
    		 */

    		function scrollWithoutSkipping(stackData, pendingEvent, element) {
    		  if (stackData.pending[0] === pendingEvent) {
    		    if (stackData.currentImageIdIndex === pendingEvent.index) {
    		      stackData.pending.splice(stackData.pending.indexOf(pendingEvent), 1);

    		      if (stackData.pending.length > 0) {
    		        scrollWithoutSkipping(stackData, stackData.pending[0], element);
    		      }

    		      return;
    		    }

    		    var newImageHandler = function newImageHandler(event) {
    		      var index = stackData.imageIds.indexOf(event.detail.image.imageId);

    		      if (index === pendingEvent.index) {
    		        stackData.pending.splice(stackData.pending.indexOf(pendingEvent), 1);
    		        element.removeEventListener(_externalModules_js__WEBPACK_IMPORTED_MODULE_3__["default"].cornerstone.EVENTS.NEW_IMAGE, newImageHandler);

    		        if (stackData.pending.length > 0) {
    		          scrollWithoutSkipping(stackData, stackData.pending[0], element);
    		        }
    		      }
    		    };

    		    element.addEventListener(_externalModules_js__WEBPACK_IMPORTED_MODULE_3__["default"].cornerstone.EVENTS.NEW_IMAGE, newImageHandler);
    		    Object(_scrollToIndex_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element, pendingEvent.index);
    		  }
    		}

    		/***/ }),

    		/***/ "./util/scrollToIndex.js":
    		/*!*******************************!*\
    		  !*** ./util/scrollToIndex.js ***!
    		  \*******************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../events.js */ "./events.js");
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");
    		/* harmony import */ var _stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../stateManagement/toolState.js */ "./stateManagement/toolState.js");
    		/* harmony import */ var _requestPool_requestPoolManager_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../requestPool/requestPoolManager.js */ "./requestPool/requestPoolManager.js");
    		/* harmony import */ var _stateManagement_loadHandlerManager_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../stateManagement/loadHandlerManager.js */ "./stateManagement/loadHandlerManager.js");
    		/* harmony import */ var _util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/triggerEvent.js */ "./util/triggerEvent.js");






    		/**
    		 * Scrolls through the stack to the image index requested.
    		 * @export @public @method
    		 * @name scrollToIndex
    		 *
    		 * @param  {type} element         The element to scroll through.
    		 * @param  {type} newImageIdIndex The target image index.
    		 * @returns {void}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (element, newImageIdIndex) {
    		  var toolData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_2__["getToolState"])(element, 'stack');

    		  if (!toolData || !toolData.data || !toolData.data.length) {
    		    return;
    		  }

    		  var cornerstone = _externalModules_js__WEBPACK_IMPORTED_MODULE_1__["default"].cornerstone; // If we have more than one stack, check if we have a stack renderer defined

    		  var stackRenderer;

    		  if (toolData.data.length > 1) {
    		    var stackRendererData = Object(_stateManagement_toolState_js__WEBPACK_IMPORTED_MODULE_2__["getToolState"])(element, 'stackRenderer');

    		    if (stackRendererData && stackRendererData.data && stackRendererData.data.length) {
    		      stackRenderer = stackRendererData.data[0];
    		    }
    		  }

    		  var stackData = toolData.data[0]; // Allow for negative indexing

    		  if (newImageIdIndex < 0) {
    		    newImageIdIndex += stackData.imageIds.length;
    		  }

    		  var startLoadingHandler = _stateManagement_loadHandlerManager_js__WEBPACK_IMPORTED_MODULE_4__["default"].getStartLoadHandler(element);
    		  var endLoadingHandler = _stateManagement_loadHandlerManager_js__WEBPACK_IMPORTED_MODULE_4__["default"].getEndLoadHandler(element);
    		  var errorLoadingHandler = _stateManagement_loadHandlerManager_js__WEBPACK_IMPORTED_MODULE_4__["default"].getErrorLoadingHandler(element);

    		  function doneCallback(image) {
    		    if (stackData.currentImageIdIndex !== newImageIdIndex) {
    		      return;
    		    } // Check if the element is still enabled in Cornerstone,
    		    // If an error is thrown, stop here.


    		    try {
    		      // TODO: Add 'isElementEnabled' to Cornerstone?
    		      cornerstone.getEnabledElement(element);
    		    } catch (error) {
    		      return;
    		    }

    		    if (stackRenderer) {
    		      stackRenderer.currentImageIdIndex = newImageIdIndex;
    		      stackRenderer.render(element, toolData.data);
    		    } else {
    		      cornerstone.displayImage(element, image);
    		    }

    		    if (endLoadingHandler) {
    		      endLoadingHandler(element, image);
    		    }
    		  }

    		  function failCallback(error) {
    		    var imageId = stackData.imageIds[newImageIdIndex];

    		    if (errorLoadingHandler) {
    		      errorLoadingHandler(element, imageId, error);
    		    }
    		  }

    		  if (newImageIdIndex === stackData.currentImageIdIndex) {
    		    return;
    		  }

    		  if (startLoadingHandler) {
    		    startLoadingHandler(element);
    		  }

    		  var eventData = {
    		    newImageIdIndex: newImageIdIndex,
    		    direction: newImageIdIndex - stackData.currentImageIdIndex
    		  };
    		  stackData.currentImageIdIndex = newImageIdIndex;
    		  var newImageId = stackData.imageIds[newImageIdIndex]; // Retry image loading in cases where previous image promise
    		  // Was rejected, if the option is set

    		  /*
    		     Const config = stackScroll.getConfiguration();
    		     TODO: Revisit this. It appears that Core's imageCache is not
    		    keeping rejected promises anywhere, so we have no way to know
    		    if something was previously rejected.
    		     if (config && config.retryLoadOnScroll === true) {
    		    }
    		  */
    		  // Convert the preventCache value in stack data to a boolean

    		  var preventCache = Boolean(stackData.preventCache);
    		  var imagePromise;

    		  if (preventCache) {
    		    imagePromise = cornerstone.loadImage(newImageId);
    		  } else {
    		    imagePromise = cornerstone.loadAndCacheImage(newImageId);
    		  }

    		  imagePromise.then(doneCallback, failCallback); // Make sure we kick off any changed download request pools

    		  _requestPool_requestPoolManager_js__WEBPACK_IMPORTED_MODULE_3__["default"].startGrabbing();
    		  Object(_util_triggerEvent_js__WEBPACK_IMPORTED_MODULE_5__["default"])(element, _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].STACK_SCROLL, eventData);
    		});

    		/***/ }),

    		/***/ "./util/setContextToDisplayFontSize.js":
    		/*!*********************************************!*\
    		  !*** ./util/setContextToDisplayFontSize.js ***!
    		  \*********************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../externalModules.js */ "./externalModules.js");

    		/**
    		 * Sets the canvas context transformation matrix so it is scaled to show text
    		 * more cleanly even if the image is scaled up.  See
    		 * https://github.com/cornerstonejs/cornerstoneTools/wiki/DrawingText
    		 * for more information
    		 * @export @public @function
    		 * @name setContextToDisplayFontSize
    		 *
    		 * @param {HTMLElement} enabledElement The cornerstone enabled element.
    		 * @param {CanvasRenderingContext2D} context The canvas context.
    		 * @param {number} fontSize The font size.
    		 * @returns {Object} {fontSize: number, lineHeight: number, fontScale: number}
    		 */

    		/* harmony default export */ __webpack_exports__["default"] = (function (enabledElement, context, fontSize) {
    		  var fontScale = 0.1;
    		  _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.setToPixelCoordinateSystem(enabledElement, context, fontScale); // Return the font size to use

    		  var scaledFontSize = fontSize / enabledElement.viewport.scale / fontScale; // TODO: actually calculate this?

    		  var lineHeight = fontSize / enabledElement.viewport.scale / fontScale;
    		  return {
    		    fontSize: scaledFontSize,
    		    lineHeight: lineHeight,
    		    fontScale: fontScale
    		  };
    		});

    		/***/ }),

    		/***/ "./util/throttle.js":
    		/*!**************************!*\
    		  !*** ./util/throttle.js ***!
    		  \**************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _debounce_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./debounce.js */ "./util/debounce.js");
    		/* harmony import */ var _isObject_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isObject.js */ "./util/isObject.js");


    		/**
    		 * Creates a throttled function that only invokes `func` at most once per
    		 * every `wait` milliseconds (or once per browser frame). The throttled function
    		 * comes with a `cancel` method to cancel delayed `func` invocations and a
    		 * `flush` method to immediately invoke them. Provide `options` to indicate
    		 * whether `func` should be invoked on the leading and/or trailing edge of the
    		 * `wait` timeout. The `func` is invoked with the last arguments provided to the
    		 * throttled function. Subsequent calls to the throttled function return the
    		 * result of the last `func` invocation.
    		 *
    		 * **Note:** If `leading` and `trailing` options are `true`, `func` is
    		 * invoked on the trailing edge of the timeout only if the throttled function
    		 * is invoked more than once during the `wait` timeout.
    		 *
    		 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
    		 * until the next tick, similar to `setTimeout` with a timeout of `0`.
    		 *
    		 * If `wait` is omitted in an environment with `requestAnimationFrame`, `func`
    		 * invocation will be deferred until the next frame is drawn (typically about
    		 * 16ms).
    		 *
    		 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
    		 * for details over the differences between `throttle` and `debounce`.
    		 *
    		 * @since 0.1.0
    		 * @category Function
    		 * @param {Function} func The function to throttle.
    		 * @param {number} [wait=0]
    		 *  The number of milliseconds to throttle invocations to; if omitted,
    		 *  `requestAnimationFrame` is used (if available).
    		 * @param {Object} [options={}] The options object.
    		 * @param {boolean} [options.leading=true]
    		 *  Specify invoking on the leading edge of the timeout.
    		 * @param {boolean} [options.trailing=true]
    		 *  Specify invoking on the trailing edge of the timeout.
    		 * @returns {Function} Returns the new throttled function.
    		 * @example
    		 *
    		 * // Avoid excessively updating the position while scrolling.
    		 * jQuery(window).on('scroll', throttle(updatePosition, 100))
    		 *
    		 * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
    		 * const throttled = throttle(renewToken, 300000, { 'trailing': false })
    		 * jQuery(element).on('click', throttled)
    		 *
    		 * // Cancel the trailing throttled invocation.
    		 * jQuery(window).on('popstate', throttled.cancel)
    		 */

    		function throttle(func, wait, options) {
    		  var leading = true;
    		  var trailing = true;

    		  if (typeof func !== 'function') {
    		    throw new TypeError('Expected a function');
    		  }

    		  if (Object(_isObject_js__WEBPACK_IMPORTED_MODULE_1__["default"])(options)) {
    		    leading = 'leading' in options ? Boolean(options.leading) : leading;
    		    trailing = 'trailing' in options ? Boolean(options.trailing) : trailing;
    		  }

    		  return Object(_debounce_js__WEBPACK_IMPORTED_MODULE_0__["default"])(func, wait, {
    		    leading: leading,
    		    trailing: trailing,
    		    maxWait: wait
    		  });
    		}

    		/* harmony default export */ __webpack_exports__["default"] = (throttle);

    		/***/ }),

    		/***/ "./util/triggerEvent.js":
    		/*!******************************!*\
    		  !*** ./util/triggerEvent.js ***!
    		  \******************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return triggerEvent; });
    		/**
    		 * Triggers a CustomEvent.
    		 * @public
    		 * @method triggerEvent
    		 *
    		 * @param {EventTarget} el The element or EventTarget to trigger the event upon.
    		 * @param {String} type    The event type name.
    		 * @param {Object|null} [detail=null] The event data to be sent.
    		 * @returns {Boolean} The return value is false if at least one event listener called preventDefault(). Otherwise it returns true.
    		 */
    		function triggerEvent(el, type) {
    		  var detail = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
    		  var event; // This check is needed to polyfill CustomEvent on IE11-

    		  if (typeof window.CustomEvent === 'function') {
    		    event = new CustomEvent(type, {
    		      detail: detail,
    		      cancelable: true
    		    });
    		  } else {
    		    event = document.createEvent('CustomEvent');
    		    event.initCustomEvent(type, true, true, detail);
    		  }

    		  return el.dispatchEvent(event);
    		}

    		/***/ }),

    		/***/ "./util/wait.js":
    		/*!**********************!*\
    		  !*** ./util/wait.js ***!
    		  \**********************/
    		/*! exports provided: wait, waitForEnabledElementImageToLoad, default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wait", function() { return wait; });
    		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "waitForEnabledElementImageToLoad", function() { return waitForEnabledElementImageToLoad; });
    		/* harmony import */ var _externalModules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../externalModules.js */ "./externalModules.js");

    		/**
    		 * Waits a set amount of time, then resolves. Can be chained off of to delay
    		 * next call in promise chain.
    		 * @public
    		 * @function wait
    		 * @param {number} ms - number in ms to wait
    		 * @returns {Promise} - A promise that resolves when setTimeout elapses
    		 */

    		var wait = function wait(ms) {
    		  return new Promise(function (resolve) {
    		    return setTimeout(resolve, ms);
    		  });
    		};
    		/**
    		 * A promise that returns an EnabledElement who's image has loaded, or
    		 * null if the provided element ceases being an enabledElement before an
    		 * image has been loaded.
    		 * @public
    		 * @function waitForEnabledElementImageToLoad
    		 *
    		 * @param {HTMLElement} element - An element that is an EnabledElement
    		 * @returns {EnabledElement} - The enabled element that has loaded an image
    		 */

    		function waitForEnabledElementImageToLoad(element) {
    		  try {
    		    var enabledElement = _externalModules_js__WEBPACK_IMPORTED_MODULE_0__["default"].cornerstone.getEnabledElement(element);

    		    if (!enabledElement.image) {
    		      return wait(250).then(function () {
    		        return waitForEnabledElementImageToLoad(element);
    		      });
    		    } // EnabledElement's image is loaded.


    		    return enabledElement;
    		  } catch (ex) {
    		    // Is no longer, or never was an enabled element, stop polling
    		    return null;
    		  }
    		}
    		/* harmony default export */ __webpack_exports__["default"] = (wait);

    		/***/ }),

    		/***/ "./util/zoom/changeViewportScale.js":
    		/*!******************************************!*\
    		  !*** ./util/zoom/changeViewportScale.js ***!
    		  \******************************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/**
    		 * Changes the scale of the viewport.
    		 *
    		 * @private
    		 * @function changeViewportScale
    		 *
    		 * @param {Object} viewport The viewport to scale.
    		 * @param {number} ticks The change in magnifcation factor.
    		 * @param {Object} scaleLimits The limits in scale.
    		 * @returns {Object} The scaled viewport.
    		 */
    		/* harmony default export */ __webpack_exports__["default"] = (function (viewport, ticks, scaleLimits) {
    		  var maxScale = scaleLimits.maxScale,
    		      minScale = scaleLimits.minScale;
    		  var pow = 1.7;
    		  var oldFactor = Math.log(viewport.scale) / Math.log(pow);
    		  var factor = oldFactor + ticks;
    		  var scale = Math.pow(pow, factor);

    		  if (maxScale && scale > maxScale) {
    		    viewport.scale = maxScale;
    		  } else if (minScale && scale < minScale) {
    		    viewport.scale = minScale;
    		  } else {
    		    viewport.scale = scale;
    		  }

    		  return viewport;
    		});

    		/***/ }),

    		/***/ "./util/zoom/correctShift.js":
    		/*!***********************************!*\
    		  !*** ./util/zoom/correctShift.js ***!
    		  \***********************************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/**
    		 * Corrects the shift by accountoing for viewport rotation and flips.
    		 * @export @public @method
    		 * @name correctShift
    		 *
    		 * @param  {Object} shift      The shift to correct.
    		 * @param  {Object} viewportOrientation  Object containing information on the viewport orientation.
    		 * @returns {Object}            The corrected shift.
    		 */
    		/* harmony default export */ __webpack_exports__["default"] = (function (shift, viewportOrientation) {
    		  var hflip = viewportOrientation.hflip,
    		      vflip = viewportOrientation.vflip,
    		      rotation = viewportOrientation.rotation; // Apply Flips

    		  shift.x *= hflip ? -1 : 1;
    		  shift.y *= vflip ? -1 : 1; // Apply rotations

    		  if (rotation !== 0) {
    		    var angle = rotation * Math.PI / 180;
    		    var cosA = Math.cos(angle);
    		    var sinA = Math.sin(angle);
    		    var newX = shift.x * cosA - shift.y * sinA;
    		    var newY = shift.x * sinA + shift.y * cosA;
    		    shift.x = newX;
    		    shift.y = newY;
    		  }

    		  return shift;
    		});

    		/***/ }),

    		/***/ "./util/zoom/index.js":
    		/*!****************************!*\
    		  !*** ./util/zoom/index.js ***!
    		  \****************************/
    		/*! exports provided: changeViewportScale, correctShift, default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony import */ var _changeViewportScale_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./changeViewportScale.js */ "./util/zoom/changeViewportScale.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "changeViewportScale", function() { return _changeViewportScale_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

    		/* harmony import */ var _correctShift_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./correctShift.js */ "./util/zoom/correctShift.js");
    		/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "correctShift", function() { return _correctShift_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });


    		 // Named

    		 // Default

    		/* harmony default export */ __webpack_exports__["default"] = ({
    		  changeViewportScale: _changeViewportScale_js__WEBPACK_IMPORTED_MODULE_0__["default"],
    		  correctShift: _correctShift_js__WEBPACK_IMPORTED_MODULE_1__["default"]
    		});

    		/***/ }),

    		/***/ "./version.js":
    		/*!********************!*\
    		  !*** ./version.js ***!
    		  \********************/
    		/*! exports provided: default */
    		/***/ (function(module, __webpack_exports__, __webpack_require__) {
    		__webpack_require__.r(__webpack_exports__);
    		/* harmony default export */ __webpack_exports__["default"] = ('3.19.3');

    		/***/ })

    		/******/ });
    		});
    		
    	} (cornerstoneTools$1));
    	return cornerstoneTools$1.exports;
    }

    var cornerstoneToolsExports = requireCornerstoneTools();
    var cornerstoneTools = /*@__PURE__*/getDefaultExportFromCjs(cornerstoneToolsExports);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    var _defaultOptions = {
        channel: 4,
        width: null,
        height: null,
        schema: 'base64://'
    };

    var CornerstoneBase64ImageLoader = /** @class */ (function () {
        function CornerstoneBase64ImageLoader(cornerstone, options) {
            if (options === void 0) { options = _defaultOptions; }
            this._cornerstone = cornerstone;
            this._options = options;
            this._lastImageIdDrawn = null;
            this._UPNG = null;
            this._canvas = document.createElement('canvas');
            this.arrayBufferToImage = this.arrayBufferToImage.bind(this);
            this.getArrayBuffer = this.getArrayBuffer.bind(this);
            this.decodeBase64 = this.decodeBase64.bind(this);
            this.createImage = this.createImage.bind(this);
            this.imageLoader = this.imageLoader.bind(this);
            this.replaceImage = this.replaceImage.bind(this);
        }
        CornerstoneBase64ImageLoader.prototype.arrayBufferToImage = function (arrayBuffer) {
            return new Promise(function (resolve, reject) {
                var image = new Image();
                var arrayBufferView = new Uint8Array(arrayBuffer);
                var blob = new Blob([arrayBufferView]);
                var urlCreator = window.URL || window.webkitURL;
                var imageUrl = urlCreator.createObjectURL(blob);
                image.src = imageUrl;
                image.onload = function () {
                    urlCreator.revokeObjectURL(imageUrl);
                    resolve(image);
                };
                image.onerror = function (error) {
                    urlCreator.revokeObjectURL(imageUrl);
                    reject(error);
                };
            });
        };
        CornerstoneBase64ImageLoader.prototype.getArrayBuffer = function (str) {
            var buf = new ArrayBuffer(str.length);
            var bufView = new Uint8Array(buf);
            Array.from(str).map(function (ch, idx) {
                bufView[idx] = ch.charCodeAt(0);
                return ch;
            });
            return bufView;
        };
        CornerstoneBase64ImageLoader.prototype.decodeBase64 = function (base64PixelData) {
            var pixelDataAsString = window.atob(base64PixelData);
            var arrayBuffer = this.getArrayBuffer(pixelDataAsString);
            return arrayBuffer;
        };
        CornerstoneBase64ImageLoader.prototype.createImage = function (image, imageId) {
            var _this = this;
            var rows = image.naturalHeight;
            var columns = image.naturalWidth;
            var getImageData = function () {
                var context;
                if (_this._lastImageIdDrawn === imageId) {
                    context = _this._canvas.getContext('2d');
                }
                else {
                    _this._canvas.height = image.naturalHeight;
                    _this._canvas.width = image.naturalWidth;
                    context = _this._canvas.getContext('2d');
                    context.drawImage(image, 0, 0);
                    _this._lastImageIdDrawn = imageId;
                }
                return context.getImageData(0, 0, image.naturalWidth, image.naturalHeight);
            };
            var getPixelData = function () {
                var imageData = getImageData();
                return imageData.data;
            };
            var getCanvas = function () {
                if (_this._lastImageIdDrawn === imageId) {
                    return _this._canvas;
                }
                _this._canvas.height = image.naturalHeight;
                _this._canvas.width = image.naturalWidth;
                var context = _this._canvas.getContext('2d');
                context.drawImage(image, 0, 0);
                _this._lastImageIdDrawn = imageId;
                return _this._canvas;
            };
            var setLastImageIdDrawn = function (nextLastImageIdDrawn) {
                if (nextLastImageIdDrawn === void 0) { nextLastImageIdDrawn = null; }
                _this._lastImageIdDrawn = nextLastImageIdDrawn;
            };
            return {
                imageId: imageId,
                minPixelValue: 0,
                maxPixelValue: 255,
                slope: 1,
                intercept: 0,
                windowCenter: 128,
                windowWidth: 255,
                render: this.cornerstone.renderWebImage,
                getPixelData: getPixelData,
                getCanvas: getCanvas,
                getImage: function () { return image; },
                setLastImageIdDrawn: setLastImageIdDrawn,
                rows: rows,
                columns: columns,
                height: rows,
                width: columns,
                color: true,
                rgba: false,
                columnPixelSpacing: null,
                rowPixelSpacing: null,
                invert: false,
                sizeInBytes: rows * columns * this._options.channel
            };
        };
        CornerstoneBase64ImageLoader.prototype.imageLoader = function (imageId) {
            var _this = this;
            // const schema = imageId.split('://')[0]
            var base64PixelData = imageId.replace(this._options.schema, '');
            var arrayBuffer;
            if (this._options.width && this._options.height && this._UPNG) {
                var columns = this._options.width;
                var rows = this._options.height;
                arrayBuffer = new Uint8Array(columns * rows * this._options.channel);
                arrayBuffer = this._UPNG.encode([arrayBuffer.buffer], columns, rows, 0);
            }
            else {
                arrayBuffer = this.decodeBase64(base64PixelData);
            }
            var imagePromise = this.arrayBufferToImage(arrayBuffer);
            var promise = new Promise(function (resolve, reject) {
                imagePromise.then(function (image) {
                    var imageObject = _this.createImage(image, imageId);
                    resolve(imageObject);
                }, reject);
            });
            return {
                promise: promise
            };
        };
        CornerstoneBase64ImageLoader.prototype.replaceImage = function (layer, arrayBuffer) {
            var _this = this;
            if (!this._UPNG) {
                return null;
            }
            var png = this._UPNG.encode([arrayBuffer.buffer], layer.image.columns, layer.image.rows, 0);
            var imagePromise = this.arrayBufferToImage(png);
            return imagePromise.then(function (image) {
                layer.image = _this.createImage(image, layer.image.imageId);
            });
        };
        Object.defineProperty(CornerstoneBase64ImageLoader.prototype, "options", {
            get: function () {
                return __assign({}, this._options);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CornerstoneBase64ImageLoader.prototype, "cornerstone", {
            get: function () {
                return this._cornerstone;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CornerstoneBase64ImageLoader.prototype, "UPNG", {
            get: function () {
                return this._UPNG;
            },
            enumerable: true,
            configurable: true
        });
        CornerstoneBase64ImageLoader.prototype.setUPNG = function (UPNG) {
            this._UPNG = UPNG;
        };
        CornerstoneBase64ImageLoader.prototype.registerLoaders = function () {
            this.cornerstone.registerImageLoader('base64', this.imageLoader);
        };
        return CornerstoneBase64ImageLoader;
    }());

    var _imageLoader;
    var _options = __assign({}, _defaultOptions);
    var cornerstoneBase64ImageLoader = {
        external: {
            set cornerstone(cs) {
                _imageLoader = new CornerstoneBase64ImageLoader(cs, _options);
                _imageLoader.registerLoaders();
            },
            get cornerstone() {
                return _imageLoader.cornerstone;
            }}};

    cornerstoneTools.external.cornerstoneMath = cornerstoneMath;
    cornerstoneTools.external.Hammer = Hammer;
    cornerstoneTools.external.cornerstone = cornerstone;
    cornerstoneBase64ImageLoader.external.cornerstone = cornerstone;
    cornerstoneTools.init();
    class MedicalImageViewer {
        constructor({ containerSelector = '#viewer', resetWLButtonText = 'Reset W/L', resetZoomButtonText = 'Reset Zoom', resetPanButtonText = 'Reset Pan', resetRotationButtonText = 'Reset Rotation', resetAllButtonText = 'Reset All', helpButtonText = 'Help', closeHelpButtonText = 'Close', helpDialogTitle = "Medical Image Viewer Controls", helpDialogWLMessage = "</b>Window/Level (Brightness/Contrast) Tool</b>: Hold the right mouse button and drag.", helpDialogPanMessage = "<b>Pan Image Tool</b>: Hold the left mouse button and drag.", helpDialogZoomMessage = "<b>Zoom In/Out Tool</b>: Scroll the mouse wheel.", helpDialogRotateMessage = "<b>Rotate Tool<b>: Hold middle mouse click and drag.", helpDialogRestoreMessage = "<b>Restore Image Transformations</b>: Click on the appropriate button below the image viewer." } = {}) {
            this.viewportOriginal = null;
            this.originalWindowWidth = null;
            this.originalWindowCenter = null;
            this.originalScale = null;
            this.originalTranslation = null;
            this.originalRotation = null;
            const container = document.querySelector(containerSelector);
            if (!container || !(container instanceof HTMLDivElement)) {
                throw new Error(`Element "${containerSelector}" not found or is not a <div> element.`);
            }
            // disable context menu
            container.addEventListener("contextmenu", function (event) {
                event.preventDefault();
            });
            // Create the viewer area
            this.element = document.createElement('div');
            this.element.style.width = '100%';
            this.element.style.height = '90%';
            // Create WL reset button
            this.resetWLButton = document.createElement('button');
            this.resetWLButton.innerText = resetWLButtonText;
            this.resetWLButton.style.marginTop = '10px';
            this.resetWLButton.style.padding = '8px 12px';
            this.resetWLButton.style.cursor = 'pointer';
            this.resetWLButton.addEventListener('click', () => this.resetWLEffect());
            // Create Zoom reset button
            this.resetZoomButton = document.createElement('button');
            this.resetZoomButton.innerText = resetZoomButtonText;
            this.resetZoomButton.style.marginTop = '10px';
            this.resetZoomButton.style.padding = '8px 12px';
            this.resetZoomButton.style.cursor = 'pointer';
            this.resetZoomButton.addEventListener('click', () => this.resetZoomEffect());
            // Create Pan reset button
            this.resetPanButton = document.createElement('button');
            this.resetPanButton.innerText = resetPanButtonText;
            this.resetPanButton.style.marginTop = '10px';
            this.resetPanButton.style.padding = '8px 12px';
            this.resetPanButton.style.cursor = 'pointer';
            this.resetPanButton.addEventListener('click', () => this.resetPanEffect());
            // Create Rotation reset button, etc.
            this.resetRotationButton = document.createElement('button');
            this.resetRotationButton.innerText = resetRotationButtonText;
            this.resetRotationButton.style.marginTop = '10px';
            this.resetRotationButton.style.padding = '8px 12px';
            this.resetRotationButton.style.cursor = 'pointer';
            this.resetRotationButton.addEventListener('click', () => this.resetRotationEffect());
            // Create All reset button, etc.
            this.resetAllButton = document.createElement('button');
            this.resetAllButton.innerText = resetAllButtonText;
            this.resetAllButton.style.marginTop = '10px';
            this.resetAllButton.style.padding = '8px 12px';
            this.resetAllButton.style.cursor = 'pointer';
            this.resetAllButton.addEventListener('click', () => this.resetAllEffect());
            // Create help button and help panel
            this.helpButton = document.createElement('button');
            this.helpButton.innerText = 'Help';
            this.helpButton.style.marginTop = '10px';
            this.helpButton.style.padding = '8px 12px';
            this.helpButton.style.cursor = 'pointer';
            this.helpButton.addEventListener('click', () => { helpDialog.style.display = 'block'; });
            // Create Help Dialog (Hidden Initially)
            const helpDialog = document.createElement('div');
            helpDialog.style.position = 'fixed';
            helpDialog.style.top = '50%';
            helpDialog.style.left = '50%';
            helpDialog.style.transform = 'translate(-50%, -50%)';
            helpDialog.style.width = '350px';
            helpDialog.style.backgroundColor = 'white';
            helpDialog.style.padding = '20px';
            helpDialog.style.boxShadow = '0px 4px 6px rgba(0,0,0,0.3)';
            helpDialog.style.borderRadius = '10px';
            helpDialog.style.zIndex = '1000';
            helpDialog.style.display = 'none'; // Hidden by default
            helpDialog.innerHTML = `
      <h3 style="margin-top: 0;">${helpDialogTitle}</h3>
      <ul style="padding-left: 20px;">
        <li>${helpDialogWLMessage}</li>
        <li>${helpDialogPanMessage}</li>
        <li>${helpDialogZoomMessage}</li>
        <li>${helpDialogRotateMessage}</li>
        <li>${helpDialogRestoreMessage}</li>
      </ul>
    `;
            // Create Close Button
            const closeButton = document.createElement('button');
            closeButton.innerText = closeHelpButtonText;
            closeButton.style.marginTop = '10px';
            closeButton.style.padding = '8px 12px';
            closeButton.style.cursor = 'pointer';
            closeButton.style.display = 'block';
            closeButton.style.width = '100%';
            closeButton.style.backgroundColor = '#007bff';
            closeButton.style.color = 'white';
            closeButton.style.border = 'none';
            closeButton.style.borderRadius = '5px';
            closeButton.addEventListener('click', () => { helpDialog.style.display = 'none'; });
            // Append elements
            container.appendChild(this.element);
            container.appendChild(this.resetWLButton);
            container.appendChild(this.resetZoomButton);
            container.appendChild(this.resetPanButton);
            container.appendChild(this.resetRotationButton);
            container.appendChild(this.resetAllButton);
            container.appendChild(this.helpButton);
            helpDialog.appendChild(closeButton);
            document.body.appendChild(helpDialog);
            // Initialize viewer subcomponent (add tools)
            this.initializeViewer();
        }
        initializeViewer() {
            cornerstone.enable(this.element);
            // Add Zoom Mouse Wheel
            const ZoomMouseWheelTool = cornerstoneTools.ZoomMouseWheelTool;
            cornerstoneTools.addTool(ZoomMouseWheelTool);
            cornerstoneTools.setToolActive('ZoomMouseWheel', { mouseButtonMask: 1 });
            // Add Pan
            const PanTool = cornerstoneTools.PanTool;
            cornerstoneTools.addTool(PanTool);
            cornerstoneTools.setToolActive('Pan', { mouseButtonMask: 1 });
            // Add Window/Level (Wwwc)
            const WwwcTool = cornerstoneTools.WwwcTool;
            cornerstoneTools.addTool(WwwcTool);
            cornerstoneTools.setToolActive('Wwwc', { mouseButtonMask: 2 });
            // Add Rotation
            const RotateTool = cornerstoneTools.RotateTool;
            cornerstoneTools.addTool(RotateTool);
            cornerstoneTools.setToolActive('Rotate', { mouseButtonMask: 4 });
        }
        loadImage(imageUrl) {
            return __awaiter(this, void 0, void 0, function* () {
                try {
                    const image = yield cornerstone.loadImage(imageUrl);
                    cornerstone.displayImage(this.element, image);
                    // Store the entire original viewport
                    this.viewportOriginal = cornerstone.getViewport(this.element);
                    // Original W/L from the image itself
                    this.originalWindowWidth = image.windowWidth;
                    this.originalWindowCenter = image.windowCenter;
                    // Original scale, translation, and rotation from the viewport
                    this.originalScale = this.viewportOriginal.scale;
                    this.originalRotation = this.viewportOriginal.rotation;
                    if (this.viewportOriginal.translation != null) {
                        this.originalTranslation = { x: this.viewportOriginal.translation.x, y: this.viewportOriginal.translation.y };
                    }
                    else {
                        console.error("Could not initialize translation.x and translation.y positions, because viewportOriginal.translation is null.");
                    }
                }
                catch (error) {
                    console.error('Error loading image:', error);
                }
            });
        }
        resetWLEffect() {
            const viewport = cornerstone.getViewport(this.element);
            if (viewport) {
                if (this.originalWindowWidth != null && this.originalWindowCenter != null) {
                    viewport.voi.windowWidth = this.originalWindowWidth;
                    viewport.voi.windowCenter = this.originalWindowCenter;
                }
                cornerstone.setViewport(this.element, viewport);
            }
            else {
                console.error('Tried to reset W/L effect, but current viewport is null!');
            }
        }
        resetZoomEffect() {
            const viewport = cornerstone.getViewport(this.element);
            if (viewport) {
                if (this.originalScale != null) {
                    viewport.scale = this.originalScale;
                }
                cornerstone.setViewport(this.element, viewport);
            }
            else {
                console.error('Tried to reset scale parameter, but current viewport is null!');
            }
        }
        resetPanEffect() {
            const viewport = cornerstone.getViewport(this.element);
            if (viewport) {
                if (this.originalTranslation != null) {
                    if (this.originalTranslation.x != null) {
                        viewport.translation.x = this.originalTranslation.x;
                    }
                    if (this.originalTranslation.y != null) {
                        viewport.translation.y = this.originalTranslation.y;
                    }
                    cornerstone.setViewport(this.element, viewport);
                }
                else {
                    console.error("Could not reset translation, because the old translation settings are null!");
                }
            }
            else {
                console.error('Tried to reset translation parameter, but current viewport is null!');
            }
        }
        resetRotationEffect() {
            const viewport = cornerstone.getViewport(this.element);
            if (viewport) {
                if (this.originalScale != null) {
                    viewport.rotation = this.originalRotation;
                }
                cornerstone.setViewport(this.element, viewport);
            }
            else {
                console.error('Tried to reset translation parameter, but current viewport is null!');
            }
        }
        resetAllEffect() {
            const viewport = cornerstone.getViewport(this.element);
            if (viewport) {
                this.resetZoomEffect();
                this.resetPanEffect();
                this.resetRotationEffect();
                this.resetWLEffect();
            }
            else {
                console.error('Tried to reset all tool parameters, but current viewport is null!');
            }
        }
    }
    if (typeof window !== 'undefined') {
        window.MedicalImageViewer = MedicalImageViewer;
    }

    exports.MedicalImageViewer = MedicalImageViewer;

}));
//# sourceMappingURL=simpleviewer.js.map
